{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":0},{"_id":"source/img/corecabin-textlogo-bgcolor.jpg","path":"img/corecabin-textlogo-bgcolor.jpg","modified":0,"renderable":0},{"_id":"source/img/corecabin.png","path":"img/corecabin.png","modified":0,"renderable":0},{"_id":"source/img/custom-logo.png","path":"img/custom-logo.png","modified":0,"renderable":0},{"_id":"source/img/kongjianzhan.jpg","path":"img/kongjianzhan.jpg","modified":0,"renderable":0},{"_id":"source/img/xiamuandsansan.jpg","path":"img/xiamuandsansan.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"78df7ca11932924407874089d2205b141fff2699","modified":1627552806000},{"_id":"source/apple-touch-icon.png","hash":"ea2c6141a33f986a6af85b949161b621e779717c","modified":1627647292000},{"_id":"source/_posts/basic-architecture-of-industrial-internet-platform.md","hash":"98ac13c5e98e70ea6f55cfd6b4061f5fcb31107c","modified":1628751662000},{"_id":"source/_posts/build-corecabin-in-one-week.md","hash":"d8eb2ad6e285f48317337ef313e710bf87258c8f","modified":1629641628176},{"_id":"source/favicon.ico","hash":"0bc1ce3989f6ba7f72c35d7ebc9c2bbf81065f7f","modified":1627654522000},{"_id":"source/_posts/do-i-really-want-to-go-this-way.md","hash":"4cc2cc0dc59f00fdbe623eea556866d20c0e807b","modified":1646049458952},{"_id":"source/_posts/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-1.md","hash":"a2055efe6d5a34efb4189a091052337be4dabbf6","modified":1645712608108},{"_id":"source/_posts/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-2.md","hash":"521d7e4a749219b011a12f3f23e57b2cb03a4302","modified":1635497205944},{"_id":"source/README.md","hash":"6af702dc288c8eb44c30d77f0baf80c432fafbda","modified":1627569830000},{"_id":"source/_posts/hexo-blog-writing.md","hash":"76123190234ba63f4b8bc3e6353f5e182e13129b","modified":1629641650792},{"_id":"source/_posts/how-to-use-dynamic-data-in-github-pages.md","hash":"bcc1ecd5782593942163e1de3e8f321f8e938ad5","modified":1646050131455},{"_id":"source/_posts/java-klotski-game-source-code-analysis.md","hash":"29684c3e74620ca7a3c316ac22bde9a22478863e","modified":1631106063265},{"_id":"source/_posts/latex-mathematical-formula-handbook.md","hash":"056f8a388c30681c224c04dda1dfc0aa88793193","modified":1628929226000},{"_id":"source/_posts/markdown-basic-syntax-and-examples.md","hash":"fdd8ff9613e80db7ba2ed98f2b1d826244a0b671","modified":1646050418094},{"_id":"source/_posts/several-cases-of-boolean-value-being-false-in-javascript.md","hash":"3278c8335235cab1effc50153975cc77b7a628ac","modified":1650195343138},{"_id":"source/_posts/notes-and-examples-of-java-network-communication-programming.md","hash":"1a8a57ec6dd141d9f07fd8310f8e914a2032d73f","modified":1631518312449},{"_id":"source/_posts/several-ways-of-traversing-arrays-and-objects-in-javascript.md","hash":"84965bd4e7eccab5c6f7d046fd64a32826b50a06","modified":1650197056381},{"_id":"source/_posts/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts.md","hash":"9f70caac158f4eb7e95c0a4e9994d73cf3648fe8","modified":1628946620000},{"_id":"source/_posts/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed.md","hash":"22688717f322a7778f83f1a7ccd08e103f5448d2","modified":1628924504000},{"_id":"source/img/avatar.jpg","hash":"62314b3383a0084560245085565a2a3a882cd8b2","modified":1421561976000},{"_id":"source/categories/index.md","hash":"df099411f734f886a0cb7a9c2c9be0d32754b23a","modified":1628749012000},{"_id":"source/about/weixin_platform.md","hash":"627701f2482824a2e7b4882003439cdc60b1f70a","modified":1628774840000},{"_id":"source/img/custom-logo.png","hash":"d295bf281d4c556a4137771f0518c2cc05269841","modified":1628754470000},{"_id":"source/img/corecabin-textlogo-bgcolor.jpg","hash":"4af7b8b28126bc97dfbc4df6cf2fd19c902cfe26","modified":1628924880000},{"_id":"source/img/corecabin.png","hash":"9173f865513e40a6ae8620634a99a736492dce5b","modified":1627647166000},{"_id":"source/img/xiamuandsansan.jpg","hash":"f15fa7d8caffc3db6bb4b539284d6a7dda2b422c","modified":1480078882000},{"_id":"source/tags/index.md","hash":"cd391177d7ed4336fa85d75ac5a01a81edf9e40e","modified":1628749090000},{"_id":"source/links/index.md","hash":"2f030cd2a82a2726328292ebbe6d6fd7be44a172","modified":1646050392131},{"_id":"source/about/index.md","hash":"d96a529885c633b6400896d740e60868e19f9243","modified":1646050572557},{"_id":"source/img/kongjianzhan.jpg","hash":"5f31ef644a58ddde01b961ac09b9c31551e98b7e","modified":1627715904000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1585668906000},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1585668906000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1585668906000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1585668906000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1585668906000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1585668906000},{"_id":"themes/next/_config.yml","hash":"0717ea41b07235f45d40fc8f275f564d7f2db4a8","modified":1628850586000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1585668906000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1585668906000},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1585668906000},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1585668906000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1585668906000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1585668906000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1585668906000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1585668906000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1585668906000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1585668906000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1585668906000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1585668906000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1585668906000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1585668906000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1585668906000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1585668906000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1585668906000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1585668906000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1585668906000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1585668906000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1585668906000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1585668906000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1585668906000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1585668906000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1585668906000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1585668906000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1585668906000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1585668906000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1585668906000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1585668906000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1585668906000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1585668906000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1585668906000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1585668906000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1585668906000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1585668906000},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1585668906000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1585668906000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1585668906000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1585668906000},{"_id":"themes/next/languages/zh-CN.yml","hash":"68f467dc41f95ccb994acf6e956604be1d37c335","modified":1628748608000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1585668906000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1585668906000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1585668906000},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1585668906000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1585668906000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1585668906000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1585668906000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1585668906000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1585668906000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1585668906000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1585668906000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1585668906000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1585668906000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1585668906000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1585668906000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"c4ec5822d644ddcedf2401837e6f6e6d3b63fbcd","modified":1585668906000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1585668906000},{"_id":"themes/next/layout/_macro/post.swig","hash":"71e4dc5a56cbc403d9785526f7719d824f4c8911","modified":1585668906000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1585668906000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1585668906000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1585668906000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1585668906000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1585668906000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"af2d688f688923080aaf8f20be33cfda629797ea","modified":1585668906000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1585668906000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1585668906000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1585668906000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1585668906000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1585668906000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1585668906000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1585668906000},{"_id":"themes/next/scripts/events/index.js","hash":"bf5e93f9209d111a014a7a6a17e86c05be552d13","modified":1585668906000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1585668906000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1585668906000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1585668906000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1585668906000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"22d77bd511fc7c1bbd12339d65004ed5bfb0713c","modified":1585668906000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1585668906000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1585668906000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1585668906000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1585668906000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1585668906000},{"_id":"themes/next/scripts/filters/post.js","hash":"d86849559ae54a4098aef4e2ab9dc8f99a1d186c","modified":1585668906000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"0f133f27b61e8351cfd0959ba8a1b8551a9a8cc6","modified":1585668906000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1585668906000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1585668906000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1585668906000},{"_id":"themes/next/scripts/tags/button.js","hash":"946dd7beede408d1f090d5e9774d74763828b97c","modified":1585668906000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1585668906000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1585668906000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1585668906000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1585668906000},{"_id":"themes/next/source/css/_colors.styl","hash":"19c836f367977fb712b9868f3281ff5d757a8d5c","modified":1585668906000},{"_id":"themes/next/source/css/_mixins.styl","hash":"b79ff3debd5709397b122292fc7e551ae9d40782","modified":1585668906000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1585668906000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1585668906000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1585668906000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1585668906000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1585668906000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1585668906000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1585668906000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1585668906000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1585668906000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1585668906000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1585668906000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1585668906000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1585668906000},{"_id":"themes/next/source/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1585668906000},{"_id":"themes/next/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1585668906000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1585668906000},{"_id":"themes/next/source/js/utils.js","hash":"0343eb03ed76c0b030f7807b82a00772135ba463","modified":1628850002000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1585668906000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1585668906000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1585668906000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1585668906000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"1ea12d4b9490d9065ebf1b8739b90ce5defd6398","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"958e097790551c9520426a1233add03515034f35","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"12aeb9ee0d1d49d347f82a91e6bab568e1b59037","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1585668906000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1585668906000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"12cd9adb0c33adc484201f9e8a4e64ccf3011bae","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1585668906000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1585668906000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1585668906000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1585668906000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"ec20ff43845723e0ac2a245047c7a7e5aead6e88","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1585668906000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1585668906000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1585668906000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1585668906000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1585668906000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1585668906000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1585668906000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1585668906000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1585668906000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1585668906000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1585668906000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1585668906000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1585668906000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1585668906000},{"_id":"themes/next/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"799fdf4f258a51d45d1e2b02fb59b337e46b5b3c","modified":1585668906000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dae390efcb5da9c021ad7f25fe2d39ff36938cc6","modified":1585668906000},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1585668906000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1585668906000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1585668906000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1585668906000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"220da37051ed5dac9cf7bd126451f6aba4f94d21","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"ccb71d732b12acd02ac26ed6bbda4861d027857d","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e4f958677a75de87ee1caf7e22ba46a0602f22dd","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"82025c3ad7af12e532e2e81be98deb0a74ff23ac","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"5e644b1303ab6dcd1b65ee0fd6b91309b04ce64d","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"89f76380091f1be49936c69bac02e984dae5ff87","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"c1daeb60c23945f745703ac2c3f4bf99d0ea3d95","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"66211794e4ed47e779ca81150cef588e0b4f2fc5","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"796eb941ba0ca03fd5ca6d15a1f6a56afd9aa174","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"555762730f1f31451113e8fdc84ec438ea738d90","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"9b3cce30c58e57b59e45d3f668a71a4129d3a8e4","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1585668906000},{"_id":"public/search.xml","hash":"8e0e44a2ff2b00185353d8cb8de13bc21b0d7b18","modified":1650197062387},{"_id":"public/about/weixin_platform.html","hash":"8cac04bebabc4881abe5bf0bbc0e1cb65c47183e","modified":1650193914972},{"_id":"public/categories/index.html","hash":"7b249f0c3cf1ee13878fbfec40fdaba3d2680051","modified":1650193914972},{"_id":"public/tags/index.html","hash":"b7643e1c7baced306aaddf58ca2e609641b438a1","modified":1650197062387},{"_id":"public/links/index.html","hash":"fd4b826c733f10d61dd91ab2435596b7892afaa2","modified":1650193914972},{"_id":"public/categories/Research/index.html","hash":"f6def567601e6ca82468d1aecd0ebeac240fb17d","modified":1650193914972},{"_id":"public/categories/Myself/index.html","hash":"473fa3be0697e4dcdf9612ee6de0cc5d116e6761","modified":1650193914972},{"_id":"public/categories/Hexo/index.html","hash":"cd68b61a4b16f645dabb525f8d14782646b2ccb8","modified":1650193914972},{"_id":"public/categories/JavaScirpt/index.html","hash":"02a30855e47faf938ec8fd93d33a94921f5e3ed3","modified":1650193914972},{"_id":"public/categories/Markdown/index.html","hash":"d8214518ddbd78d81da9146fded246badb05607c","modified":1650193914972},{"_id":"public/categories/Development/index.html","hash":"d37d2c55e2e867742b03c52e6246f4318956b177","modified":1650193914972},{"_id":"public/categories/Java/index.html","hash":"c2d1dffc95c010a4293cca44981047b074ede44e","modified":1650193914972},{"_id":"public/categories/LaTeX/index.html","hash":"7d8888b068d52bb2f1e7870e1978f579bf362912","modified":1650193914972},{"_id":"public/archives/page/2/index.html","hash":"a594ff56a15e33c29c862a6ea998d228cf70eed2","modified":1650193914972},{"_id":"public/archives/2021/page/2/index.html","hash":"3a18a923bd22c254290965f2f642babadbae0d39","modified":1650193914972},{"_id":"public/archives/2021/08/index.html","hash":"05c187f91c57c72b0d25f974e651250e42a9edec","modified":1650193914972},{"_id":"public/archives/2021/09/index.html","hash":"3fb19547ac8fa043ed194af14e4a71bba0f2697c","modified":1650193914972},{"_id":"public/archives/2021/10/index.html","hash":"408c666b28727523129ee4bb95e70b6ca988b528","modified":1650193914972},{"_id":"public/archives/2021/11/index.html","hash":"f6f565b0fcc067f59d3fbdcaa373115ead1bc2a7","modified":1650193914972},{"_id":"public/archives/2021/12/index.html","hash":"62e1b50e295d7111f14a76c7c12aa1aca10dea55","modified":1650193914972},{"_id":"public/archives/2022/index.html","hash":"f79605b4bf8fda379aa8018eca3d42b9e70d53b7","modified":1650193914972},{"_id":"public/archives/2022/02/index.html","hash":"b45b2079bd7ef7d3015fcfd3a843f68aa9999347","modified":1650193914972},{"_id":"public/tags/研究/index.html","hash":"268cb1ec3c2c7f684506804a44a77f71edc11f33","modified":1650193914972},{"_id":"public/tags/工业互联网/index.html","hash":"375625dbf1ff1c21ececf03ea21ca4c9e0c16d53","modified":1650193914972},{"_id":"public/tags/工业互联网平台/index.html","hash":"285ec7365ec005ceb7dd40305b1d1f0de309ed17","modified":1650193914972},{"_id":"public/tags/架构/index.html","hash":"98f1568f7a619d6f72c3bba61d30f90ffe19def7","modified":1650193914972},{"_id":"public/tags/博客/index.html","hash":"3f3776740668057ac8aae4eb768fd398ac641373","modified":1650193914972},{"_id":"public/tags/Hexo/index.html","hash":"cef91f20973397d45043fb04eb8558c0d8b8a57e","modified":1650193914972},{"_id":"public/tags/核心舱/index.html","hash":"b26b2f253af5689c2b25b44e09dcf99796fcb1c4","modified":1650193914972},{"_id":"public/tags/2021/index.html","hash":"1718baf723d50bff96bbfbb46b7bdb5fcb404633","modified":1650193914972},{"_id":"public/tags/2022/index.html","hash":"d49e0a27dc6a5e6f9eb2947ef459a66e0f0e79d6","modified":1650193914972},{"_id":"public/tags/前端/index.html","hash":"2679002123ddd793b5beb295046d288e19823571","modified":1650193914972},{"_id":"public/tags/技巧/index.html","hash":"d77c496177747e34ce90acbb27a1016000f7c0cf","modified":1650193914972},{"_id":"public/tags/JavaScript/index.html","hash":"87f074d1a06bd90f87739369e03944d5a51f3197","modified":1650193914972},{"_id":"public/tags/基础/index.html","hash":"42f6785d1bf0e0da873e9cf268ef1ec0dcd42ee8","modified":1650193914972},{"_id":"public/tags/Markdown/index.html","hash":"0ef5376b8386889648075ad36b8104a9ba411a1b","modified":1650193914972},{"_id":"public/tags/HTML/index.html","hash":"cc93a7c9dbd4919e92543a1332e07436063d09b1","modified":1650193914972},{"_id":"public/tags/bug/index.html","hash":"223b5487bce88b7c441013f97fe1cba9d82274e3","modified":1650193914972},{"_id":"public/tags/GitHub/index.html","hash":"dd7b737a4b8640f5542c1bfff322f4905381a3cb","modified":1650197062387},{"_id":"public/tags/Vue/index.html","hash":"0c5a5786516aee9245d2114a763e4e844caaa824","modified":1650193914972},{"_id":"public/tags/ElementUI/index.html","hash":"08cd1e5fd631d485f6629ac6130ce089ffae2d99","modified":1650193914972},{"_id":"public/tags/开发/index.html","hash":"91675d184b9610c8bff6e671bec6f1e6e3f866cf","modified":1650193914972},{"_id":"public/tags/Github/index.html","hash":"470b9c4e8ee27aef97a51ba3054697a53ab79c6b","modified":1646049893890},{"_id":"public/tags/Java/index.html","hash":"1a7f32be6b371751f3fb5687e238e68be98a16ee","modified":1650193914972},{"_id":"public/tags/游戏/index.html","hash":"53043097018ef0dae7c4248dbb6a1b69227834ec","modified":1650193914972},{"_id":"public/tags/Swing/index.html","hash":"abd8703c2308a6b620f85780d26ebc588f4af758","modified":1650193914972},{"_id":"public/tags/GUI/index.html","hash":"7631154f501657354eed6223232f910c2f655270","modified":1650193914972},{"_id":"public/tags/网络通信/index.html","hash":"c351005f6a37c7d4498f9de899bedccea0c61554","modified":1650193914972},{"_id":"public/tags/网络编程/index.html","hash":"f3683ea81951385e51f819c8aa21422830925a29","modified":1650193914972},{"_id":"public/tags/TCP/index.html","hash":"94bdcad7507531a63a48142e379f6a5df58bc28a","modified":1650193914972},{"_id":"public/tags/IP/index.html","hash":"df4634c1202e265de90475e89f8bfb3483a3b181","modified":1650193914972},{"_id":"public/tags/UDP/index.html","hash":"e850e3bcea87738ae74da754663cb6152d7c9b8e","modified":1650193914972},{"_id":"public/tags/URL/index.html","hash":"ffb6e1454d0dfe27b3f9d93dc53c14798564c46a","modified":1650193914972},{"_id":"public/tags/远程运维/index.html","hash":"5e5d905f1611b10b53e3314cb1e2a17145d38fc1","modified":1650193914972},{"_id":"public/tags/Echarts/index.html","hash":"a65689182cff7d9ce30722afe2d83fe0cc870bcc","modified":1650193914972},{"_id":"public/tags/LaTeX/index.html","hash":"1e8cf9df18071fdc3042ee17ac4332df0ddded65","modified":1650193914972},{"_id":"public/tags/数学/index.html","hash":"b91f6d44eaff194c519ffc4bc70c0214f904f23e","modified":1650193914972},{"_id":"public/about/index.html","hash":"93901f8000cc467ef110bc94e1f6ca04a794c98a","modified":1650193914972},{"_id":"public/2022/02/28/do-i-really-want-to-go-this-way/index.html","hash":"c1ba624982ec3880af49d1b011951fdcdb1f8d60","modified":1650193914972},{"_id":"public/2021/12/14/several-ways-of-traversing-arrays-and-objects-in-javascript/index.html","hash":"246fce71df48891dcfd00264816254d6a1360669","modified":1650197062387},{"_id":"public/2021/12/13/several-cases-of-boolean-value-being-false-in-javascript/index.html","hash":"b1a0db18b5876750896a2d289be04ff2a122ded8","modified":1650197062387},{"_id":"public/2021/11/23/how-to-use-dynamic-data-in-github-pages/index.html","hash":"fe4f2da0cda0fe384018c261098fd770950acf48","modified":1650193914972},{"_id":"public/2021/10/29/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-2/index.html","hash":"fe01b8e28b017460df5b99462663ac39d056fd8a","modified":1650193914972},{"_id":"public/2021/10/27/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-1/index.html","hash":"d812ec0b05c7aa02eeac8c7aa8a84508de08a240","modified":1650193914972},{"_id":"public/2021/09/13/notes-and-examples-of-java-network-communication-programming/index.html","hash":"a095fa151b4228c84be1690b336bd8daf322a660","modified":1650193914972},{"_id":"public/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/index.html","hash":"dc97abe0567de39d5da17699980c195a9010e5ad","modified":1650193914972},{"_id":"public/2021/09/08/java-klotski-game-source-code-analysis/index.html","hash":"99b3f17d8f7bcf01ab7195c594d48fbab9b0a180","modified":1650193914972},{"_id":"public/2021/08/14/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed/index.html","hash":"4614f68bc471ce0667dc9ce9f71fa8762b740296","modified":1650193914972},{"_id":"public/2021/08/11/latex-mathematical-formula-handbook/index.html","hash":"ab99b059f207f512b49a8067f96ad2f3851e0bb6","modified":1650193914972},{"_id":"public/2021/08/05/basic-architecture-of-industrial-internet-platform/index.html","hash":"b24860f8387fd80ab9abc1bdb64dc8d4d2b0f106","modified":1650193914972},{"_id":"public/2021/08/04/markdown-basic-syntax-and-examples/index.html","hash":"070b62d4d6ff65dcd432f772f3a10b9d2e9f4c23","modified":1650193914972},{"_id":"public/2021/08/03/hexo-blog-writing/index.html","hash":"3438ff58c3135a6f8b8b3e3720b817f307764d08","modified":1650193914972},{"_id":"public/2021/08/03/build-corecabin-in-one-week/index.html","hash":"b1f6ef3b789b258335413570b270a47f5a8c3deb","modified":1650193914972},{"_id":"public/archives/index.html","hash":"95c722e3a3567efbbafd97698597032e964cd560","modified":1650193914972},{"_id":"public/archives/2021/index.html","hash":"30b78fa7c257bd7841ece786fe8721024d2e72e1","modified":1650193914972},{"_id":"public/index.html","hash":"02753b9928372d31397e395ddba498c8857928bd","modified":1650197062387},{"_id":"public/page/2/index.html","hash":"27fddc2bc397c0765e69e7f4a8eef55151cf2b9f","modified":1650193914972},{"_id":"public/tags/编程/index.html","hash":"a6e7ceddc0611a6cd8f0d7c4771df31d91777611","modified":1650193914972},{"_id":"public/tags/技术/index.html","hash":"842d11500ad2938b60542a459d8b32ea42c497a5","modified":1650193914972},{"_id":"public/CNAME","hash":"78df7ca11932924407874089d2205b141fff2699","modified":1646049893890},{"_id":"public/README.md","hash":"6af702dc288c8eb44c30d77f0baf80c432fafbda","modified":1646049893890},{"_id":"public/apple-touch-icon.png","hash":"ea2c6141a33f986a6af85b949161b621e779717c","modified":1646049893890},{"_id":"public/favicon.ico","hash":"0bc1ce3989f6ba7f72c35d7ebc9c2bbf81065f7f","modified":1646049893890},{"_id":"public/img/avatar.jpg","hash":"62314b3383a0084560245085565a2a3a882cd8b2","modified":1646049893890},{"_id":"public/img/corecabin-textlogo-bgcolor.jpg","hash":"4af7b8b28126bc97dfbc4df6cf2fd19c902cfe26","modified":1646049893890},{"_id":"public/img/corecabin.png","hash":"9173f865513e40a6ae8620634a99a736492dce5b","modified":1646049893890},{"_id":"public/img/custom-logo.png","hash":"d295bf281d4c556a4137771f0518c2cc05269841","modified":1646049893890},{"_id":"public/img/xiamuandsansan.jpg","hash":"f15fa7d8caffc3db6bb4b539284d6a7dda2b422c","modified":1646049893890},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1646049893890},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1646049893890},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1646049893890},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1646049893890},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1646049893890},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1646049893890},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1646049893890},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1646049893890},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1646049893890},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1646049893890},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1646049893890},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1646049893890},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1646049893890},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1646049893890},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1646049893890},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1646049893890},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1646049893890},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1646049893890},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1646049893890},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1646049893890},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1646049893890},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1646049893890},{"_id":"public/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1646049893890},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1646049893890},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1646049893890},{"_id":"public/js/utils.js","hash":"0343eb03ed76c0b030f7807b82a00772135ba463","modified":1646049893890},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1646049893890},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1646049893890},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1646049893890},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1646049893890},{"_id":"public/css/main.css","hash":"7a1b6b3c75a287b659f16b6e1d0c16f4b6f1a49c","modified":1646049893890},{"_id":"public/img/kongjianzhan.jpg","hash":"5f31ef644a58ddde01b961ac09b9c31551e98b7e","modified":1646049893890},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1646049893890},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1646049893890},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1646049893890},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1646049893890},{"_id":"source/_posts/realize-eight-sorting-methods-using-javascript.md","hash":"0df26baf67490a451db6f80706c9f52dadb921ca","modified":1646375178494},{"_id":"public/archives/2022/03/index.html","hash":"bf31d738147d89eb28fd66de9104b3fe88f31484","modified":1650193914972},{"_id":"public/categories/Algorithm/index.html","hash":"76d7ebac10053c3e036690534a6dcf77bababd5c","modified":1650193914972},{"_id":"public/tags/算法/index.html","hash":"ed3d0be7cea01fc189c1e880bd8bca40692611be","modified":1650193914972},{"_id":"public/tags/排序/index.html","hash":"9579354db8cb5113044002a6df44106dd1d36baa","modified":1650193914972},{"_id":"public/tags/数据结构/index.html","hash":"69ff0263f3da29f867a4210d7902c4dd2b1eb468","modified":1650193914972},{"_id":"public/2022/03/02/realize-eight-sorting-methods-using-javascript/index.html","hash":"037519ffad3eb078ca15a939a79266953c375700","modified":1650193914972},{"_id":"source/_posts/the-pointing-of-this-in-javascript.md","hash":"8bf214fd80344b9b8508fe7638407f00e5faeaf8","modified":1650194108094},{"_id":"public/archives/2022/04/index.html","hash":"9bbe72a98baf9f7c063637140b60065faa945243","modified":1650193914972},{"_id":"public/tags/面试/index.html","hash":"9472a4ae5e3980275be2cbf024003d4c1da08cb8","modified":1650197062387},{"_id":"public/2022/04/17/the-pointing-of-this-in-javascript/index.html","hash":"b37ddd04bfe096212228a4b8c085abb27fa3060d","modified":1650194152195}],"Category":[{"name":"Research","_id":"cl06nlvtd0004f4vi8s7c7nrz"},{"name":"Myself","_id":"cl06nlvto000cf4vi6kj1dnuz"},{"name":"Hexo","_id":"cl06nlvtv000lf4vi2uxbhd6a"},{"name":"JavaScirpt","_id":"cl06nlvtw000pf4vi2cwwg22g"},{"name":"Markdown","_id":"cl06nlvtx000uf4vi7cqw8vxm"},{"name":"Development","_id":"cl06nlvui0032f4vi7eyubgri"},{"name":"Java","_id":"cl06nlvuj0035f4vi3ckp6p6r"},{"name":"LaTeX","_id":"cl06nlvuy004of4vi8184ft17"},{"name":"Algorithm","_id":"cl094bouc0001hwviaokeb0lw"}],"Data":[],"Page":[{"title":"关于我","date":"2021-07-30T11:53:25.000Z","layout":"page","_content":"\n你好！欢迎来到卡洛的核心舱（[corecabin.cn](https://corecabin.cn)）。\n\n对于空间站而言，[核心舱](https://baike.baidu.com/item/%E5%A4%A9%E5%92%8C%E6%A0%B8%E5%BF%83%E8%88%B1)（Core Cabin）是**整个空间站的中枢和管理控制中心**。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。\n\n在这篇文章里，你可以看到核心舱的建造过程：《{% post_link build-corecabin-in-one-week %}》。\n\n## 1 我是\n\n浙江大学研二学生，23岁，就读于机械工程（机械制造及其自动化），常用ID 卡洛/Carlo，代码爱好者。\n\n为啥叫卡洛？因为我不喜欢吃胡萝卜。~~胡萝卜=carrot=卡洛=Carlo~~\n\n2021年登陆核心舱。其实在此之前也有过很多技术探索，例如~~用Java写贪吃蛇什么的~~用WordPress搭建博客等。\n\n## 2 教育经历\n\n- 2004-2010 **[小学]** 湖北省阳新县第二实验小学\n- 2010-2013 **[初中]** 湖北省阳新县实验中学\n- 2013-2016 **[高中]** 湖北省黄石市第二中学\n- 2016-2020 **[本科]** 武汉理工大学机电工程学院 工业工程专业\n- 2020-now **[硕士研究生]** 浙江大学机械工程学院 机械制造及其自动化专业\n\n## 3 研究方向\n\n- 工业互联网\n- 远程运维平台\n- 智能制造与智能装备\n\n## 4 正在做的项目\n\n- **【已结题】**某机床厂的远程运维平台：基于Spring Boot、Spring Security、MyBatis、Jwt、Vue开发；我主要负责**前端开发**\n- **【已结题】**某市企业智能化诊断服务：走访该市60余家企业，对企业智能化水平做出全面诊断并提出改造实施方案；我目前随队走访了其中**16家企业**，涵盖电梯、电机、智能家居、化妆品、工贸等生产行业\n- 某液压厂的远程运维平台：目前处于需求分析阶段；我主要负责**前端开发**\n- 某机床厂的云知识库与自动编程系统研究：目前处于需求分析阶段；我进行课题研究\n\n## 5 语言\n\n- 精通：~~不敢自满~~\n- 熟悉：C，Java，前端三大件（HTML、CSS、JavaScript），等\n- 了解：C，C++，Java，python，MATLAB，Vue，等\n- 接触过：git，MySQL，正则表达式，等\n\n## 6 继续尝试\n\n- 前端开发\n- 后端开发\n- 算法\n- 云计算与数据处理\n\n## 7 进一步尝试\n\n- 程序或作品\n- 科研成绩\n- 大厂实习\n\n## 8 更多\n\n- [GitHub](https://github.com/kaluojushi)\n- [Gitee](https://gitee.com/kaluojushi)\n\n- [微信公众号](/about/weixin_platform)（现在不常更新）\n\n- E-mail：[日常](mailto:ma.zijian@qq.com)；[在校](mailto:mazijian@zju.edu.cn)\n- 留言：可以在下方评论区留言\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2021-07-30 19:53:25\nlayout: page\n---\n\n你好！欢迎来到卡洛的核心舱（[corecabin.cn](https://corecabin.cn)）。\n\n对于空间站而言，[核心舱](https://baike.baidu.com/item/%E5%A4%A9%E5%92%8C%E6%A0%B8%E5%BF%83%E8%88%B1)（Core Cabin）是**整个空间站的中枢和管理控制中心**。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。\n\n在这篇文章里，你可以看到核心舱的建造过程：《{% post_link build-corecabin-in-one-week %}》。\n\n## 1 我是\n\n浙江大学研二学生，23岁，就读于机械工程（机械制造及其自动化），常用ID 卡洛/Carlo，代码爱好者。\n\n为啥叫卡洛？因为我不喜欢吃胡萝卜。~~胡萝卜=carrot=卡洛=Carlo~~\n\n2021年登陆核心舱。其实在此之前也有过很多技术探索，例如~~用Java写贪吃蛇什么的~~用WordPress搭建博客等。\n\n## 2 教育经历\n\n- 2004-2010 **[小学]** 湖北省阳新县第二实验小学\n- 2010-2013 **[初中]** 湖北省阳新县实验中学\n- 2013-2016 **[高中]** 湖北省黄石市第二中学\n- 2016-2020 **[本科]** 武汉理工大学机电工程学院 工业工程专业\n- 2020-now **[硕士研究生]** 浙江大学机械工程学院 机械制造及其自动化专业\n\n## 3 研究方向\n\n- 工业互联网\n- 远程运维平台\n- 智能制造与智能装备\n\n## 4 正在做的项目\n\n- **【已结题】**某机床厂的远程运维平台：基于Spring Boot、Spring Security、MyBatis、Jwt、Vue开发；我主要负责**前端开发**\n- **【已结题】**某市企业智能化诊断服务：走访该市60余家企业，对企业智能化水平做出全面诊断并提出改造实施方案；我目前随队走访了其中**16家企业**，涵盖电梯、电机、智能家居、化妆品、工贸等生产行业\n- 某液压厂的远程运维平台：目前处于需求分析阶段；我主要负责**前端开发**\n- 某机床厂的云知识库与自动编程系统研究：目前处于需求分析阶段；我进行课题研究\n\n## 5 语言\n\n- 精通：~~不敢自满~~\n- 熟悉：C，Java，前端三大件（HTML、CSS、JavaScript），等\n- 了解：C，C++，Java，python，MATLAB，Vue，等\n- 接触过：git，MySQL，正则表达式，等\n\n## 6 继续尝试\n\n- 前端开发\n- 后端开发\n- 算法\n- 云计算与数据处理\n\n## 7 进一步尝试\n\n- 程序或作品\n- 科研成绩\n- 大厂实习\n\n## 8 更多\n\n- [GitHub](https://github.com/kaluojushi)\n- [Gitee](https://gitee.com/kaluojushi)\n\n- [微信公众号](/about/weixin_platform)（现在不常更新）\n\n- E-mail：[日常](mailto:ma.zijian@qq.com)；[在校](mailto:mazijian@zju.edu.cn)\n- 留言：可以在下方评论区留言\n","updated":"2022-02-28T12:16:12.557Z","path":"about/index.html","_id":"cl06nlvt40000f4vifs0ced1n","comments":1,"content":"<p>你好！欢迎来到卡洛的核心舱（<a href=\"https://corecabin.cn\">corecabin.cn</a>）。</p>\n<p>对于空间站而言，<a href=\"https://baike.baidu.com/item/%E5%A4%A9%E5%92%8C%E6%A0%B8%E5%BF%83%E8%88%B1\">核心舱</a>（Core Cabin）是<strong>整个空间站的中枢和管理控制中心</strong>。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。</p>\n<p>在这篇文章里，你可以看到核心舱的建造过程：《<a href=\"/2021/08/03/build-corecabin-in-one-week/\" title=\"如何在一周内建造核心舱\">如何在一周内建造核心舱</a>》。</p>\n<h2 id=\"1-我是\"><a href=\"#1-我是\" class=\"headerlink\" title=\"1 我是\"></a>1 我是</h2><p>浙江大学研二学生，23岁，就读于机械工程（机械制造及其自动化），常用ID 卡洛/Carlo，代码爱好者。</p>\n<p>为啥叫卡洛？因为我不喜欢吃胡萝卜。<del>胡萝卜=carrot=卡洛=Carlo</del></p>\n<p>2021年登陆核心舱。其实在此之前也有过很多技术探索，例如<del>用Java写贪吃蛇什么的</del>用WordPress搭建博客等。</p>\n<h2 id=\"2-教育经历\"><a href=\"#2-教育经历\" class=\"headerlink\" title=\"2 教育经历\"></a>2 教育经历</h2><ul>\n<li>2004-2010 <strong>[小学]</strong> 湖北省阳新县第二实验小学</li>\n<li>2010-2013 <strong>[初中]</strong> 湖北省阳新县实验中学</li>\n<li>2013-2016 <strong>[高中]</strong> 湖北省黄石市第二中学</li>\n<li>2016-2020 <strong>[本科]</strong> 武汉理工大学机电工程学院 工业工程专业</li>\n<li>2020-now <strong>[硕士研究生]</strong> 浙江大学机械工程学院 机械制造及其自动化专业</li>\n</ul>\n<h2 id=\"3-研究方向\"><a href=\"#3-研究方向\" class=\"headerlink\" title=\"3 研究方向\"></a>3 研究方向</h2><ul>\n<li>工业互联网</li>\n<li>远程运维平台</li>\n<li>智能制造与智能装备</li>\n</ul>\n<h2 id=\"4-正在做的项目\"><a href=\"#4-正在做的项目\" class=\"headerlink\" title=\"4 正在做的项目\"></a>4 正在做的项目</h2><ul>\n<li><strong>【已结题】</strong>某机床厂的远程运维平台：基于Spring Boot、Spring Security、MyBatis、Jwt、Vue开发；我主要负责<strong>前端开发</strong></li>\n<li><strong>【已结题】</strong>某市企业智能化诊断服务：走访该市60余家企业，对企业智能化水平做出全面诊断并提出改造实施方案；我目前随队走访了其中<strong>16家企业</strong>，涵盖电梯、电机、智能家居、化妆品、工贸等生产行业</li>\n<li>某液压厂的远程运维平台：目前处于需求分析阶段；我主要负责<strong>前端开发</strong></li>\n<li>某机床厂的云知识库与自动编程系统研究：目前处于需求分析阶段；我进行课题研究</li>\n</ul>\n<h2 id=\"5-语言\"><a href=\"#5-语言\" class=\"headerlink\" title=\"5 语言\"></a>5 语言</h2><ul>\n<li>精通：<del>不敢自满</del></li>\n<li>熟悉：C，Java，前端三大件（HTML、CSS、JavaScript），等</li>\n<li>了解：C，C++，Java，python，MATLAB，Vue，等</li>\n<li>接触过：git，MySQL，正则表达式，等</li>\n</ul>\n<h2 id=\"6-继续尝试\"><a href=\"#6-继续尝试\" class=\"headerlink\" title=\"6 继续尝试\"></a>6 继续尝试</h2><ul>\n<li>前端开发</li>\n<li>后端开发</li>\n<li>算法</li>\n<li>云计算与数据处理</li>\n</ul>\n<h2 id=\"7-进一步尝试\"><a href=\"#7-进一步尝试\" class=\"headerlink\" title=\"7 进一步尝试\"></a>7 进一步尝试</h2><ul>\n<li>程序或作品</li>\n<li>科研成绩</li>\n<li>大厂实习</li>\n</ul>\n<h2 id=\"8-更多\"><a href=\"#8-更多\" class=\"headerlink\" title=\"8 更多\"></a>8 更多</h2><ul>\n<li><a href=\"https://github.com/kaluojushi\">GitHub</a></li>\n<li><p><a href=\"https://gitee.com/kaluojushi\">Gitee</a></p>\n</li>\n<li><p><a href=\"/about/weixin_platform\">微信公众号</a>（现在不常更新）</p>\n</li>\n<li><p>E-mail：<a href=\"mailto:ma.zijian@qq.com\">日常</a>；<a href=\"mailto:mazijian@zju.edu.cn\">在校</a></p>\n</li>\n<li>留言：可以在下方评论区留言</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>你好！欢迎来到卡洛的核心舱（<a href=\"https://corecabin.cn\">corecabin.cn</a>）。</p>\n<p>对于空间站而言，<a href=\"https://baike.baidu.com/item/%E5%A4%A9%E5%92%8C%E6%A0%B8%E5%BF%83%E8%88%B1\">核心舱</a>（Core Cabin）是<strong>整个空间站的中枢和管理控制中心</strong>。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。</p>\n<p>在这篇文章里，你可以看到核心舱的建造过程：《<a href=\"/2021/08/03/build-corecabin-in-one-week/\" title=\"如何在一周内建造核心舱\">如何在一周内建造核心舱</a>》。</p>\n<h2 id=\"1-我是\"><a href=\"#1-我是\" class=\"headerlink\" title=\"1 我是\"></a>1 我是</h2><p>浙江大学研二学生，23岁，就读于机械工程（机械制造及其自动化），常用ID 卡洛/Carlo，代码爱好者。</p>\n<p>为啥叫卡洛？因为我不喜欢吃胡萝卜。<del>胡萝卜=carrot=卡洛=Carlo</del></p>\n<p>2021年登陆核心舱。其实在此之前也有过很多技术探索，例如<del>用Java写贪吃蛇什么的</del>用WordPress搭建博客等。</p>\n<h2 id=\"2-教育经历\"><a href=\"#2-教育经历\" class=\"headerlink\" title=\"2 教育经历\"></a>2 教育经历</h2><ul>\n<li>2004-2010 <strong>[小学]</strong> 湖北省阳新县第二实验小学</li>\n<li>2010-2013 <strong>[初中]</strong> 湖北省阳新县实验中学</li>\n<li>2013-2016 <strong>[高中]</strong> 湖北省黄石市第二中学</li>\n<li>2016-2020 <strong>[本科]</strong> 武汉理工大学机电工程学院 工业工程专业</li>\n<li>2020-now <strong>[硕士研究生]</strong> 浙江大学机械工程学院 机械制造及其自动化专业</li>\n</ul>\n<h2 id=\"3-研究方向\"><a href=\"#3-研究方向\" class=\"headerlink\" title=\"3 研究方向\"></a>3 研究方向</h2><ul>\n<li>工业互联网</li>\n<li>远程运维平台</li>\n<li>智能制造与智能装备</li>\n</ul>\n<h2 id=\"4-正在做的项目\"><a href=\"#4-正在做的项目\" class=\"headerlink\" title=\"4 正在做的项目\"></a>4 正在做的项目</h2><ul>\n<li><strong>【已结题】</strong>某机床厂的远程运维平台：基于Spring Boot、Spring Security、MyBatis、Jwt、Vue开发；我主要负责<strong>前端开发</strong></li>\n<li><strong>【已结题】</strong>某市企业智能化诊断服务：走访该市60余家企业，对企业智能化水平做出全面诊断并提出改造实施方案；我目前随队走访了其中<strong>16家企业</strong>，涵盖电梯、电机、智能家居、化妆品、工贸等生产行业</li>\n<li>某液压厂的远程运维平台：目前处于需求分析阶段；我主要负责<strong>前端开发</strong></li>\n<li>某机床厂的云知识库与自动编程系统研究：目前处于需求分析阶段；我进行课题研究</li>\n</ul>\n<h2 id=\"5-语言\"><a href=\"#5-语言\" class=\"headerlink\" title=\"5 语言\"></a>5 语言</h2><ul>\n<li>精通：<del>不敢自满</del></li>\n<li>熟悉：C，Java，前端三大件（HTML、CSS、JavaScript），等</li>\n<li>了解：C，C++，Java，python，MATLAB，Vue，等</li>\n<li>接触过：git，MySQL，正则表达式，等</li>\n</ul>\n<h2 id=\"6-继续尝试\"><a href=\"#6-继续尝试\" class=\"headerlink\" title=\"6 继续尝试\"></a>6 继续尝试</h2><ul>\n<li>前端开发</li>\n<li>后端开发</li>\n<li>算法</li>\n<li>云计算与数据处理</li>\n</ul>\n<h2 id=\"7-进一步尝试\"><a href=\"#7-进一步尝试\" class=\"headerlink\" title=\"7 进一步尝试\"></a>7 进一步尝试</h2><ul>\n<li>程序或作品</li>\n<li>科研成绩</li>\n<li>大厂实习</li>\n</ul>\n<h2 id=\"8-更多\"><a href=\"#8-更多\" class=\"headerlink\" title=\"8 更多\"></a>8 更多</h2><ul>\n<li><a href=\"https://github.com/kaluojushi\">GitHub</a></li>\n<li><p><a href=\"https://gitee.com/kaluojushi\">Gitee</a></p>\n</li>\n<li><p><a href=\"/about/weixin_platform\">微信公众号</a>（现在不常更新）</p>\n</li>\n<li><p>E-mail：<a href=\"mailto:ma.zijian@qq.com\">日常</a>；<a href=\"mailto:mazijian@zju.edu.cn\">在校</a></p>\n</li>\n<li>留言：可以在下方评论区留言</li>\n</ul>\n","length":897},{"title":"微信公众号","date":"2021-08-12T11:15:04.000Z","layout":"page","comments":0,"_content":"\n![](/img/xiamuandsansan.jpg)\n","source":"about/weixin_platform.md","raw":"---\ntitle: 微信公众号\ndate: 2021-08-12 19:15:04\nlayout: page\ncomments: false\n---\n\n![](/img/xiamuandsansan.jpg)\n","updated":"2021-08-12T13:27:20.000Z","path":"about/weixin_platform.html","_id":"cl06nlvt90002f4vic5n51zsx","content":"<p><img src=\"/img/xiamuandsansan.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/img/xiamuandsansan.jpg\" alt=\"\"></p>\n","length":0},{"title":"分类","date":"2021-08-12T06:16:04.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-08-12 14:16:04\ntype: categories\ncomments: false\n---\n","updated":"2021-08-12T06:16:52.000Z","path":"categories/index.html","layout":"page","_id":"cl06nlvtg0006f4viai96a3cn","content":"","site":{"data":{}},"excerpt":"","more":"","length":0},{"title":"标签","date":"2021-08-12T06:16:18.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-08-12 14:16:18\ntype: tags\ncomments: false\n---\n","updated":"2021-08-12T06:18:10.000Z","path":"tags/index.html","layout":"page","_id":"cl06nlvtm0008f4vi6pvz92as","content":"","site":{"data":{}},"excerpt":"","more":"","length":0},{"title":"友情链接","date":"2021-07-30T13:20:35.000Z","layout":"page","_content":"\n- [毛利老弟的博客 | LW Blog](http://leiwei.xyz/) 哈哈哥，大学好朋友，参考他的博客搭建的GitHub Pages\n\n---\n\n与建站有关的基础服务提供：[GitHub](https://github.com/)、[Hexo](https://hexo.io/zh-cn/)、[腾讯云](https://cloud.tencent.com/)\n\nHexo模板：[NexT](https://github.com/theme-next/hexo-theme-next)\n\n若要添加友链，可以在下面留言，我会尽快更新。\n","source":"links/index.md","raw":"---\ntitle: 友情链接\ndate: 2021-07-30 21:20:35\nlayout: page\n---\n\n- [毛利老弟的博客 | LW Blog](http://leiwei.xyz/) 哈哈哥，大学好朋友，参考他的博客搭建的GitHub Pages\n\n---\n\n与建站有关的基础服务提供：[GitHub](https://github.com/)、[Hexo](https://hexo.io/zh-cn/)、[腾讯云](https://cloud.tencent.com/)\n\nHexo模板：[NexT](https://github.com/theme-next/hexo-theme-next)\n\n若要添加友链，可以在下面留言，我会尽快更新。\n","updated":"2022-02-28T12:13:12.131Z","path":"links/index.html","_id":"cl06nlvtn000af4vi735nbz9y","comments":1,"content":"<ul>\n<li><a href=\"http://leiwei.xyz/\">毛利老弟的博客 | LW Blog</a> 哈哈哥，大学好朋友，参考他的博客搭建的GitHub Pages</li>\n</ul>\n<hr>\n<p>与建站有关的基础服务提供：<a href=\"https://github.com/\">GitHub</a>、<a href=\"https://hexo.io/zh-cn/\">Hexo</a>、<a href=\"https://cloud.tencent.com/\">腾讯云</a></p>\n<p>Hexo模板：<a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a></p>\n<p>若要添加友链，可以在下面留言，我会尽快更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"http://leiwei.xyz/\">毛利老弟的博客 | LW Blog</a> 哈哈哥，大学好朋友，参考他的博客搭建的GitHub Pages</li>\n</ul>\n<hr>\n<p>与建站有关的基础服务提供：<a href=\"https://github.com/\">GitHub</a>、<a href=\"https://hexo.io/zh-cn/\">Hexo</a>、<a href=\"https://cloud.tencent.com/\">腾讯云</a></p>\n<p>Hexo模板：<a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a></p>\n<p>若要添加友链，可以在下面留言，我会尽快更新。</p>\n","length":105}],"Post":[{"title":"工业互联网平台基本架构","date":"2021-08-04T16:20:26.000Z","comments":1,"_content":"\n工业互联网平台的本质是工业云平台，它基于应用需求，搭建对工业数据采集、存储、分析和应用的模块体系，实现工业互联网辅助的生产功能[1]。其核心由**基础设施层（IaaS）、平台层（PaaS）、应用层（SaaS）**三层组成，再加上**端层、边缘层**，共同组成工业互联网平台的基本架构[1-3]。\n\n<!--more-->\n\n工业互联网平台的基本架构如下图所示。\n\n![工业互联网平台基本架构[1]](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/industry-internet-structure.bmp)\n\n## 1 端层\n\n端层也称设备层[4]，指生产现场的**各种物联网型工业设备**，如数控机床、工业传感器、工业机器人等，它们贯穿产品全生命周期，分别起到生产、检测、监控等不同作用，以监测生产现场，灵活处理生产过程中的不同情况。端层以**物联网技术**为基础，产生并汇聚大量的**工业数据**，包含历史数据和即时数据，也使得端层成为工业互联网平台的底层基础。但是，由于端层的工业数据来源于不同设备、不同系统，因此需要进一步处理，才能向上层传递并利用。\n\n## 2 边缘层\n\n边缘层对端层产生的工业数据进行**采集**，并对不同来源的工业数据进行**协议解析和边缘处理**[5]。它兼容OPC/OPC UA、Mod-Bus等各类工业通信协议，把采集数据进行格式转换和统一，再通过光纤、以太网等链路，将相关数据以有线或无线方式（如5G、NB-IoT等）远程传输到工业互联网平台。\n\n**边缘计算技术**是边缘层的重要组成部分。它基于高性能计算芯片、实时高速处理方法、高精度计算系统等先进技术或工具支撑，在工业设备、智能终端等数据源头一侧，进行数据的先处理和预处理，提升系统反应速度和数据传输速度，解决数据传输和通信的时延问题。边缘计算的优点是具有较低的延迟以实现较短的响应时间，以及解决能源消耗、带宽负担和安全问题的潜力[5-6]。\n\n## 3 IaaS层\n\n基础设施层（IaaS）主要提供**云基础设施**，如计算资源、网络资源、存储资源等，支撑工业互联网平台的整体运行[7]。其核心是**虚拟化技术**，利用分布式存储、并发式计算、高负载调度等新技术，实现资源服务设施的动态管理，提升资源服务有效利用率，也确保资源服务的安全。IaaS层作为设备和平台应用的连接层，为PaaS层的功能运行和SaaS层的应用服务提供完整的底层基础设施服务。\n\n## 4 PaaS层\n\n平台层（PaaS）是整个工业互联网平台的**核心**，它由云计算技术构建，不仅能接收存储数据，还能提供强大的计算环境，对工业数据进行云处理或云控制[8]。它的根本是在IaaS平台上构建了一个**扩展性强的支持系统**，也为工业应用或软件的开发提供了良好的基础平台[5]。\n\nPaaS层能以平台优势，利用数据库、算法分析等技术，实现数据进一步处理与计算、数据存储、应用或微服务开发等功能，以叠加、扩展的方式提供工业应用开发、部署的基础环境，形成完整度高、定制性好、移植复用程度高的**工业操作系统**[9]。PaaS层还能根据业务进行资源调度，也能保障数据接入、平台运营、接口访问的安全机制，保障业务正常开展。\n\n## 5 SaaS层\n\n应用层（SaaS）是工业互联网平台的**关键**，它是对外服务的关口，与用户直接对接，体现了工业数据最终的应用价值。SaaS层基于PaaS层平台上丰富的工业微服务功能模块，以高效、便捷、多端适配等方式实现传统信息系统的云改造[10]，为平台用户提供各类工业APP等**数字化解决方案**，发展大数据分析等综合应用，实现资源集中化、服务精准化、知识复用化。\n\n## 参考文献\n\n[1] 周志勇,任涛林,孙明,等. 工业互联网平台体系架构及应用研究[J]. 中国仪器仪表, 2021, 363(6): 45-50.\n\n[2] 李君,邱君降,柳杨,等. 工业互联网平台评价指标体系构建与应用研究[J]. 中国科技论坛, 2018, 272(12): 70-86.\n\n[3] Sebastian r. bader,Maria maleshkova,Steffen lohmann. Structuring Reference Architectures for the Industrial Internet of Things[J]. Future Internet, 2019, 11(7).\n\n[4] 蒋融融,翁正秋,陈铁明. 工业互联网平台及其安全技术发展[J]. 电信科学, 2020, 36(3): 3-10.\n\n[5] 孙小东,王劲松,李强,等. 工业互联网平台的架构设计[J]. 工业加热, 2020, 49(5): 48-50, 54.\n\n[6] Tong zhang,Yikai li,C. l. philip chen. Edge computing and its role in Industrial Internet: Methodologies, applications, and future directions[Z]: Information Sciences, 2021: 0-0.\n\n[7] 邵鸣. 面向铁路的工业互联网平台体系架构研究[J]. 铁路计算机应用, 2019, 28(1): 68-72.\n\n[8] 李达,郑松. 基于数据引擎技术的工业互联网平台[J]. 智能科学与技术学报, 2020, 2(1): 43-52.\n\n[9] 杨祖业,李媛,马秀丽. 面向智能装备的工业互联网平台参考架构[J]. 中国仪器仪表, 2019, 339(6): 31-36.\n\n[10] 邓生雄,杨廷玮泞,张昌福,等. 基于工业互联网平台的企业数字化规划及架构[J]. 新技术新工艺, 2020, 394(10): 5-8.\n","source":"_posts/basic-architecture-of-industrial-internet-platform.md","raw":"---\ntitle: 工业互联网平台基本架构\ndate: 2021-08-05 00:20:26\ncategories: Research\ntags:\n  - 研究\n  - 工业互联网\n  - 工业互联网平台\n  - 架构\ncomments: true\n---\n\n工业互联网平台的本质是工业云平台，它基于应用需求，搭建对工业数据采集、存储、分析和应用的模块体系，实现工业互联网辅助的生产功能[1]。其核心由**基础设施层（IaaS）、平台层（PaaS）、应用层（SaaS）**三层组成，再加上**端层、边缘层**，共同组成工业互联网平台的基本架构[1-3]。\n\n<!--more-->\n\n工业互联网平台的基本架构如下图所示。\n\n![工业互联网平台基本架构[1]](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/industry-internet-structure.bmp)\n\n## 1 端层\n\n端层也称设备层[4]，指生产现场的**各种物联网型工业设备**，如数控机床、工业传感器、工业机器人等，它们贯穿产品全生命周期，分别起到生产、检测、监控等不同作用，以监测生产现场，灵活处理生产过程中的不同情况。端层以**物联网技术**为基础，产生并汇聚大量的**工业数据**，包含历史数据和即时数据，也使得端层成为工业互联网平台的底层基础。但是，由于端层的工业数据来源于不同设备、不同系统，因此需要进一步处理，才能向上层传递并利用。\n\n## 2 边缘层\n\n边缘层对端层产生的工业数据进行**采集**，并对不同来源的工业数据进行**协议解析和边缘处理**[5]。它兼容OPC/OPC UA、Mod-Bus等各类工业通信协议，把采集数据进行格式转换和统一，再通过光纤、以太网等链路，将相关数据以有线或无线方式（如5G、NB-IoT等）远程传输到工业互联网平台。\n\n**边缘计算技术**是边缘层的重要组成部分。它基于高性能计算芯片、实时高速处理方法、高精度计算系统等先进技术或工具支撑，在工业设备、智能终端等数据源头一侧，进行数据的先处理和预处理，提升系统反应速度和数据传输速度，解决数据传输和通信的时延问题。边缘计算的优点是具有较低的延迟以实现较短的响应时间，以及解决能源消耗、带宽负担和安全问题的潜力[5-6]。\n\n## 3 IaaS层\n\n基础设施层（IaaS）主要提供**云基础设施**，如计算资源、网络资源、存储资源等，支撑工业互联网平台的整体运行[7]。其核心是**虚拟化技术**，利用分布式存储、并发式计算、高负载调度等新技术，实现资源服务设施的动态管理，提升资源服务有效利用率，也确保资源服务的安全。IaaS层作为设备和平台应用的连接层，为PaaS层的功能运行和SaaS层的应用服务提供完整的底层基础设施服务。\n\n## 4 PaaS层\n\n平台层（PaaS）是整个工业互联网平台的**核心**，它由云计算技术构建，不仅能接收存储数据，还能提供强大的计算环境，对工业数据进行云处理或云控制[8]。它的根本是在IaaS平台上构建了一个**扩展性强的支持系统**，也为工业应用或软件的开发提供了良好的基础平台[5]。\n\nPaaS层能以平台优势，利用数据库、算法分析等技术，实现数据进一步处理与计算、数据存储、应用或微服务开发等功能，以叠加、扩展的方式提供工业应用开发、部署的基础环境，形成完整度高、定制性好、移植复用程度高的**工业操作系统**[9]。PaaS层还能根据业务进行资源调度，也能保障数据接入、平台运营、接口访问的安全机制，保障业务正常开展。\n\n## 5 SaaS层\n\n应用层（SaaS）是工业互联网平台的**关键**，它是对外服务的关口，与用户直接对接，体现了工业数据最终的应用价值。SaaS层基于PaaS层平台上丰富的工业微服务功能模块，以高效、便捷、多端适配等方式实现传统信息系统的云改造[10]，为平台用户提供各类工业APP等**数字化解决方案**，发展大数据分析等综合应用，实现资源集中化、服务精准化、知识复用化。\n\n## 参考文献\n\n[1] 周志勇,任涛林,孙明,等. 工业互联网平台体系架构及应用研究[J]. 中国仪器仪表, 2021, 363(6): 45-50.\n\n[2] 李君,邱君降,柳杨,等. 工业互联网平台评价指标体系构建与应用研究[J]. 中国科技论坛, 2018, 272(12): 70-86.\n\n[3] Sebastian r. bader,Maria maleshkova,Steffen lohmann. Structuring Reference Architectures for the Industrial Internet of Things[J]. Future Internet, 2019, 11(7).\n\n[4] 蒋融融,翁正秋,陈铁明. 工业互联网平台及其安全技术发展[J]. 电信科学, 2020, 36(3): 3-10.\n\n[5] 孙小东,王劲松,李强,等. 工业互联网平台的架构设计[J]. 工业加热, 2020, 49(5): 48-50, 54.\n\n[6] Tong zhang,Yikai li,C. l. philip chen. Edge computing and its role in Industrial Internet: Methodologies, applications, and future directions[Z]: Information Sciences, 2021: 0-0.\n\n[7] 邵鸣. 面向铁路的工业互联网平台体系架构研究[J]. 铁路计算机应用, 2019, 28(1): 68-72.\n\n[8] 李达,郑松. 基于数据引擎技术的工业互联网平台[J]. 智能科学与技术学报, 2020, 2(1): 43-52.\n\n[9] 杨祖业,李媛,马秀丽. 面向智能装备的工业互联网平台参考架构[J]. 中国仪器仪表, 2019, 339(6): 31-36.\n\n[10] 邓生雄,杨廷玮泞,张昌福,等. 基于工业互联网平台的企业数字化规划及架构[J]. 新技术新工艺, 2020, 394(10): 5-8.\n","slug":"basic-architecture-of-industrial-internet-platform","published":1,"updated":"2021-08-12T07:01:02.000Z","layout":"post","photos":[],"link":"","_id":"cl06nlvt60001f4vi42cuayyr","content":"<p>工业互联网平台的本质是工业云平台，它基于应用需求，搭建对工业数据采集、存储、分析和应用的模块体系，实现工业互联网辅助的生产功能[1]。其核心由<strong>基础设施层（IaaS）、平台层（PaaS）、应用层（SaaS）</strong>三层组成，再加上<strong>端层、边缘层</strong>，共同组成工业互联网平台的基本架构[1-3]。</p>\n<span id=\"more\"></span>\n<p>工业互联网平台的基本架构如下图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/industry-internet-structure.bmp\" alt=\"工业互联网平台基本架构[1]\"></p>\n<h2 id=\"1-端层\"><a href=\"#1-端层\" class=\"headerlink\" title=\"1 端层\"></a>1 端层</h2><p>端层也称设备层[4]，指生产现场的<strong>各种物联网型工业设备</strong>，如数控机床、工业传感器、工业机器人等，它们贯穿产品全生命周期，分别起到生产、检测、监控等不同作用，以监测生产现场，灵活处理生产过程中的不同情况。端层以<strong>物联网技术</strong>为基础，产生并汇聚大量的<strong>工业数据</strong>，包含历史数据和即时数据，也使得端层成为工业互联网平台的底层基础。但是，由于端层的工业数据来源于不同设备、不同系统，因此需要进一步处理，才能向上层传递并利用。</p>\n<h2 id=\"2-边缘层\"><a href=\"#2-边缘层\" class=\"headerlink\" title=\"2 边缘层\"></a>2 边缘层</h2><p>边缘层对端层产生的工业数据进行<strong>采集</strong>，并对不同来源的工业数据进行<strong>协议解析和边缘处理</strong>[5]。它兼容OPC/OPC UA、Mod-Bus等各类工业通信协议，把采集数据进行格式转换和统一，再通过光纤、以太网等链路，将相关数据以有线或无线方式（如5G、NB-IoT等）远程传输到工业互联网平台。</p>\n<p><strong>边缘计算技术</strong>是边缘层的重要组成部分。它基于高性能计算芯片、实时高速处理方法、高精度计算系统等先进技术或工具支撑，在工业设备、智能终端等数据源头一侧，进行数据的先处理和预处理，提升系统反应速度和数据传输速度，解决数据传输和通信的时延问题。边缘计算的优点是具有较低的延迟以实现较短的响应时间，以及解决能源消耗、带宽负担和安全问题的潜力[5-6]。</p>\n<h2 id=\"3-IaaS层\"><a href=\"#3-IaaS层\" class=\"headerlink\" title=\"3 IaaS层\"></a>3 IaaS层</h2><p>基础设施层（IaaS）主要提供<strong>云基础设施</strong>，如计算资源、网络资源、存储资源等，支撑工业互联网平台的整体运行[7]。其核心是<strong>虚拟化技术</strong>，利用分布式存储、并发式计算、高负载调度等新技术，实现资源服务设施的动态管理，提升资源服务有效利用率，也确保资源服务的安全。IaaS层作为设备和平台应用的连接层，为PaaS层的功能运行和SaaS层的应用服务提供完整的底层基础设施服务。</p>\n<h2 id=\"4-PaaS层\"><a href=\"#4-PaaS层\" class=\"headerlink\" title=\"4 PaaS层\"></a>4 PaaS层</h2><p>平台层（PaaS）是整个工业互联网平台的<strong>核心</strong>，它由云计算技术构建，不仅能接收存储数据，还能提供强大的计算环境，对工业数据进行云处理或云控制[8]。它的根本是在IaaS平台上构建了一个<strong>扩展性强的支持系统</strong>，也为工业应用或软件的开发提供了良好的基础平台[5]。</p>\n<p>PaaS层能以平台优势，利用数据库、算法分析等技术，实现数据进一步处理与计算、数据存储、应用或微服务开发等功能，以叠加、扩展的方式提供工业应用开发、部署的基础环境，形成完整度高、定制性好、移植复用程度高的<strong>工业操作系统</strong>[9]。PaaS层还能根据业务进行资源调度，也能保障数据接入、平台运营、接口访问的安全机制，保障业务正常开展。</p>\n<h2 id=\"5-SaaS层\"><a href=\"#5-SaaS层\" class=\"headerlink\" title=\"5 SaaS层\"></a>5 SaaS层</h2><p>应用层（SaaS）是工业互联网平台的<strong>关键</strong>，它是对外服务的关口，与用户直接对接，体现了工业数据最终的应用价值。SaaS层基于PaaS层平台上丰富的工业微服务功能模块，以高效、便捷、多端适配等方式实现传统信息系统的云改造[10]，为平台用户提供各类工业APP等<strong>数字化解决方案</strong>，发展大数据分析等综合应用，实现资源集中化、服务精准化、知识复用化。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1] 周志勇,任涛林,孙明,等. 工业互联网平台体系架构及应用研究[J]. 中国仪器仪表, 2021, 363(6): 45-50.</p>\n<p>[2] 李君,邱君降,柳杨,等. 工业互联网平台评价指标体系构建与应用研究[J]. 中国科技论坛, 2018, 272(12): 70-86.</p>\n<p>[3] Sebastian r. bader,Maria maleshkova,Steffen lohmann. Structuring Reference Architectures for the Industrial Internet of Things[J]. Future Internet, 2019, 11(7).</p>\n<p>[4] 蒋融融,翁正秋,陈铁明. 工业互联网平台及其安全技术发展[J]. 电信科学, 2020, 36(3): 3-10.</p>\n<p>[5] 孙小东,王劲松,李强,等. 工业互联网平台的架构设计[J]. 工业加热, 2020, 49(5): 48-50, 54.</p>\n<p>[6] Tong zhang,Yikai li,C. l. philip chen. Edge computing and its role in Industrial Internet: Methodologies, applications, and future directions[Z]: Information Sciences, 2021: 0-0.</p>\n<p>[7] 邵鸣. 面向铁路的工业互联网平台体系架构研究[J]. 铁路计算机应用, 2019, 28(1): 68-72.</p>\n<p>[8] 李达,郑松. 基于数据引擎技术的工业互联网平台[J]. 智能科学与技术学报, 2020, 2(1): 43-52.</p>\n<p>[9] 杨祖业,李媛,马秀丽. 面向智能装备的工业互联网平台参考架构[J]. 中国仪器仪表, 2019, 339(6): 31-36.</p>\n<p>[10] 邓生雄,杨廷玮泞,张昌福,等. 基于工业互联网平台的企业数字化规划及架构[J]. 新技术新工艺, 2020, 394(10): 5-8.</p>\n","site":{"data":{}},"excerpt":"<p>工业互联网平台的本质是工业云平台，它基于应用需求，搭建对工业数据采集、存储、分析和应用的模块体系，实现工业互联网辅助的生产功能[1]。其核心由<strong>基础设施层（IaaS）、平台层（PaaS）、应用层（SaaS）</strong>三层组成，再加上<strong>端层、边缘层</strong>，共同组成工业互联网平台的基本架构[1-3]。</p>","more":"<p>工业互联网平台的基本架构如下图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/industry-internet-structure.bmp\" alt=\"工业互联网平台基本架构[1]\"></p>\n<h2 id=\"1-端层\"><a href=\"#1-端层\" class=\"headerlink\" title=\"1 端层\"></a>1 端层</h2><p>端层也称设备层[4]，指生产现场的<strong>各种物联网型工业设备</strong>，如数控机床、工业传感器、工业机器人等，它们贯穿产品全生命周期，分别起到生产、检测、监控等不同作用，以监测生产现场，灵活处理生产过程中的不同情况。端层以<strong>物联网技术</strong>为基础，产生并汇聚大量的<strong>工业数据</strong>，包含历史数据和即时数据，也使得端层成为工业互联网平台的底层基础。但是，由于端层的工业数据来源于不同设备、不同系统，因此需要进一步处理，才能向上层传递并利用。</p>\n<h2 id=\"2-边缘层\"><a href=\"#2-边缘层\" class=\"headerlink\" title=\"2 边缘层\"></a>2 边缘层</h2><p>边缘层对端层产生的工业数据进行<strong>采集</strong>，并对不同来源的工业数据进行<strong>协议解析和边缘处理</strong>[5]。它兼容OPC/OPC UA、Mod-Bus等各类工业通信协议，把采集数据进行格式转换和统一，再通过光纤、以太网等链路，将相关数据以有线或无线方式（如5G、NB-IoT等）远程传输到工业互联网平台。</p>\n<p><strong>边缘计算技术</strong>是边缘层的重要组成部分。它基于高性能计算芯片、实时高速处理方法、高精度计算系统等先进技术或工具支撑，在工业设备、智能终端等数据源头一侧，进行数据的先处理和预处理，提升系统反应速度和数据传输速度，解决数据传输和通信的时延问题。边缘计算的优点是具有较低的延迟以实现较短的响应时间，以及解决能源消耗、带宽负担和安全问题的潜力[5-6]。</p>\n<h2 id=\"3-IaaS层\"><a href=\"#3-IaaS层\" class=\"headerlink\" title=\"3 IaaS层\"></a>3 IaaS层</h2><p>基础设施层（IaaS）主要提供<strong>云基础设施</strong>，如计算资源、网络资源、存储资源等，支撑工业互联网平台的整体运行[7]。其核心是<strong>虚拟化技术</strong>，利用分布式存储、并发式计算、高负载调度等新技术，实现资源服务设施的动态管理，提升资源服务有效利用率，也确保资源服务的安全。IaaS层作为设备和平台应用的连接层，为PaaS层的功能运行和SaaS层的应用服务提供完整的底层基础设施服务。</p>\n<h2 id=\"4-PaaS层\"><a href=\"#4-PaaS层\" class=\"headerlink\" title=\"4 PaaS层\"></a>4 PaaS层</h2><p>平台层（PaaS）是整个工业互联网平台的<strong>核心</strong>，它由云计算技术构建，不仅能接收存储数据，还能提供强大的计算环境，对工业数据进行云处理或云控制[8]。它的根本是在IaaS平台上构建了一个<strong>扩展性强的支持系统</strong>，也为工业应用或软件的开发提供了良好的基础平台[5]。</p>\n<p>PaaS层能以平台优势，利用数据库、算法分析等技术，实现数据进一步处理与计算、数据存储、应用或微服务开发等功能，以叠加、扩展的方式提供工业应用开发、部署的基础环境，形成完整度高、定制性好、移植复用程度高的<strong>工业操作系统</strong>[9]。PaaS层还能根据业务进行资源调度，也能保障数据接入、平台运营、接口访问的安全机制，保障业务正常开展。</p>\n<h2 id=\"5-SaaS层\"><a href=\"#5-SaaS层\" class=\"headerlink\" title=\"5 SaaS层\"></a>5 SaaS层</h2><p>应用层（SaaS）是工业互联网平台的<strong>关键</strong>，它是对外服务的关口，与用户直接对接，体现了工业数据最终的应用价值。SaaS层基于PaaS层平台上丰富的工业微服务功能模块，以高效、便捷、多端适配等方式实现传统信息系统的云改造[10]，为平台用户提供各类工业APP等<strong>数字化解决方案</strong>，发展大数据分析等综合应用，实现资源集中化、服务精准化、知识复用化。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1] 周志勇,任涛林,孙明,等. 工业互联网平台体系架构及应用研究[J]. 中国仪器仪表, 2021, 363(6): 45-50.</p>\n<p>[2] 李君,邱君降,柳杨,等. 工业互联网平台评价指标体系构建与应用研究[J]. 中国科技论坛, 2018, 272(12): 70-86.</p>\n<p>[3] Sebastian r. bader,Maria maleshkova,Steffen lohmann. Structuring Reference Architectures for the Industrial Internet of Things[J]. Future Internet, 2019, 11(7).</p>\n<p>[4] 蒋融融,翁正秋,陈铁明. 工业互联网平台及其安全技术发展[J]. 电信科学, 2020, 36(3): 3-10.</p>\n<p>[5] 孙小东,王劲松,李强,等. 工业互联网平台的架构设计[J]. 工业加热, 2020, 49(5): 48-50, 54.</p>\n<p>[6] Tong zhang,Yikai li,C. l. philip chen. Edge computing and its role in Industrial Internet: Methodologies, applications, and future directions[Z]: Information Sciences, 2021: 0-0.</p>\n<p>[7] 邵鸣. 面向铁路的工业互联网平台体系架构研究[J]. 铁路计算机应用, 2019, 28(1): 68-72.</p>\n<p>[8] 李达,郑松. 基于数据引擎技术的工业互联网平台[J]. 智能科学与技术学报, 2020, 2(1): 43-52.</p>\n<p>[9] 杨祖业,李媛,马秀丽. 面向智能装备的工业互联网平台参考架构[J]. 中国仪器仪表, 2019, 339(6): 31-36.</p>\n<p>[10] 邓生雄,杨廷玮泞,张昌福,等. 基于工业互联网平台的企业数字化规划及架构[J]. 新技术新工艺, 2020, 394(10): 5-8.</p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/industry-internet-structure.bmp","popularPost_tmp_gaData":{"updated":"Thu Aug 12 2021 15:01:02 GMT+0800 (中国标准时间)","title":"工业互联网平台基本架构","path":"2021/08/05/basic-architecture-of-industrial-internet-platform/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/industry-internet-structure.bmp","excerpt":"<p>工业互联网平台的本质是工业云平台，它基于应用需求，搭建对工业数据采集、存储、分析和应用的模块体系，实现工业互联网辅助的生产功能[1]。其核心由<strong>基础设施层（IaaS）、平台层（PaaS）、应用层（SaaS）</strong>三层组成，再加上<strong>端层、边缘层</strong>，共同组成工业互联网平台的基本架构[1-3]。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-04T16:20:26.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-04T16:20:26.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Research","tags":["研究","工业互联网","工业互联网平台","架构"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2121},{"title":"如何在一周内建造核心舱","date":"2021-08-02T19:15:51.000Z","comments":1,"_content":"\n最近这段时间，我萌发了搭建一个技术博客的想法。仅仅用了一周左右的时间，我就搭建好了，并且把它取名为“卡洛的核心舱”。\n\n<!--more-->\n\n## 1 开始\n\n在本学期，我开始逐渐投入到科研项目中。写代码时自然会遇到不少问题，绝大多数都是通过百度搜到他人的CSDN文章和个人博客文章解决了。少数问题我也是通过不断地尝试，自己排除了bug。在这期间，部分十分宝贵的值得留存的解决方案我没有记录下来，十分可惜。\n\n在项目暂告一段落后，我有了相对充足的一段时间，考虑到之前的自媒体平台不适合撰写技术文章，于是在研一的最后一个星期，我开始尝试搭建起技术博客。\n\n目前主流的博客搭建方法有两种。一是[WordPress](https://cn.wordpress.org/)+云服务器的模式，这种方法我尝试过，但是随着我的腾讯云云服务器学生优惠机会所剩无几，而我也可能无法承担起如此高昂的租赁费用；此外它是基于CentOS和PHP开发，对我来说不大友好，有一定的学习成本。\n\n二是利用GitHub的[GitHub Pages](https://pages.github.com/)功能，加上开源的博客框架，做出静态页面即可。我选择尝试这种方法。\n\n在此之前，我参考了很多人的博客，包括本科同学[哈哈哥的博客](https://leiwei.xyz/)就是基于GitHub Pages搭建。\n\n## 2 GitHub Pages和git\n\n7月26日，杭州的台风天还没结束，我冒着风雨到达办公室，正式开始搭建之旅。\n\n我最开始试验的是**GitHub Pages**。之前本科同学得意哥就用这个功能写了课设代码的前端页面。GitHub Pages就是GitHub为用户提供的一个把代码转化为静态页面的一个工具，因此拿它写博客也不在话下。\n\n这里值得一提的是，得益于我半年来做科研项目的过程，我对**“用git管理代码”**的方式已经非常熟悉，众多的`git`指令背了又背，`pull`、`push`、`origin`之类的单词已经深入我心。它作为代码管理和版本控制的工具，虽然对于初学者可能劝退，但我却省去了学习的过程，根本不需要翻过第一座大山。\n\n其实我到办公室最开始想尝试的是Gitee Pages（科研项目用的是[Gitee](https://gitee.com/)，国内的基于`git`管理代码的网站），但当我建好仓库，传好html时，却发现：\n\n![绿色网络环境改造？？？](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-01.png)\n\n于是我转向GitHub Pages，重复过程搭建仓库后（<https://github.com/kaluojushi/gyhnb>），得到了我的GitHub Pages页面：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-02.png)\n\n链接是<https://kaluojushi.github.io/gyhnb>。\n\n这个html虽然简单，除了上面的~~nb~~文字外，下面甚至是Lorem ipsum（乱数假文），但这是我4个月前，刚开始学习html时写出的第一个页面。\n\n## 3 域名\n\n我之前就注册过域名，所以也非常容易地打破了这个我小时候认为的技术壁垒。\n\n为了注册一个合适的域名，我想要先起好博客的名字。很快啊，我想到一个非常极客的名字——**“核心舱”**，并且在7月28日注册了[corecabin.cn](https://corecabin.cn/)。\n\n> 对于空间站而言，[核心舱](https://baike.baidu.com/item/天和核心舱)（Core Cabin）是**整个空间站的中枢和管理控制中心**。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。\n\n绑定域名非常简单，也不需要域名备案，网上有现成的教程。于是在完成`CNAME`的上传后，过了10分钟，我就可以通过[corecabin.cn](https://corecabin.cn/)而不是[kaluojushi.github.io](https://kaluojushi.github.io/)去访问这个仓库的pages了。\n\n## 4 Hexo\n\n7月29日这天有6场乒乓球赛。这一天，我不仅看完了每一场球赛，还基本完成了“核心舱”的搭建。\n\n以GitHub Pages为基础的博客框架有三种，分别是Jekyll、Hexo和Hugo，其中前两种用得比较多。当我看到Jekyll的全英文文档以及有点复杂的环境配置，我人晕了，于是劝退开始尝试Hexo。\n\n**Hexo**是台湾人写的，因此有比较详细的中文文档，而且环境配置比较简单，只要**Node.js和git**即可。\n\n不得不说，再次得益于做科研，这个环境我的电脑上已经有了。\n\n![我的科研项目开发工具文档，真是好用啊](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-03.png)\n\n虽然中间出现了`'hexo'不是内部或外部命令，也不是可运行的程序或批处理文件。`这样愚蠢的错误，但我很快知道这是环境变量的`PATH`的问题，很快设置好了。hexo的命令也很好记，难度不大，在跟着教程配置一遍后，基本搭建就完成了。\n\n搭建过程中，我觉得**Hexo还是很香的**，不仅支持本地运行环境，还支持一键部署，并且用到的知识或工具，比如`git`、`npm`、Markdown等全是打过很多次交道的很熟悉的东西了，所以我很顺利，没有遇到什么bug。\n\n基础工作既然已经完成，后面的几天里，主要就是做一些完善工作了。\n\n- 选了个主题[maupassant](https://github.com/tufu9441/maupassant-hexo)，完成了下相关的配置；\n- ~~部署了[hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)搜索插件，可以实现文内搜索；~~\n- ~~部署了[hexo-wordcount](https://github.com/willin/hexo-wordcount)插件，可以显示文章字数与阅读时间，如本文开头所示；~~\n- 部署了[Gitalk](https://github.com/gitalk/gitalk)评论插件，可以用GitHub账号登录留言，如本文文末所示；\n- 基于GitHub Repository、[PicGo](https://github.com/Molunerfinn/PicGo/releases)和[jsDelivr](https://www.jsdelivr.com/)搭建了个稳定的图床，本文所有图片均来自图床；\n- 用Markdown写了一部分文章，以及一个Markdown文档。之前我就用Markdown写文档了，所以也不需要一个学习Markdown的过程；\n- 调整了页面很多的细节，补充了一些页面。\n\n## 5 总结\n\n核心舱搭建成功了，还有些没整完的小细节可以慢慢弄。虽然这个过程中用到的都是我学过的知识，很少碰壁，但是我还是从中收获了很多：\n\n- 熟悉了~~全球最大同性交友网站~~GitHub，以后会常用；\n- 进一步熟悉了`git`；\n- 进一步熟悉了`npm`；\n- 进一步熟悉了环境变量`PATH`；\n- 进一步熟悉了Markdown；\n- 进一步熟悉了前端知识。\n\n一周时间过去，这一周我除了看看奥运比赛，从学校结束科研回家，也就在全身心投入这个事情了。但我丝毫没觉得时间被浪费，因为把时间投入自己喜欢做的事情，花再多精力也值得，尤其是我从中学习的知识、得到的收获、学会的**开源精神**和进一步的**对代码的热爱**，这些不通过自己鼓捣自然是学不到的。\n\n## 2021.8.13更新\n\n回家后的这段时间里，我也没闲着，继续鼓捣自己的核心舱，这个过程中也发现了众多的bug，并想办法排除了它们。\n\n- 从主题[maupassant](https://github.com/tufu9441/maupassant-hexo)换成了主题[NexT](https://github.com/theme-next/hexo-theme-next)，作为一个发展时间很长、被全网使用最多的、最为成熟的主题，它集成了很多插件，使得我不需要修改源代码；\n- 修改了一下favicon及其路径，新增了custom-logo，显示在电脑端右上角；\n- 针对NexT主题侧边栏不显示分类与标签，新增了[分类](\\categories)与[标签](/tags)页面，便于检索文章；\n- 部署了[hexo-symbols-count-time](https://github.com/theme-next/hexo-symbols-count-time)插件显示文章字数与阅读时间，如本文开头所示；\n- 修改了Hexo渲染Markdown的引擎，由[hexo-renderer-marked](https://www.npmjs.com/package/hexo-renderer-marked)改为[hexo-renderer-kramed](https://www.npmjs.com/package/hexo-renderer-kramed)，以及修改了部分代码，以便对数学公式的渲染达到更好的支持，可以参考这篇文章：《{% post_link solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts %}》；\n- 部署了[busuanzi](http://ibruce.info/2015/04/04/busuanzi)插件，用来显示文章阅读次数与网站浏览次数，如本文开头、本站底部所示；\n- 部署了[hexo-generator-searchdb](https://github.com/theme-next/hexo-generator-searchdb)插件，可以实现文内搜索，如侧边栏所示；\n- 解决了中文目录不能跳转的bug；\n- 解决了hexo-renderer-kramed不能渲染Todo List的bug，同样可以参考这篇文章：《{% post_link solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts %}》；\n- 解决了手机端总是不能访问核心舱的bug，可以参考这篇文章：《{% post_link solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed %}》；\n- ……\n\n以后也可以把更新bug的过程写在这篇文章里。\n\n## 参考~~文献~~教程\n\n1. [Hexo官方文档](https://hexo.io/zh-cn/docs/)\n2. [使用hexo+github搭建免费个人博客详细教程-好记的博客](http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa)\n3. [GitHub+Hexo 搭建个人网站详细教程 - 知乎](https://zhuanlan.zhihu.com/p/26625249)\n4. [Github个人博客：绑定域名_heimu24的博客-CSDN博客](https://blog.csdn.net/heimu24/article/details/81159099)\n5. [个人博客搭建笔记----hexo根目录下的\\_config.yml配置解释_zem-CSDN博客](https://blog.csdn.net/zemprogram/article/details/104288872)\n6. [大道至简——Hexo简洁主题推荐 | 屠城](https://www.haomwei.com/technology/maupassant-hexo.html)\n7. [Hexo搭建博客以及多端同步更新_Kevin的专栏-CSDN博客](https://blog.csdn.net/a565102223/article/details/61926629)\n8. [Github+jsDelivr+PicGo 打造稳定快速、高效免费图床\\_TRHX'S BLOG-CSDN博客](https://blog.csdn.net/qq_36759224/article/details/98058240)\n9. [NexT主题使用文档](http://theme-next.iissnan.com/)\n10. [解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志](https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html)\n11. [hexo-theme-next的PR：fix: Chinese TOC cannot jump](https://github.com/theme-next/hexo-theme-next/pull/1540/commits/ec521c927dc10255977324284c1c667f2e220da7)\n12. [hexo-renderer-marked的PR：Add Markdown List Support](https://github.com/hexojs/hexo-renderer-marked/pull/32)\n\n","source":"_posts/build-corecabin-in-one-week.md","raw":"---\ntitle: 如何在一周内建造核心舱\ndate: 2021-08-03 03:15:51\ncategories: Myself\ntags:\n  - 博客\n  - Hexo\n  - 核心舱\n  - 2021\ncomments: true\n---\n\n最近这段时间，我萌发了搭建一个技术博客的想法。仅仅用了一周左右的时间，我就搭建好了，并且把它取名为“卡洛的核心舱”。\n\n<!--more-->\n\n## 1 开始\n\n在本学期，我开始逐渐投入到科研项目中。写代码时自然会遇到不少问题，绝大多数都是通过百度搜到他人的CSDN文章和个人博客文章解决了。少数问题我也是通过不断地尝试，自己排除了bug。在这期间，部分十分宝贵的值得留存的解决方案我没有记录下来，十分可惜。\n\n在项目暂告一段落后，我有了相对充足的一段时间，考虑到之前的自媒体平台不适合撰写技术文章，于是在研一的最后一个星期，我开始尝试搭建起技术博客。\n\n目前主流的博客搭建方法有两种。一是[WordPress](https://cn.wordpress.org/)+云服务器的模式，这种方法我尝试过，但是随着我的腾讯云云服务器学生优惠机会所剩无几，而我也可能无法承担起如此高昂的租赁费用；此外它是基于CentOS和PHP开发，对我来说不大友好，有一定的学习成本。\n\n二是利用GitHub的[GitHub Pages](https://pages.github.com/)功能，加上开源的博客框架，做出静态页面即可。我选择尝试这种方法。\n\n在此之前，我参考了很多人的博客，包括本科同学[哈哈哥的博客](https://leiwei.xyz/)就是基于GitHub Pages搭建。\n\n## 2 GitHub Pages和git\n\n7月26日，杭州的台风天还没结束，我冒着风雨到达办公室，正式开始搭建之旅。\n\n我最开始试验的是**GitHub Pages**。之前本科同学得意哥就用这个功能写了课设代码的前端页面。GitHub Pages就是GitHub为用户提供的一个把代码转化为静态页面的一个工具，因此拿它写博客也不在话下。\n\n这里值得一提的是，得益于我半年来做科研项目的过程，我对**“用git管理代码”**的方式已经非常熟悉，众多的`git`指令背了又背，`pull`、`push`、`origin`之类的单词已经深入我心。它作为代码管理和版本控制的工具，虽然对于初学者可能劝退，但我却省去了学习的过程，根本不需要翻过第一座大山。\n\n其实我到办公室最开始想尝试的是Gitee Pages（科研项目用的是[Gitee](https://gitee.com/)，国内的基于`git`管理代码的网站），但当我建好仓库，传好html时，却发现：\n\n![绿色网络环境改造？？？](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-01.png)\n\n于是我转向GitHub Pages，重复过程搭建仓库后（<https://github.com/kaluojushi/gyhnb>），得到了我的GitHub Pages页面：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-02.png)\n\n链接是<https://kaluojushi.github.io/gyhnb>。\n\n这个html虽然简单，除了上面的~~nb~~文字外，下面甚至是Lorem ipsum（乱数假文），但这是我4个月前，刚开始学习html时写出的第一个页面。\n\n## 3 域名\n\n我之前就注册过域名，所以也非常容易地打破了这个我小时候认为的技术壁垒。\n\n为了注册一个合适的域名，我想要先起好博客的名字。很快啊，我想到一个非常极客的名字——**“核心舱”**，并且在7月28日注册了[corecabin.cn](https://corecabin.cn/)。\n\n> 对于空间站而言，[核心舱](https://baike.baidu.com/item/天和核心舱)（Core Cabin）是**整个空间站的中枢和管理控制中心**。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。\n\n绑定域名非常简单，也不需要域名备案，网上有现成的教程。于是在完成`CNAME`的上传后，过了10分钟，我就可以通过[corecabin.cn](https://corecabin.cn/)而不是[kaluojushi.github.io](https://kaluojushi.github.io/)去访问这个仓库的pages了。\n\n## 4 Hexo\n\n7月29日这天有6场乒乓球赛。这一天，我不仅看完了每一场球赛，还基本完成了“核心舱”的搭建。\n\n以GitHub Pages为基础的博客框架有三种，分别是Jekyll、Hexo和Hugo，其中前两种用得比较多。当我看到Jekyll的全英文文档以及有点复杂的环境配置，我人晕了，于是劝退开始尝试Hexo。\n\n**Hexo**是台湾人写的，因此有比较详细的中文文档，而且环境配置比较简单，只要**Node.js和git**即可。\n\n不得不说，再次得益于做科研，这个环境我的电脑上已经有了。\n\n![我的科研项目开发工具文档，真是好用啊](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-03.png)\n\n虽然中间出现了`'hexo'不是内部或外部命令，也不是可运行的程序或批处理文件。`这样愚蠢的错误，但我很快知道这是环境变量的`PATH`的问题，很快设置好了。hexo的命令也很好记，难度不大，在跟着教程配置一遍后，基本搭建就完成了。\n\n搭建过程中，我觉得**Hexo还是很香的**，不仅支持本地运行环境，还支持一键部署，并且用到的知识或工具，比如`git`、`npm`、Markdown等全是打过很多次交道的很熟悉的东西了，所以我很顺利，没有遇到什么bug。\n\n基础工作既然已经完成，后面的几天里，主要就是做一些完善工作了。\n\n- 选了个主题[maupassant](https://github.com/tufu9441/maupassant-hexo)，完成了下相关的配置；\n- ~~部署了[hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)搜索插件，可以实现文内搜索；~~\n- ~~部署了[hexo-wordcount](https://github.com/willin/hexo-wordcount)插件，可以显示文章字数与阅读时间，如本文开头所示；~~\n- 部署了[Gitalk](https://github.com/gitalk/gitalk)评论插件，可以用GitHub账号登录留言，如本文文末所示；\n- 基于GitHub Repository、[PicGo](https://github.com/Molunerfinn/PicGo/releases)和[jsDelivr](https://www.jsdelivr.com/)搭建了个稳定的图床，本文所有图片均来自图床；\n- 用Markdown写了一部分文章，以及一个Markdown文档。之前我就用Markdown写文档了，所以也不需要一个学习Markdown的过程；\n- 调整了页面很多的细节，补充了一些页面。\n\n## 5 总结\n\n核心舱搭建成功了，还有些没整完的小细节可以慢慢弄。虽然这个过程中用到的都是我学过的知识，很少碰壁，但是我还是从中收获了很多：\n\n- 熟悉了~~全球最大同性交友网站~~GitHub，以后会常用；\n- 进一步熟悉了`git`；\n- 进一步熟悉了`npm`；\n- 进一步熟悉了环境变量`PATH`；\n- 进一步熟悉了Markdown；\n- 进一步熟悉了前端知识。\n\n一周时间过去，这一周我除了看看奥运比赛，从学校结束科研回家，也就在全身心投入这个事情了。但我丝毫没觉得时间被浪费，因为把时间投入自己喜欢做的事情，花再多精力也值得，尤其是我从中学习的知识、得到的收获、学会的**开源精神**和进一步的**对代码的热爱**，这些不通过自己鼓捣自然是学不到的。\n\n## 2021.8.13更新\n\n回家后的这段时间里，我也没闲着，继续鼓捣自己的核心舱，这个过程中也发现了众多的bug，并想办法排除了它们。\n\n- 从主题[maupassant](https://github.com/tufu9441/maupassant-hexo)换成了主题[NexT](https://github.com/theme-next/hexo-theme-next)，作为一个发展时间很长、被全网使用最多的、最为成熟的主题，它集成了很多插件，使得我不需要修改源代码；\n- 修改了一下favicon及其路径，新增了custom-logo，显示在电脑端右上角；\n- 针对NexT主题侧边栏不显示分类与标签，新增了[分类](\\categories)与[标签](/tags)页面，便于检索文章；\n- 部署了[hexo-symbols-count-time](https://github.com/theme-next/hexo-symbols-count-time)插件显示文章字数与阅读时间，如本文开头所示；\n- 修改了Hexo渲染Markdown的引擎，由[hexo-renderer-marked](https://www.npmjs.com/package/hexo-renderer-marked)改为[hexo-renderer-kramed](https://www.npmjs.com/package/hexo-renderer-kramed)，以及修改了部分代码，以便对数学公式的渲染达到更好的支持，可以参考这篇文章：《{% post_link solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts %}》；\n- 部署了[busuanzi](http://ibruce.info/2015/04/04/busuanzi)插件，用来显示文章阅读次数与网站浏览次数，如本文开头、本站底部所示；\n- 部署了[hexo-generator-searchdb](https://github.com/theme-next/hexo-generator-searchdb)插件，可以实现文内搜索，如侧边栏所示；\n- 解决了中文目录不能跳转的bug；\n- 解决了hexo-renderer-kramed不能渲染Todo List的bug，同样可以参考这篇文章：《{% post_link solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts %}》；\n- 解决了手机端总是不能访问核心舱的bug，可以参考这篇文章：《{% post_link solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed %}》；\n- ……\n\n以后也可以把更新bug的过程写在这篇文章里。\n\n## 参考~~文献~~教程\n\n1. [Hexo官方文档](https://hexo.io/zh-cn/docs/)\n2. [使用hexo+github搭建免费个人博客详细教程-好记的博客](http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa)\n3. [GitHub+Hexo 搭建个人网站详细教程 - 知乎](https://zhuanlan.zhihu.com/p/26625249)\n4. [Github个人博客：绑定域名_heimu24的博客-CSDN博客](https://blog.csdn.net/heimu24/article/details/81159099)\n5. [个人博客搭建笔记----hexo根目录下的\\_config.yml配置解释_zem-CSDN博客](https://blog.csdn.net/zemprogram/article/details/104288872)\n6. [大道至简——Hexo简洁主题推荐 | 屠城](https://www.haomwei.com/technology/maupassant-hexo.html)\n7. [Hexo搭建博客以及多端同步更新_Kevin的专栏-CSDN博客](https://blog.csdn.net/a565102223/article/details/61926629)\n8. [Github+jsDelivr+PicGo 打造稳定快速、高效免费图床\\_TRHX'S BLOG-CSDN博客](https://blog.csdn.net/qq_36759224/article/details/98058240)\n9. [NexT主题使用文档](http://theme-next.iissnan.com/)\n10. [解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志](https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html)\n11. [hexo-theme-next的PR：fix: Chinese TOC cannot jump](https://github.com/theme-next/hexo-theme-next/pull/1540/commits/ec521c927dc10255977324284c1c667f2e220da7)\n12. [hexo-renderer-marked的PR：Add Markdown List Support](https://github.com/hexojs/hexo-renderer-marked/pull/32)\n\n","slug":"build-corecabin-in-one-week","published":1,"updated":"2021-08-22T14:13:48.176Z","layout":"post","photos":[],"link":"","_id":"cl06nlvta0003f4viaq6xcko3","content":"<p>最近这段时间，我萌发了搭建一个技术博客的想法。仅仅用了一周左右的时间，我就搭建好了，并且把它取名为“卡洛的核心舱”。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-开始\"><a href=\"#1-开始\" class=\"headerlink\" title=\"1 开始\"></a>1 开始</h2><p>在本学期，我开始逐渐投入到科研项目中。写代码时自然会遇到不少问题，绝大多数都是通过百度搜到他人的CSDN文章和个人博客文章解决了。少数问题我也是通过不断地尝试，自己排除了bug。在这期间，部分十分宝贵的值得留存的解决方案我没有记录下来，十分可惜。</p>\n<p>在项目暂告一段落后，我有了相对充足的一段时间，考虑到之前的自媒体平台不适合撰写技术文章，于是在研一的最后一个星期，我开始尝试搭建起技术博客。</p>\n<p>目前主流的博客搭建方法有两种。一是<a href=\"https://cn.wordpress.org/\">WordPress</a>+云服务器的模式，这种方法我尝试过，但是随着我的腾讯云云服务器学生优惠机会所剩无几，而我也可能无法承担起如此高昂的租赁费用；此外它是基于CentOS和PHP开发，对我来说不大友好，有一定的学习成本。</p>\n<p>二是利用GitHub的<a href=\"https://pages.github.com/\">GitHub Pages</a>功能，加上开源的博客框架，做出静态页面即可。我选择尝试这种方法。</p>\n<p>在此之前，我参考了很多人的博客，包括本科同学<a href=\"https://leiwei.xyz/\">哈哈哥的博客</a>就是基于GitHub Pages搭建。</p>\n<h2 id=\"2-GitHub-Pages和git\"><a href=\"#2-GitHub-Pages和git\" class=\"headerlink\" title=\"2 GitHub Pages和git\"></a>2 GitHub Pages和git</h2><p>7月26日，杭州的台风天还没结束，我冒着风雨到达办公室，正式开始搭建之旅。</p>\n<p>我最开始试验的是<strong>GitHub Pages</strong>。之前本科同学得意哥就用这个功能写了课设代码的前端页面。GitHub Pages就是GitHub为用户提供的一个把代码转化为静态页面的一个工具，因此拿它写博客也不在话下。</p>\n<p>这里值得一提的是，得益于我半年来做科研项目的过程，我对<strong>“用git管理代码”</strong>的方式已经非常熟悉，众多的<code>git</code>指令背了又背，<code>pull</code>、<code>push</code>、<code>origin</code>之类的单词已经深入我心。它作为代码管理和版本控制的工具，虽然对于初学者可能劝退，但我却省去了学习的过程，根本不需要翻过第一座大山。</p>\n<p>其实我到办公室最开始想尝试的是Gitee Pages（科研项目用的是<a href=\"https://gitee.com/\">Gitee</a>，国内的基于<code>git</code>管理代码的网站），但当我建好仓库，传好html时，却发现：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-01.png\" alt=\"绿色网络环境改造？？？\"></p>\n<p>于是我转向GitHub Pages，重复过程搭建仓库后（<a href=\"https://github.com/kaluojushi/gyhnb\">https://github.com/kaluojushi/gyhnb</a>），得到了我的GitHub Pages页面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-02.png\" alt=\"\"></p>\n<p>链接是<a href=\"https://kaluojushi.github.io/gyhnb\">https://kaluojushi.github.io/gyhnb</a>。</p>\n<p>这个html虽然简单，除了上面的<del>nb</del>文字外，下面甚至是Lorem ipsum（乱数假文），但这是我4个月前，刚开始学习html时写出的第一个页面。</p>\n<h2 id=\"3-域名\"><a href=\"#3-域名\" class=\"headerlink\" title=\"3 域名\"></a>3 域名</h2><p>我之前就注册过域名，所以也非常容易地打破了这个我小时候认为的技术壁垒。</p>\n<p>为了注册一个合适的域名，我想要先起好博客的名字。很快啊，我想到一个非常极客的名字——<strong>“核心舱”</strong>，并且在7月28日注册了<a href=\"https://corecabin.cn/\">corecabin.cn</a>。</p>\n<blockquote>\n<p>对于空间站而言，<a href=\"https://baike.baidu.com/item/天和核心舱\">核心舱</a>（Core Cabin）是<strong>整个空间站的中枢和管理控制中心</strong>。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。</p>\n</blockquote>\n<p>绑定域名非常简单，也不需要域名备案，网上有现成的教程。于是在完成<code>CNAME</code>的上传后，过了10分钟，我就可以通过<a href=\"https://corecabin.cn/\">corecabin.cn</a>而不是<a href=\"https://kaluojushi.github.io/\">kaluojushi.github.io</a>去访问这个仓库的pages了。</p>\n<h2 id=\"4-Hexo\"><a href=\"#4-Hexo\" class=\"headerlink\" title=\"4 Hexo\"></a>4 Hexo</h2><p>7月29日这天有6场乒乓球赛。这一天，我不仅看完了每一场球赛，还基本完成了“核心舱”的搭建。</p>\n<p>以GitHub Pages为基础的博客框架有三种，分别是Jekyll、Hexo和Hugo，其中前两种用得比较多。当我看到Jekyll的全英文文档以及有点复杂的环境配置，我人晕了，于是劝退开始尝试Hexo。</p>\n<p><strong>Hexo</strong>是台湾人写的，因此有比较详细的中文文档，而且环境配置比较简单，只要<strong>Node.js和git</strong>即可。</p>\n<p>不得不说，再次得益于做科研，这个环境我的电脑上已经有了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-03.png\" alt=\"我的科研项目开发工具文档，真是好用啊\"></p>\n<p>虽然中间出现了<code>&#39;hexo&#39;不是内部或外部命令，也不是可运行的程序或批处理文件。</code>这样愚蠢的错误，但我很快知道这是环境变量的<code>PATH</code>的问题，很快设置好了。hexo的命令也很好记，难度不大，在跟着教程配置一遍后，基本搭建就完成了。</p>\n<p>搭建过程中，我觉得<strong>Hexo还是很香的</strong>，不仅支持本地运行环境，还支持一键部署，并且用到的知识或工具，比如<code>git</code>、<code>npm</code>、Markdown等全是打过很多次交道的很熟悉的东西了，所以我很顺利，没有遇到什么bug。</p>\n<p>基础工作既然已经完成，后面的几天里，主要就是做一些完善工作了。</p>\n<ul>\n<li>选了个主题<a href=\"https://github.com/tufu9441/maupassant-hexo\">maupassant</a>，完成了下相关的配置；</li>\n<li><del>部署了<a href=\"https://github.com/PaicHyperionDev/hexo-generator-search\">hexo-generator-search</a>搜索插件，可以实现文内搜索；</del></li>\n<li><del>部署了<a href=\"https://github.com/willin/hexo-wordcount\">hexo-wordcount</a>插件，可以显示文章字数与阅读时间，如本文开头所示；</del></li>\n<li>部署了<a href=\"https://github.com/gitalk/gitalk\">Gitalk</a>评论插件，可以用GitHub账号登录留言，如本文文末所示；</li>\n<li>基于GitHub Repository、<a href=\"https://github.com/Molunerfinn/PicGo/releases\">PicGo</a>和<a href=\"https://www.jsdelivr.com/\">jsDelivr</a>搭建了个稳定的图床，本文所有图片均来自图床；</li>\n<li>用Markdown写了一部分文章，以及一个Markdown文档。之前我就用Markdown写文档了，所以也不需要一个学习Markdown的过程；</li>\n<li>调整了页面很多的细节，补充了一些页面。</li>\n</ul>\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5 总结\"></a>5 总结</h2><p>核心舱搭建成功了，还有些没整完的小细节可以慢慢弄。虽然这个过程中用到的都是我学过的知识，很少碰壁，但是我还是从中收获了很多：</p>\n<ul>\n<li>熟悉了<del>全球最大同性交友网站</del>GitHub，以后会常用；</li>\n<li>进一步熟悉了<code>git</code>；</li>\n<li>进一步熟悉了<code>npm</code>；</li>\n<li>进一步熟悉了环境变量<code>PATH</code>；</li>\n<li>进一步熟悉了Markdown；</li>\n<li>进一步熟悉了前端知识。</li>\n</ul>\n<p>一周时间过去，这一周我除了看看奥运比赛，从学校结束科研回家，也就在全身心投入这个事情了。但我丝毫没觉得时间被浪费，因为把时间投入自己喜欢做的事情，花再多精力也值得，尤其是我从中学习的知识、得到的收获、学会的<strong>开源精神</strong>和进一步的<strong>对代码的热爱</strong>，这些不通过自己鼓捣自然是学不到的。</p>\n<h2 id=\"2021-8-13更新\"><a href=\"#2021-8-13更新\" class=\"headerlink\" title=\"2021.8.13更新\"></a>2021.8.13更新</h2><p>回家后的这段时间里，我也没闲着，继续鼓捣自己的核心舱，这个过程中也发现了众多的bug，并想办法排除了它们。</p>\n<ul>\n<li>从主题<a href=\"https://github.com/tufu9441/maupassant-hexo\">maupassant</a>换成了主题<a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a>，作为一个发展时间很长、被全网使用最多的、最为成熟的主题，它集成了很多插件，使得我不需要修改源代码；</li>\n<li>修改了一下favicon及其路径，新增了custom-logo，显示在电脑端右上角；</li>\n<li>针对NexT主题侧边栏不显示分类与标签，新增了<a href=\"\\categories\">分类</a>与<a href=\"/tags\">标签</a>页面，便于检索文章；</li>\n<li>部署了<a href=\"https://github.com/theme-next/hexo-symbols-count-time\">hexo-symbols-count-time</a>插件显示文章字数与阅读时间，如本文开头所示；</li>\n<li>修改了Hexo渲染Markdown的引擎，由<a href=\"https://www.npmjs.com/package/hexo-renderer-marked\">hexo-renderer-marked</a>改为<a href=\"https://www.npmjs.com/package/hexo-renderer-kramed\">hexo-renderer-kramed</a>，以及修改了部分代码，以便对数学公式的渲染达到更好的支持，可以参考这篇文章：《<a href=\"/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\" title=\"解决hexo-renderer-kramed渲染冲突的部分问题\">解决hexo-renderer-kramed渲染冲突的部分问题</a>》；</li>\n<li>部署了<a href=\"http://ibruce.info/2015/04/04/busuanzi\">busuanzi</a>插件，用来显示文章阅读次数与网站浏览次数，如本文开头、本站底部所示；</li>\n<li>部署了<a href=\"https://github.com/theme-next/hexo-generator-searchdb\">hexo-generator-searchdb</a>插件，可以实现文内搜索，如侧边栏所示；</li>\n<li>解决了中文目录不能跳转的bug；</li>\n<li>解决了hexo-renderer-kramed不能渲染Todo List的bug，同样可以参考这篇文章：《<a href=\"/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\" title=\"解决hexo-renderer-kramed渲染冲突的部分问题\">解决hexo-renderer-kramed渲染冲突的部分问题</a>》；</li>\n<li>解决了手机端总是不能访问核心舱的bug，可以参考这篇文章：《<a href=\"/2021/08/14/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed/\" title=\"解决Hexo博客手机端无法访问的问题\">解决Hexo博客手机端无法访问的问题</a>》；</li>\n<li>……</li>\n</ul>\n<p>以后也可以把更新bug的过程写在这篇文章里。</p>\n<h2 id=\"参考文献教程\"><a href=\"#参考文献教程\" class=\"headerlink\" title=\"参考文献教程\"></a>参考<del>文献</del>教程</h2><ol>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">Hexo官方文档</a></li>\n<li><a href=\"http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa\">使用hexo+github搭建免费个人博客详细教程-好记的博客</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程 - 知乎</a></li>\n<li><a href=\"https://blog.csdn.net/heimu24/article/details/81159099\">Github个人博客：绑定域名_heimu24的博客-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/zemprogram/article/details/104288872\">个人博客搭建笔记——hexo根目录下的_config.yml配置解释_zem-CSDN博客</a></li>\n<li><a href=\"https://www.haomwei.com/technology/maupassant-hexo.html\">大道至简——Hexo简洁主题推荐 | 屠城</a></li>\n<li><a href=\"https://blog.csdn.net/a565102223/article/details/61926629\">Hexo搭建博客以及多端同步更新_Kevin的专栏-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36759224/article/details/98058240\">Github+jsDelivr+PicGo 打造稳定快速、高效免费图床_TRHX’S BLOG-CSDN博客</a></li>\n<li><a href=\"http://theme-next.iissnan.com/\">NexT主题使用文档</a></li>\n<li><a href=\"https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html\">解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志</a></li>\n<li><a href=\"https://github.com/theme-next/hexo-theme-next/pull/1540/commits/ec521c927dc10255977324284c1c667f2e220da7\">hexo-theme-next的PR：fix: Chinese TOC cannot jump</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-marked/pull/32\">hexo-renderer-marked的PR：Add Markdown List Support</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>最近这段时间，我萌发了搭建一个技术博客的想法。仅仅用了一周左右的时间，我就搭建好了，并且把它取名为“卡洛的核心舱”。</p>","more":"<h2 id=\"1-开始\"><a href=\"#1-开始\" class=\"headerlink\" title=\"1 开始\"></a>1 开始</h2><p>在本学期，我开始逐渐投入到科研项目中。写代码时自然会遇到不少问题，绝大多数都是通过百度搜到他人的CSDN文章和个人博客文章解决了。少数问题我也是通过不断地尝试，自己排除了bug。在这期间，部分十分宝贵的值得留存的解决方案我没有记录下来，十分可惜。</p>\n<p>在项目暂告一段落后，我有了相对充足的一段时间，考虑到之前的自媒体平台不适合撰写技术文章，于是在研一的最后一个星期，我开始尝试搭建起技术博客。</p>\n<p>目前主流的博客搭建方法有两种。一是<a href=\"https://cn.wordpress.org/\">WordPress</a>+云服务器的模式，这种方法我尝试过，但是随着我的腾讯云云服务器学生优惠机会所剩无几，而我也可能无法承担起如此高昂的租赁费用；此外它是基于CentOS和PHP开发，对我来说不大友好，有一定的学习成本。</p>\n<p>二是利用GitHub的<a href=\"https://pages.github.com/\">GitHub Pages</a>功能，加上开源的博客框架，做出静态页面即可。我选择尝试这种方法。</p>\n<p>在此之前，我参考了很多人的博客，包括本科同学<a href=\"https://leiwei.xyz/\">哈哈哥的博客</a>就是基于GitHub Pages搭建。</p>\n<h2 id=\"2-GitHub-Pages和git\"><a href=\"#2-GitHub-Pages和git\" class=\"headerlink\" title=\"2 GitHub Pages和git\"></a>2 GitHub Pages和git</h2><p>7月26日，杭州的台风天还没结束，我冒着风雨到达办公室，正式开始搭建之旅。</p>\n<p>我最开始试验的是<strong>GitHub Pages</strong>。之前本科同学得意哥就用这个功能写了课设代码的前端页面。GitHub Pages就是GitHub为用户提供的一个把代码转化为静态页面的一个工具，因此拿它写博客也不在话下。</p>\n<p>这里值得一提的是，得益于我半年来做科研项目的过程，我对<strong>“用git管理代码”</strong>的方式已经非常熟悉，众多的<code>git</code>指令背了又背，<code>pull</code>、<code>push</code>、<code>origin</code>之类的单词已经深入我心。它作为代码管理和版本控制的工具，虽然对于初学者可能劝退，但我却省去了学习的过程，根本不需要翻过第一座大山。</p>\n<p>其实我到办公室最开始想尝试的是Gitee Pages（科研项目用的是<a href=\"https://gitee.com/\">Gitee</a>，国内的基于<code>git</code>管理代码的网站），但当我建好仓库，传好html时，却发现：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-01.png\" alt=\"绿色网络环境改造？？？\"></p>\n<p>于是我转向GitHub Pages，重复过程搭建仓库后（<a href=\"https://github.com/kaluojushi/gyhnb\">https://github.com/kaluojushi/gyhnb</a>），得到了我的GitHub Pages页面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-02.png\" alt=\"\"></p>\n<p>链接是<a href=\"https://kaluojushi.github.io/gyhnb\">https://kaluojushi.github.io/gyhnb</a>。</p>\n<p>这个html虽然简单，除了上面的<del>nb</del>文字外，下面甚至是Lorem ipsum（乱数假文），但这是我4个月前，刚开始学习html时写出的第一个页面。</p>\n<h2 id=\"3-域名\"><a href=\"#3-域名\" class=\"headerlink\" title=\"3 域名\"></a>3 域名</h2><p>我之前就注册过域名，所以也非常容易地打破了这个我小时候认为的技术壁垒。</p>\n<p>为了注册一个合适的域名，我想要先起好博客的名字。很快啊，我想到一个非常极客的名字——<strong>“核心舱”</strong>，并且在7月28日注册了<a href=\"https://corecabin.cn/\">corecabin.cn</a>。</p>\n<blockquote>\n<p>对于空间站而言，<a href=\"https://baike.baidu.com/item/天和核心舱\">核心舱</a>（Core Cabin）是<strong>整个空间站的中枢和管理控制中心</strong>。与此类似，我的核心舱主要存储的是与“程序”“技术”“研究”或是“音乐”等一些很酷的东西。</p>\n</blockquote>\n<p>绑定域名非常简单，也不需要域名备案，网上有现成的教程。于是在完成<code>CNAME</code>的上传后，过了10分钟，我就可以通过<a href=\"https://corecabin.cn/\">corecabin.cn</a>而不是<a href=\"https://kaluojushi.github.io/\">kaluojushi.github.io</a>去访问这个仓库的pages了。</p>\n<h2 id=\"4-Hexo\"><a href=\"#4-Hexo\" class=\"headerlink\" title=\"4 Hexo\"></a>4 Hexo</h2><p>7月29日这天有6场乒乓球赛。这一天，我不仅看完了每一场球赛，还基本完成了“核心舱”的搭建。</p>\n<p>以GitHub Pages为基础的博客框架有三种，分别是Jekyll、Hexo和Hugo，其中前两种用得比较多。当我看到Jekyll的全英文文档以及有点复杂的环境配置，我人晕了，于是劝退开始尝试Hexo。</p>\n<p><strong>Hexo</strong>是台湾人写的，因此有比较详细的中文文档，而且环境配置比较简单，只要<strong>Node.js和git</strong>即可。</p>\n<p>不得不说，再次得益于做科研，这个环境我的电脑上已经有了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-03.png\" alt=\"我的科研项目开发工具文档，真是好用啊\"></p>\n<p>虽然中间出现了<code>&#39;hexo&#39;不是内部或外部命令，也不是可运行的程序或批处理文件。</code>这样愚蠢的错误，但我很快知道这是环境变量的<code>PATH</code>的问题，很快设置好了。hexo的命令也很好记，难度不大，在跟着教程配置一遍后，基本搭建就完成了。</p>\n<p>搭建过程中，我觉得<strong>Hexo还是很香的</strong>，不仅支持本地运行环境，还支持一键部署，并且用到的知识或工具，比如<code>git</code>、<code>npm</code>、Markdown等全是打过很多次交道的很熟悉的东西了，所以我很顺利，没有遇到什么bug。</p>\n<p>基础工作既然已经完成，后面的几天里，主要就是做一些完善工作了。</p>\n<ul>\n<li>选了个主题<a href=\"https://github.com/tufu9441/maupassant-hexo\">maupassant</a>，完成了下相关的配置；</li>\n<li><del>部署了<a href=\"https://github.com/PaicHyperionDev/hexo-generator-search\">hexo-generator-search</a>搜索插件，可以实现文内搜索；</del></li>\n<li><del>部署了<a href=\"https://github.com/willin/hexo-wordcount\">hexo-wordcount</a>插件，可以显示文章字数与阅读时间，如本文开头所示；</del></li>\n<li>部署了<a href=\"https://github.com/gitalk/gitalk\">Gitalk</a>评论插件，可以用GitHub账号登录留言，如本文文末所示；</li>\n<li>基于GitHub Repository、<a href=\"https://github.com/Molunerfinn/PicGo/releases\">PicGo</a>和<a href=\"https://www.jsdelivr.com/\">jsDelivr</a>搭建了个稳定的图床，本文所有图片均来自图床；</li>\n<li>用Markdown写了一部分文章，以及一个Markdown文档。之前我就用Markdown写文档了，所以也不需要一个学习Markdown的过程；</li>\n<li>调整了页面很多的细节，补充了一些页面。</li>\n</ul>\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5 总结\"></a>5 总结</h2><p>核心舱搭建成功了，还有些没整完的小细节可以慢慢弄。虽然这个过程中用到的都是我学过的知识，很少碰壁，但是我还是从中收获了很多：</p>\n<ul>\n<li>熟悉了<del>全球最大同性交友网站</del>GitHub，以后会常用；</li>\n<li>进一步熟悉了<code>git</code>；</li>\n<li>进一步熟悉了<code>npm</code>；</li>\n<li>进一步熟悉了环境变量<code>PATH</code>；</li>\n<li>进一步熟悉了Markdown；</li>\n<li>进一步熟悉了前端知识。</li>\n</ul>\n<p>一周时间过去，这一周我除了看看奥运比赛，从学校结束科研回家，也就在全身心投入这个事情了。但我丝毫没觉得时间被浪费，因为把时间投入自己喜欢做的事情，花再多精力也值得，尤其是我从中学习的知识、得到的收获、学会的<strong>开源精神</strong>和进一步的<strong>对代码的热爱</strong>，这些不通过自己鼓捣自然是学不到的。</p>\n<h2 id=\"2021-8-13更新\"><a href=\"#2021-8-13更新\" class=\"headerlink\" title=\"2021.8.13更新\"></a>2021.8.13更新</h2><p>回家后的这段时间里，我也没闲着，继续鼓捣自己的核心舱，这个过程中也发现了众多的bug，并想办法排除了它们。</p>\n<ul>\n<li>从主题<a href=\"https://github.com/tufu9441/maupassant-hexo\">maupassant</a>换成了主题<a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a>，作为一个发展时间很长、被全网使用最多的、最为成熟的主题，它集成了很多插件，使得我不需要修改源代码；</li>\n<li>修改了一下favicon及其路径，新增了custom-logo，显示在电脑端右上角；</li>\n<li>针对NexT主题侧边栏不显示分类与标签，新增了<a href=\"\\categories\">分类</a>与<a href=\"/tags\">标签</a>页面，便于检索文章；</li>\n<li>部署了<a href=\"https://github.com/theme-next/hexo-symbols-count-time\">hexo-symbols-count-time</a>插件显示文章字数与阅读时间，如本文开头所示；</li>\n<li>修改了Hexo渲染Markdown的引擎，由<a href=\"https://www.npmjs.com/package/hexo-renderer-marked\">hexo-renderer-marked</a>改为<a href=\"https://www.npmjs.com/package/hexo-renderer-kramed\">hexo-renderer-kramed</a>，以及修改了部分代码，以便对数学公式的渲染达到更好的支持，可以参考这篇文章：《<a href=\"/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\" title=\"解决hexo-renderer-kramed渲染冲突的部分问题\">解决hexo-renderer-kramed渲染冲突的部分问题</a>》；</li>\n<li>部署了<a href=\"http://ibruce.info/2015/04/04/busuanzi\">busuanzi</a>插件，用来显示文章阅读次数与网站浏览次数，如本文开头、本站底部所示；</li>\n<li>部署了<a href=\"https://github.com/theme-next/hexo-generator-searchdb\">hexo-generator-searchdb</a>插件，可以实现文内搜索，如侧边栏所示；</li>\n<li>解决了中文目录不能跳转的bug；</li>\n<li>解决了hexo-renderer-kramed不能渲染Todo List的bug，同样可以参考这篇文章：《<a href=\"/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\" title=\"解决hexo-renderer-kramed渲染冲突的部分问题\">解决hexo-renderer-kramed渲染冲突的部分问题</a>》；</li>\n<li>解决了手机端总是不能访问核心舱的bug，可以参考这篇文章：《<a href=\"/2021/08/14/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed/\" title=\"解决Hexo博客手机端无法访问的问题\">解决Hexo博客手机端无法访问的问题</a>》；</li>\n<li>……</li>\n</ul>\n<p>以后也可以把更新bug的过程写在这篇文章里。</p>\n<h2 id=\"参考文献教程\"><a href=\"#参考文献教程\" class=\"headerlink\" title=\"参考文献教程\"></a>参考<del>文献</del>教程</h2><ol>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">Hexo官方文档</a></li>\n<li><a href=\"http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa\">使用hexo+github搭建免费个人博客详细教程-好记的博客</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程 - 知乎</a></li>\n<li><a href=\"https://blog.csdn.net/heimu24/article/details/81159099\">Github个人博客：绑定域名_heimu24的博客-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/zemprogram/article/details/104288872\">个人博客搭建笔记——hexo根目录下的_config.yml配置解释_zem-CSDN博客</a></li>\n<li><a href=\"https://www.haomwei.com/technology/maupassant-hexo.html\">大道至简——Hexo简洁主题推荐 | 屠城</a></li>\n<li><a href=\"https://blog.csdn.net/a565102223/article/details/61926629\">Hexo搭建博客以及多端同步更新_Kevin的专栏-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36759224/article/details/98058240\">Github+jsDelivr+PicGo 打造稳定快速、高效免费图床_TRHX’S BLOG-CSDN博客</a></li>\n<li><a href=\"http://theme-next.iissnan.com/\">NexT主题使用文档</a></li>\n<li><a href=\"https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html\">解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志</a></li>\n<li><a href=\"https://github.com/theme-next/hexo-theme-next/pull/1540/commits/ec521c927dc10255977324284c1c667f2e220da7\">hexo-theme-next的PR：fix: Chinese TOC cannot jump</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-marked/pull/32\">hexo-renderer-marked的PR：Add Markdown List Support</a></li>\n</ol>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-01.png","popularPost_tmp_gaData":{"updated":"Sun Aug 22 2021 22:13:48 GMT+0800 (中国标准时间)","title":"如何在一周内建造核心舱","path":"2021/08/03/build-corecabin-in-one-week/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210803-01.png","excerpt":"<p>最近这段时间，我萌发了搭建一个技术博客的想法。仅仅用了一周左右的时间，我就搭建好了，并且把它取名为“卡洛的核心舱”。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-02T19:15:51.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-02T19:15:51.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Myself","tags":["博客","Hexo","核心舱","2021"],"internalLinks":["tags","2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/","2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/","2021/08/14/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed/"],"keywords":[],"keywordsLength":0},"length":3452},{"title":"我真的要走这条路吗？","date":"2022-02-28T11:54:31.000Z","comments":1,"_content":"\n新的学期来临了，压力也在日益增加，不知道什么时候才能收获努力的结果。\n\n刚好今天是2月的最后一天，不如总结一下，研究生以来我的学习工作顺不顺利。\n\n<!-- more -->\n\n## 1 code学习\n\n在研究生入学之前，我也有过一段迷茫期，当时完全不清楚互联网有哪些岗位，需要做些什么。我对编程语言的认知还只停留在题目与实验上，没有任何建设性的了解。当时我也许觉得PTA或者计算机二级算是NB的成就，但与他人的差距其实非常明显。\n\n2021年的3月，我正式进入课题组，给到了**“工业互联网”**的研究方向。这时在课题组的大背景（开发常选Java而非C#）下，我开始尝试学习Java。\n\n后来，2021年4月，导师给了我们一个项目“某机床厂的远程运维平台”，并让我负责**前端开发**。这时我开始跟着MOOC学习HTML、CSS和JavaScript最基础的部分，以及跟着b站学Vue。后来的时间实在是不够我学习了，我只能参考若依的源码，边学边查边做。遇到一些超纲的bug，例如经常出现变量找不到属性的问题，就直接百度解决了。\n\n当时也是速成，所以我觉得学习效果并不好，很多基础的东西我说不出所以然来。于是从2021年8月，在项目告一段落、有了相对充足的时间后，我开始从头整理Java、HTML、CSS等等的学习笔记。这个进度其实非常慢，再加上在Java耽误了时间，以及研二本身的科研工作，直到现在我也才整理到CSS。\n\n学习的选择很多，使得我一直犹豫不敢深入。即使是在项目里负责前端开发后，我也没有想清楚以后到底要深入学习什么、朝什么方向努力。\n\n大概到11、12月，我才真正下定决心确定了**前端开发岗**的目标。但现在要问我自己真正做好准备了吗，我估计还没有。\n\n## 2 刷题\n\n由于我一直没有目标，导致我刷题很晚，我甚至不知道用什么语言刷题。\n\n直到2012年12月，我才开始用JavaScript刷每日一题。而且直到上周，我才开始做力扣周赛。\n\n由于JavaScript本身是脚本语言，并没有其他语言的数据结构，所以对于一些特定的题目，用它写没有那么方便，甚至官方题解都不给JavaScript的解法。\n\n相比其他人，我估计自己的水平还很低，一些硬磕算法的题目（如二分法、dfs、dp等），我也几乎是不看题解就做不出来。**这种最需要时间来熬的东西，却发现时间已经不够了，这是十分可怕的一件事情。**\n\n![力扣的提交记录](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-01.png)\n\n（1月还拿了个全勤徽章，2月寒假期间摸了几天，CV都懒得CV，拿不到徽章了555\n\n好在我现在已经开始着手整理我的题解，并打算抽出一定的时间来对算法做整理。\n\n## 3 实习\n\n最近学习了一个词，叫peer pressure，意思是**同辈压力**，当身边的人都显得比自己优秀时，自己的压力就会陡增，以至于与其他人的差距越来越大。\n\n现在就是如此，当身边的人都开始疯狂发内推、面试、实习时，自己却还没有一点进展，这是让人最慌的。\n\n这几天，我仔细看了看我之前做的那个项目的前端部分（得益于我10月份写的两篇**前端技术总结**），也在完善我的简历，希望到时候问到项目的时候能对答如流。这也是相比其他人的一丁点优势，起码自己是真的弄了点东西出来。\n\n当然，从我看的一点面经来说，光有**Experience**也不够，**Skill**也就是最基础的东西他还是会问的，即使是与前端关系不大的数据结构与算法、操作系统、计网等等。这些对于非科班的我来说着实是几座大山，只希望自己在接下来的半年里好好准备吧。\n\n那在此立下一个flag：**3月10日之前**不仅要完成完善自己的实习简历，更要把理想的都投出去。\n\n## 4 科研\n\n终于说到了研究生生活最重要的一环了。\n\n我所在的课题组不是科研导向的课题组，不太需要做实验，所以导师给的研究方向是比较模糊的。2021年3月的时候，只给了“工业互联网”的大方向。后来就被拉去做了几个横向项目，这些项目基本都是半年做完的小项目，课题组和企业合作一下，我们几个学生打打工，干干活，基本上就结束了。\n\n2021年10月底，由于研究生生活过半，要准备开题报告的撰写，且研二下学期要准备毕业课题的研究，这时导师给我们分了比较细致的方向。我的方向是“**数控滚齿加工**的智能化发展及工业互联网、人工智能等信息化技术在数控滚齿加工中的应用”。\n\n几个月来，我看了很多论文，也在2022年1月写完了八千字的**开题报告**，但我还是困惑很多事情，当时打算开题报告之前找导师仔细聊一聊也没去。之前组会汇报过这个方向，但大家说这个研究很难突出创新性，导致我不知道把研究的重点放在哪里。我们不是其他课题组那种做实验、调数据、发论文的类型，之前做的项目也太应用化了在学术研究上没有什么技术突破，每个人单打独斗的风格也让自己匮乏的知识面得以尽显。\n\n![Zotero中看的论文](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-02.png)\n\n现在快3月了，6月之前还需要进行中期进展答辩，自己还在科研上想破了头，更可怕的是现在还没有什么时间和动力，没法一心多用。\n\n或许我真的不适合搞科研，但现在的自己也只能努力吧。\n\n再立flag：在实习找到之后，**在4月底之前**，取得一点决定性的突破，并且搞定专利或软著！\n\n## 5 最后说点什么\n\n可以看出来，去年到今年的研究生生活碰了很多壁，很大多数是我的性格特点/缺点造成的。\n\n1. 拖延，不用说了，失去了很多时间和机会\n2. 焦虑，这个焦虑来源于自己本身的不作为和外界的压力\n3. 逃避，和拖延一样的起因，遇到不太想做的，就去逃避它\n\n之后还是要继续努力，也不指望自己一定能改掉这些或是非要与他人比肩，毕竟比以前的自己厉害一点就是了不得的成绩了。\n\n俗话说得好，**芝麻开花节节高**。\n","source":"_posts/do-i-really-want-to-go-this-way.md","raw":"---\ntitle: 我真的要走这条路吗？\ndate: 2022-02-28 19:54:31\ncategories: Myself\ntags:\n  - 2021\n  - 2022\n  - 编程\n  - 研究\n  - 前端\ncomments: true\n---\n\n新的学期来临了，压力也在日益增加，不知道什么时候才能收获努力的结果。\n\n刚好今天是2月的最后一天，不如总结一下，研究生以来我的学习工作顺不顺利。\n\n<!-- more -->\n\n## 1 code学习\n\n在研究生入学之前，我也有过一段迷茫期，当时完全不清楚互联网有哪些岗位，需要做些什么。我对编程语言的认知还只停留在题目与实验上，没有任何建设性的了解。当时我也许觉得PTA或者计算机二级算是NB的成就，但与他人的差距其实非常明显。\n\n2021年的3月，我正式进入课题组，给到了**“工业互联网”**的研究方向。这时在课题组的大背景（开发常选Java而非C#）下，我开始尝试学习Java。\n\n后来，2021年4月，导师给了我们一个项目“某机床厂的远程运维平台”，并让我负责**前端开发**。这时我开始跟着MOOC学习HTML、CSS和JavaScript最基础的部分，以及跟着b站学Vue。后来的时间实在是不够我学习了，我只能参考若依的源码，边学边查边做。遇到一些超纲的bug，例如经常出现变量找不到属性的问题，就直接百度解决了。\n\n当时也是速成，所以我觉得学习效果并不好，很多基础的东西我说不出所以然来。于是从2021年8月，在项目告一段落、有了相对充足的时间后，我开始从头整理Java、HTML、CSS等等的学习笔记。这个进度其实非常慢，再加上在Java耽误了时间，以及研二本身的科研工作，直到现在我也才整理到CSS。\n\n学习的选择很多，使得我一直犹豫不敢深入。即使是在项目里负责前端开发后，我也没有想清楚以后到底要深入学习什么、朝什么方向努力。\n\n大概到11、12月，我才真正下定决心确定了**前端开发岗**的目标。但现在要问我自己真正做好准备了吗，我估计还没有。\n\n## 2 刷题\n\n由于我一直没有目标，导致我刷题很晚，我甚至不知道用什么语言刷题。\n\n直到2012年12月，我才开始用JavaScript刷每日一题。而且直到上周，我才开始做力扣周赛。\n\n由于JavaScript本身是脚本语言，并没有其他语言的数据结构，所以对于一些特定的题目，用它写没有那么方便，甚至官方题解都不给JavaScript的解法。\n\n相比其他人，我估计自己的水平还很低，一些硬磕算法的题目（如二分法、dfs、dp等），我也几乎是不看题解就做不出来。**这种最需要时间来熬的东西，却发现时间已经不够了，这是十分可怕的一件事情。**\n\n![力扣的提交记录](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-01.png)\n\n（1月还拿了个全勤徽章，2月寒假期间摸了几天，CV都懒得CV，拿不到徽章了555\n\n好在我现在已经开始着手整理我的题解，并打算抽出一定的时间来对算法做整理。\n\n## 3 实习\n\n最近学习了一个词，叫peer pressure，意思是**同辈压力**，当身边的人都显得比自己优秀时，自己的压力就会陡增，以至于与其他人的差距越来越大。\n\n现在就是如此，当身边的人都开始疯狂发内推、面试、实习时，自己却还没有一点进展，这是让人最慌的。\n\n这几天，我仔细看了看我之前做的那个项目的前端部分（得益于我10月份写的两篇**前端技术总结**），也在完善我的简历，希望到时候问到项目的时候能对答如流。这也是相比其他人的一丁点优势，起码自己是真的弄了点东西出来。\n\n当然，从我看的一点面经来说，光有**Experience**也不够，**Skill**也就是最基础的东西他还是会问的，即使是与前端关系不大的数据结构与算法、操作系统、计网等等。这些对于非科班的我来说着实是几座大山，只希望自己在接下来的半年里好好准备吧。\n\n那在此立下一个flag：**3月10日之前**不仅要完成完善自己的实习简历，更要把理想的都投出去。\n\n## 4 科研\n\n终于说到了研究生生活最重要的一环了。\n\n我所在的课题组不是科研导向的课题组，不太需要做实验，所以导师给的研究方向是比较模糊的。2021年3月的时候，只给了“工业互联网”的大方向。后来就被拉去做了几个横向项目，这些项目基本都是半年做完的小项目，课题组和企业合作一下，我们几个学生打打工，干干活，基本上就结束了。\n\n2021年10月底，由于研究生生活过半，要准备开题报告的撰写，且研二下学期要准备毕业课题的研究，这时导师给我们分了比较细致的方向。我的方向是“**数控滚齿加工**的智能化发展及工业互联网、人工智能等信息化技术在数控滚齿加工中的应用”。\n\n几个月来，我看了很多论文，也在2022年1月写完了八千字的**开题报告**，但我还是困惑很多事情，当时打算开题报告之前找导师仔细聊一聊也没去。之前组会汇报过这个方向，但大家说这个研究很难突出创新性，导致我不知道把研究的重点放在哪里。我们不是其他课题组那种做实验、调数据、发论文的类型，之前做的项目也太应用化了在学术研究上没有什么技术突破，每个人单打独斗的风格也让自己匮乏的知识面得以尽显。\n\n![Zotero中看的论文](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-02.png)\n\n现在快3月了，6月之前还需要进行中期进展答辩，自己还在科研上想破了头，更可怕的是现在还没有什么时间和动力，没法一心多用。\n\n或许我真的不适合搞科研，但现在的自己也只能努力吧。\n\n再立flag：在实习找到之后，**在4月底之前**，取得一点决定性的突破，并且搞定专利或软著！\n\n## 5 最后说点什么\n\n可以看出来，去年到今年的研究生生活碰了很多壁，很大多数是我的性格特点/缺点造成的。\n\n1. 拖延，不用说了，失去了很多时间和机会\n2. 焦虑，这个焦虑来源于自己本身的不作为和外界的压力\n3. 逃避，和拖延一样的起因，遇到不太想做的，就去逃避它\n\n之后还是要继续努力，也不指望自己一定能改掉这些或是非要与他人比肩，毕竟比以前的自己厉害一点就是了不得的成绩了。\n\n俗话说得好，**芝麻开花节节高**。\n","slug":"do-i-really-want-to-go-this-way","published":1,"updated":"2022-02-28T11:57:38.952Z","layout":"post","photos":[],"link":"","_id":"cl06nlvtg0007f4vihnc65vox","content":"<p>新的学期来临了，压力也在日益增加，不知道什么时候才能收获努力的结果。</p>\n<p>刚好今天是2月的最后一天，不如总结一下，研究生以来我的学习工作顺不顺利。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-code学习\"><a href=\"#1-code学习\" class=\"headerlink\" title=\"1 code学习\"></a>1 code学习</h2><p>在研究生入学之前，我也有过一段迷茫期，当时完全不清楚互联网有哪些岗位，需要做些什么。我对编程语言的认知还只停留在题目与实验上，没有任何建设性的了解。当时我也许觉得PTA或者计算机二级算是NB的成就，但与他人的差距其实非常明显。</p>\n<p>2021年的3月，我正式进入课题组，给到了<strong>“工业互联网”</strong>的研究方向。这时在课题组的大背景（开发常选Java而非C#）下，我开始尝试学习Java。</p>\n<p>后来，2021年4月，导师给了我们一个项目“某机床厂的远程运维平台”，并让我负责<strong>前端开发</strong>。这时我开始跟着MOOC学习HTML、CSS和JavaScript最基础的部分，以及跟着b站学Vue。后来的时间实在是不够我学习了，我只能参考若依的源码，边学边查边做。遇到一些超纲的bug，例如经常出现变量找不到属性的问题，就直接百度解决了。</p>\n<p>当时也是速成，所以我觉得学习效果并不好，很多基础的东西我说不出所以然来。于是从2021年8月，在项目告一段落、有了相对充足的时间后，我开始从头整理Java、HTML、CSS等等的学习笔记。这个进度其实非常慢，再加上在Java耽误了时间，以及研二本身的科研工作，直到现在我也才整理到CSS。</p>\n<p>学习的选择很多，使得我一直犹豫不敢深入。即使是在项目里负责前端开发后，我也没有想清楚以后到底要深入学习什么、朝什么方向努力。</p>\n<p>大概到11、12月，我才真正下定决心确定了<strong>前端开发岗</strong>的目标。但现在要问我自己真正做好准备了吗，我估计还没有。</p>\n<h2 id=\"2-刷题\"><a href=\"#2-刷题\" class=\"headerlink\" title=\"2 刷题\"></a>2 刷题</h2><p>由于我一直没有目标，导致我刷题很晚，我甚至不知道用什么语言刷题。</p>\n<p>直到2012年12月，我才开始用JavaScript刷每日一题。而且直到上周，我才开始做力扣周赛。</p>\n<p>由于JavaScript本身是脚本语言，并没有其他语言的数据结构，所以对于一些特定的题目，用它写没有那么方便，甚至官方题解都不给JavaScript的解法。</p>\n<p>相比其他人，我估计自己的水平还很低，一些硬磕算法的题目（如二分法、dfs、dp等），我也几乎是不看题解就做不出来。<strong>这种最需要时间来熬的东西，却发现时间已经不够了，这是十分可怕的一件事情。</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-01.png\" alt=\"力扣的提交记录\"></p>\n<p>（1月还拿了个全勤徽章，2月寒假期间摸了几天，CV都懒得CV，拿不到徽章了555</p>\n<p>好在我现在已经开始着手整理我的题解，并打算抽出一定的时间来对算法做整理。</p>\n<h2 id=\"3-实习\"><a href=\"#3-实习\" class=\"headerlink\" title=\"3 实习\"></a>3 实习</h2><p>最近学习了一个词，叫peer pressure，意思是<strong>同辈压力</strong>，当身边的人都显得比自己优秀时，自己的压力就会陡增，以至于与其他人的差距越来越大。</p>\n<p>现在就是如此，当身边的人都开始疯狂发内推、面试、实习时，自己却还没有一点进展，这是让人最慌的。</p>\n<p>这几天，我仔细看了看我之前做的那个项目的前端部分（得益于我10月份写的两篇<strong>前端技术总结</strong>），也在完善我的简历，希望到时候问到项目的时候能对答如流。这也是相比其他人的一丁点优势，起码自己是真的弄了点东西出来。</p>\n<p>当然，从我看的一点面经来说，光有<strong>Experience</strong>也不够，<strong>Skill</strong>也就是最基础的东西他还是会问的，即使是与前端关系不大的数据结构与算法、操作系统、计网等等。这些对于非科班的我来说着实是几座大山，只希望自己在接下来的半年里好好准备吧。</p>\n<p>那在此立下一个flag：<strong>3月10日之前</strong>不仅要完成完善自己的实习简历，更要把理想的都投出去。</p>\n<h2 id=\"4-科研\"><a href=\"#4-科研\" class=\"headerlink\" title=\"4 科研\"></a>4 科研</h2><p>终于说到了研究生生活最重要的一环了。</p>\n<p>我所在的课题组不是科研导向的课题组，不太需要做实验，所以导师给的研究方向是比较模糊的。2021年3月的时候，只给了“工业互联网”的大方向。后来就被拉去做了几个横向项目，这些项目基本都是半年做完的小项目，课题组和企业合作一下，我们几个学生打打工，干干活，基本上就结束了。</p>\n<p>2021年10月底，由于研究生生活过半，要准备开题报告的撰写，且研二下学期要准备毕业课题的研究，这时导师给我们分了比较细致的方向。我的方向是“<strong>数控滚齿加工</strong>的智能化发展及工业互联网、人工智能等信息化技术在数控滚齿加工中的应用”。</p>\n<p>几个月来，我看了很多论文，也在2022年1月写完了八千字的<strong>开题报告</strong>，但我还是困惑很多事情，当时打算开题报告之前找导师仔细聊一聊也没去。之前组会汇报过这个方向，但大家说这个研究很难突出创新性，导致我不知道把研究的重点放在哪里。我们不是其他课题组那种做实验、调数据、发论文的类型，之前做的项目也太应用化了在学术研究上没有什么技术突破，每个人单打独斗的风格也让自己匮乏的知识面得以尽显。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-02.png\" alt=\"Zotero中看的论文\"></p>\n<p>现在快3月了，6月之前还需要进行中期进展答辩，自己还在科研上想破了头，更可怕的是现在还没有什么时间和动力，没法一心多用。</p>\n<p>或许我真的不适合搞科研，但现在的自己也只能努力吧。</p>\n<p>再立flag：在实习找到之后，<strong>在4月底之前</strong>，取得一点决定性的突破，并且搞定专利或软著！</p>\n<h2 id=\"5-最后说点什么\"><a href=\"#5-最后说点什么\" class=\"headerlink\" title=\"5 最后说点什么\"></a>5 最后说点什么</h2><p>可以看出来，去年到今年的研究生生活碰了很多壁，很大多数是我的性格特点/缺点造成的。</p>\n<ol>\n<li>拖延，不用说了，失去了很多时间和机会</li>\n<li>焦虑，这个焦虑来源于自己本身的不作为和外界的压力</li>\n<li>逃避，和拖延一样的起因，遇到不太想做的，就去逃避它</li>\n</ol>\n<p>之后还是要继续努力，也不指望自己一定能改掉这些或是非要与他人比肩，毕竟比以前的自己厉害一点就是了不得的成绩了。</p>\n<p>俗话说得好，<strong>芝麻开花节节高</strong>。</p>\n","site":{"data":{}},"excerpt":"<p>新的学期来临了，压力也在日益增加，不知道什么时候才能收获努力的结果。</p>\n<p>刚好今天是2月的最后一天，不如总结一下，研究生以来我的学习工作顺不顺利。</p>","more":"<h2 id=\"1-code学习\"><a href=\"#1-code学习\" class=\"headerlink\" title=\"1 code学习\"></a>1 code学习</h2><p>在研究生入学之前，我也有过一段迷茫期，当时完全不清楚互联网有哪些岗位，需要做些什么。我对编程语言的认知还只停留在题目与实验上，没有任何建设性的了解。当时我也许觉得PTA或者计算机二级算是NB的成就，但与他人的差距其实非常明显。</p>\n<p>2021年的3月，我正式进入课题组，给到了<strong>“工业互联网”</strong>的研究方向。这时在课题组的大背景（开发常选Java而非C#）下，我开始尝试学习Java。</p>\n<p>后来，2021年4月，导师给了我们一个项目“某机床厂的远程运维平台”，并让我负责<strong>前端开发</strong>。这时我开始跟着MOOC学习HTML、CSS和JavaScript最基础的部分，以及跟着b站学Vue。后来的时间实在是不够我学习了，我只能参考若依的源码，边学边查边做。遇到一些超纲的bug，例如经常出现变量找不到属性的问题，就直接百度解决了。</p>\n<p>当时也是速成，所以我觉得学习效果并不好，很多基础的东西我说不出所以然来。于是从2021年8月，在项目告一段落、有了相对充足的时间后，我开始从头整理Java、HTML、CSS等等的学习笔记。这个进度其实非常慢，再加上在Java耽误了时间，以及研二本身的科研工作，直到现在我也才整理到CSS。</p>\n<p>学习的选择很多，使得我一直犹豫不敢深入。即使是在项目里负责前端开发后，我也没有想清楚以后到底要深入学习什么、朝什么方向努力。</p>\n<p>大概到11、12月，我才真正下定决心确定了<strong>前端开发岗</strong>的目标。但现在要问我自己真正做好准备了吗，我估计还没有。</p>\n<h2 id=\"2-刷题\"><a href=\"#2-刷题\" class=\"headerlink\" title=\"2 刷题\"></a>2 刷题</h2><p>由于我一直没有目标，导致我刷题很晚，我甚至不知道用什么语言刷题。</p>\n<p>直到2012年12月，我才开始用JavaScript刷每日一题。而且直到上周，我才开始做力扣周赛。</p>\n<p>由于JavaScript本身是脚本语言，并没有其他语言的数据结构，所以对于一些特定的题目，用它写没有那么方便，甚至官方题解都不给JavaScript的解法。</p>\n<p>相比其他人，我估计自己的水平还很低，一些硬磕算法的题目（如二分法、dfs、dp等），我也几乎是不看题解就做不出来。<strong>这种最需要时间来熬的东西，却发现时间已经不够了，这是十分可怕的一件事情。</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-01.png\" alt=\"力扣的提交记录\"></p>\n<p>（1月还拿了个全勤徽章，2月寒假期间摸了几天，CV都懒得CV，拿不到徽章了555</p>\n<p>好在我现在已经开始着手整理我的题解，并打算抽出一定的时间来对算法做整理。</p>\n<h2 id=\"3-实习\"><a href=\"#3-实习\" class=\"headerlink\" title=\"3 实习\"></a>3 实习</h2><p>最近学习了一个词，叫peer pressure，意思是<strong>同辈压力</strong>，当身边的人都显得比自己优秀时，自己的压力就会陡增，以至于与其他人的差距越来越大。</p>\n<p>现在就是如此，当身边的人都开始疯狂发内推、面试、实习时，自己却还没有一点进展，这是让人最慌的。</p>\n<p>这几天，我仔细看了看我之前做的那个项目的前端部分（得益于我10月份写的两篇<strong>前端技术总结</strong>），也在完善我的简历，希望到时候问到项目的时候能对答如流。这也是相比其他人的一丁点优势，起码自己是真的弄了点东西出来。</p>\n<p>当然，从我看的一点面经来说，光有<strong>Experience</strong>也不够，<strong>Skill</strong>也就是最基础的东西他还是会问的，即使是与前端关系不大的数据结构与算法、操作系统、计网等等。这些对于非科班的我来说着实是几座大山，只希望自己在接下来的半年里好好准备吧。</p>\n<p>那在此立下一个flag：<strong>3月10日之前</strong>不仅要完成完善自己的实习简历，更要把理想的都投出去。</p>\n<h2 id=\"4-科研\"><a href=\"#4-科研\" class=\"headerlink\" title=\"4 科研\"></a>4 科研</h2><p>终于说到了研究生生活最重要的一环了。</p>\n<p>我所在的课题组不是科研导向的课题组，不太需要做实验，所以导师给的研究方向是比较模糊的。2021年3月的时候，只给了“工业互联网”的大方向。后来就被拉去做了几个横向项目，这些项目基本都是半年做完的小项目，课题组和企业合作一下，我们几个学生打打工，干干活，基本上就结束了。</p>\n<p>2021年10月底，由于研究生生活过半，要准备开题报告的撰写，且研二下学期要准备毕业课题的研究，这时导师给我们分了比较细致的方向。我的方向是“<strong>数控滚齿加工</strong>的智能化发展及工业互联网、人工智能等信息化技术在数控滚齿加工中的应用”。</p>\n<p>几个月来，我看了很多论文，也在2022年1月写完了八千字的<strong>开题报告</strong>，但我还是困惑很多事情，当时打算开题报告之前找导师仔细聊一聊也没去。之前组会汇报过这个方向，但大家说这个研究很难突出创新性，导致我不知道把研究的重点放在哪里。我们不是其他课题组那种做实验、调数据、发论文的类型，之前做的项目也太应用化了在学术研究上没有什么技术突破，每个人单打独斗的风格也让自己匮乏的知识面得以尽显。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-02.png\" alt=\"Zotero中看的论文\"></p>\n<p>现在快3月了，6月之前还需要进行中期进展答辩，自己还在科研上想破了头，更可怕的是现在还没有什么时间和动力，没法一心多用。</p>\n<p>或许我真的不适合搞科研，但现在的自己也只能努力吧。</p>\n<p>再立flag：在实习找到之后，<strong>在4月底之前</strong>，取得一点决定性的突破，并且搞定专利或软著！</p>\n<h2 id=\"5-最后说点什么\"><a href=\"#5-最后说点什么\" class=\"headerlink\" title=\"5 最后说点什么\"></a>5 最后说点什么</h2><p>可以看出来，去年到今年的研究生生活碰了很多壁，很大多数是我的性格特点/缺点造成的。</p>\n<ol>\n<li>拖延，不用说了，失去了很多时间和机会</li>\n<li>焦虑，这个焦虑来源于自己本身的不作为和外界的压力</li>\n<li>逃避，和拖延一样的起因，遇到不太想做的，就去逃避它</li>\n</ol>\n<p>之后还是要继续努力，也不指望自己一定能改掉这些或是非要与他人比肩，毕竟比以前的自己厉害一点就是了不得的成绩了。</p>\n<p>俗话说得好，<strong>芝麻开花节节高</strong>。</p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-01.png","popularPost_tmp_gaData":{"updated":"Mon Feb 28 2022 19:57:38 GMT+0800 (中国标准时间)","title":"我真的要走这条路吗？","path":"2022/02/28/do-i-really-want-to-go-this-way/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220228-01.png","excerpt":"<p>新的学期来临了，压力也在日益增加，不知道什么时候才能收获努力的结果。</p>\n<p>刚好今天是2月的最后一天，不如总结一下，研究生以来我的学习工作顺不顺利。</p>","date":{"_isAMomentObject":true,"_i":"2022-02-28T11:54:31.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-02-28T11:54:31.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Myself","tags":["研究","2021","2022","编程","前端"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2174},{"title":"Hexo博客写作","date":"2021-08-02T20:04:20.000Z","comments":1,"_content":"\n记录本博客的撰写过程，便于日后按图索骥。\n\n<!--more-->\n\n## 0 同步远程仓库（多端）\n\n在当前电脑的`hexo`文件夹（已`git init`和`remote`）下，打开`git bash`，依次执行：\n\n```bash\n$ git fetch --all\n$ git push origin hexo\n```\n\n以同步远程仓库代码。\n\n## 1 清除缓存\n\n`hexo`下执行：\n\n```bash\n$ hexo clean\n```\n\n清除`hexo/public`等缓存。可做可不做，但当页面改动较大时，或拉了代码时，建议做一下。\n\n## 2 新建md文档\n\n下述`hexo new`均可缩写为`hexo n`。\n\n### 2.1 新建文章\n\n`hexo`下执行：\n\n```bash\n$ hexo new [post] \"postName\"\n```\n\n`hexo`会在`/source/_posts`下新建文件`postName.md`，通常采用英文命名`postName`。\n\n### 2.2 新建页面\n\n`hexo`下执行：\n\n```bash\n$ hexo new page \"pageName\"\n```\n\n`hexo`会在`/source/pageName`下新建文件`index.md`。\n\n若要生成二级页面，则`hexo`下执行：\n\n```bash\n$ hexo new page --path about/me \"pageTitle\" #--path可缩写为-p\n```\n\n`hexo`会在`/source/about`下新建文件`me.md`，并将`title`命名为`pageTitle`，**注意`title`必须指定**。\n\n### 2.3 新建草稿\n\n`hexo`下执行：\n\n```bash\n$ hexo new draft \"draftName\"\n```\n\n`hexo`会在`/source/_drafts`下新建文件`draftName.md`。\n\n发表草稿时，用`publish`命令：\n\n```bash\n$ hexo publish [post/page] <fileName>\n```\n\n新建草稿一般不用，因为可以先写好Markdown然后再`new post`就好。\n\n## 3 编辑Front-matter\n\nFront-matter是文件最上方以`---`分隔的区域，一般来说完整应如下：\n\n```markdown\n---\ntitle: postTitle #标题，默认为文件名，一般会自行更改为中文的\ndate: 2021/08/01 11:45:14 #建立日期\nupdated: #更新日期\ncategories: #分类（page不适用）\ntags: #标签（page不适用）\ntype: #页面类型（仅page）\ndescription: #摘要，详细见第4节\ncomments: true #评论，默认为true\nlayout: post #布局，默认为post\nmathjax: false #LaTeX公式，默认为false\n---\n```\n\n### 3.1 标题\n\nhexo会把Markdown文档转化为html静态网页，因此要想实现文章标题与域名不同，可以通过以下方法\n\n- 文件名为`英文标题.md`的形式。*根据谷歌文档，建议使用`-`分隔单词，而不是`_`或驼峰式。*\n- Front-matter的`title`为实际的中文标题。\n\n这样文章域名就为`英文.html`，而标题为中文。\n\n### 3.2 日期\n\n- `date`：建立日期，自动生成，默认为Markdown文档建立日期。\n- `updated`：更新日期，不自动生成，但NexT主题会自动读取文档修改日期；可以自行添加或修改。\n\n### 3.3 分类\n\n单分类很简单，直接跟后面就行：\n\n```markdown\ncategories: Diary\n```\n\n表示分类为Diary。\n\n子分类用逗号表示，例如：\n\n```markdown\ncategories: [Diary, Life]\n```\n\n表示分类为Diary的子分类Life。*别忘了方括号，否则会被理解为一个分类，名为“Diary, Life”。*\n\n并列分类则使用列表形式，例如：\n\n```markdown\ncategories:\n\t- [Diary]\n\t- [Life]\n\t- [Music, Piano]\n```\n\n表示分类分别为“Diary”、“Life”和“Music的子分类Piano”这三个分类。\n\n~~好麻烦，所以应当提前有一个大体的分类思路。~~\n\n### 3.4 标签\n\n单标签也是直接输入就行。\n\n多标签有以下两种表示方法：\n\n```markdown\ntags: [C, Java, python]\n```\n\n或\n\n```markdown\ntags:\n\t- C\n\t- Java\n\t- python\n```\n\n**注意：设置分类、标签列表**\n\n打开`hexo`的`_config.yml`，对下面代码进行更改：\n\n```yaml\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\n\t编程: programming\n\t生活: life\n\t其他: other\ntag_map:\n```\n\n则可以更改对应分类、标签的访问路径。\n\n### 3.5 页面类型（NexT主题）\n\n对于page，可以设置`type`为有关类型：\n\n- `type: categories`：类型页面。\n- `type: tags`：标签页面。\n\n### 3.6 评论\n\n将`comments`设置为`true`即可，默认即为`true`，所以可以不加这一条。如果要关闭评论，则设置`false`即可。\n\npage的`comments`也是默认开启的，包括categories页面和tags页面！！！\n\n```markdown\ncomments: true\n```\n\n### 3.7 `layout`\n\n对于post，`layout`默认为`post`，因此一般不加。\n\n对于page，建议是在new完后，在`index.md`的Front-matter加上~~（好像不加也行）~~：\n\n```markdown\nlayout: page\n```\n\n以下设置不适用NexT主题，因此划掉。\n\n~~如果设置为`layout: tagcloud`则为标签云页面。~~\n\n~~如果设置为`layout: timeline`则为时间线页面，具体在`theme`的`_config.yml`设置。~~\n\n~~如果设置为`layout: single-column`则为单栏页面。~~\n\n### 3.8 数学公式\n\n将`mathjax`设置为`true`即可。\n\n```markdown\nmathjax: true\n```\n\n## 4 正文书写\n\n使用Markdown正常书写即可，参见《{% post_link markdown-basic-syntax-and-examples %}》。\n\n**注意文中不要出现两个大括号，或大括号与井号相连等与渲染语法冲突的情况。**\n\n```markdown\n}} # Bad\n} } # Good\n{# # Bad\n{ # # Good\n```\n\n### 4.1 摘要\n\n文章摘要有三种提取方法，优先级从高到低：\n\n- 提取Front-matter的`description`内容。*文字不多时用这种。*\n\n- 在文章合适部分加上`<!--more-->`，文章会被自动截断。*一般情况下或文字较多时用这种。*\n\n- 根据主题配置文件中的如下代码自动生成摘要。*不要用这种，观感会很差。*\n\n  ```yaml\n  auto_excerpt:\n  \tenable: true\n  \tlength: 150\n  ```\n\n### 4.2 标签插件\n\n标签插件用于在正文中以`{}`加`%`的格式，输入特定内容。\n\n#### 4.2.1 引用块\n\n语法如下：\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n**普通引用块**\n\n```\n{% blockquote %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n```\n\n{% blockquote %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n\n**引用加作者、来源**\n\n```\n{% blockquote 庄子, 《庄子·外篇·在宥》 %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n```\n\n{% blockquote 庄子, 《庄子·外篇·在宥》 %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n\n**引用自网址**\n\n```\n{% blockquote @央视新闻 https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&wvr=6&mod=weibotime&type=comment#_rnd1628758139404 新浪微博 %}\n8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。\n{% endblockquote %}\n```\n\n{% blockquote @央视新闻 https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&wvr=6&mod=weibotime&type=comment#_rnd1628758139404 新浪微博 %}\n8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。\n{% endblockquote %}\n\n**NexT还支持居中引用**\n\n```\n{% centerquote %}\nTomorrow will be fine.\n{% endcenterquote %}\n```\n\n{% centerquote %}\nTomorrow will be fine.\n{% endcenterquote %}\n\n#### 4.2.2 代码块\n\n语法如下：\n\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n```\n\n**普通代码块**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**指定语言**\n\n```\n{% codeblock lang:javascript %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock lang:javascript %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**代码标题、网址**\n\n```\n{% codeblock time.js http://jsrun.net/new 在线运行 %}\nvar time = new Date();\nconsole.log(time);\n{% endcodeblock %}\n```\n\n{% codeblock time.js http://jsrun.net/new 在线运行 %}\nvar time = new Date();\nconsole.log(time);\n{% endcodeblock %}\n\n#### 4.2.3 图片\n\n语法如下：\n\n```\n{% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %}\n```\n\n**固定大小的图片**\n\n```\n{% img https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg 200 100 '\"中国空间站\" \"天和核心舱\"' %}\n```\n\n{% img https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg 200 100 '\"中国空间站\" \"天和核心舱\"' %}\n\n#### 4.2.4 iFrame\n\n语法如下：\n\n```\n{% iframe url [width] [height] %}\n```\n\n**嵌入网易云音乐播放器**\n\n```\n{% iframe //music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66 330 86 %}\n```\n\n{% iframe //music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66 330 86 %}\n\n其实直接放HTML的`<iframe>`代码也可以：\n\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\"></iframe>\n```\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\"></iframe>\n\n**嵌入bilibili视频播放器**\n\n```\n{% iframe //player.bilibili.com/player.html?aid=92523122&bvid=BV1eE411H7XL&cid=157973222&page=1 %}\n```\n\n{% iframe //player.bilibili.com/player.html?aid=92523122&bvid=BV1eE411H7XL&cid=157973222&page=1 %}\n\n#### 4.2.5 引用文章\n\n引用其他文章的链接，语法为：\n\n```\n{% post_path filename %}\n{% post_link filename [title] [escape] %}\n```\n\n**链接使用文章标题**\n\n```\n{% post_link build-corecabin-in-one-week %}\n```\n\n{% post_link build-corecabin-in-one-week %}\n\n**链接使用自定义文字**\n\n```\n{% post_link build-corecabin-in-one-week '点击进入文章'%}\n```\n\n{% post_link build-corecabin-in-one-week '点击进入文章'%}\n\n**标题特殊字符转义、禁止转义（false）**\n\n```\n{% post_link hexo-4-released 'How to use <b> tag in title' %}\n{% post_link hexo-4-released '<b>bold</b> custom title' false %}\n```\n\n示例略\n\n#### 4.2.6 Bootstrap Callout（NexT主题）\n\n语法如下：\n\n```\n{% note class_name %} Content (md partial supported) {% endnote %}\n```\n\n`class_name`可以设置为`default`、`primary`、`success`、`info`、`warning`或`danger`。\n\n```\n{% note defalut %} **defalut** {% endnote %}\n{% note primary %} **primary** {% endnote %}\n{% note success %} **success** {% endnote %}\n{% note info %} **info** {% endnote %}\n{% note warning %} **warning** {% endnote %}\n{% note danger %} **danger** {% endnote %}\n```\n\n{% note defalut %} **defalut** {% endnote %}\n{% note primary %} **primary** {% endnote %}\n{% note success %} **success** {% endnote %}\n{% note info %} **info** {% endnote %}\n{% note warning %} **warning** {% endnote %}\n{% note danger %} **danger** {% endnote %}\n\n## 5 发布\n\n`hexo`下依次执行：\n\n```bash\n$ hexo generate #生成静态html到public\n$ hexo server #生成预览窗口（localhost:4000，ctrl+C停止）\n$ hexo deploy #部署到Github（上传public代码）\n```\n\n也可以缩写成\n\n```bash\n$ hexo g\n$ hexo s\n$ hexo d\n```\n\n大功告成！\n\n## 6 备份代码（多端）\n\n`hexo`下依次执行：\n\n```bash\n$ git add .\n$ git commit -m \"comments\"\n$ git push origin hexo\n```\n\n以更新远程仓库代码。\n\n## 7 多端管理说明\n\n考虑到适用GitHub托管hexo源码存在或多或少的问题，尤其是`git pull`和`git push`与GitHub连接的加载速度太慢~~（因为办公室非Chrome时科学上网比较困难）~~，所以可以使用如下方法：\n\n- 当临时出差时：\n\n  用Markdown写作，回来再`new post`。\n\n- 当长期不在时：\n\n  将整个`hexo`用U盘或其他方式拷贝到笔记本上~~（反正也才几十Mb）~~，然后在笔记本已安装hexo、设置好GitHub SSH密钥的情况下，执行`npm install`即可。此时可以通过`hexo s`查看是否成功。\n\n- 移动端时：\n\n  用Simplenote写Markdown，回来再`new post`。好像也有其他方法，但暂时不用。\n\n","source":"_posts/hexo-blog-writing.md","raw":"---\ntitle: Hexo博客写作\ndate: 2021-08-03 04:04:20\ncategories: Hexo\ntags:\n  - 博客\n  - Hexo\n  - 技术\n  - 技巧\ncomments: true\n---\n\n记录本博客的撰写过程，便于日后按图索骥。\n\n<!--more-->\n\n## 0 同步远程仓库（多端）\n\n在当前电脑的`hexo`文件夹（已`git init`和`remote`）下，打开`git bash`，依次执行：\n\n```bash\n$ git fetch --all\n$ git push origin hexo\n```\n\n以同步远程仓库代码。\n\n## 1 清除缓存\n\n`hexo`下执行：\n\n```bash\n$ hexo clean\n```\n\n清除`hexo/public`等缓存。可做可不做，但当页面改动较大时，或拉了代码时，建议做一下。\n\n## 2 新建md文档\n\n下述`hexo new`均可缩写为`hexo n`。\n\n### 2.1 新建文章\n\n`hexo`下执行：\n\n```bash\n$ hexo new [post] \"postName\"\n```\n\n`hexo`会在`/source/_posts`下新建文件`postName.md`，通常采用英文命名`postName`。\n\n### 2.2 新建页面\n\n`hexo`下执行：\n\n```bash\n$ hexo new page \"pageName\"\n```\n\n`hexo`会在`/source/pageName`下新建文件`index.md`。\n\n若要生成二级页面，则`hexo`下执行：\n\n```bash\n$ hexo new page --path about/me \"pageTitle\" #--path可缩写为-p\n```\n\n`hexo`会在`/source/about`下新建文件`me.md`，并将`title`命名为`pageTitle`，**注意`title`必须指定**。\n\n### 2.3 新建草稿\n\n`hexo`下执行：\n\n```bash\n$ hexo new draft \"draftName\"\n```\n\n`hexo`会在`/source/_drafts`下新建文件`draftName.md`。\n\n发表草稿时，用`publish`命令：\n\n```bash\n$ hexo publish [post/page] <fileName>\n```\n\n新建草稿一般不用，因为可以先写好Markdown然后再`new post`就好。\n\n## 3 编辑Front-matter\n\nFront-matter是文件最上方以`---`分隔的区域，一般来说完整应如下：\n\n```markdown\n---\ntitle: postTitle #标题，默认为文件名，一般会自行更改为中文的\ndate: 2021/08/01 11:45:14 #建立日期\nupdated: #更新日期\ncategories: #分类（page不适用）\ntags: #标签（page不适用）\ntype: #页面类型（仅page）\ndescription: #摘要，详细见第4节\ncomments: true #评论，默认为true\nlayout: post #布局，默认为post\nmathjax: false #LaTeX公式，默认为false\n---\n```\n\n### 3.1 标题\n\nhexo会把Markdown文档转化为html静态网页，因此要想实现文章标题与域名不同，可以通过以下方法\n\n- 文件名为`英文标题.md`的形式。*根据谷歌文档，建议使用`-`分隔单词，而不是`_`或驼峰式。*\n- Front-matter的`title`为实际的中文标题。\n\n这样文章域名就为`英文.html`，而标题为中文。\n\n### 3.2 日期\n\n- `date`：建立日期，自动生成，默认为Markdown文档建立日期。\n- `updated`：更新日期，不自动生成，但NexT主题会自动读取文档修改日期；可以自行添加或修改。\n\n### 3.3 分类\n\n单分类很简单，直接跟后面就行：\n\n```markdown\ncategories: Diary\n```\n\n表示分类为Diary。\n\n子分类用逗号表示，例如：\n\n```markdown\ncategories: [Diary, Life]\n```\n\n表示分类为Diary的子分类Life。*别忘了方括号，否则会被理解为一个分类，名为“Diary, Life”。*\n\n并列分类则使用列表形式，例如：\n\n```markdown\ncategories:\n\t- [Diary]\n\t- [Life]\n\t- [Music, Piano]\n```\n\n表示分类分别为“Diary”、“Life”和“Music的子分类Piano”这三个分类。\n\n~~好麻烦，所以应当提前有一个大体的分类思路。~~\n\n### 3.4 标签\n\n单标签也是直接输入就行。\n\n多标签有以下两种表示方法：\n\n```markdown\ntags: [C, Java, python]\n```\n\n或\n\n```markdown\ntags:\n\t- C\n\t- Java\n\t- python\n```\n\n**注意：设置分类、标签列表**\n\n打开`hexo`的`_config.yml`，对下面代码进行更改：\n\n```yaml\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\n\t编程: programming\n\t生活: life\n\t其他: other\ntag_map:\n```\n\n则可以更改对应分类、标签的访问路径。\n\n### 3.5 页面类型（NexT主题）\n\n对于page，可以设置`type`为有关类型：\n\n- `type: categories`：类型页面。\n- `type: tags`：标签页面。\n\n### 3.6 评论\n\n将`comments`设置为`true`即可，默认即为`true`，所以可以不加这一条。如果要关闭评论，则设置`false`即可。\n\npage的`comments`也是默认开启的，包括categories页面和tags页面！！！\n\n```markdown\ncomments: true\n```\n\n### 3.7 `layout`\n\n对于post，`layout`默认为`post`，因此一般不加。\n\n对于page，建议是在new完后，在`index.md`的Front-matter加上~~（好像不加也行）~~：\n\n```markdown\nlayout: page\n```\n\n以下设置不适用NexT主题，因此划掉。\n\n~~如果设置为`layout: tagcloud`则为标签云页面。~~\n\n~~如果设置为`layout: timeline`则为时间线页面，具体在`theme`的`_config.yml`设置。~~\n\n~~如果设置为`layout: single-column`则为单栏页面。~~\n\n### 3.8 数学公式\n\n将`mathjax`设置为`true`即可。\n\n```markdown\nmathjax: true\n```\n\n## 4 正文书写\n\n使用Markdown正常书写即可，参见《{% post_link markdown-basic-syntax-and-examples %}》。\n\n**注意文中不要出现两个大括号，或大括号与井号相连等与渲染语法冲突的情况。**\n\n```markdown\n}} # Bad\n} } # Good\n{# # Bad\n{ # # Good\n```\n\n### 4.1 摘要\n\n文章摘要有三种提取方法，优先级从高到低：\n\n- 提取Front-matter的`description`内容。*文字不多时用这种。*\n\n- 在文章合适部分加上`<!--more-->`，文章会被自动截断。*一般情况下或文字较多时用这种。*\n\n- 根据主题配置文件中的如下代码自动生成摘要。*不要用这种，观感会很差。*\n\n  ```yaml\n  auto_excerpt:\n  \tenable: true\n  \tlength: 150\n  ```\n\n### 4.2 标签插件\n\n标签插件用于在正文中以`{}`加`%`的格式，输入特定内容。\n\n#### 4.2.1 引用块\n\n语法如下：\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n**普通引用块**\n\n```\n{% blockquote %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n```\n\n{% blockquote %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n\n**引用加作者、来源**\n\n```\n{% blockquote 庄子, 《庄子·外篇·在宥》 %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n```\n\n{% blockquote 庄子, 《庄子·外篇·在宥》 %}\n闻在宥天下，不闻治天下也。\n{% endblockquote %}\n\n**引用自网址**\n\n```\n{% blockquote @央视新闻 https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&wvr=6&mod=weibotime&type=comment#_rnd1628758139404 新浪微博 %}\n8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。\n{% endblockquote %}\n```\n\n{% blockquote @央视新闻 https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&wvr=6&mod=weibotime&type=comment#_rnd1628758139404 新浪微博 %}\n8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。\n{% endblockquote %}\n\n**NexT还支持居中引用**\n\n```\n{% centerquote %}\nTomorrow will be fine.\n{% endcenterquote %}\n```\n\n{% centerquote %}\nTomorrow will be fine.\n{% endcenterquote %}\n\n#### 4.2.2 代码块\n\n语法如下：\n\n```\n{% codeblock [title] [lang:language] [url] [link text] [additional options] %}\ncode snippet\n{% endcodeblock %}\n```\n\n**普通代码块**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**指定语言**\n\n```\n{% codeblock lang:javascript %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock lang:javascript %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**代码标题、网址**\n\n```\n{% codeblock time.js http://jsrun.net/new 在线运行 %}\nvar time = new Date();\nconsole.log(time);\n{% endcodeblock %}\n```\n\n{% codeblock time.js http://jsrun.net/new 在线运行 %}\nvar time = new Date();\nconsole.log(time);\n{% endcodeblock %}\n\n#### 4.2.3 图片\n\n语法如下：\n\n```\n{% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %}\n```\n\n**固定大小的图片**\n\n```\n{% img https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg 200 100 '\"中国空间站\" \"天和核心舱\"' %}\n```\n\n{% img https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg 200 100 '\"中国空间站\" \"天和核心舱\"' %}\n\n#### 4.2.4 iFrame\n\n语法如下：\n\n```\n{% iframe url [width] [height] %}\n```\n\n**嵌入网易云音乐播放器**\n\n```\n{% iframe //music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66 330 86 %}\n```\n\n{% iframe //music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66 330 86 %}\n\n其实直接放HTML的`<iframe>`代码也可以：\n\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\"></iframe>\n```\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\"></iframe>\n\n**嵌入bilibili视频播放器**\n\n```\n{% iframe //player.bilibili.com/player.html?aid=92523122&bvid=BV1eE411H7XL&cid=157973222&page=1 %}\n```\n\n{% iframe //player.bilibili.com/player.html?aid=92523122&bvid=BV1eE411H7XL&cid=157973222&page=1 %}\n\n#### 4.2.5 引用文章\n\n引用其他文章的链接，语法为：\n\n```\n{% post_path filename %}\n{% post_link filename [title] [escape] %}\n```\n\n**链接使用文章标题**\n\n```\n{% post_link build-corecabin-in-one-week %}\n```\n\n{% post_link build-corecabin-in-one-week %}\n\n**链接使用自定义文字**\n\n```\n{% post_link build-corecabin-in-one-week '点击进入文章'%}\n```\n\n{% post_link build-corecabin-in-one-week '点击进入文章'%}\n\n**标题特殊字符转义、禁止转义（false）**\n\n```\n{% post_link hexo-4-released 'How to use <b> tag in title' %}\n{% post_link hexo-4-released '<b>bold</b> custom title' false %}\n```\n\n示例略\n\n#### 4.2.6 Bootstrap Callout（NexT主题）\n\n语法如下：\n\n```\n{% note class_name %} Content (md partial supported) {% endnote %}\n```\n\n`class_name`可以设置为`default`、`primary`、`success`、`info`、`warning`或`danger`。\n\n```\n{% note defalut %} **defalut** {% endnote %}\n{% note primary %} **primary** {% endnote %}\n{% note success %} **success** {% endnote %}\n{% note info %} **info** {% endnote %}\n{% note warning %} **warning** {% endnote %}\n{% note danger %} **danger** {% endnote %}\n```\n\n{% note defalut %} **defalut** {% endnote %}\n{% note primary %} **primary** {% endnote %}\n{% note success %} **success** {% endnote %}\n{% note info %} **info** {% endnote %}\n{% note warning %} **warning** {% endnote %}\n{% note danger %} **danger** {% endnote %}\n\n## 5 发布\n\n`hexo`下依次执行：\n\n```bash\n$ hexo generate #生成静态html到public\n$ hexo server #生成预览窗口（localhost:4000，ctrl+C停止）\n$ hexo deploy #部署到Github（上传public代码）\n```\n\n也可以缩写成\n\n```bash\n$ hexo g\n$ hexo s\n$ hexo d\n```\n\n大功告成！\n\n## 6 备份代码（多端）\n\n`hexo`下依次执行：\n\n```bash\n$ git add .\n$ git commit -m \"comments\"\n$ git push origin hexo\n```\n\n以更新远程仓库代码。\n\n## 7 多端管理说明\n\n考虑到适用GitHub托管hexo源码存在或多或少的问题，尤其是`git pull`和`git push`与GitHub连接的加载速度太慢~~（因为办公室非Chrome时科学上网比较困难）~~，所以可以使用如下方法：\n\n- 当临时出差时：\n\n  用Markdown写作，回来再`new post`。\n\n- 当长期不在时：\n\n  将整个`hexo`用U盘或其他方式拷贝到笔记本上~~（反正也才几十Mb）~~，然后在笔记本已安装hexo、设置好GitHub SSH密钥的情况下，执行`npm install`即可。此时可以通过`hexo s`查看是否成功。\n\n- 移动端时：\n\n  用Simplenote写Markdown，回来再`new post`。好像也有其他方法，但暂时不用。\n\n","slug":"hexo-blog-writing","published":1,"updated":"2021-08-22T14:14:10.792Z","layout":"post","photos":[],"link":"","_id":"cl06nlvtm0009f4vi08v8ffb4","content":"<p>记录本博客的撰写过程，便于日后按图索骥。</p>\n<span id=\"more\"></span>\n<h2 id=\"0-同步远程仓库（多端）\"><a href=\"#0-同步远程仓库（多端）\" class=\"headerlink\" title=\"0 同步远程仓库（多端）\"></a>0 同步远程仓库（多端）</h2><p>在当前电脑的<code>hexo</code>文件夹（已<code>git init</code>和<code>remote</code>）下，打开<code>git bash</code>，依次执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch --all</span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n<p>以同步远程仓库代码。</p>\n<h2 id=\"1-清除缓存\"><a href=\"#1-清除缓存\" class=\"headerlink\" title=\"1 清除缓存\"></a>1 清除缓存</h2><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除<code>hexo/public</code>等缓存。可做可不做，但当页面改动较大时，或拉了代码时，建议做一下。</p>\n<h2 id=\"2-新建md文档\"><a href=\"#2-新建md文档\" class=\"headerlink\" title=\"2 新建md文档\"></a>2 新建md文档</h2><p>下述<code>hexo new</code>均可缩写为<code>hexo n</code>。</p>\n<h3 id=\"2-1-新建文章\"><a href=\"#2-1-新建文章\" class=\"headerlink\" title=\"2.1 新建文章\"></a>2.1 新建文章</h3><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [post] <span class=\"string\">&quot;postName&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/_posts</code>下新建文件<code>postName.md</code>，通常采用英文命名<code>postName</code>。</p>\n<h3 id=\"2-2-新建页面\"><a href=\"#2-2-新建页面\" class=\"headerlink\" title=\"2.2 新建页面\"></a>2.2 新建页面</h3><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page <span class=\"string\">&quot;pageName&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/pageName</code>下新建文件<code>index.md</code>。</p>\n<p>若要生成二级页面，则<code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page --path about/me <span class=\"string\">&quot;pageTitle&quot;</span> <span class=\"comment\">#--path可缩写为-p</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/about</code>下新建文件<code>me.md</code>，并将<code>title</code>命名为<code>pageTitle</code>，<strong>注意<code>title</code>必须指定</strong>。</p>\n<h3 id=\"2-3-新建草稿\"><a href=\"#2-3-新建草稿\" class=\"headerlink\" title=\"2.3 新建草稿\"></a>2.3 新建草稿</h3><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new draft <span class=\"string\">&quot;draftName&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/_drafts</code>下新建文件<code>draftName.md</code>。</p>\n<p>发表草稿时，用<code>publish</code>命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [post/page] &lt;fileName&gt;</span><br></pre></td></tr></table></figure>\n<p>新建草稿一般不用，因为可以先写好Markdown然后再<code>new post</code>就好。</p>\n<h2 id=\"3-编辑Front-matter\"><a href=\"#3-编辑Front-matter\" class=\"headerlink\" title=\"3 编辑Front-matter\"></a>3 编辑Front-matter</h2><p>Front-matter是文件最上方以<code>---</code>分隔的区域，一般来说完整应如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: postTitle #标题，默认为文件名，一般会自行更改为中文的</span><br><span class=\"line\">date: 2021/08/01 11:45:14 #建立日期</span><br><span class=\"line\">updated: #更新日期</span><br><span class=\"line\">categories: #分类（page不适用）</span><br><span class=\"line\">tags: #标签（page不适用）</span><br><span class=\"line\">type: #页面类型（仅page）</span><br><span class=\"line\">description: #摘要，详细见第4节</span><br><span class=\"line\">comments: true #评论，默认为true</span><br><span class=\"line\">layout: post #布局，默认为post</span><br><span class=\"line\"><span class=\"section\">mathjax: false #LaTeX公式，默认为false</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-标题\"><a href=\"#3-1-标题\" class=\"headerlink\" title=\"3.1 标题\"></a>3.1 标题</h3><p>hexo会把Markdown文档转化为html静态网页，因此要想实现文章标题与域名不同，可以通过以下方法</p>\n<ul>\n<li>文件名为<code>英文标题.md</code>的形式。<em>根据谷歌文档，建议使用<code>-</code>分隔单词，而不是<code>_</code>或驼峰式。</em></li>\n<li>Front-matter的<code>title</code>为实际的中文标题。</li>\n</ul>\n<p>这样文章域名就为<code>英文.html</code>，而标题为中文。</p>\n<h3 id=\"3-2-日期\"><a href=\"#3-2-日期\" class=\"headerlink\" title=\"3.2 日期\"></a>3.2 日期</h3><ul>\n<li><code>date</code>：建立日期，自动生成，默认为Markdown文档建立日期。</li>\n<li><code>updated</code>：更新日期，不自动生成，但NexT主题会自动读取文档修改日期；可以自行添加或修改。</li>\n</ul>\n<h3 id=\"3-3-分类\"><a href=\"#3-3-分类\" class=\"headerlink\" title=\"3.3 分类\"></a>3.3 分类</h3><p>单分类很简单，直接跟后面就行：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories: Diary</span><br></pre></td></tr></table></figure>\n<p>表示分类为Diary。</p>\n<p>子分类用逗号表示，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories: [Diary, Life]</span><br></pre></td></tr></table></figure>\n<p>表示分类为Diary的子分类Life。<em>别忘了方括号，否则会被理解为一个分类，名为“Diary, Life”。</em></p>\n<p>并列分类则使用列表形式，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> [Diary]</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> [Life]</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> [Music, Piano]</span><br></pre></td></tr></table></figure>\n<p>表示分类分别为“Diary”、“Life”和“Music的子分类Piano”这三个分类。</p>\n<p><del>好麻烦，所以应当提前有一个大体的分类思路。</del></p>\n<h3 id=\"3-4-标签\"><a href=\"#3-4-标签\" class=\"headerlink\" title=\"3.4 标签\"></a>3.4 标签</h3><p>单标签也是直接输入就行。</p>\n<p>多标签有以下两种表示方法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags: [C, Java, python]</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags:</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> C</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> Java</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> python</span><br></pre></td></tr></table></figure>\n<p><strong>注意：设置分类、标签列表</strong></p>\n<p>打开<code>hexo</code>的<code>_config.yml</code>，对下面代码进行更改：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Category &amp; Tag</span></span><br><span class=\"line\"><span class=\"attr\">default_category:</span> <span class=\"string\">uncategorized</span></span><br><span class=\"line\"><span class=\"attr\">category_map:</span></span><br><span class=\"line\">\t<span class=\"string\">编程:</span> <span class=\"string\">programming</span></span><br><span class=\"line\">\t<span class=\"string\">生活:</span> <span class=\"string\">life</span></span><br><span class=\"line\">\t<span class=\"string\">其他:</span> <span class=\"string\">other</span></span><br><span class=\"line\"><span class=\"attr\">tag_map:</span></span><br></pre></td></tr></table></figure>\n<p>则可以更改对应分类、标签的访问路径。</p>\n<h3 id=\"3-5-页面类型（NexT主题）\"><a href=\"#3-5-页面类型（NexT主题）\" class=\"headerlink\" title=\"3.5 页面类型（NexT主题）\"></a>3.5 页面类型（NexT主题）</h3><p>对于page，可以设置<code>type</code>为有关类型：</p>\n<ul>\n<li><code>type: categories</code>：类型页面。</li>\n<li><code>type: tags</code>：标签页面。</li>\n</ul>\n<h3 id=\"3-6-评论\"><a href=\"#3-6-评论\" class=\"headerlink\" title=\"3.6 评论\"></a>3.6 评论</h3><p>将<code>comments</code>设置为<code>true</code>即可，默认即为<code>true</code>，所以可以不加这一条。如果要关闭评论，则设置<code>false</code>即可。</p>\n<p>page的<code>comments</code>也是默认开启的，包括categories页面和tags页面！！！</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comments: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-7-layout\"><a href=\"#3-7-layout\" class=\"headerlink\" title=\"3.7 layout\"></a>3.7 <code>layout</code></h3><p>对于post，<code>layout</code>默认为<code>post</code>，因此一般不加。</p>\n<p>对于page，建议是在new完后，在<code>index.md</code>的Front-matter加上<del>（好像不加也行）</del>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layout: page</span><br></pre></td></tr></table></figure>\n<p>以下设置不适用NexT主题，因此划掉。</p>\n<p><del>如果设置为<code>layout: tagcloud</code>则为标签云页面。</del></p>\n<p><del>如果设置为<code>layout: timeline</code>则为时间线页面，具体在<code>theme</code>的<code>_config.yml</code>设置。</del></p>\n<p><del>如果设置为<code>layout: single-column</code>则为单栏页面。</del></p>\n<h3 id=\"3-8-数学公式\"><a href=\"#3-8-数学公式\" class=\"headerlink\" title=\"3.8 数学公式\"></a>3.8 数学公式</h3><p>将<code>mathjax</code>设置为<code>true</code>即可。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mathjax: true</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-正文书写\"><a href=\"#4-正文书写\" class=\"headerlink\" title=\"4 正文书写\"></a>4 正文书写</h2><p>使用Markdown正常书写即可，参见《<a href=\"/2021/08/04/markdown-basic-syntax-and-examples/\" title=\"Markdown基本语法与示例\">Markdown基本语法与示例</a>》。</p>\n<p><strong>注意文中不要出现两个大括号，或大括号与井号相连等与渲染语法冲突的情况。</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;&#125; # Bad</span><br><span class=\"line\">&#125; &#125; # Good</span><br><span class=\"line\">&#123;# # Bad</span><br><span class=\"line\">&#123; # # Good</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-摘要\"><a href=\"#4-1-摘要\" class=\"headerlink\" title=\"4.1 摘要\"></a>4.1 摘要</h3><p>文章摘要有三种提取方法，优先级从高到低：</p>\n<ul>\n<li><p>提取Front-matter的<code>description</code>内容。<em>文字不多时用这种。</em></p>\n</li>\n<li><p>在文章合适部分加上<code>&lt;!--more--&gt;</code>，文章会被自动截断。<em>一般情况下或文字较多时用这种。</em></p>\n</li>\n<li><p>根据主题配置文件中的如下代码自动生成摘要。<em>不要用这种，观感会很差。</em></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">auto_excerpt:</span></span><br><span class=\"line\">\t<span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"attr\">length:</span> <span class=\"number\">150</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4-2-标签插件\"><a href=\"#4-2-标签插件\" class=\"headerlink\" title=\"4.2 标签插件\"></a>4.2 标签插件</h3><p>标签插件用于在正文中以<code>&#123;&#125;</code>加<code>%</code>的格式，输入特定内容。</p>\n<h4 id=\"4-2-1-引用块\"><a href=\"#4-2-1-引用块\" class=\"headerlink\" title=\"4.2.1 引用块\"></a>4.2.1 引用块</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>普通引用块</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">闻在宥天下，不闻治天下也。</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>闻在宥天下，不闻治天下也。</p>\n</blockquote>\n<p><strong>引用加作者、来源</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote 庄子, 《庄子·外篇·在宥》 %&#125;</span><br><span class=\"line\">闻在宥天下，不闻治天下也。</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>闻在宥天下，不闻治天下也。</p>\n<footer><strong>庄子</strong><cite>《庄子·外篇·在宥》</cite></footer></blockquote>\n<p><strong>引用自网址</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @央视新闻 https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&amp;wvr=6&amp;mod=weibotime&amp;type=comment#_rnd1628758139404 新浪微博 %&#125;</span><br><span class=\"line\">8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。</p>\n<footer><strong>@央视新闻</strong><cite><a href=\"https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&wvr=6&mod=weibotime&type=comment#_rnd1628758139404\">新浪微博</a></cite></footer></blockquote>\n<p><strong>NexT还支持居中引用</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% centerquote %&#125;</span><br><span class=\"line\">Tomorrow will be fine.</span><br><span class=\"line\">&#123;% endcenterquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote class=\"blockquote-center\">\n            <p>Tomorrow will be fine.</p>\n\n          </blockquote>\n<h4 id=\"4-2-2-代码块\"><a href=\"#4-2-2-代码块\" class=\"headerlink\" title=\"4.2.2 代码块\"></a>4.2.2 代码块</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>普通代码块</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure>\n<p><strong>指定语言</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:javascript %&#125;</span><br><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"string\">&#x27;Hello World!&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>代码标题、网址</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock time.js http://jsrun.net/new 在线运行 %&#125;</span><br><span class=\"line\">var time = new Date();</span><br><span class=\"line\">console.log(time);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><figcaption><span>time.js</span><a href=\"http://jsrun.net/new\">在线运行</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var time = new Date();</span><br><span class=\"line\">console.log(time);</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-2-3-图片\"><a href=\"#4-2-3-图片\" class=\"headerlink\" title=\"4.2.3 图片\"></a>4.2.3 图片</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] &#x27;&quot;title text&quot; &quot;alt text&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>固定大小的图片</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% img https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg 200 100 &#x27;&quot;中国空间站&quot; &quot;天和核心舱&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg\" class=\"\" width=\"200\" height=\"100\" title=\"中国空间站\" alt=\"天和核心舱\">\n<h4 id=\"4-2-4-iFrame\"><a href=\"#4-2-4-iFrame\" class=\"headerlink\" title=\"4.2.4 iFrame\"></a>4.2.4 iFrame</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>嵌入网易云音乐播放器</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe //music.163.com/outchain/player?type=2&amp;id=1425676569&amp;auto=0&amp;height=66 330 86 %&#125;</span><br></pre></td></tr></table></figure>\n<iframe src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\" width=\"330\" height=\"86\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n<p>其实直接放HTML的<code>&lt;iframe&gt;</code>代码也可以：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//music.163.com/outchain/player?type=2&amp;id=1425676569&amp;auto=0&amp;height=66&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\"></iframe>\n\n<p><strong>嵌入bilibili视频播放器</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe //player.bilibili.com/player.html?aid=92523122&amp;bvid=BV1eE411H7XL&amp;cid=157973222&amp;page=1 %&#125;</span><br></pre></td></tr></table></figure>\n<iframe src=\"//player.bilibili.com/player.html?aid=92523122&bvid=BV1eE411H7XL&cid=157973222&page=1\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n<h4 id=\"4-2-5-引用文章\"><a href=\"#4-2-5-引用文章\" class=\"headerlink\" title=\"4.2.5 引用文章\"></a>4.2.5 引用文章</h4><p>引用其他文章的链接，语法为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_path filename %&#125;</span><br><span class=\"line\">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>链接使用文章标题</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_link build-corecabin-in-one-week %&#125;</span><br></pre></td></tr></table></figure>\n<a href=\"/2021/08/03/build-corecabin-in-one-week/\" title=\"如何在一周内建造核心舱\">如何在一周内建造核心舱</a>\n<p><strong>链接使用自定义文字</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_link build-corecabin-in-one-week &#x27;点击进入文章&#x27;%&#125;</span><br></pre></td></tr></table></figure>\n<a href=\"/2021/08/03/build-corecabin-in-one-week/\" title=\"点击进入文章\">点击进入文章</a>\n<p><strong>标题特殊字符转义、禁止转义（false）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_link hexo-4-released &#x27;How to use &lt;b&gt; tag in title&#x27; %&#125;</span><br><span class=\"line\">&#123;% post_link hexo-4-released &#x27;&lt;b&gt;bold&lt;/b&gt; custom title&#x27; false %&#125;</span><br></pre></td></tr></table></figure>\n<p>示例略</p>\n<h4 id=\"4-2-6-Bootstrap-Callout（NexT主题）\"><a href=\"#4-2-6-Bootstrap-Callout（NexT主题）\" class=\"headerlink\" title=\"4.2.6 Bootstrap Callout（NexT主题）\"></a>4.2.6 Bootstrap Callout（NexT主题）</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p><code>class_name</code>可以设置为<code>default</code>、<code>primary</code>、<code>success</code>、<code>info</code>、<code>warning</code>或<code>danger</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note defalut %&#125; **defalut** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note primary %&#125; **primary** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note success %&#125; **success** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note info %&#125; **info** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note warning %&#125; **warning** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note danger %&#125; **danger** &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note defalut\">\n            <p><strong>defalut</strong> </p>\n          </div>\n<div class=\"note primary\">\n            <p><strong>primary</strong> </p>\n          </div>\n<div class=\"note success\">\n            <p><strong>success</strong> </p>\n          </div>\n<div class=\"note info\">\n            <p><strong>info</strong> </p>\n          </div>\n<div class=\"note warning\">\n            <p><strong>warning</strong> </p>\n          </div>\n<div class=\"note danger\">\n            <p><strong>danger</strong> </p>\n          </div>\n<h2 id=\"5-发布\"><a href=\"#5-发布\" class=\"headerlink\" title=\"5 发布\"></a>5 发布</h2><p><code>hexo</code>下依次执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate <span class=\"comment\">#生成静态html到public</span></span><br><span class=\"line\">$ hexo server <span class=\"comment\">#生成预览窗口（localhost:4000，ctrl+C停止）</span></span><br><span class=\"line\">$ hexo deploy <span class=\"comment\">#部署到Github（上传public代码）</span></span><br></pre></td></tr></table></figure>\n<p>也可以缩写成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo s</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<p>大功告成！</p>\n<h2 id=\"6-备份代码（多端）\"><a href=\"#6-备份代码（多端）\" class=\"headerlink\" title=\"6 备份代码（多端）\"></a>6 备份代码（多端）</h2><p><code>hexo</code>下依次执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">&quot;comments&quot;</span></span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n<p>以更新远程仓库代码。</p>\n<h2 id=\"7-多端管理说明\"><a href=\"#7-多端管理说明\" class=\"headerlink\" title=\"7 多端管理说明\"></a>7 多端管理说明</h2><p>考虑到适用GitHub托管hexo源码存在或多或少的问题，尤其是<code>git pull</code>和<code>git push</code>与GitHub连接的加载速度太慢<del>（因为办公室非Chrome时科学上网比较困难）</del>，所以可以使用如下方法：</p>\n<ul>\n<li><p>当临时出差时：</p>\n<p>用Markdown写作，回来再<code>new post</code>。</p>\n</li>\n<li><p>当长期不在时：</p>\n<p>将整个<code>hexo</code>用U盘或其他方式拷贝到笔记本上<del>（反正也才几十Mb）</del>，然后在笔记本已安装hexo、设置好GitHub SSH密钥的情况下，执行<code>npm install</code>即可。此时可以通过<code>hexo s</code>查看是否成功。</p>\n</li>\n<li><p>移动端时：</p>\n<p>用Simplenote写Markdown，回来再<code>new post</code>。好像也有其他方法，但暂时不用。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>记录本博客的撰写过程，便于日后按图索骥。</p>","more":"<h2 id=\"0-同步远程仓库（多端）\"><a href=\"#0-同步远程仓库（多端）\" class=\"headerlink\" title=\"0 同步远程仓库（多端）\"></a>0 同步远程仓库（多端）</h2><p>在当前电脑的<code>hexo</code>文件夹（已<code>git init</code>和<code>remote</code>）下，打开<code>git bash</code>，依次执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch --all</span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n<p>以同步远程仓库代码。</p>\n<h2 id=\"1-清除缓存\"><a href=\"#1-清除缓存\" class=\"headerlink\" title=\"1 清除缓存\"></a>1 清除缓存</h2><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除<code>hexo/public</code>等缓存。可做可不做，但当页面改动较大时，或拉了代码时，建议做一下。</p>\n<h2 id=\"2-新建md文档\"><a href=\"#2-新建md文档\" class=\"headerlink\" title=\"2 新建md文档\"></a>2 新建md文档</h2><p>下述<code>hexo new</code>均可缩写为<code>hexo n</code>。</p>\n<h3 id=\"2-1-新建文章\"><a href=\"#2-1-新建文章\" class=\"headerlink\" title=\"2.1 新建文章\"></a>2.1 新建文章</h3><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [post] <span class=\"string\">&quot;postName&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/_posts</code>下新建文件<code>postName.md</code>，通常采用英文命名<code>postName</code>。</p>\n<h3 id=\"2-2-新建页面\"><a href=\"#2-2-新建页面\" class=\"headerlink\" title=\"2.2 新建页面\"></a>2.2 新建页面</h3><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page <span class=\"string\">&quot;pageName&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/pageName</code>下新建文件<code>index.md</code>。</p>\n<p>若要生成二级页面，则<code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page --path about/me <span class=\"string\">&quot;pageTitle&quot;</span> <span class=\"comment\">#--path可缩写为-p</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/about</code>下新建文件<code>me.md</code>，并将<code>title</code>命名为<code>pageTitle</code>，<strong>注意<code>title</code>必须指定</strong>。</p>\n<h3 id=\"2-3-新建草稿\"><a href=\"#2-3-新建草稿\" class=\"headerlink\" title=\"2.3 新建草稿\"></a>2.3 新建草稿</h3><p><code>hexo</code>下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new draft <span class=\"string\">&quot;draftName&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>hexo</code>会在<code>/source/_drafts</code>下新建文件<code>draftName.md</code>。</p>\n<p>发表草稿时，用<code>publish</code>命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [post/page] &lt;fileName&gt;</span><br></pre></td></tr></table></figure>\n<p>新建草稿一般不用，因为可以先写好Markdown然后再<code>new post</code>就好。</p>\n<h2 id=\"3-编辑Front-matter\"><a href=\"#3-编辑Front-matter\" class=\"headerlink\" title=\"3 编辑Front-matter\"></a>3 编辑Front-matter</h2><p>Front-matter是文件最上方以<code>---</code>分隔的区域，一般来说完整应如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: postTitle #标题，默认为文件名，一般会自行更改为中文的</span><br><span class=\"line\">date: 2021/08/01 11:45:14 #建立日期</span><br><span class=\"line\">updated: #更新日期</span><br><span class=\"line\">categories: #分类（page不适用）</span><br><span class=\"line\">tags: #标签（page不适用）</span><br><span class=\"line\">type: #页面类型（仅page）</span><br><span class=\"line\">description: #摘要，详细见第4节</span><br><span class=\"line\">comments: true #评论，默认为true</span><br><span class=\"line\">layout: post #布局，默认为post</span><br><span class=\"line\"><span class=\"section\">mathjax: false #LaTeX公式，默认为false</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-标题\"><a href=\"#3-1-标题\" class=\"headerlink\" title=\"3.1 标题\"></a>3.1 标题</h3><p>hexo会把Markdown文档转化为html静态网页，因此要想实现文章标题与域名不同，可以通过以下方法</p>\n<ul>\n<li>文件名为<code>英文标题.md</code>的形式。<em>根据谷歌文档，建议使用<code>-</code>分隔单词，而不是<code>_</code>或驼峰式。</em></li>\n<li>Front-matter的<code>title</code>为实际的中文标题。</li>\n</ul>\n<p>这样文章域名就为<code>英文.html</code>，而标题为中文。</p>\n<h3 id=\"3-2-日期\"><a href=\"#3-2-日期\" class=\"headerlink\" title=\"3.2 日期\"></a>3.2 日期</h3><ul>\n<li><code>date</code>：建立日期，自动生成，默认为Markdown文档建立日期。</li>\n<li><code>updated</code>：更新日期，不自动生成，但NexT主题会自动读取文档修改日期；可以自行添加或修改。</li>\n</ul>\n<h3 id=\"3-3-分类\"><a href=\"#3-3-分类\" class=\"headerlink\" title=\"3.3 分类\"></a>3.3 分类</h3><p>单分类很简单，直接跟后面就行：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories: Diary</span><br></pre></td></tr></table></figure>\n<p>表示分类为Diary。</p>\n<p>子分类用逗号表示，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories: [Diary, Life]</span><br></pre></td></tr></table></figure>\n<p>表示分类为Diary的子分类Life。<em>别忘了方括号，否则会被理解为一个分类，名为“Diary, Life”。</em></p>\n<p>并列分类则使用列表形式，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> [Diary]</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> [Life]</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> [Music, Piano]</span><br></pre></td></tr></table></figure>\n<p>表示分类分别为“Diary”、“Life”和“Music的子分类Piano”这三个分类。</p>\n<p><del>好麻烦，所以应当提前有一个大体的分类思路。</del></p>\n<h3 id=\"3-4-标签\"><a href=\"#3-4-标签\" class=\"headerlink\" title=\"3.4 标签\"></a>3.4 标签</h3><p>单标签也是直接输入就行。</p>\n<p>多标签有以下两种表示方法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags: [C, Java, python]</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags:</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> C</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> Java</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> python</span><br></pre></td></tr></table></figure>\n<p><strong>注意：设置分类、标签列表</strong></p>\n<p>打开<code>hexo</code>的<code>_config.yml</code>，对下面代码进行更改：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Category &amp; Tag</span></span><br><span class=\"line\"><span class=\"attr\">default_category:</span> <span class=\"string\">uncategorized</span></span><br><span class=\"line\"><span class=\"attr\">category_map:</span></span><br><span class=\"line\">\t<span class=\"string\">编程:</span> <span class=\"string\">programming</span></span><br><span class=\"line\">\t<span class=\"string\">生活:</span> <span class=\"string\">life</span></span><br><span class=\"line\">\t<span class=\"string\">其他:</span> <span class=\"string\">other</span></span><br><span class=\"line\"><span class=\"attr\">tag_map:</span></span><br></pre></td></tr></table></figure>\n<p>则可以更改对应分类、标签的访问路径。</p>\n<h3 id=\"3-5-页面类型（NexT主题）\"><a href=\"#3-5-页面类型（NexT主题）\" class=\"headerlink\" title=\"3.5 页面类型（NexT主题）\"></a>3.5 页面类型（NexT主题）</h3><p>对于page，可以设置<code>type</code>为有关类型：</p>\n<ul>\n<li><code>type: categories</code>：类型页面。</li>\n<li><code>type: tags</code>：标签页面。</li>\n</ul>\n<h3 id=\"3-6-评论\"><a href=\"#3-6-评论\" class=\"headerlink\" title=\"3.6 评论\"></a>3.6 评论</h3><p>将<code>comments</code>设置为<code>true</code>即可，默认即为<code>true</code>，所以可以不加这一条。如果要关闭评论，则设置<code>false</code>即可。</p>\n<p>page的<code>comments</code>也是默认开启的，包括categories页面和tags页面！！！</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comments: true</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-7-layout\"><a href=\"#3-7-layout\" class=\"headerlink\" title=\"3.7 layout\"></a>3.7 <code>layout</code></h3><p>对于post，<code>layout</code>默认为<code>post</code>，因此一般不加。</p>\n<p>对于page，建议是在new完后，在<code>index.md</code>的Front-matter加上<del>（好像不加也行）</del>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layout: page</span><br></pre></td></tr></table></figure>\n<p>以下设置不适用NexT主题，因此划掉。</p>\n<p><del>如果设置为<code>layout: tagcloud</code>则为标签云页面。</del></p>\n<p><del>如果设置为<code>layout: timeline</code>则为时间线页面，具体在<code>theme</code>的<code>_config.yml</code>设置。</del></p>\n<p><del>如果设置为<code>layout: single-column</code>则为单栏页面。</del></p>\n<h3 id=\"3-8-数学公式\"><a href=\"#3-8-数学公式\" class=\"headerlink\" title=\"3.8 数学公式\"></a>3.8 数学公式</h3><p>将<code>mathjax</code>设置为<code>true</code>即可。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mathjax: true</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-正文书写\"><a href=\"#4-正文书写\" class=\"headerlink\" title=\"4 正文书写\"></a>4 正文书写</h2><p>使用Markdown正常书写即可，参见《<a href=\"/2021/08/04/markdown-basic-syntax-and-examples/\" title=\"Markdown基本语法与示例\">Markdown基本语法与示例</a>》。</p>\n<p><strong>注意文中不要出现两个大括号，或大括号与井号相连等与渲染语法冲突的情况。</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;&#125; # Bad</span><br><span class=\"line\">&#125; &#125; # Good</span><br><span class=\"line\">&#123;# # Bad</span><br><span class=\"line\">&#123; # # Good</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-摘要\"><a href=\"#4-1-摘要\" class=\"headerlink\" title=\"4.1 摘要\"></a>4.1 摘要</h3><p>文章摘要有三种提取方法，优先级从高到低：</p>\n<ul>\n<li><p>提取Front-matter的<code>description</code>内容。<em>文字不多时用这种。</em></p>\n</li>\n<li><p>在文章合适部分加上<code>&lt;!--more--&gt;</code>，文章会被自动截断。<em>一般情况下或文字较多时用这种。</em></p>\n</li>\n<li><p>根据主题配置文件中的如下代码自动生成摘要。<em>不要用这种，观感会很差。</em></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">auto_excerpt:</span></span><br><span class=\"line\">\t<span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"attr\">length:</span> <span class=\"number\">150</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4-2-标签插件\"><a href=\"#4-2-标签插件\" class=\"headerlink\" title=\"4.2 标签插件\"></a>4.2 标签插件</h3><p>标签插件用于在正文中以<code>&#123;&#125;</code>加<code>%</code>的格式，输入特定内容。</p>\n<h4 id=\"4-2-1-引用块\"><a href=\"#4-2-1-引用块\" class=\"headerlink\" title=\"4.2.1 引用块\"></a>4.2.1 引用块</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>普通引用块</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">闻在宥天下，不闻治天下也。</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>闻在宥天下，不闻治天下也。</p>\n</blockquote>\n<p><strong>引用加作者、来源</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote 庄子, 《庄子·外篇·在宥》 %&#125;</span><br><span class=\"line\">闻在宥天下，不闻治天下也。</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>闻在宥天下，不闻治天下也。</p>\n<footer><strong>庄子</strong><cite>《庄子·外篇·在宥》</cite></footer></blockquote>\n<p><strong>引用自网址</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @央视新闻 https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&amp;wvr=6&amp;mod=weibotime&amp;type=comment#_rnd1628758139404 新浪微博 %&#125;</span><br><span class=\"line\">8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>8月11日0-24时，湖北省新增新冠肺炎确诊病例10例。</p>\n<footer><strong>@央视新闻</strong><cite><a href=\"https://weibo.com/2656274875/Kt4FMdzB5?from=page_1002062656274875_profile&wvr=6&mod=weibotime&type=comment#_rnd1628758139404\">新浪微博</a></cite></footer></blockquote>\n<p><strong>NexT还支持居中引用</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% centerquote %&#125;</span><br><span class=\"line\">Tomorrow will be fine.</span><br><span class=\"line\">&#123;% endcenterquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote class=\"blockquote-center\">\n            <p>Tomorrow will be fine.</p>\n\n          </blockquote>\n<h4 id=\"4-2-2-代码块\"><a href=\"#4-2-2-代码块\" class=\"headerlink\" title=\"4.2.2 代码块\"></a>4.2.2 代码块</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>普通代码块</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure>\n<p><strong>指定语言</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:javascript %&#125;</span><br><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"string\">&#x27;Hello World!&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>代码标题、网址</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock time.js http://jsrun.net/new 在线运行 %&#125;</span><br><span class=\"line\">var time = new Date();</span><br><span class=\"line\">console.log(time);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><figcaption><span>time.js</span><a href=\"http://jsrun.net/new\">在线运行</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var time = new Date();</span><br><span class=\"line\">console.log(time);</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-2-3-图片\"><a href=\"#4-2-3-图片\" class=\"headerlink\" title=\"4.2.3 图片\"></a>4.2.3 图片</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] /path/to/image [width] [height] &#x27;&quot;title text&quot; &quot;alt text&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>固定大小的图片</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% img https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg 200 100 &#x27;&quot;中国空间站&quot; &quot;天和核心舱&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg\" class=\"\" width=\"200\" height=\"100\" title=\"中国空间站\" alt=\"天和核心舱\">\n<h4 id=\"4-2-4-iFrame\"><a href=\"#4-2-4-iFrame\" class=\"headerlink\" title=\"4.2.4 iFrame\"></a>4.2.4 iFrame</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>嵌入网易云音乐播放器</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe //music.163.com/outchain/player?type=2&amp;id=1425676569&amp;auto=0&amp;height=66 330 86 %&#125;</span><br></pre></td></tr></table></figure>\n<iframe src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\" width=\"330\" height=\"86\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n<p>其实直接放HTML的<code>&lt;iframe&gt;</code>代码也可以：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//music.163.com/outchain/player?type=2&amp;id=1425676569&amp;auto=0&amp;height=66&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1425676569&auto=0&height=66\"></iframe>\n\n<p><strong>嵌入bilibili视频播放器</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe //player.bilibili.com/player.html?aid=92523122&amp;bvid=BV1eE411H7XL&amp;cid=157973222&amp;page=1 %&#125;</span><br></pre></td></tr></table></figure>\n<iframe src=\"//player.bilibili.com/player.html?aid=92523122&bvid=BV1eE411H7XL&cid=157973222&page=1\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n<h4 id=\"4-2-5-引用文章\"><a href=\"#4-2-5-引用文章\" class=\"headerlink\" title=\"4.2.5 引用文章\"></a>4.2.5 引用文章</h4><p>引用其他文章的链接，语法为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_path filename %&#125;</span><br><span class=\"line\">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>链接使用文章标题</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_link build-corecabin-in-one-week %&#125;</span><br></pre></td></tr></table></figure>\n<a href=\"/2021/08/03/build-corecabin-in-one-week/\" title=\"如何在一周内建造核心舱\">如何在一周内建造核心舱</a>\n<p><strong>链接使用自定义文字</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_link build-corecabin-in-one-week &#x27;点击进入文章&#x27;%&#125;</span><br></pre></td></tr></table></figure>\n<a href=\"/2021/08/03/build-corecabin-in-one-week/\" title=\"点击进入文章\">点击进入文章</a>\n<p><strong>标题特殊字符转义、禁止转义（false）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_link hexo-4-released &#x27;How to use &lt;b&gt; tag in title&#x27; %&#125;</span><br><span class=\"line\">&#123;% post_link hexo-4-released &#x27;&lt;b&gt;bold&lt;/b&gt; custom title&#x27; false %&#125;</span><br></pre></td></tr></table></figure>\n<p>示例略</p>\n<h4 id=\"4-2-6-Bootstrap-Callout（NexT主题）\"><a href=\"#4-2-6-Bootstrap-Callout（NexT主题）\" class=\"headerlink\" title=\"4.2.6 Bootstrap Callout（NexT主题）\"></a>4.2.6 Bootstrap Callout（NexT主题）</h4><p>语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p><code>class_name</code>可以设置为<code>default</code>、<code>primary</code>、<code>success</code>、<code>info</code>、<code>warning</code>或<code>danger</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note defalut %&#125; **defalut** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note primary %&#125; **primary** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note success %&#125; **success** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note info %&#125; **info** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note warning %&#125; **warning** &#123;% endnote %&#125;</span><br><span class=\"line\">&#123;% note danger %&#125; **danger** &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note defalut\">\n            <p><strong>defalut</strong> </p>\n          </div>\n<div class=\"note primary\">\n            <p><strong>primary</strong> </p>\n          </div>\n<div class=\"note success\">\n            <p><strong>success</strong> </p>\n          </div>\n<div class=\"note info\">\n            <p><strong>info</strong> </p>\n          </div>\n<div class=\"note warning\">\n            <p><strong>warning</strong> </p>\n          </div>\n<div class=\"note danger\">\n            <p><strong>danger</strong> </p>\n          </div>\n<h2 id=\"5-发布\"><a href=\"#5-发布\" class=\"headerlink\" title=\"5 发布\"></a>5 发布</h2><p><code>hexo</code>下依次执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate <span class=\"comment\">#生成静态html到public</span></span><br><span class=\"line\">$ hexo server <span class=\"comment\">#生成预览窗口（localhost:4000，ctrl+C停止）</span></span><br><span class=\"line\">$ hexo deploy <span class=\"comment\">#部署到Github（上传public代码）</span></span><br></pre></td></tr></table></figure>\n<p>也可以缩写成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo s</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<p>大功告成！</p>\n<h2 id=\"6-备份代码（多端）\"><a href=\"#6-备份代码（多端）\" class=\"headerlink\" title=\"6 备份代码（多端）\"></a>6 备份代码（多端）</h2><p><code>hexo</code>下依次执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">&quot;comments&quot;</span></span><br><span class=\"line\">$ git push origin hexo</span><br></pre></td></tr></table></figure>\n<p>以更新远程仓库代码。</p>\n<h2 id=\"7-多端管理说明\"><a href=\"#7-多端管理说明\" class=\"headerlink\" title=\"7 多端管理说明\"></a>7 多端管理说明</h2><p>考虑到适用GitHub托管hexo源码存在或多或少的问题，尤其是<code>git pull</code>和<code>git push</code>与GitHub连接的加载速度太慢<del>（因为办公室非Chrome时科学上网比较困难）</del>，所以可以使用如下方法：</p>\n<ul>\n<li><p>当临时出差时：</p>\n<p>用Markdown写作，回来再<code>new post</code>。</p>\n</li>\n<li><p>当长期不在时：</p>\n<p>将整个<code>hexo</code>用U盘或其他方式拷贝到笔记本上<del>（反正也才几十Mb）</del>，然后在笔记本已安装hexo、设置好GitHub SSH密钥的情况下，执行<code>npm install</code>即可。此时可以通过<code>hexo s</code>查看是否成功。</p>\n</li>\n<li><p>移动端时：</p>\n<p>用Simplenote写Markdown，回来再<code>new post</code>。好像也有其他方法，但暂时不用。</p>\n</li>\n</ul>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg","popularPost_tmp_gaData":{"updated":"Sun Aug 22 2021 22:14:10 GMT+0800 (中国标准时间)","title":"Hexo博客写作","path":"2021/08/03/hexo-blog-writing/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg","excerpt":"<p>记录本博客的撰写过程，便于日后按图索骥。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-02T20:04:20.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-02T20:04:20.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Hexo","tags":["博客","Hexo","技术","技巧"],"internalLinks":["2021/08/04/markdown-basic-syntax-and-examples/","2021/08/03/build-corecabin-in-one-week/","2021/08/03/build-corecabin-in-one-week/"],"keywords":[],"keywordsLength":0},"length":6229},{"title":"JavaScript中布尔值为false的几种情况","date":"2021-12-13T01:47:52.000Z","comments":1,"_content":"\n前端开发经常需要用到`if`判断，下文归纳JavaScript中布尔值为`false`的几种情况，便于今后开发使用。\n\n<!--more-->\n\n## 1 一共六种情况\n\n1. `undefined`：未定义\n2. `null`：空值\n3. `false`：布尔值`false`，注意字符串`'false'`为`true`\n4. 0：数字0，注意字符串`'0'`为`true`\n5. `NaN`：非数值，例如`Math.log(-1)`，注意`typeof NaN`为`number`\n6. `\"\"`或`''`：空字符串，注意空格字符串`' '`为`true`\n\n## 2 不同数据类型转换为`false`的情况\n\n| 数据类型  |              转换为`true`               |  转换为`false`   |\n| :-------: | :-------------------------------------: | :--------------: |\n|  Boolean  |                 `true`                  |     `false`      |\n|  String   |             任何非空字符串              | `''`（空字符串） |\n|  Number   | 任何非零数值（包括`Infinity`，如`1/0`） |     0和`NaN`     |\n|  Object   | 任何对象（包括空数组`[]`、空对象`{}`）  |      `null`      |\n| Undefined |                    /                    |   `undefined`    |\n\n**说明：**\n\n1. 使用取反运算符`!`和`!!`可将任何数据类型转换为布尔值，`!!`为本身代表的布尔值，`!`为相反布尔值。\n\n   例如`1-2`为`-1`，`!(1-2)`为`false`，`!!(1-2)`为`true`。\n\n2. 以下是一些数据的求布尔值结果：\n\n   ```javascript\n   console.log(false);\t// false\n   console.log(!!0);\t// false\n   console.log(!!'');\t// false\n   console.log(!!null);\t// false\n   console.log(!!undefined);\t// false\n   console.log(!!NaN);\t// false\n   console.log(!!Infinity);\t// true\n   console.log(!!{});\t// true\n   console.log(!![]);\t//true\n   ```\n\n## 3 对空数组和空对象做判断\n\n有时候需要对某个数组或对象做判断，判断其是否为空，可以通过如下方式：\n\n1. 使用`length`属性，适用于数组，如：\n\n   ```javascript\n   let array1 = [];\n   let array2 = [1, 2];\n   if (array1.length) console.log('array1 not empty');\n   if (array2.length) console.log('array2 not empty');\t// array2 not empty\n   ```\n\n2. 使用`for-in`遍历和`hasOwnProperty`判断，并把遍历结果写成函数，适用于数组和对象，如：\n\n   ```javascript\n   let array1 = [];\n   let array2 = [1, 2];\n   let obj1 = {};\n   let obj2 = {x: 1, y: 2};\n   function isEmpty(obj) {\n     for (let key in obj) {\n       if (obj.hasOwnProperty(key)) {\n         return false;\n       }\n     }\n     return true;\n   }\n   if (isEmpty(array1)) console.log('array1 is empty');\t// array1 is empty\n   if (isEmpty(array2)) console.log('array2 is empty');\n   if (isEmpty(obj1)) console.log('obj1 is empty');\t// obj1 is empty\n   if (isEmpty(obj2)) console.log('obj2 is empty');\n   ```\n\n## 4 出现`undefined`的几种情况\n\n1. 变量未定义，注意这种情况现在会报错\n\n   ```javascript\n   console.log(a);\t// ReferenceError: a is not defined\n   ```\n\n2. 变量定义后未赋值\n\n   ```javascript\n   let x;\n   console.log(x);\t// undefined\n   ```\n\n3. 函数形参未传值\n\n   ```javascript\n   function fun(x, y) {\n     console.log('x = ' + x);\n     console.log('y = ' + y);\n   }\n   fun(1);\n   // x = 1\n   // y = undefined\n   ```\n\n4. 函数未`return`\n\n   ```javascript\n   function fun() {}\n   console.log(fun());\t// undefined\n   ```\n\n5. 函数`return`没有值\n\n   ```javascript\n   function fun() {\n     return;\n   }\n   console.log(fun());\t// undefined\n   ```\n\n6. 对象的属性或方法不存在\n\n   ```javascript\n   let obj = {x: 1, y: 2};\n   console.log(obj.z);\t// undefined\n   ```\n\n7. 数组下标越界\n\n   ```javascript\n   let array = [1, 2, 3];\n   console.log(array[5]);\t// undefined\n   console.log(array[1.5]);\t// undefined\n   console.log(array[-1]);\t// undefined\n   ```\n\n8. 数组`find`方法未找到元素\n\n   ```javascript\n   let array = [{id: 1, name: 'a'}, {id: 2, name: 'b'}];\n   console.log(array.find(item => item.id === 3));\t// undefined\n   ```\n\n## 5 出现`null`的几种情况\n\n1. 获取DOM元素时未获取到指定元素对象\n\n   ```html\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n     <title>Title</title>\n   </head>\n   <body>\n   </body>\n   <script>\n     let element = document.getElementById('x');\n     console.log(element);\t// null\n   </script>\n   </html>\n   ```\n\n2. 原型链的顶点，即`Object.prototype.__proto__`\n\n   ```javascript\n   console.log(Object.prototype.__proto__);\t// null\n   ```\n   \n2. 正则捕获时未捕获到结果，包括：正则对象的`exec`方法未匹配、字符串的`match`方法未匹配。\n\n   ```javascript\n   const string = \"xyz123ABC2\";\n   const re1 = /[a-zA-Z]+(\\d)/g;\n   const re2 = /[a-c]+/g;\n   console.log(re1.exec(string));\t// [ 'xyz1', '1', index: 0, input: 'xyz123ABC2', groups: undefined ]\n   console.log(re2.exec(string));\t// null\n   console.log(string.match(re1));\t// [ 'xyz1', 'ABC2' ]\n   console.log(string.match(re2));\t// null\n   ```\n\n","source":"_posts/several-cases-of-boolean-value-being-false-in-javascript.md","raw":"---\ntitle: JavaScript中布尔值为false的几种情况\ndate: 2021-12-13 09:47:52\ncategories: JavaScirpt\ntags:\n  - 编程\n  - JavaScript\n  - 基础\n  - 面试\ncomments: true\n---\n\n前端开发经常需要用到`if`判断，下文归纳JavaScript中布尔值为`false`的几种情况，便于今后开发使用。\n\n<!--more-->\n\n## 1 一共六种情况\n\n1. `undefined`：未定义\n2. `null`：空值\n3. `false`：布尔值`false`，注意字符串`'false'`为`true`\n4. 0：数字0，注意字符串`'0'`为`true`\n5. `NaN`：非数值，例如`Math.log(-1)`，注意`typeof NaN`为`number`\n6. `\"\"`或`''`：空字符串，注意空格字符串`' '`为`true`\n\n## 2 不同数据类型转换为`false`的情况\n\n| 数据类型  |              转换为`true`               |  转换为`false`   |\n| :-------: | :-------------------------------------: | :--------------: |\n|  Boolean  |                 `true`                  |     `false`      |\n|  String   |             任何非空字符串              | `''`（空字符串） |\n|  Number   | 任何非零数值（包括`Infinity`，如`1/0`） |     0和`NaN`     |\n|  Object   | 任何对象（包括空数组`[]`、空对象`{}`）  |      `null`      |\n| Undefined |                    /                    |   `undefined`    |\n\n**说明：**\n\n1. 使用取反运算符`!`和`!!`可将任何数据类型转换为布尔值，`!!`为本身代表的布尔值，`!`为相反布尔值。\n\n   例如`1-2`为`-1`，`!(1-2)`为`false`，`!!(1-2)`为`true`。\n\n2. 以下是一些数据的求布尔值结果：\n\n   ```javascript\n   console.log(false);\t// false\n   console.log(!!0);\t// false\n   console.log(!!'');\t// false\n   console.log(!!null);\t// false\n   console.log(!!undefined);\t// false\n   console.log(!!NaN);\t// false\n   console.log(!!Infinity);\t// true\n   console.log(!!{});\t// true\n   console.log(!![]);\t//true\n   ```\n\n## 3 对空数组和空对象做判断\n\n有时候需要对某个数组或对象做判断，判断其是否为空，可以通过如下方式：\n\n1. 使用`length`属性，适用于数组，如：\n\n   ```javascript\n   let array1 = [];\n   let array2 = [1, 2];\n   if (array1.length) console.log('array1 not empty');\n   if (array2.length) console.log('array2 not empty');\t// array2 not empty\n   ```\n\n2. 使用`for-in`遍历和`hasOwnProperty`判断，并把遍历结果写成函数，适用于数组和对象，如：\n\n   ```javascript\n   let array1 = [];\n   let array2 = [1, 2];\n   let obj1 = {};\n   let obj2 = {x: 1, y: 2};\n   function isEmpty(obj) {\n     for (let key in obj) {\n       if (obj.hasOwnProperty(key)) {\n         return false;\n       }\n     }\n     return true;\n   }\n   if (isEmpty(array1)) console.log('array1 is empty');\t// array1 is empty\n   if (isEmpty(array2)) console.log('array2 is empty');\n   if (isEmpty(obj1)) console.log('obj1 is empty');\t// obj1 is empty\n   if (isEmpty(obj2)) console.log('obj2 is empty');\n   ```\n\n## 4 出现`undefined`的几种情况\n\n1. 变量未定义，注意这种情况现在会报错\n\n   ```javascript\n   console.log(a);\t// ReferenceError: a is not defined\n   ```\n\n2. 变量定义后未赋值\n\n   ```javascript\n   let x;\n   console.log(x);\t// undefined\n   ```\n\n3. 函数形参未传值\n\n   ```javascript\n   function fun(x, y) {\n     console.log('x = ' + x);\n     console.log('y = ' + y);\n   }\n   fun(1);\n   // x = 1\n   // y = undefined\n   ```\n\n4. 函数未`return`\n\n   ```javascript\n   function fun() {}\n   console.log(fun());\t// undefined\n   ```\n\n5. 函数`return`没有值\n\n   ```javascript\n   function fun() {\n     return;\n   }\n   console.log(fun());\t// undefined\n   ```\n\n6. 对象的属性或方法不存在\n\n   ```javascript\n   let obj = {x: 1, y: 2};\n   console.log(obj.z);\t// undefined\n   ```\n\n7. 数组下标越界\n\n   ```javascript\n   let array = [1, 2, 3];\n   console.log(array[5]);\t// undefined\n   console.log(array[1.5]);\t// undefined\n   console.log(array[-1]);\t// undefined\n   ```\n\n8. 数组`find`方法未找到元素\n\n   ```javascript\n   let array = [{id: 1, name: 'a'}, {id: 2, name: 'b'}];\n   console.log(array.find(item => item.id === 3));\t// undefined\n   ```\n\n## 5 出现`null`的几种情况\n\n1. 获取DOM元素时未获取到指定元素对象\n\n   ```html\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n     <title>Title</title>\n   </head>\n   <body>\n   </body>\n   <script>\n     let element = document.getElementById('x');\n     console.log(element);\t// null\n   </script>\n   </html>\n   ```\n\n2. 原型链的顶点，即`Object.prototype.__proto__`\n\n   ```javascript\n   console.log(Object.prototype.__proto__);\t// null\n   ```\n   \n2. 正则捕获时未捕获到结果，包括：正则对象的`exec`方法未匹配、字符串的`match`方法未匹配。\n\n   ```javascript\n   const string = \"xyz123ABC2\";\n   const re1 = /[a-zA-Z]+(\\d)/g;\n   const re2 = /[a-c]+/g;\n   console.log(re1.exec(string));\t// [ 'xyz1', '1', index: 0, input: 'xyz123ABC2', groups: undefined ]\n   console.log(re2.exec(string));\t// null\n   console.log(string.match(re1));\t// [ 'xyz1', 'ABC2' ]\n   console.log(string.match(re2));\t// null\n   ```\n\n","slug":"several-cases-of-boolean-value-being-false-in-javascript","published":1,"updated":"2022-04-17T11:35:43.138Z","_id":"cl06nlvto000bf4vi1eq1e4s9","layout":"post","photos":[],"link":"","content":"<p>前端开发经常需要用到<code>if</code>判断，下文归纳JavaScript中布尔值为<code>false</code>的几种情况，便于今后开发使用。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-一共六种情况\"><a href=\"#1-一共六种情况\" class=\"headerlink\" title=\"1 一共六种情况\"></a>1 一共六种情况</h2><ol>\n<li><code>undefined</code>：未定义</li>\n<li><code>null</code>：空值</li>\n<li><code>false</code>：布尔值<code>false</code>，注意字符串<code>&#39;false&#39;</code>为<code>true</code></li>\n<li>0：数字0，注意字符串<code>&#39;0&#39;</code>为<code>true</code></li>\n<li><code>NaN</code>：非数值，例如<code>Math.log(-1)</code>，注意<code>typeof NaN</code>为<code>number</code></li>\n<li><code>&quot;&quot;</code>或<code>&#39;&#39;</code>：空字符串，注意空格字符串<code>&#39; &#39;</code>为<code>true</code></li>\n</ol>\n<h2 id=\"2-不同数据类型转换为false的情况\"><a href=\"#2-不同数据类型转换为false的情况\" class=\"headerlink\" title=\"2 不同数据类型转换为false的情况\"></a>2 不同数据类型转换为<code>false</code>的情况</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据类型</th>\n<th style=\"text-align:center\">转换为<code>true</code></th>\n<th style=\"text-align:center\">转换为<code>false</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\"><code>true</code></td>\n<td style=\"text-align:center\"><code>false</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:center\">任何非空字符串</td>\n<td style=\"text-align:center\"><code>&#39;&#39;</code>（空字符串）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Number</td>\n<td style=\"text-align:center\">任何非零数值（包括<code>Infinity</code>，如<code>1/0</code>）</td>\n<td style=\"text-align:center\">0和<code>NaN</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:center\">任何对象（包括空数组<code>[]</code>、空对象<code>&#123;&#125;</code>）</td>\n<td style=\"text-align:center\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Undefined</td>\n<td style=\"text-align:center\">/</td>\n<td style=\"text-align:center\"><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>说明：</strong></p>\n<ol>\n<li><p>使用取反运算符<code>!</code>和<code>!!</code>可将任何数据类型转换为布尔值，<code>!!</code>为本身代表的布尔值，<code>!</code>为相反布尔值。</p>\n<p>例如<code>1-2</code>为<code>-1</code>，<code>!(1-2)</code>为<code>false</code>，<code>!!(1-2)</code>为<code>true</code>。</p>\n</li>\n<li><p>以下是一些数据的求布尔值结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"literal\">false</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"number\">0</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"string\">&#x27;&#x27;</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">null</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">undefined</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">NaN</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">Infinity</span>);\t<span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!&#123;&#125;);\t<span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!![]);\t<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"3-对空数组和空对象做判断\"><a href=\"#3-对空数组和空对象做判断\" class=\"headerlink\" title=\"3 对空数组和空对象做判断\"></a>3 对空数组和空对象做判断</h2><p>有时候需要对某个数组或对象做判断，判断其是否为空，可以通过如下方式：</p>\n<ol>\n<li><p>使用<code>length</code>属性，适用于数组，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array1 = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> array2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (array1.length) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array1 not empty&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (array2.length) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array2 not empty&#x27;</span>);\t<span class=\"comment\">// array2 not empty</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>for-in</code>遍历和<code>hasOwnProperty</code>判断，并把遍历结果写成函数，适用于数组和对象，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array1 = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> array2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123;<span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isEmpty</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(array1)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array1 is empty&#x27;</span>);\t<span class=\"comment\">// array1 is empty</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(array2)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array2 is empty&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(obj1)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;obj1 is empty&#x27;</span>);\t<span class=\"comment\">// obj1 is empty</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(obj2)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;obj2 is empty&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"4-出现undefined的几种情况\"><a href=\"#4-出现undefined的几种情况\" class=\"headerlink\" title=\"4 出现undefined的几种情况\"></a>4 出现<code>undefined</code>的几种情况</h2><ol>\n<li><p>变量未定义，注意这种情况现在会报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>变量定义后未赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(x);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数形参未传值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;x = &#x27;</span> + x);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;y = &#x27;</span> + y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// x = 1</span></span><br><span class=\"line\"><span class=\"comment\">// y = undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数未<code>return</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fun());\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数<code>return</code>没有值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fun());\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对象的属性或方法不存在</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.z);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数组下标越界</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array[<span class=\"number\">5</span>]);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array[<span class=\"number\">1.5</span>]);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array[-<span class=\"number\">1</span>]);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数组<code>find</code>方法未找到元素</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [&#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;a&#x27;</span>&#125;, &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;b&#x27;</span>&#125;];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.id === <span class=\"number\">3</span>));\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"5-出现null的几种情况\"><a href=\"#5-出现null的几种情况\" class=\"headerlink\" title=\"5 出现null的几种情况\"></a>5 出现<code>null</code>的几种情况</h2><ol>\n<li><p>获取DOM元素时未获取到指定元素对象</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">let</span> element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;x&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">console</span>.log(element);\t<span class=\"comment\">// null</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>原型链的顶点，即<code>Object.prototype.__proto__</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.__proto__);\t<span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>正则捕获时未捕获到结果，包括：正则对象的<code>exec</code>方法未匹配、字符串的<code>match</code>方法未匹配。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> string = <span class=\"string\">&quot;xyz123ABC2&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> re1 = <span class=\"regexp\">/[a-zA-Z]+(\\d)/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> re2 = <span class=\"regexp\">/[a-c]+/g</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(re1.exec(string));\t<span class=\"comment\">// [ &#x27;xyz1&#x27;, &#x27;1&#x27;, index: 0, input: &#x27;xyz123ABC2&#x27;, groups: undefined ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(re2.exec(string));\t<span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string.match(re1));\t<span class=\"comment\">// [ &#x27;xyz1&#x27;, &#x27;ABC2&#x27; ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string.match(re2));\t<span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>前端开发经常需要用到<code>if</code>判断，下文归纳JavaScript中布尔值为<code>false</code>的几种情况，便于今后开发使用。</p>","more":"<h2 id=\"1-一共六种情况\"><a href=\"#1-一共六种情况\" class=\"headerlink\" title=\"1 一共六种情况\"></a>1 一共六种情况</h2><ol>\n<li><code>undefined</code>：未定义</li>\n<li><code>null</code>：空值</li>\n<li><code>false</code>：布尔值<code>false</code>，注意字符串<code>&#39;false&#39;</code>为<code>true</code></li>\n<li>0：数字0，注意字符串<code>&#39;0&#39;</code>为<code>true</code></li>\n<li><code>NaN</code>：非数值，例如<code>Math.log(-1)</code>，注意<code>typeof NaN</code>为<code>number</code></li>\n<li><code>&quot;&quot;</code>或<code>&#39;&#39;</code>：空字符串，注意空格字符串<code>&#39; &#39;</code>为<code>true</code></li>\n</ol>\n<h2 id=\"2-不同数据类型转换为false的情况\"><a href=\"#2-不同数据类型转换为false的情况\" class=\"headerlink\" title=\"2 不同数据类型转换为false的情况\"></a>2 不同数据类型转换为<code>false</code>的情况</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据类型</th>\n<th style=\"text-align:center\">转换为<code>true</code></th>\n<th style=\"text-align:center\">转换为<code>false</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:center\"><code>true</code></td>\n<td style=\"text-align:center\"><code>false</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:center\">任何非空字符串</td>\n<td style=\"text-align:center\"><code>&#39;&#39;</code>（空字符串）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Number</td>\n<td style=\"text-align:center\">任何非零数值（包括<code>Infinity</code>，如<code>1/0</code>）</td>\n<td style=\"text-align:center\">0和<code>NaN</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:center\">任何对象（包括空数组<code>[]</code>、空对象<code>&#123;&#125;</code>）</td>\n<td style=\"text-align:center\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Undefined</td>\n<td style=\"text-align:center\">/</td>\n<td style=\"text-align:center\"><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>说明：</strong></p>\n<ol>\n<li><p>使用取反运算符<code>!</code>和<code>!!</code>可将任何数据类型转换为布尔值，<code>!!</code>为本身代表的布尔值，<code>!</code>为相反布尔值。</p>\n<p>例如<code>1-2</code>为<code>-1</code>，<code>!(1-2)</code>为<code>false</code>，<code>!!(1-2)</code>为<code>true</code>。</p>\n</li>\n<li><p>以下是一些数据的求布尔值结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"literal\">false</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"number\">0</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"string\">&#x27;&#x27;</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">null</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">undefined</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">NaN</span>);\t<span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">Infinity</span>);\t<span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!&#123;&#125;);\t<span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!![]);\t<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"3-对空数组和空对象做判断\"><a href=\"#3-对空数组和空对象做判断\" class=\"headerlink\" title=\"3 对空数组和空对象做判断\"></a>3 对空数组和空对象做判断</h2><p>有时候需要对某个数组或对象做判断，判断其是否为空，可以通过如下方式：</p>\n<ol>\n<li><p>使用<code>length</code>属性，适用于数组，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array1 = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> array2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (array1.length) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array1 not empty&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (array2.length) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array2 not empty&#x27;</span>);\t<span class=\"comment\">// array2 not empty</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>for-in</code>遍历和<code>hasOwnProperty</code>判断，并把遍历结果写成函数，适用于数组和对象，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array1 = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> array2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123;<span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isEmpty</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(array1)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array1 is empty&#x27;</span>);\t<span class=\"comment\">// array1 is empty</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(array2)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;array2 is empty&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(obj1)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;obj1 is empty&#x27;</span>);\t<span class=\"comment\">// obj1 is empty</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (isEmpty(obj2)) <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;obj2 is empty&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"4-出现undefined的几种情况\"><a href=\"#4-出现undefined的几种情况\" class=\"headerlink\" title=\"4 出现undefined的几种情况\"></a>4 出现<code>undefined</code>的几种情况</h2><ol>\n<li><p>变量未定义，注意这种情况现在会报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>变量定义后未赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(x);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数形参未传值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;x = &#x27;</span> + x);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;y = &#x27;</span> + y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// x = 1</span></span><br><span class=\"line\"><span class=\"comment\">// y = undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数未<code>return</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fun());\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数<code>return</code>没有值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fun());\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对象的属性或方法不存在</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"attr\">y</span>: <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.z);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数组下标越界</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array[<span class=\"number\">5</span>]);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array[<span class=\"number\">1.5</span>]);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array[-<span class=\"number\">1</span>]);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数组<code>find</code>方法未找到元素</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [&#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;a&#x27;</span>&#125;, &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;b&#x27;</span>&#125;];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.id === <span class=\"number\">3</span>));\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"5-出现null的几种情况\"><a href=\"#5-出现null的几种情况\" class=\"headerlink\" title=\"5 出现null的几种情况\"></a>5 出现<code>null</code>的几种情况</h2><ol>\n<li><p>获取DOM元素时未获取到指定元素对象</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">let</span> element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;x&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">console</span>.log(element);\t<span class=\"comment\">// null</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>原型链的顶点，即<code>Object.prototype.__proto__</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.prototype.__proto__);\t<span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>正则捕获时未捕获到结果，包括：正则对象的<code>exec</code>方法未匹配、字符串的<code>match</code>方法未匹配。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> string = <span class=\"string\">&quot;xyz123ABC2&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> re1 = <span class=\"regexp\">/[a-zA-Z]+(\\d)/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> re2 = <span class=\"regexp\">/[a-c]+/g</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(re1.exec(string));\t<span class=\"comment\">// [ &#x27;xyz1&#x27;, &#x27;1&#x27;, index: 0, input: &#x27;xyz123ABC2&#x27;, groups: undefined ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(re2.exec(string));\t<span class=\"comment\">// null</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string.match(re1));\t<span class=\"comment\">// [ &#x27;xyz1&#x27;, &#x27;ABC2&#x27; ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string.match(re2));\t<span class=\"comment\">// null</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Apr 17 2022 19:35:43 GMT+0800 (中国标准时间)","title":"JavaScript中布尔值为false的几种情况","path":"2021/12/13/several-cases-of-boolean-value-being-false-in-javascript/","eyeCatchImage":null,"excerpt":"<p>前端开发经常需要用到<code>if</code>判断，下文归纳JavaScript中布尔值为<code>false</code>的几种情况，便于今后开发使用。</p>","date":{"_isAMomentObject":true,"_i":"2021-12-13T01:47:52.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-12-13T01:47:52.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"JavaScirpt","tags":["编程","JavaScript","基础","面试"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":3047},{"title":"Markdown基本语法与示例","date":"2021-08-03T16:18:05.000Z","comments":1,"mathjax":true,"_content":"\nMarkdown是一种纯文本格式标记语言，它通过简单的标记语法实现了格式排版，且易学、易读、易写，因此非常流行。本文及本博客的文章均使用Markdown语法书写。\n\n<!--more-->\n\n## 0 简单介绍\n\n**优点：**\n\n1. 纯文本，编辑效果一致，可以无视排版，专心写作。\n2. 操作简单，例如新增标题只需要在标题内容前加`#`即可。\n\n**缺点：**\n\n1. 需要记一些语法，但非常简单。\n2. 有些平台不支持Markdown编辑模式。\n\n**常用编辑器：**\n\n- Typora（Windows，大力推荐，与其他编辑器不同的是编辑效果即排版效果，无需左右分栏对照）\n- Simplenote（IOS，免费，支持中文、云端存储、iPad）\n\n## 1 标题\n\n标题文字前面加`#`即可，注意`#`与文字之间要有空格。几级标题加几个`#`，共有六级标题。例如本段落标题的源码为：\n\n```markdown\n## 1、标题\n```\n\n## 2 字体\n\n### 2.1 粗体\n\n使用``**``或`__`包在文字两端。例如：`**粗体**`效果为**粗体**。\n\n### 2.2 斜体\n\n使用``*``或`_`包在文字两端。例如：`*斜体*`效果为*斜体*。\n\n当然，粗体斜体可以嵌套使用，例如：`***粗体+斜体***`效果为***粗体+斜体***。\n\n### 2.3 高亮\n\n~~使用``==``包在文字两端。例如：`==高亮==`效果为==高亮==。~~\n\nTypora需要设置开启高亮。并且如你所见，核心舱不支持高亮。\n\n### 2.4 删除线\n\n使用``~~``包在文字两端。例如：`~~删除线~~`效果为~~删除线~~。\n\n## 3 引用\n\n引用文字前面加`>`即可。引用可以嵌套，使用`>>`、`>>>`……以此类推。\n\n例如：\n\n```markdown\n> 一级引用\n>> 二级引用\n>>>>> 五级引用\n> > >\n> 回退到三级引用\n>\n> 回退到一级引用\n```\n\n效果为\n\n> 一级引用\n>\n> > 二级引用\n> >\n> > >>> 五级引用\n> > >\n> > >回退到三级引用\n>\n> 回退到一级引用\n\n## 4 分割线\n\n三个或三个以上的`-`或`*`（Typora还支持`+`）。\n\n例如：\n\n```markdown\n---\n-----\n***\n*****\n```\n\n效果为\n\n---\n\n-----\n\n***\n\n*****\n\n（一毛一样）\n\n## 5 HTML\n\n直接输入就行，会自动渲染。例如：`<b>HTML加粗</b>`效果为<b>HTML加粗</b>。再例如：\n\n```html\n<font face=\"黑体\" size=\"5\" color=\"red\">HTML内容</font>\n```\n\n效果为\n\n<font face=\"黑体\" size=\"5\" color=\"red\">HTML内容</font>\n\n甚至可以来段更复杂的：\n\n```html\n<form>\n用户名: <input type=\"text\" name=\"user\"><br>\n密　码: <input type=\"password\" name=\"pwd\"><br>\n性　别: <input type=\"radio\" name=\"sex\" value=\"男\" checked>男&nbsp;\n    <input type=\"radio\" name=\"sex\" value=\"女\">女<br>\n<button type=\"button\" name=\"Submit\" Onclick=\"alert('成功')\">提交</button>\n<button type=\"reset\" name=\"Reset\">重置</button>\n</form>\n```\n\n效果为\n\n<form>\n用户名: <input type=\"text\" name=\"user\"><br>\n密　码: <input type=\"password\" name=\"pwd\"><br>\n性　别: <input type=\"radio\" name=\"sex\" value=\"男\" checked>男&nbsp;\n    <input type=\"radio\" name=\"sex\" value=\"女\">女<br>\n<button type=\"button\" name=\"Submit\" Onclick=\"alert('成功')\">提交</button>\n<button type=\"reset\" name=\"Reset\">重置</button>\n</form>\n\n（点一下试试）\n\n## 6 超链接\n\n使用`[name](link \"tooltip\")`表示超链接，其中`name`是超链接文字，`link`是超链接地址，`tooltip`是悬浮文字提示（可选）。\n\n例如：\n\n```markdown\n[卡洛的核心舱](https://corecabin.cn \"你好\")\n```\n\n效果为\n\n[卡洛的核心舱](https://corecabin.cn \"你好\")\n\n还可以用html的a标签，例如：\n\n```html\n<a href=\"https://corecabin.cn\" target=\"_blank\">卡洛的核心舱</a>\n```\n\n效果为\n\n<a href=\"https://corecabin.cn\" target=\"_blank\">卡洛的核心舱</a>\n\n其中`target=\"_blank\"`表示在新标签打开。\n\n当遇到纯链接时，可以用`<`和`>`将其包起来，防止后面的文字被解析，例如：\n\n```markdown\n<https://corecabin.cn/>这是包起来的效果\nhttps://corecabin.cn/这是不包起来的效果\n```\n\n<https://corecabin.cn/>这是包起来的效果\nhttps://corecabin.cn/这是不包起来的效果\n\n## 7 图片\n\n使用`![text](link \"tooltip\")`表示图片，其中`text`是显示在图片下方的说明，`link`是图片路径，可以用相对路径、绝对路径、互联网路径，`tooltip`是悬浮文字提示（可选）。\n\n例如（互联网路径）：\n\n```markdown\n![中国空间站](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg \"天和核心舱\")\n```\n\n效果为\n\n![中国空间站](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg \"天和核心舱\")\n\n以及套娃设置图片的超链接，例如（相对路径）：\n\n```markdown\n[![卡洛的核心舱](/img/corecabin-textlogo-bgcolor.jpg)](https://corecabin.cn)\n```\n\n效果为：\n\n[![卡洛的核心舱](/img/corecabin-textlogo-bgcolor.jpg)](https://corecabin.cn)\n\n注意以上情况在当前主题下可能会遇到图片文字说明的显示bug。\n\n## 8 列表\n\n### 8.1 无序列表\n\n文字前面加`-`或`*`或`+`即可，注意符号与文字之间要有空格。\n\n例如：\n\n```markdown\n- 无序列表1\n* 无序列表2\n+ 无序列表3\n```\n\n效果为\n\n- 无序列表1\n\n* 无序列表2\n\n+ 无序列表3\n\n### 8.2 有序列表\n\n文字前面加数字与`.`即可，注意符号与文字之间要有空格。注意显示效果与实际输入数字无关，而与当前次序有关。\n\n例如：\n\n```markdown\n1. 第一点\n2. 第二点\n4. 大概是第四点？\n```\n\n效果为\n\n1. 第一点\n2. 第二点\n3. 大概是第四点？\n\n### 8.3 列表嵌套\n\n不同级列表之间通过缩进即可嵌套，例如：\n\n```markdown\n- 一级无序\n\t+ 二级无序1\n\t+ 二级无序2\n1. 一级有序\n\t1. 二级有序\n\t\t+ 三级无序\n```\n\n效果为\n\n- 一级无序\n  + 二级无序1\n  + 二级无序2\n\n1. 一级有序\n   1. 二级有序\n      + 三级无序\n\n## 9 代码\n\n### 9.1 行内代码\n\n使用“`”包在代码两端。例如：\n\n```markdown\n`javascript`\n```\n\n效果为\n\n`javascript`\n\n本文也大量用到行内代码表示文字高亮。\n\n### 9.2 代码块\n\n使用3个“`”包在代码两端，第一行可以加入代码语言，例如：\n\n````markdown\n```javascript\nfunction fact(num) {\n\tif (num === 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn num * fact(num - 1);\n\t}\n}\n```\n````\n\n效果为\n\n```javascript\nfunction fact(num) {\n\tif (num === 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn num * fact(num - 1);\n\t}\n}\n```\n\n本文也大量用到代码块表示Markdown示例。\n\n## 10 数学公式\n\nMarkdown支持LaTeX公式。行内公式用` $ `包在公式两端（Typora需要设置开启），公式块用` $$ `包在公式两端，例如：\n\n```latex\n当 $a \\ne 0$, 此方程式有两个解 $ax^2 + bx + c = 0$，他们是\n$$\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.\n$$\n```\n\n效果为\n\n当 $a \\ne 0$​, 此方程式有两个解 $ax^2 + bx + c = 0$​，他们是\n$$\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.\n$$\n\n更多公式相关见《{% post_link latex-mathematical-formula-handbook %}》。\n\n## 11 任务列表（Todo List）\n\n文字前面加`- [ ] `或`- [x] `即可，空格表示未完成，`x`表示已完成。\n\n例如：\n\n```markdown\n- [x] 甜甜圈\n- [x] 珍珠奶茶\n- [ ] 方便面\n- [x] 火锅\n- [ ] 米饭\n- [ ] 大盘鸡\n```\n\n效果为\n\n- [x] 甜甜圈\n- [x] 珍珠奶茶\n- [ ] 方便面\n- [x] 火锅\n- [ ] 米饭\n- [ ] 大盘鸡\n\n## 12 表格\n\n语法为：\n\n```markdown\n表头|表头|表头\n---|---|---\n内容|内容|内容\n内容|内容|内容\n```\n\n第二行用来分割表头与内容。`-`的个数有一个就行，此处多加了几个。\n\n文字默认居左。`-`的两边加`:`表示该列居中，`-`的右边加`:`表示该列居右。\n\n例如：\n\n```markdown\n姓名（居左）|年级（居中）|年龄（居右）\n-----|:-----:|-----:\n张三|大三|21\n李四|大一|18\n王五|研二|24\n```\n\n效果为\n\n| 姓名（居左） | 年级（居中） | 年龄（居右） |\n| ------------ | :----------: | -----------: |\n| 张三         |     大三     |           21 |\n| 李四         |     大一     |           18 |\n| 王五         |     研二     |           24 |\n\n## 13 转义字符\n\n在输入特殊符号，尤其是Markdown和HTML中的部分符号时，可以使用转义字符。\n\n### 13.1 Markdown转义字符\n\n使用`\\`置于符号前。\n\n例如输入`*你好*`会显示*你好*，输入`\\*你好\\*`效果为\\*你好\\*。\n\n具体如下：\n\n| 字符 |    含义    | 转义字符 |\n| :--: | :--------: | :------: |\n|  \\   |   反斜杠   |   `\\\\`   |\n|<span>`</span>|  反引号 |<span>\\\\`</span>|\n|  *   |    星号    |   `\\*`   |\n|  _   |   下划线   |   `\\_`   |\n|  {}  |   花括号   |  `\\{\\}`  |\n|  []  |   方括号   |  `\\[\\]`  |\n|  ()  |   小括号   |  `\\(\\)`  |\n|  #   |    井号    |   `\\#`   |\n|  +   |    加号    |   `\\+`   |\n|  -   |    减号    |   `\\-`   |\n|  .   |  英文句点  |   `\\.`   |\n|  !   | 英文感叹号 |   `\\!`   |\n\n### 13.2 HTML转义字符\n\n直接输入HTML转义字符，具体如下：\n\n| 显示结果 |   描述   |        输入         | 实体编号 |\n| :------: | :------: | :-----------------: | :------: |\n|          |   空格   |      `&nbsp;`       | `&#160;` |\n|    <     |  小于号  |       `&lt;`        | `&#60;`  |\n|    >     |  大于号  |       `&gt;`        | `&#62;`  |\n|    &     |   和号   |       `&amp;`       | `&#38;`  |\n|    \"     |   引号   |      `&quot;`       | `&#34;`  |\n|    '     |   撇号   | `&apos; `(IE不支持) | `&#39;`  |\n|    ￠    |    分    |      `&cent;`       | `&#162;` |\n|    £     |    镑    |      `&pound;`      | `&#163;` |\n|    ¥     |   日圆   |       `&yen;`       | `&#165;` |\n|    §     |    节    |      `&sect;`       | `&#167;` |\n|    ©     |   版权   |      `&copy;`       | `&#169;` |\n|    ®     | 注册商标 |       `&reg;`       | `&#174;` |\n|    ×     |   乘号   |      `&times;`      | `&#215;` |\n|    ÷     |   除号   |     `&divide;`      | `&#247;` |\n\n","source":"_posts/markdown-basic-syntax-and-examples.md","raw":"---\ntitle: Markdown基本语法与示例\ndate: 2021-08-04 00:18:05\ncategories: Markdown\ntags:\n  - Markdown\n  - HTML\n  - 技术\ncomments: true\nmathjax: true\n---\n\nMarkdown是一种纯文本格式标记语言，它通过简单的标记语法实现了格式排版，且易学、易读、易写，因此非常流行。本文及本博客的文章均使用Markdown语法书写。\n\n<!--more-->\n\n## 0 简单介绍\n\n**优点：**\n\n1. 纯文本，编辑效果一致，可以无视排版，专心写作。\n2. 操作简单，例如新增标题只需要在标题内容前加`#`即可。\n\n**缺点：**\n\n1. 需要记一些语法，但非常简单。\n2. 有些平台不支持Markdown编辑模式。\n\n**常用编辑器：**\n\n- Typora（Windows，大力推荐，与其他编辑器不同的是编辑效果即排版效果，无需左右分栏对照）\n- Simplenote（IOS，免费，支持中文、云端存储、iPad）\n\n## 1 标题\n\n标题文字前面加`#`即可，注意`#`与文字之间要有空格。几级标题加几个`#`，共有六级标题。例如本段落标题的源码为：\n\n```markdown\n## 1、标题\n```\n\n## 2 字体\n\n### 2.1 粗体\n\n使用``**``或`__`包在文字两端。例如：`**粗体**`效果为**粗体**。\n\n### 2.2 斜体\n\n使用``*``或`_`包在文字两端。例如：`*斜体*`效果为*斜体*。\n\n当然，粗体斜体可以嵌套使用，例如：`***粗体+斜体***`效果为***粗体+斜体***。\n\n### 2.3 高亮\n\n~~使用``==``包在文字两端。例如：`==高亮==`效果为==高亮==。~~\n\nTypora需要设置开启高亮。并且如你所见，核心舱不支持高亮。\n\n### 2.4 删除线\n\n使用``~~``包在文字两端。例如：`~~删除线~~`效果为~~删除线~~。\n\n## 3 引用\n\n引用文字前面加`>`即可。引用可以嵌套，使用`>>`、`>>>`……以此类推。\n\n例如：\n\n```markdown\n> 一级引用\n>> 二级引用\n>>>>> 五级引用\n> > >\n> 回退到三级引用\n>\n> 回退到一级引用\n```\n\n效果为\n\n> 一级引用\n>\n> > 二级引用\n> >\n> > >>> 五级引用\n> > >\n> > >回退到三级引用\n>\n> 回退到一级引用\n\n## 4 分割线\n\n三个或三个以上的`-`或`*`（Typora还支持`+`）。\n\n例如：\n\n```markdown\n---\n-----\n***\n*****\n```\n\n效果为\n\n---\n\n-----\n\n***\n\n*****\n\n（一毛一样）\n\n## 5 HTML\n\n直接输入就行，会自动渲染。例如：`<b>HTML加粗</b>`效果为<b>HTML加粗</b>。再例如：\n\n```html\n<font face=\"黑体\" size=\"5\" color=\"red\">HTML内容</font>\n```\n\n效果为\n\n<font face=\"黑体\" size=\"5\" color=\"red\">HTML内容</font>\n\n甚至可以来段更复杂的：\n\n```html\n<form>\n用户名: <input type=\"text\" name=\"user\"><br>\n密　码: <input type=\"password\" name=\"pwd\"><br>\n性　别: <input type=\"radio\" name=\"sex\" value=\"男\" checked>男&nbsp;\n    <input type=\"radio\" name=\"sex\" value=\"女\">女<br>\n<button type=\"button\" name=\"Submit\" Onclick=\"alert('成功')\">提交</button>\n<button type=\"reset\" name=\"Reset\">重置</button>\n</form>\n```\n\n效果为\n\n<form>\n用户名: <input type=\"text\" name=\"user\"><br>\n密　码: <input type=\"password\" name=\"pwd\"><br>\n性　别: <input type=\"radio\" name=\"sex\" value=\"男\" checked>男&nbsp;\n    <input type=\"radio\" name=\"sex\" value=\"女\">女<br>\n<button type=\"button\" name=\"Submit\" Onclick=\"alert('成功')\">提交</button>\n<button type=\"reset\" name=\"Reset\">重置</button>\n</form>\n\n（点一下试试）\n\n## 6 超链接\n\n使用`[name](link \"tooltip\")`表示超链接，其中`name`是超链接文字，`link`是超链接地址，`tooltip`是悬浮文字提示（可选）。\n\n例如：\n\n```markdown\n[卡洛的核心舱](https://corecabin.cn \"你好\")\n```\n\n效果为\n\n[卡洛的核心舱](https://corecabin.cn \"你好\")\n\n还可以用html的a标签，例如：\n\n```html\n<a href=\"https://corecabin.cn\" target=\"_blank\">卡洛的核心舱</a>\n```\n\n效果为\n\n<a href=\"https://corecabin.cn\" target=\"_blank\">卡洛的核心舱</a>\n\n其中`target=\"_blank\"`表示在新标签打开。\n\n当遇到纯链接时，可以用`<`和`>`将其包起来，防止后面的文字被解析，例如：\n\n```markdown\n<https://corecabin.cn/>这是包起来的效果\nhttps://corecabin.cn/这是不包起来的效果\n```\n\n<https://corecabin.cn/>这是包起来的效果\nhttps://corecabin.cn/这是不包起来的效果\n\n## 7 图片\n\n使用`![text](link \"tooltip\")`表示图片，其中`text`是显示在图片下方的说明，`link`是图片路径，可以用相对路径、绝对路径、互联网路径，`tooltip`是悬浮文字提示（可选）。\n\n例如（互联网路径）：\n\n```markdown\n![中国空间站](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg \"天和核心舱\")\n```\n\n效果为\n\n![中国空间站](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg \"天和核心舱\")\n\n以及套娃设置图片的超链接，例如（相对路径）：\n\n```markdown\n[![卡洛的核心舱](/img/corecabin-textlogo-bgcolor.jpg)](https://corecabin.cn)\n```\n\n效果为：\n\n[![卡洛的核心舱](/img/corecabin-textlogo-bgcolor.jpg)](https://corecabin.cn)\n\n注意以上情况在当前主题下可能会遇到图片文字说明的显示bug。\n\n## 8 列表\n\n### 8.1 无序列表\n\n文字前面加`-`或`*`或`+`即可，注意符号与文字之间要有空格。\n\n例如：\n\n```markdown\n- 无序列表1\n* 无序列表2\n+ 无序列表3\n```\n\n效果为\n\n- 无序列表1\n\n* 无序列表2\n\n+ 无序列表3\n\n### 8.2 有序列表\n\n文字前面加数字与`.`即可，注意符号与文字之间要有空格。注意显示效果与实际输入数字无关，而与当前次序有关。\n\n例如：\n\n```markdown\n1. 第一点\n2. 第二点\n4. 大概是第四点？\n```\n\n效果为\n\n1. 第一点\n2. 第二点\n3. 大概是第四点？\n\n### 8.3 列表嵌套\n\n不同级列表之间通过缩进即可嵌套，例如：\n\n```markdown\n- 一级无序\n\t+ 二级无序1\n\t+ 二级无序2\n1. 一级有序\n\t1. 二级有序\n\t\t+ 三级无序\n```\n\n效果为\n\n- 一级无序\n  + 二级无序1\n  + 二级无序2\n\n1. 一级有序\n   1. 二级有序\n      + 三级无序\n\n## 9 代码\n\n### 9.1 行内代码\n\n使用“`”包在代码两端。例如：\n\n```markdown\n`javascript`\n```\n\n效果为\n\n`javascript`\n\n本文也大量用到行内代码表示文字高亮。\n\n### 9.2 代码块\n\n使用3个“`”包在代码两端，第一行可以加入代码语言，例如：\n\n````markdown\n```javascript\nfunction fact(num) {\n\tif (num === 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn num * fact(num - 1);\n\t}\n}\n```\n````\n\n效果为\n\n```javascript\nfunction fact(num) {\n\tif (num === 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn num * fact(num - 1);\n\t}\n}\n```\n\n本文也大量用到代码块表示Markdown示例。\n\n## 10 数学公式\n\nMarkdown支持LaTeX公式。行内公式用` $ `包在公式两端（Typora需要设置开启），公式块用` $$ `包在公式两端，例如：\n\n```latex\n当 $a \\ne 0$, 此方程式有两个解 $ax^2 + bx + c = 0$，他们是\n$$\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.\n$$\n```\n\n效果为\n\n当 $a \\ne 0$​, 此方程式有两个解 $ax^2 + bx + c = 0$​，他们是\n$$\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.\n$$\n\n更多公式相关见《{% post_link latex-mathematical-formula-handbook %}》。\n\n## 11 任务列表（Todo List）\n\n文字前面加`- [ ] `或`- [x] `即可，空格表示未完成，`x`表示已完成。\n\n例如：\n\n```markdown\n- [x] 甜甜圈\n- [x] 珍珠奶茶\n- [ ] 方便面\n- [x] 火锅\n- [ ] 米饭\n- [ ] 大盘鸡\n```\n\n效果为\n\n- [x] 甜甜圈\n- [x] 珍珠奶茶\n- [ ] 方便面\n- [x] 火锅\n- [ ] 米饭\n- [ ] 大盘鸡\n\n## 12 表格\n\n语法为：\n\n```markdown\n表头|表头|表头\n---|---|---\n内容|内容|内容\n内容|内容|内容\n```\n\n第二行用来分割表头与内容。`-`的个数有一个就行，此处多加了几个。\n\n文字默认居左。`-`的两边加`:`表示该列居中，`-`的右边加`:`表示该列居右。\n\n例如：\n\n```markdown\n姓名（居左）|年级（居中）|年龄（居右）\n-----|:-----:|-----:\n张三|大三|21\n李四|大一|18\n王五|研二|24\n```\n\n效果为\n\n| 姓名（居左） | 年级（居中） | 年龄（居右） |\n| ------------ | :----------: | -----------: |\n| 张三         |     大三     |           21 |\n| 李四         |     大一     |           18 |\n| 王五         |     研二     |           24 |\n\n## 13 转义字符\n\n在输入特殊符号，尤其是Markdown和HTML中的部分符号时，可以使用转义字符。\n\n### 13.1 Markdown转义字符\n\n使用`\\`置于符号前。\n\n例如输入`*你好*`会显示*你好*，输入`\\*你好\\*`效果为\\*你好\\*。\n\n具体如下：\n\n| 字符 |    含义    | 转义字符 |\n| :--: | :--------: | :------: |\n|  \\   |   反斜杠   |   `\\\\`   |\n|<span>`</span>|  反引号 |<span>\\\\`</span>|\n|  *   |    星号    |   `\\*`   |\n|  _   |   下划线   |   `\\_`   |\n|  {}  |   花括号   |  `\\{\\}`  |\n|  []  |   方括号   |  `\\[\\]`  |\n|  ()  |   小括号   |  `\\(\\)`  |\n|  #   |    井号    |   `\\#`   |\n|  +   |    加号    |   `\\+`   |\n|  -   |    减号    |   `\\-`   |\n|  .   |  英文句点  |   `\\.`   |\n|  !   | 英文感叹号 |   `\\!`   |\n\n### 13.2 HTML转义字符\n\n直接输入HTML转义字符，具体如下：\n\n| 显示结果 |   描述   |        输入         | 实体编号 |\n| :------: | :------: | :-----------------: | :------: |\n|          |   空格   |      `&nbsp;`       | `&#160;` |\n|    <     |  小于号  |       `&lt;`        | `&#60;`  |\n|    >     |  大于号  |       `&gt;`        | `&#62;`  |\n|    &     |   和号   |       `&amp;`       | `&#38;`  |\n|    \"     |   引号   |      `&quot;`       | `&#34;`  |\n|    '     |   撇号   | `&apos; `(IE不支持) | `&#39;`  |\n|    ￠    |    分    |      `&cent;`       | `&#162;` |\n|    £     |    镑    |      `&pound;`      | `&#163;` |\n|    ¥     |   日圆   |       `&yen;`       | `&#165;` |\n|    §     |    节    |      `&sect;`       | `&#167;` |\n|    ©     |   版权   |      `&copy;`       | `&#169;` |\n|    ®     | 注册商标 |       `&reg;`       | `&#174;` |\n|    ×     |   乘号   |      `&times;`      | `&#215;` |\n|    ÷     |   除号   |     `&divide;`      | `&#247;` |\n\n","slug":"markdown-basic-syntax-and-examples","published":1,"updated":"2022-02-28T12:13:38.094Z","_id":"cl06nlvtp000ef4viazr80ojr","layout":"post","photos":[],"link":"","content":"<p>Markdown是一种纯文本格式标记语言，它通过简单的标记语法实现了格式排版，且易学、易读、易写，因此非常流行。本文及本博客的文章均使用Markdown语法书写。</p>\n<span id=\"more\"></span>\n<h2 id=\"0-简单介绍\"><a href=\"#0-简单介绍\" class=\"headerlink\" title=\"0 简单介绍\"></a>0 简单介绍</h2><p><strong>优点：</strong></p>\n<ol>\n<li>纯文本，编辑效果一致，可以无视排版，专心写作。</li>\n<li>操作简单，例如新增标题只需要在标题内容前加<code>#</code>即可。</li>\n</ol>\n<p><strong>缺点：</strong></p>\n<ol>\n<li>需要记一些语法，但非常简单。</li>\n<li>有些平台不支持Markdown编辑模式。</li>\n</ol>\n<p><strong>常用编辑器：</strong></p>\n<ul>\n<li>Typora（Windows，大力推荐，与其他编辑器不同的是编辑效果即排版效果，无需左右分栏对照）</li>\n<li>Simplenote（IOS，免费，支持中文、云端存储、iPad）</li>\n</ul>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1 标题\"></a>1 标题</h2><p>标题文字前面加<code>#</code>即可，注意<code>#</code>与文字之间要有空格。几级标题加几个<code>#</code>，共有六级标题。例如本段落标题的源码为：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">## 1、标题</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-字体\"><a href=\"#2-字体\" class=\"headerlink\" title=\"2 字体\"></a>2 字体</h2><h3 id=\"2-1-粗体\"><a href=\"#2-1-粗体\" class=\"headerlink\" title=\"2.1 粗体\"></a>2.1 粗体</h3><p>使用<code>**</code>或<code>__</code>包在文字两端。例如：<code>**粗体**</code>效果为<strong>粗体</strong>。</p>\n<h3 id=\"2-2-斜体\"><a href=\"#2-2-斜体\" class=\"headerlink\" title=\"2.2 斜体\"></a>2.2 斜体</h3><p>使用<code>*</code>或<code>_</code>包在文字两端。例如：<code>*斜体*</code>效果为<em>斜体</em>。</p>\n<p>当然，粗体斜体可以嵌套使用，例如：<code>***粗体+斜体***</code>效果为<strong><em>粗体+斜体</em></strong>。</p>\n<h3 id=\"2-3-高亮\"><a href=\"#2-3-高亮\" class=\"headerlink\" title=\"2.3 高亮\"></a>2.3 高亮</h3><p><del>使用<code>==</code>包在文字两端。例如：<code>==高亮==</code>效果为==高亮==。</del></p>\n<p>Typora需要设置开启高亮。并且如你所见，核心舱不支持高亮。</p>\n<h3 id=\"2-4-删除线\"><a href=\"#2-4-删除线\" class=\"headerlink\" title=\"2.4 删除线\"></a>2.4 删除线</h3><p>使用<code>~~</code>包在文字两端。例如：<code>~~删除线~~</code>效果为<del>删除线</del>。</p>\n<h2 id=\"3-引用\"><a href=\"#3-引用\" class=\"headerlink\" title=\"3 引用\"></a>3 引用</h2><p>引用文字前面加<code>&gt;</code>即可。引用可以嵌套，使用<code>&gt;&gt;</code>、<code>&gt;&gt;&gt;</code>……以此类推。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 一级引用</span></span><br><span class=\"line\">&gt;&gt; 二级引用</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt; 五级引用</span><br><span class=\"line\"><span class=\"quote\">&gt; &gt; &gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 回退到三级引用</span></span><br><span class=\"line\"><span class=\"quote\">&gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 回退到一级引用</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<blockquote>\n<p>一级引用</p>\n<blockquote>\n<p>二级引用</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>五级引用</p>\n</blockquote>\n</blockquote>\n<p>回退到三级引用</p>\n</blockquote>\n</blockquote>\n<p>回退到一级引用</p>\n</blockquote>\n<h2 id=\"4-分割线\"><a href=\"#4-分割线\" class=\"headerlink\" title=\"4 分割线\"></a>4 分割线</h2><p>三个或三个以上的<code>-</code>或<code>*</code>（Typora还支持<code>+</code>）。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">---</span></span><br><span class=\"line\">-----</span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\"><span class=\"strong\">****</span>*</span></span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<p>（一毛一样）</p>\n<h2 id=\"5-HTML\"><a href=\"#5-HTML\" class=\"headerlink\" title=\"5 HTML\"></a>5 HTML</h2><p>直接输入就行，会自动渲染。例如：<code>&lt;b&gt;HTML加粗&lt;/b&gt;</code>效果为<b>HTML加粗</b>。再例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">&quot;黑体&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;red&quot;</span>&gt;</span>HTML内容<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<font face=\"黑体\" size=\"5\" color=\"red\">HTML内容</font>\n\n<p>甚至可以来段更复杂的：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">用户名: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">密　码: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;pwd&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">性　别: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;男&quot;</span> <span class=\"attr\">checked</span>&gt;</span>男<span class=\"symbol\">&amp;nbsp;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;女&quot;</span>&gt;</span>女<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Submit&quot;</span> <span class=\"attr\">Onclick</span>=<span class=\"string\">&quot;alert(&#x27;成功&#x27;)&quot;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;reset&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Reset&quot;</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<form>\n用户名: <input type=\"text\" name=\"user\"><br>\n密　码: <input type=\"password\" name=\"pwd\"><br>\n性　别: <input type=\"radio\" name=\"sex\" value=\"男\" checked>男&nbsp;\n    <input type=\"radio\" name=\"sex\" value=\"女\">女<br>\n<button type=\"button\" name=\"Submit\" Onclick=\"alert('成功')\">提交</button>\n<button type=\"reset\" name=\"Reset\">重置</button>\n</form>\n\n<p>（点一下试试）</p>\n<h2 id=\"6-超链接\"><a href=\"#6-超链接\" class=\"headerlink\" title=\"6 超链接\"></a>6 超链接</h2><p>使用<code>[name](link &quot;tooltip&quot;)</code>表示超链接，其中<code>name</code>是超链接文字，<code>link</code>是超链接地址，<code>tooltip</code>是悬浮文字提示（可选）。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">卡洛的核心舱</span>](<span class=\"link\">https://corecabin.cn &quot;你好&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><a href=\"https://corecabin.cn\" title=\"你好\">卡洛的核心舱</a></p>\n<p>还可以用html的a标签，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://corecabin.cn&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>卡洛的核心舱<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><a href=\"https://corecabin.cn\" target=\"_blank\">卡洛的核心舱</a></p>\n<p>其中<code>target=&quot;_blank&quot;</code>表示在新标签打开。</p>\n<p>当遇到纯链接时，可以用<code>&lt;</code>和<code>&gt;</code>将其包起来，防止后面的文字被解析，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">&lt;https://corecabin.cn/&gt;</span>这是包起来的效果</span><br><span class=\"line\">https://corecabin.cn/这是不包起来的效果</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://corecabin.cn/\">https://corecabin.cn/</a>这是包起来的效果<br><a href=\"https://corecabin.cn/这是不包起来的效果\">https://corecabin.cn/这是不包起来的效果</a></p>\n<h2 id=\"7-图片\"><a href=\"#7-图片\" class=\"headerlink\" title=\"7 图片\"></a>7 图片</h2><p>使用<code>![text](link &quot;tooltip&quot;)</code>表示图片，其中<code>text</code>是显示在图片下方的说明，<code>link</code>是图片路径，可以用相对路径、绝对路径、互联网路径，<code>tooltip</code>是悬浮文字提示（可选）。</p>\n<p>例如（互联网路径）：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">中国空间站</span>](<span class=\"link\">https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg &quot;天和核心舱&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg\" alt=\"中国空间站\" title=\"天和核心舱\"></p>\n<p>以及套娃设置图片的超链接，例如（相对路径）：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">![卡洛的核心舱</span>](<span class=\"link\">/img/corecabin-textlogo-bgcolor.jpg</span>)](<span class=\"link\">https://corecabin.cn</span>)</span><br></pre></td></tr></table></figure>\n<p>效果为：</p>\n<p><a href=\"https://corecabin.cn\"><img src=\"/img/corecabin-textlogo-bgcolor.jpg\" alt=\"卡洛的核心舱\"></a></p>\n<p>注意以上情况在当前主题下可能会遇到图片文字说明的显示bug。</p>\n<h2 id=\"8-列表\"><a href=\"#8-列表\" class=\"headerlink\" title=\"8 列表\"></a>8 列表</h2><h3 id=\"8-1-无序列表\"><a href=\"#8-1-无序列表\" class=\"headerlink\" title=\"8.1 无序列表\"></a>8.1 无序列表</h3><p>文字前面加<code>-</code>或<code>*</code>或<code>+</code>即可，注意符号与文字之间要有空格。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 无序列表1</span><br><span class=\"line\"><span class=\"bullet\">*</span> 无序列表2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表3</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ul>\n<li>无序列表1</li>\n</ul>\n<ul>\n<li>无序列表2</li>\n</ul>\n<ul>\n<li>无序列表3</li>\n</ul>\n<h3 id=\"8-2-有序列表\"><a href=\"#8-2-有序列表\" class=\"headerlink\" title=\"8.2 有序列表\"></a>8.2 有序列表</h3><p>文字前面加数字与<code>.</code>即可，注意符号与文字之间要有空格。注意显示效果与实际输入数字无关，而与当前次序有关。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> 第一点</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 第二点</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 大概是第四点？</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ol>\n<li>第一点</li>\n<li>第二点</li>\n<li>大概是第四点？</li>\n</ol>\n<h3 id=\"8-3-列表嵌套\"><a href=\"#8-3-列表嵌套\" class=\"headerlink\" title=\"8.3 列表嵌套\"></a>8.3 列表嵌套</h3><p>不同级列表之间通过缩进即可嵌套，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 一级无序</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> 二级无序1</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> 二级无序2</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 一级有序</span><br><span class=\"line\"><span class=\"bullet\">\t1.</span> 二级有序</span><br><span class=\"line\"><span class=\"bullet\">\t\t+</span> 三级无序</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ul>\n<li>一级无序<ul>\n<li>二级无序1</li>\n<li>二级无序2</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>一级有序<ol>\n<li>二级有序<ul>\n<li>三级无序</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"9-代码\"><a href=\"#9-代码\" class=\"headerlink\" title=\"9 代码\"></a>9 代码</h2><h3 id=\"9-1-行内代码\"><a href=\"#9-1-行内代码\" class=\"headerlink\" title=\"9.1 行内代码\"></a>9.1 行内代码</h3><p>使用“`”包在代码两端。例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`javascript`</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><code>javascript</code></p>\n<p>本文也大量用到行内代码表示文字高亮。</p>\n<h3 id=\"9-2-代码块\"><a href=\"#9-2-代码块\" class=\"headerlink\" title=\"9.2 代码块\"></a>9.2 代码块</h3><p>使用3个“`”包在代码两端，第一行可以加入代码语言，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">function fact(num) &#123;</span></span><br><span class=\"line\"><span class=\"code\">\tif (num === 1) &#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 1;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse &#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn num * fact(num - 1);</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">&#125;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fact</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num * fact(num - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>本文也大量用到代码块表示Markdown示例。</p>\n<h2 id=\"10-数学公式\"><a href=\"#10-数学公式\" class=\"headerlink\" title=\"10 数学公式\"></a>10 数学公式</h2><p>Markdown支持LaTeX公式。行内公式用<code>$</code>包在公式两端（Typora需要设置开启），公式块用<code>$$</code>包在公式两端，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当 $a \\ne 0$, 此方程式有两个解 $ax^2 + bx + c = 0$，他们是</span><br><span class=\"line\">$$</span><br><span class=\"line\">x = &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; \\over 2a&#125;.</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p>当 $a \\ne 0$​, 此方程式有两个解 $ax^2 + bx + c = 0$​，他们是</p>\n<script type=\"math/tex; mode=display\">\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.</script><p>更多公式相关见《<a href=\"/2021/08/11/latex-mathematical-formula-handbook/\" title=\"LaTeX数学公式手册\">LaTeX数学公式手册</a>》。</p>\n<h2 id=\"11-任务列表（Todo-List）\"><a href=\"#11-任务列表（Todo-List）\" class=\"headerlink\" title=\"11 任务列表（Todo List）\"></a>11 任务列表（Todo List）</h2><p>文字前面加<code>- [ ]</code>或<code>- [x]</code>即可，空格表示未完成，<code>x</code>表示已完成。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> [x] 甜甜圈</span><br><span class=\"line\"><span class=\"bullet\">-</span> [x] 珍珠奶茶</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 方便面</span><br><span class=\"line\"><span class=\"bullet\">-</span> [x] 火锅</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 米饭</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 大盘鸡</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked></input> 甜甜圈</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked></input> 珍珠奶茶</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 方便面</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked></input> 火锅</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 米饭</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 大盘鸡</li>\n</ul>\n<h2 id=\"12-表格\"><a href=\"#12-表格\" class=\"headerlink\" title=\"12 表格\"></a>12 表格</h2><p>语法为：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">---|---|---</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br></pre></td></tr></table></figure>\n<p>第二行用来分割表头与内容。<code>-</code>的个数有一个就行，此处多加了几个。</p>\n<p>文字默认居左。<code>-</code>的两边加<code>:</code>表示该列居中，<code>-</code>的右边加<code>:</code>表示该列居右。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名（居左）|年级（居中）|年龄（居右）</span><br><span class=\"line\">-----|:-----:|-----:</span><br><span class=\"line\">张三|大三|21</span><br><span class=\"line\">李四|大一|18</span><br><span class=\"line\">王五|研二|24</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>姓名（居左）</th>\n<th style=\"text-align:center\">年级（居中）</th>\n<th style=\"text-align:right\">年龄（居右）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">大三</td>\n<td style=\"text-align:right\">21</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">大一</td>\n<td style=\"text-align:right\">18</td>\n</tr>\n<tr>\n<td>王五</td>\n<td style=\"text-align:center\">研二</td>\n<td style=\"text-align:right\">24</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"13-转义字符\"><a href=\"#13-转义字符\" class=\"headerlink\" title=\"13 转义字符\"></a>13 转义字符</h2><p>在输入特殊符号，尤其是Markdown和HTML中的部分符号时，可以使用转义字符。</p>\n<h3 id=\"13-1-Markdown转义字符\"><a href=\"#13-1-Markdown转义字符\" class=\"headerlink\" title=\"13.1 Markdown转义字符\"></a>13.1 Markdown转义字符</h3><p>使用<code>\\</code>置于符号前。</p>\n<p>例如输入<code>*你好*</code>会显示<em>你好</em>，输入<code>\\*你好\\*</code>效果为*你好*。</p>\n<p>具体如下：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">字符</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">转义字符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:center\">反斜杠</td>\n<td style=\"text-align:center\"><code>\\\\</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><span>`</span></td>\n<td style=\"text-align:center\">反引号</td>\n<td style=\"text-align:center\"><span>\\`</span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">星号</td>\n<td style=\"text-align:center\"><code>\\*</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">_</td>\n<td style=\"text-align:center\">下划线</td>\n<td style=\"text-align:center\"><code>\\_</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{}</td>\n<td style=\"text-align:center\">花括号</td>\n<td style=\"text-align:center\"><code>\\&#123;\\&#125;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:center\">方括号</td>\n<td style=\"text-align:center\"><code>\\[\\]</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:center\">小括号</td>\n<td style=\"text-align:center\"><code>\\(\\)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#</td>\n<td style=\"text-align:center\">井号</td>\n<td style=\"text-align:center\"><code>\\#</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">加号</td>\n<td style=\"text-align:center\"><code>\\+</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">减号</td>\n<td style=\"text-align:center\"><code>\\-</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">英文句点</td>\n<td style=\"text-align:center\"><code>\\.</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!</td>\n<td style=\"text-align:center\">英文感叹号</td>\n<td style=\"text-align:center\"><code>\\!</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"13-2-HTML转义字符\"><a href=\"#13-2-HTML转义字符\" class=\"headerlink\" title=\"13.2 HTML转义字符\"></a>13.2 HTML转义字符</h3><p>直接输入HTML转义字符，具体如下：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">显示结果</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">输入</th>\n<th style=\"text-align:center\">实体编号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">空格</td>\n<td style=\"text-align:center\"><code>&amp;nbsp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#160;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于号</td>\n<td style=\"text-align:center\"><code>&amp;lt;</code></td>\n<td style=\"text-align:center\"><code>&amp;#60;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于号</td>\n<td style=\"text-align:center\"><code>&amp;gt;</code></td>\n<td style=\"text-align:center\"><code>&amp;#62;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">和号</td>\n<td style=\"text-align:center\"><code>&amp;amp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#38;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">“</td>\n<td style=\"text-align:center\">引号</td>\n<td style=\"text-align:center\"><code>&amp;quot;</code></td>\n<td style=\"text-align:center\"><code>&amp;#34;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">‘</td>\n<td style=\"text-align:center\">撇号</td>\n<td style=\"text-align:center\"><code>&amp;apos;</code>(IE不支持)</td>\n<td style=\"text-align:center\"><code>&amp;#39;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">￠</td>\n<td style=\"text-align:center\">分</td>\n<td style=\"text-align:center\"><code>&amp;cent;</code></td>\n<td style=\"text-align:center\"><code>&amp;#162;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">£</td>\n<td style=\"text-align:center\">镑</td>\n<td style=\"text-align:center\"><code>&amp;pound;</code></td>\n<td style=\"text-align:center\"><code>&amp;#163;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">¥</td>\n<td style=\"text-align:center\">日圆</td>\n<td style=\"text-align:center\"><code>&amp;yen;</code></td>\n<td style=\"text-align:center\"><code>&amp;#165;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">§</td>\n<td style=\"text-align:center\">节</td>\n<td style=\"text-align:center\"><code>&amp;sect;</code></td>\n<td style=\"text-align:center\"><code>&amp;#167;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">©</td>\n<td style=\"text-align:center\">版权</td>\n<td style=\"text-align:center\"><code>&amp;copy;</code></td>\n<td style=\"text-align:center\"><code>&amp;#169;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">®</td>\n<td style=\"text-align:center\">注册商标</td>\n<td style=\"text-align:center\"><code>&amp;reg;</code></td>\n<td style=\"text-align:center\"><code>&amp;#174;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">×</td>\n<td style=\"text-align:center\">乘号</td>\n<td style=\"text-align:center\"><code>&amp;times;</code></td>\n<td style=\"text-align:center\"><code>&amp;#215;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">÷</td>\n<td style=\"text-align:center\">除号</td>\n<td style=\"text-align:center\"><code>&amp;divide;</code></td>\n<td style=\"text-align:center\"><code>&amp;#247;</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{}},"excerpt":"<p>Markdown是一种纯文本格式标记语言，它通过简单的标记语法实现了格式排版，且易学、易读、易写，因此非常流行。本文及本博客的文章均使用Markdown语法书写。</p>","more":"<h2 id=\"0-简单介绍\"><a href=\"#0-简单介绍\" class=\"headerlink\" title=\"0 简单介绍\"></a>0 简单介绍</h2><p><strong>优点：</strong></p>\n<ol>\n<li>纯文本，编辑效果一致，可以无视排版，专心写作。</li>\n<li>操作简单，例如新增标题只需要在标题内容前加<code>#</code>即可。</li>\n</ol>\n<p><strong>缺点：</strong></p>\n<ol>\n<li>需要记一些语法，但非常简单。</li>\n<li>有些平台不支持Markdown编辑模式。</li>\n</ol>\n<p><strong>常用编辑器：</strong></p>\n<ul>\n<li>Typora（Windows，大力推荐，与其他编辑器不同的是编辑效果即排版效果，无需左右分栏对照）</li>\n<li>Simplenote（IOS，免费，支持中文、云端存储、iPad）</li>\n</ul>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1 标题\"></a>1 标题</h2><p>标题文字前面加<code>#</code>即可，注意<code>#</code>与文字之间要有空格。几级标题加几个<code>#</code>，共有六级标题。例如本段落标题的源码为：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">## 1、标题</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-字体\"><a href=\"#2-字体\" class=\"headerlink\" title=\"2 字体\"></a>2 字体</h2><h3 id=\"2-1-粗体\"><a href=\"#2-1-粗体\" class=\"headerlink\" title=\"2.1 粗体\"></a>2.1 粗体</h3><p>使用<code>**</code>或<code>__</code>包在文字两端。例如：<code>**粗体**</code>效果为<strong>粗体</strong>。</p>\n<h3 id=\"2-2-斜体\"><a href=\"#2-2-斜体\" class=\"headerlink\" title=\"2.2 斜体\"></a>2.2 斜体</h3><p>使用<code>*</code>或<code>_</code>包在文字两端。例如：<code>*斜体*</code>效果为<em>斜体</em>。</p>\n<p>当然，粗体斜体可以嵌套使用，例如：<code>***粗体+斜体***</code>效果为<strong><em>粗体+斜体</em></strong>。</p>\n<h3 id=\"2-3-高亮\"><a href=\"#2-3-高亮\" class=\"headerlink\" title=\"2.3 高亮\"></a>2.3 高亮</h3><p><del>使用<code>==</code>包在文字两端。例如：<code>==高亮==</code>效果为==高亮==。</del></p>\n<p>Typora需要设置开启高亮。并且如你所见，核心舱不支持高亮。</p>\n<h3 id=\"2-4-删除线\"><a href=\"#2-4-删除线\" class=\"headerlink\" title=\"2.4 删除线\"></a>2.4 删除线</h3><p>使用<code>~~</code>包在文字两端。例如：<code>~~删除线~~</code>效果为<del>删除线</del>。</p>\n<h2 id=\"3-引用\"><a href=\"#3-引用\" class=\"headerlink\" title=\"3 引用\"></a>3 引用</h2><p>引用文字前面加<code>&gt;</code>即可。引用可以嵌套，使用<code>&gt;&gt;</code>、<code>&gt;&gt;&gt;</code>……以此类推。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 一级引用</span></span><br><span class=\"line\">&gt;&gt; 二级引用</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt; 五级引用</span><br><span class=\"line\"><span class=\"quote\">&gt; &gt; &gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 回退到三级引用</span></span><br><span class=\"line\"><span class=\"quote\">&gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 回退到一级引用</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<blockquote>\n<p>一级引用</p>\n<blockquote>\n<p>二级引用</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>五级引用</p>\n</blockquote>\n</blockquote>\n<p>回退到三级引用</p>\n</blockquote>\n</blockquote>\n<p>回退到一级引用</p>\n</blockquote>\n<h2 id=\"4-分割线\"><a href=\"#4-分割线\" class=\"headerlink\" title=\"4 分割线\"></a>4 分割线</h2><p>三个或三个以上的<code>-</code>或<code>*</code>（Typora还支持<code>+</code>）。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">---</span></span><br><span class=\"line\">-----</span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\"><span class=\"strong\">****</span>*</span></span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<p>（一毛一样）</p>\n<h2 id=\"5-HTML\"><a href=\"#5-HTML\" class=\"headerlink\" title=\"5 HTML\"></a>5 HTML</h2><p>直接输入就行，会自动渲染。例如：<code>&lt;b&gt;HTML加粗&lt;/b&gt;</code>效果为<b>HTML加粗</b>。再例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">&quot;黑体&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;red&quot;</span>&gt;</span>HTML内容<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<font face=\"黑体\" size=\"5\" color=\"red\">HTML内容</font>\n\n<p>甚至可以来段更复杂的：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">用户名: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">密　码: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;pwd&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">性　别: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;男&quot;</span> <span class=\"attr\">checked</span>&gt;</span>男<span class=\"symbol\">&amp;nbsp;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;女&quot;</span>&gt;</span>女<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Submit&quot;</span> <span class=\"attr\">Onclick</span>=<span class=\"string\">&quot;alert(&#x27;成功&#x27;)&quot;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;reset&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Reset&quot;</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<form>\n用户名: <input type=\"text\" name=\"user\"><br>\n密　码: <input type=\"password\" name=\"pwd\"><br>\n性　别: <input type=\"radio\" name=\"sex\" value=\"男\" checked>男&nbsp;\n    <input type=\"radio\" name=\"sex\" value=\"女\">女<br>\n<button type=\"button\" name=\"Submit\" Onclick=\"alert('成功')\">提交</button>\n<button type=\"reset\" name=\"Reset\">重置</button>\n</form>\n\n<p>（点一下试试）</p>\n<h2 id=\"6-超链接\"><a href=\"#6-超链接\" class=\"headerlink\" title=\"6 超链接\"></a>6 超链接</h2><p>使用<code>[name](link &quot;tooltip&quot;)</code>表示超链接，其中<code>name</code>是超链接文字，<code>link</code>是超链接地址，<code>tooltip</code>是悬浮文字提示（可选）。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">卡洛的核心舱</span>](<span class=\"link\">https://corecabin.cn &quot;你好&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><a href=\"https://corecabin.cn\" title=\"你好\">卡洛的核心舱</a></p>\n<p>还可以用html的a标签，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://corecabin.cn&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>卡洛的核心舱<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><a href=\"https://corecabin.cn\" target=\"_blank\">卡洛的核心舱</a></p>\n<p>其中<code>target=&quot;_blank&quot;</code>表示在新标签打开。</p>\n<p>当遇到纯链接时，可以用<code>&lt;</code>和<code>&gt;</code>将其包起来，防止后面的文字被解析，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">&lt;https://corecabin.cn/&gt;</span>这是包起来的效果</span><br><span class=\"line\">https://corecabin.cn/这是不包起来的效果</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://corecabin.cn/\">https://corecabin.cn/</a>这是包起来的效果<br><a href=\"https://corecabin.cn/这是不包起来的效果\">https://corecabin.cn/这是不包起来的效果</a></p>\n<h2 id=\"7-图片\"><a href=\"#7-图片\" class=\"headerlink\" title=\"7 图片\"></a>7 图片</h2><p>使用<code>![text](link &quot;tooltip&quot;)</code>表示图片，其中<code>text</code>是显示在图片下方的说明，<code>link</code>是图片路径，可以用相对路径、绝对路径、互联网路径，<code>tooltip</code>是悬浮文字提示（可选）。</p>\n<p>例如（互联网路径）：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">中国空间站</span>](<span class=\"link\">https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg &quot;天和核心舱&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg\" alt=\"中国空间站\" title=\"天和核心舱\"></p>\n<p>以及套娃设置图片的超链接，例如（相对路径）：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">![卡洛的核心舱</span>](<span class=\"link\">/img/corecabin-textlogo-bgcolor.jpg</span>)](<span class=\"link\">https://corecabin.cn</span>)</span><br></pre></td></tr></table></figure>\n<p>效果为：</p>\n<p><a href=\"https://corecabin.cn\"><img src=\"/img/corecabin-textlogo-bgcolor.jpg\" alt=\"卡洛的核心舱\"></a></p>\n<p>注意以上情况在当前主题下可能会遇到图片文字说明的显示bug。</p>\n<h2 id=\"8-列表\"><a href=\"#8-列表\" class=\"headerlink\" title=\"8 列表\"></a>8 列表</h2><h3 id=\"8-1-无序列表\"><a href=\"#8-1-无序列表\" class=\"headerlink\" title=\"8.1 无序列表\"></a>8.1 无序列表</h3><p>文字前面加<code>-</code>或<code>*</code>或<code>+</code>即可，注意符号与文字之间要有空格。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 无序列表1</span><br><span class=\"line\"><span class=\"bullet\">*</span> 无序列表2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表3</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ul>\n<li>无序列表1</li>\n</ul>\n<ul>\n<li>无序列表2</li>\n</ul>\n<ul>\n<li>无序列表3</li>\n</ul>\n<h3 id=\"8-2-有序列表\"><a href=\"#8-2-有序列表\" class=\"headerlink\" title=\"8.2 有序列表\"></a>8.2 有序列表</h3><p>文字前面加数字与<code>.</code>即可，注意符号与文字之间要有空格。注意显示效果与实际输入数字无关，而与当前次序有关。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> 第一点</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 第二点</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 大概是第四点？</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ol>\n<li>第一点</li>\n<li>第二点</li>\n<li>大概是第四点？</li>\n</ol>\n<h3 id=\"8-3-列表嵌套\"><a href=\"#8-3-列表嵌套\" class=\"headerlink\" title=\"8.3 列表嵌套\"></a>8.3 列表嵌套</h3><p>不同级列表之间通过缩进即可嵌套，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 一级无序</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> 二级无序1</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> 二级无序2</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 一级有序</span><br><span class=\"line\"><span class=\"bullet\">\t1.</span> 二级有序</span><br><span class=\"line\"><span class=\"bullet\">\t\t+</span> 三级无序</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ul>\n<li>一级无序<ul>\n<li>二级无序1</li>\n<li>二级无序2</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>一级有序<ol>\n<li>二级有序<ul>\n<li>三级无序</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"9-代码\"><a href=\"#9-代码\" class=\"headerlink\" title=\"9 代码\"></a>9 代码</h2><h3 id=\"9-1-行内代码\"><a href=\"#9-1-行内代码\" class=\"headerlink\" title=\"9.1 行内代码\"></a>9.1 行内代码</h3><p>使用“`”包在代码两端。例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`javascript`</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p><code>javascript</code></p>\n<p>本文也大量用到行内代码表示文字高亮。</p>\n<h3 id=\"9-2-代码块\"><a href=\"#9-2-代码块\" class=\"headerlink\" title=\"9.2 代码块\"></a>9.2 代码块</h3><p>使用3个“`”包在代码两端，第一行可以加入代码语言，例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">function fact(num) &#123;</span></span><br><span class=\"line\"><span class=\"code\">\tif (num === 1) &#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 1;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse &#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn num * fact(num - 1);</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">&#125;</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fact</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> num * fact(num - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>本文也大量用到代码块表示Markdown示例。</p>\n<h2 id=\"10-数学公式\"><a href=\"#10-数学公式\" class=\"headerlink\" title=\"10 数学公式\"></a>10 数学公式</h2><p>Markdown支持LaTeX公式。行内公式用<code>$</code>包在公式两端（Typora需要设置开启），公式块用<code>$$</code>包在公式两端，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当 $a \\ne 0$, 此方程式有两个解 $ax^2 + bx + c = 0$，他们是</span><br><span class=\"line\">$$</span><br><span class=\"line\">x = &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; \\over 2a&#125;.</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<p>当 $a \\ne 0$​, 此方程式有两个解 $ax^2 + bx + c = 0$​，他们是</p>\n<script type=\"math/tex; mode=display\">\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.</script><p>更多公式相关见《<a href=\"/2021/08/11/latex-mathematical-formula-handbook/\" title=\"LaTeX数学公式手册\">LaTeX数学公式手册</a>》。</p>\n<h2 id=\"11-任务列表（Todo-List）\"><a href=\"#11-任务列表（Todo-List）\" class=\"headerlink\" title=\"11 任务列表（Todo List）\"></a>11 任务列表（Todo List）</h2><p>文字前面加<code>- [ ]</code>或<code>- [x]</code>即可，空格表示未完成，<code>x</code>表示已完成。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> [x] 甜甜圈</span><br><span class=\"line\"><span class=\"bullet\">-</span> [x] 珍珠奶茶</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 方便面</span><br><span class=\"line\"><span class=\"bullet\">-</span> [x] 火锅</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 米饭</span><br><span class=\"line\"><span class=\"bullet\">-</span> [ ] 大盘鸡</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked></input> 甜甜圈</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked></input> 珍珠奶茶</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 方便面</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked></input> 火锅</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 米饭</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 大盘鸡</li>\n</ul>\n<h2 id=\"12-表格\"><a href=\"#12-表格\" class=\"headerlink\" title=\"12 表格\"></a>12 表格</h2><p>语法为：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">---|---|---</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br></pre></td></tr></table></figure>\n<p>第二行用来分割表头与内容。<code>-</code>的个数有一个就行，此处多加了几个。</p>\n<p>文字默认居左。<code>-</code>的两边加<code>:</code>表示该列居中，<code>-</code>的右边加<code>:</code>表示该列居右。</p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">姓名（居左）|年级（居中）|年龄（居右）</span><br><span class=\"line\">-----|:-----:|-----:</span><br><span class=\"line\">张三|大三|21</span><br><span class=\"line\">李四|大一|18</span><br><span class=\"line\">王五|研二|24</span><br></pre></td></tr></table></figure>\n<p>效果为</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>姓名（居左）</th>\n<th style=\"text-align:center\">年级（居中）</th>\n<th style=\"text-align:right\">年龄（居右）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">大三</td>\n<td style=\"text-align:right\">21</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">大一</td>\n<td style=\"text-align:right\">18</td>\n</tr>\n<tr>\n<td>王五</td>\n<td style=\"text-align:center\">研二</td>\n<td style=\"text-align:right\">24</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"13-转义字符\"><a href=\"#13-转义字符\" class=\"headerlink\" title=\"13 转义字符\"></a>13 转义字符</h2><p>在输入特殊符号，尤其是Markdown和HTML中的部分符号时，可以使用转义字符。</p>\n<h3 id=\"13-1-Markdown转义字符\"><a href=\"#13-1-Markdown转义字符\" class=\"headerlink\" title=\"13.1 Markdown转义字符\"></a>13.1 Markdown转义字符</h3><p>使用<code>\\</code>置于符号前。</p>\n<p>例如输入<code>*你好*</code>会显示<em>你好</em>，输入<code>\\*你好\\*</code>效果为*你好*。</p>\n<p>具体如下：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">字符</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">转义字符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:center\">反斜杠</td>\n<td style=\"text-align:center\"><code>\\\\</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><span>`</span></td>\n<td style=\"text-align:center\">反引号</td>\n<td style=\"text-align:center\"><span>\\`</span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">星号</td>\n<td style=\"text-align:center\"><code>\\*</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">_</td>\n<td style=\"text-align:center\">下划线</td>\n<td style=\"text-align:center\"><code>\\_</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{}</td>\n<td style=\"text-align:center\">花括号</td>\n<td style=\"text-align:center\"><code>\\&#123;\\&#125;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[]</td>\n<td style=\"text-align:center\">方括号</td>\n<td style=\"text-align:center\"><code>\\[\\]</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:center\">小括号</td>\n<td style=\"text-align:center\"><code>\\(\\)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#</td>\n<td style=\"text-align:center\">井号</td>\n<td style=\"text-align:center\"><code>\\#</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">加号</td>\n<td style=\"text-align:center\"><code>\\+</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">减号</td>\n<td style=\"text-align:center\"><code>\\-</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">英文句点</td>\n<td style=\"text-align:center\"><code>\\.</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!</td>\n<td style=\"text-align:center\">英文感叹号</td>\n<td style=\"text-align:center\"><code>\\!</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"13-2-HTML转义字符\"><a href=\"#13-2-HTML转义字符\" class=\"headerlink\" title=\"13.2 HTML转义字符\"></a>13.2 HTML转义字符</h3><p>直接输入HTML转义字符，具体如下：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">显示结果</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">输入</th>\n<th style=\"text-align:center\">实体编号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">空格</td>\n<td style=\"text-align:center\"><code>&amp;nbsp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#160;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于号</td>\n<td style=\"text-align:center\"><code>&amp;lt;</code></td>\n<td style=\"text-align:center\"><code>&amp;#60;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于号</td>\n<td style=\"text-align:center\"><code>&amp;gt;</code></td>\n<td style=\"text-align:center\"><code>&amp;#62;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">和号</td>\n<td style=\"text-align:center\"><code>&amp;amp;</code></td>\n<td style=\"text-align:center\"><code>&amp;#38;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">“</td>\n<td style=\"text-align:center\">引号</td>\n<td style=\"text-align:center\"><code>&amp;quot;</code></td>\n<td style=\"text-align:center\"><code>&amp;#34;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">‘</td>\n<td style=\"text-align:center\">撇号</td>\n<td style=\"text-align:center\"><code>&amp;apos;</code>(IE不支持)</td>\n<td style=\"text-align:center\"><code>&amp;#39;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">￠</td>\n<td style=\"text-align:center\">分</td>\n<td style=\"text-align:center\"><code>&amp;cent;</code></td>\n<td style=\"text-align:center\"><code>&amp;#162;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">£</td>\n<td style=\"text-align:center\">镑</td>\n<td style=\"text-align:center\"><code>&amp;pound;</code></td>\n<td style=\"text-align:center\"><code>&amp;#163;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">¥</td>\n<td style=\"text-align:center\">日圆</td>\n<td style=\"text-align:center\"><code>&amp;yen;</code></td>\n<td style=\"text-align:center\"><code>&amp;#165;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">§</td>\n<td style=\"text-align:center\">节</td>\n<td style=\"text-align:center\"><code>&amp;sect;</code></td>\n<td style=\"text-align:center\"><code>&amp;#167;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">©</td>\n<td style=\"text-align:center\">版权</td>\n<td style=\"text-align:center\"><code>&amp;copy;</code></td>\n<td style=\"text-align:center\"><code>&amp;#169;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">®</td>\n<td style=\"text-align:center\">注册商标</td>\n<td style=\"text-align:center\"><code>&amp;reg;</code></td>\n<td style=\"text-align:center\"><code>&amp;#174;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">×</td>\n<td style=\"text-align:center\">乘号</td>\n<td style=\"text-align:center\"><code>&amp;times;</code></td>\n<td style=\"text-align:center\"><code>&amp;#215;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">÷</td>\n<td style=\"text-align:center\">除号</td>\n<td style=\"text-align:center\"><code>&amp;divide;</code></td>\n<td style=\"text-align:center\"><code>&amp;#247;</code></td>\n</tr>\n</tbody>\n</table>\n</div>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg","popularPost_tmp_gaData":{"updated":"Mon Feb 28 2022 20:13:38 GMT+0800 (中国标准时间)","title":"Markdown基本语法与示例","path":"2021/08/04/markdown-basic-syntax-and-examples/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/kongjianzhan.jpg","excerpt":"<p>Markdown是一种纯文本格式标记语言，它通过简单的标记语法实现了格式排版，且易学、易读、易写，因此非常流行。本文及本博客的文章均使用Markdown语法书写。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-03T16:18:05.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-03T16:18:05.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Markdown","tags":["技术","Markdown","HTML"],"internalLinks":["2021/08/11/latex-mathematical-formula-handbook/"],"keywords":[],"keywordsLength":0},"length":4122},{"title":"解决hexo-renderer-kramed渲染冲突的部分问题","date":"2021-08-14T12:16:47.000Z","comments":1,"_content":"\n因[hexo-renderer-marked](https://www.npmjs.com/package/hexo-renderer-marked)不支持数学公式的渲染，其他渲染器又有一些问题，如[hexo-renderer-pandoc](https://www.npmjs.com/package/hexo-renderer-pandoc)过于沉重，[hexo-renderer-markdown-it](https://www.npmjs.com/package/hexo-renderer-markdown-it)对NexT主题支持不佳，因此选用[hexo-renderer-kramed](https://www.npmjs.com/package/hexo-renderer-kramed)渲染器。本文解决了该渲染器在渲染Markdown及数学公式时遇到的部分问题。\n\n<!--more-->\n\n## 1 hexo-renderer-kramed不能渲染Todo List\n\n原来的渲染器hexo-renderer-marked是支持的，那就翻一下[hexo-renderer-marked的GitHub仓库](https://github.com/hexojs/hexo-renderer-marked)的Pull Request。\n\n发现在这个[PR](https://github.com/hexojs/hexo-renderer-marked/pull/32)里，hexo-renderer-marked加入了对Todo List的支持，那就拷贝这个PR中`lib/renderer.js`里新增的代码：\n\n```javascript\n// Support To-Do List\nRenderer.prototype.listitem = function(text) {\n  if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\n    text = text.replace(/^\\s*\\[ \\]\\s*/, '<input type=\"checkbox\"></input> ').replace(/^\\s*\\[x\\]\\s*/, '<input type=\"checkbox\" checked></input> ');\n    return '<li style=\"list-style: none\">' + text + '</li>\\n';\n  } else {\n    return '<li>' + text + '</li>\\n';\n  }\n};\n```\n\n加入到本地的`hexo`文件夹的`/node_modules/hexo-renderer-kramed/lib/renderer.js`的第19行中。\n\n保存后重新`hexo clean`、`hexo g`，就渲染成功了。\n\n其实这个解决方案不是我翻PR找到的，而是我在GitHub乱搜索时[在这里](https://github.com/wafer-li/wafer-li.github.io/blob/source/src/blog-corners/tech/tinkering/hexo/Hexo%20Experience.md)找到的。本来并不指望解决这个问题的，又学到一招。\n\n## 2 hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\n\n关于如何修改语义冲突，网上的教程讲得很详细了，比如：\n\n- [hexo下LaTeX无法显示的解决方案 - zealscott - 简书](https://www.jianshu.com/p/d95a4795f3a8)\n- [解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志](https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html)\n\n但网上找到的教程通常只讲述了如何修改`_`和`\\\\`的冲突。我将我遇到的所有问题一一整理如下。\n\n下文的问题通常是行内公式的问题，目前看来公式块受到的影响比较小。\n\n### 2.1 行内公式与行内代码冲突\n\n**问题描述**：把行内公式作为行内代码输入时（如下），会显示异常，即``$`被转义成`$`了。\n\n```markdown\n`$ a+b $`\n```\n\n翻一下[hexo-renderer-kramed的文档](https://github.com/sun11/hexo-renderer-kramed)，发现作者写在这里了：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-06.png)\n\n所以要想输入行内代码中的公式，在`$`前后加上空格就行了：\n\n```markdown\n` $ a+b $ `\n```\n\n### 2.2 下划线`_`被转义为斜体而非LaTeX下标\n\n**问题描述**：当公式中出现多个下划线时，会被kramed渲染为Markdown斜体，导致公式显示异常。\n\nMarkdown本身的语法是支持`*`和`_`都被转义为*斜体*的，所以我们可以取消掉kramed对`_`的转义。\n\n打开本地`hexo`文件夹下的`/node_modules/kramed/lib/rules/inline.js`，找到第20行如下代码：\n\n```javascript\nem: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n\n修改为：\n\n```javascript\nem: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n\n就取消了对下划线`_`的转义。\n\n以后使用斜体的话只用`*`符号就够了。如果LaTeX要使用大量`*`符号，可用`\\ast`代替。\n\n### 2.3 反斜杠`\\\\`被转义为`\\`而非LaTeX换行\n\n**问题描述**：当公式中出现`\\\\`表示换行时，会被kramed渲染为`\\`，导致公式显示异常。\n\n取消掉对`\\\\`的转义就行了。\n\n同上，找到`inline.js`中第11行如下代码：\n\n```javascript\nescape: /^\\\\([\\\\`*\\[\\]()#$+\\-.!_>])/,\n```\n\n修改为：\n\n```javascript\nescape: /^\\\\([`*\\[\\]()#$+\\-.!_>])/,\n```\n\n就取消了对反斜杠`\\\\`的转义。\n\n### 2.4 LaTeX紧贴符`\\!`不被转义\n\n**问题描述**：当公式中出现`\\!`表示紧贴符号时，会被kramed渲染为`!`，导致公式显示异常。\n\n同上，把`escape:`后的正则表达式中的`!`去掉即可，取消掉对`\\!`的转义。\n\n### 2.5 反斜杠加竖线`\\|`被转义为`|`而非LaTeX双竖线\n\n**问题描述**：当公式中出现`\\|`表示紧贴符号时，会被kramed渲染为`|`，导致公式显示异常。\n\n真是个困扰了半天的bug，上面的`escape:`后面也没有`|`啊。\n\n找了我n个小时，原来还是`inline.js`代码的问题。\n\n找到第64行如下代码：\n\n```javascript\nescape: replace(inline.escape)('])', '~|])')(),\n```\n\n修改为：\n\n```javascript\nescape: replace(inline.escape)('])', '~])')(),\n```\n\n就取消了对`\\|`的转义。\n\n执行完以上步骤后，记得`hexo clean`、`hexo g`走一波。\n\n**总结：哪里被kramed转义就检查`escape`对应的部分。**\n\n## 3 总结\n\n- 多上GitHub看看原仓库的文档、issues、PR，会有收获的，实在不行直接搜，比百度好使。\n- 熟悉流程，**Hexo的原理是根据渲染器，把Markdown语法转为HTML语法。**所以一些显示bug不一定是主题的问题，而很有可能是渲染器的问题。所以看看渲染器的源码总是有收获的。\n\n","source":"_posts/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts.md","raw":"---\ntitle: 解决hexo-renderer-kramed渲染冲突的部分问题\ndate: 2021-08-14 20:16:47\ncategories: Hexo\ntags:\n  - 博客\n  - Hexo\n  - 技术\n  - 技巧\n  - bug\n  - GitHub\ncomments: true\n---\n\n因[hexo-renderer-marked](https://www.npmjs.com/package/hexo-renderer-marked)不支持数学公式的渲染，其他渲染器又有一些问题，如[hexo-renderer-pandoc](https://www.npmjs.com/package/hexo-renderer-pandoc)过于沉重，[hexo-renderer-markdown-it](https://www.npmjs.com/package/hexo-renderer-markdown-it)对NexT主题支持不佳，因此选用[hexo-renderer-kramed](https://www.npmjs.com/package/hexo-renderer-kramed)渲染器。本文解决了该渲染器在渲染Markdown及数学公式时遇到的部分问题。\n\n<!--more-->\n\n## 1 hexo-renderer-kramed不能渲染Todo List\n\n原来的渲染器hexo-renderer-marked是支持的，那就翻一下[hexo-renderer-marked的GitHub仓库](https://github.com/hexojs/hexo-renderer-marked)的Pull Request。\n\n发现在这个[PR](https://github.com/hexojs/hexo-renderer-marked/pull/32)里，hexo-renderer-marked加入了对Todo List的支持，那就拷贝这个PR中`lib/renderer.js`里新增的代码：\n\n```javascript\n// Support To-Do List\nRenderer.prototype.listitem = function(text) {\n  if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\n    text = text.replace(/^\\s*\\[ \\]\\s*/, '<input type=\"checkbox\"></input> ').replace(/^\\s*\\[x\\]\\s*/, '<input type=\"checkbox\" checked></input> ');\n    return '<li style=\"list-style: none\">' + text + '</li>\\n';\n  } else {\n    return '<li>' + text + '</li>\\n';\n  }\n};\n```\n\n加入到本地的`hexo`文件夹的`/node_modules/hexo-renderer-kramed/lib/renderer.js`的第19行中。\n\n保存后重新`hexo clean`、`hexo g`，就渲染成功了。\n\n其实这个解决方案不是我翻PR找到的，而是我在GitHub乱搜索时[在这里](https://github.com/wafer-li/wafer-li.github.io/blob/source/src/blog-corners/tech/tinkering/hexo/Hexo%20Experience.md)找到的。本来并不指望解决这个问题的，又学到一招。\n\n## 2 hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\n\n关于如何修改语义冲突，网上的教程讲得很详细了，比如：\n\n- [hexo下LaTeX无法显示的解决方案 - zealscott - 简书](https://www.jianshu.com/p/d95a4795f3a8)\n- [解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志](https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html)\n\n但网上找到的教程通常只讲述了如何修改`_`和`\\\\`的冲突。我将我遇到的所有问题一一整理如下。\n\n下文的问题通常是行内公式的问题，目前看来公式块受到的影响比较小。\n\n### 2.1 行内公式与行内代码冲突\n\n**问题描述**：把行内公式作为行内代码输入时（如下），会显示异常，即``$`被转义成`$`了。\n\n```markdown\n`$ a+b $`\n```\n\n翻一下[hexo-renderer-kramed的文档](https://github.com/sun11/hexo-renderer-kramed)，发现作者写在这里了：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-06.png)\n\n所以要想输入行内代码中的公式，在`$`前后加上空格就行了：\n\n```markdown\n` $ a+b $ `\n```\n\n### 2.2 下划线`_`被转义为斜体而非LaTeX下标\n\n**问题描述**：当公式中出现多个下划线时，会被kramed渲染为Markdown斜体，导致公式显示异常。\n\nMarkdown本身的语法是支持`*`和`_`都被转义为*斜体*的，所以我们可以取消掉kramed对`_`的转义。\n\n打开本地`hexo`文件夹下的`/node_modules/kramed/lib/rules/inline.js`，找到第20行如下代码：\n\n```javascript\nem: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n\n修改为：\n\n```javascript\nem: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n\n就取消了对下划线`_`的转义。\n\n以后使用斜体的话只用`*`符号就够了。如果LaTeX要使用大量`*`符号，可用`\\ast`代替。\n\n### 2.3 反斜杠`\\\\`被转义为`\\`而非LaTeX换行\n\n**问题描述**：当公式中出现`\\\\`表示换行时，会被kramed渲染为`\\`，导致公式显示异常。\n\n取消掉对`\\\\`的转义就行了。\n\n同上，找到`inline.js`中第11行如下代码：\n\n```javascript\nescape: /^\\\\([\\\\`*\\[\\]()#$+\\-.!_>])/,\n```\n\n修改为：\n\n```javascript\nescape: /^\\\\([`*\\[\\]()#$+\\-.!_>])/,\n```\n\n就取消了对反斜杠`\\\\`的转义。\n\n### 2.4 LaTeX紧贴符`\\!`不被转义\n\n**问题描述**：当公式中出现`\\!`表示紧贴符号时，会被kramed渲染为`!`，导致公式显示异常。\n\n同上，把`escape:`后的正则表达式中的`!`去掉即可，取消掉对`\\!`的转义。\n\n### 2.5 反斜杠加竖线`\\|`被转义为`|`而非LaTeX双竖线\n\n**问题描述**：当公式中出现`\\|`表示紧贴符号时，会被kramed渲染为`|`，导致公式显示异常。\n\n真是个困扰了半天的bug，上面的`escape:`后面也没有`|`啊。\n\n找了我n个小时，原来还是`inline.js`代码的问题。\n\n找到第64行如下代码：\n\n```javascript\nescape: replace(inline.escape)('])', '~|])')(),\n```\n\n修改为：\n\n```javascript\nescape: replace(inline.escape)('])', '~])')(),\n```\n\n就取消了对`\\|`的转义。\n\n执行完以上步骤后，记得`hexo clean`、`hexo g`走一波。\n\n**总结：哪里被kramed转义就检查`escape`对应的部分。**\n\n## 3 总结\n\n- 多上GitHub看看原仓库的文档、issues、PR，会有收获的，实在不行直接搜，比百度好使。\n- 熟悉流程，**Hexo的原理是根据渲染器，把Markdown语法转为HTML语法。**所以一些显示bug不一定是主题的问题，而很有可能是渲染器的问题。所以看看渲染器的源码总是有收获的。\n\n","slug":"solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts","published":1,"updated":"2021-08-14T13:10:20.000Z","layout":"post","photos":[],"link":"","_id":"cl06nlvtq000ff4vi5c383e2x","content":"<p>因<a href=\"https://www.npmjs.com/package/hexo-renderer-marked\">hexo-renderer-marked</a>不支持数学公式的渲染，其他渲染器又有一些问题，如<a href=\"https://www.npmjs.com/package/hexo-renderer-pandoc\">hexo-renderer-pandoc</a>过于沉重，<a href=\"https://www.npmjs.com/package/hexo-renderer-markdown-it\">hexo-renderer-markdown-it</a>对NexT主题支持不佳，因此选用<a href=\"https://www.npmjs.com/package/hexo-renderer-kramed\">hexo-renderer-kramed</a>渲染器。本文解决了该渲染器在渲染Markdown及数学公式时遇到的部分问题。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-hexo-renderer-kramed不能渲染Todo-List\"><a href=\"#1-hexo-renderer-kramed不能渲染Todo-List\" class=\"headerlink\" title=\"1 hexo-renderer-kramed不能渲染Todo List\"></a>1 hexo-renderer-kramed不能渲染Todo List</h2><p>原来的渲染器hexo-renderer-marked是支持的，那就翻一下<a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked的GitHub仓库</a>的Pull Request。</p>\n<p>发现在这个<a href=\"https://github.com/hexojs/hexo-renderer-marked/pull/32\">PR</a>里，hexo-renderer-marked加入了对Todo List的支持，那就拷贝这个PR中<code>lib/renderer.js</code>里新增的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Support To-Do List</span></span><br><span class=\"line\">Renderer.prototype.listitem = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"regexp\">/^\\s*\\[[x ]\\]\\s*/</span>.test(text)) &#123;</span><br><span class=\"line\">    text = text.replace(<span class=\"regexp\">/^\\s*\\[ \\]\\s*/</span>, <span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot;&gt;&lt;/input&gt; &#x27;</span>).replace(<span class=\"regexp\">/^\\s*\\[x\\]\\s*/</span>, <span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot; checked&gt;&lt;/input&gt; &#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class=\"string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;li&gt;&#x27;</span> + text + <span class=\"string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>加入到本地的<code>hexo</code>文件夹的<code>/node_modules/hexo-renderer-kramed/lib/renderer.js</code>的第19行中。</p>\n<p>保存后重新<code>hexo clean</code>、<code>hexo g</code>，就渲染成功了。</p>\n<p>其实这个解决方案不是我翻PR找到的，而是我在GitHub乱搜索时<a href=\"https://github.com/wafer-li/wafer-li.github.io/blob/source/src/blog-corners/tech/tinkering/hexo/Hexo%20Experience.md\">在这里</a>找到的。本来并不指望解决这个问题的，又学到一招。</p>\n<h2 id=\"2-hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\"><a href=\"#2-hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\" class=\"headerlink\" title=\"2 hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\"></a>2 hexo-renderer-kramed渲染MathJax时与Markdown语法冲突</h2><p>关于如何修改语义冲突，网上的教程讲得很详细了，比如：</p>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/d95a4795f3a8\">hexo下LaTeX无法显示的解决方案 - zealscott - 简书</a></li>\n<li><a href=\"https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html\">解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志</a></li>\n</ul>\n<p>但网上找到的教程通常只讲述了如何修改<code>_</code>和<code>\\\\</code>的冲突。我将我遇到的所有问题一一整理如下。</p>\n<p>下文的问题通常是行内公式的问题，目前看来公式块受到的影响比较小。</p>\n<h3 id=\"2-1-行内公式与行内代码冲突\"><a href=\"#2-1-行内公式与行内代码冲突\" class=\"headerlink\" title=\"2.1 行内公式与行内代码冲突\"></a>2.1 行内公式与行内代码冲突</h3><p><strong>问题描述</strong>：把行内公式作为行内代码输入时（如下），会显示异常，即<code>$$</code>被转义成`$$了。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`$ a+b $`</span></span><br></pre></td></tr></table></figure>\n<p>翻一下<a href=\"https://github.com/sun11/hexo-renderer-kramed\">hexo-renderer-kramed的文档</a>，发现作者写在这里了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-06.png\" alt=\"\"></p>\n<p>所以要想输入行内代码中的公式，在<code>$</code>前后加上空格就行了：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">` $ a+b $ `</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-下划线-被转义为斜体而非LaTeX下标\"><a href=\"#2-2-下划线-被转义为斜体而非LaTeX下标\" class=\"headerlink\" title=\"2.2 下划线_被转义为斜体而非LaTeX下标\"></a>2.2 下划线<code>_</code>被转义为斜体而非LaTeX下标</h3><p><strong>问题描述</strong>：当公式中出现多个下划线时，会被kramed渲染为Markdown斜体，导致公式显示异常。</p>\n<p>Markdown本身的语法是支持<code>*</code>和<code>_</code>都被转义为<em>斜体</em>的，所以我们可以取消掉kramed对<code>_</code>的转义。</p>\n<p>打开本地<code>hexo</code>文件夹下的<code>/node_modules/kramed/lib/rules/inline.js</code>，找到第20行如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em: <span class=\"regexp\">/^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/</span>,</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em: <span class=\"regexp\">/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/</span>,</span><br></pre></td></tr></table></figure>\n<p>就取消了对下划线<code>_</code>的转义。</p>\n<p>以后使用斜体的话只用<code>*</code>符号就够了。如果LaTeX要使用大量<code>*</code>符号，可用<code>\\ast</code>代替。</p>\n<h3 id=\"2-3-反斜杠-被转义为-而非LaTeX换行\"><a href=\"#2-3-反斜杠-被转义为-而非LaTeX换行\" class=\"headerlink\" title=\"2.3 反斜杠\\\\被转义为\\而非LaTeX换行\"></a>2.3 反斜杠<code>\\\\</code>被转义为<code>\\</code>而非LaTeX换行</h3><p><strong>问题描述</strong>：当公式中出现<code>\\\\</code>表示换行时，会被kramed渲染为<code>\\</code>，导致公式显示异常。</p>\n<p>取消掉对<code>\\\\</code>的转义就行了。</p>\n<p>同上，找到<code>inline.js</code>中第11行如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: <span class=\"regexp\">/^\\\\([\\\\`*\\[\\]()#$+\\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: <span class=\"regexp\">/^\\\\([`*\\[\\]()#$+\\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure>\n<p>就取消了对反斜杠<code>\\\\</code>的转义。</p>\n<h3 id=\"2-4-LaTeX紧贴符-不被转义\"><a href=\"#2-4-LaTeX紧贴符-不被转义\" class=\"headerlink\" title=\"2.4 LaTeX紧贴符\\!不被转义\"></a>2.4 LaTeX紧贴符<code>\\!</code>不被转义</h3><p><strong>问题描述</strong>：当公式中出现<code>\\!</code>表示紧贴符号时，会被kramed渲染为<code>!</code>，导致公式显示异常。</p>\n<p>同上，把<code>escape:</code>后的正则表达式中的<code>!</code>去掉即可，取消掉对<code>\\!</code>的转义。</p>\n<h3 id=\"2-5-反斜杠加竖线-被转义为-而非LaTeX双竖线\"><a href=\"#2-5-反斜杠加竖线-被转义为-而非LaTeX双竖线\" class=\"headerlink\" title=\"2.5 反斜杠加竖线\\|被转义为|而非LaTeX双竖线\"></a>2.5 反斜杠加竖线<code>\\|</code>被转义为<code>|</code>而非LaTeX双竖线</h3><p><strong>问题描述</strong>：当公式中出现<code>\\|</code>表示紧贴符号时，会被kramed渲染为<code>|</code>，导致公式显示异常。</p>\n<p>真是个困扰了半天的bug，上面的<code>escape:</code>后面也没有<code>|</code>啊。</p>\n<p>找了我n个小时，原来还是<code>inline.js</code>代码的问题。</p>\n<p>找到第64行如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: replace(inline.escape)(<span class=\"string\">&#x27;])&#x27;</span>, <span class=\"string\">&#x27;~|])&#x27;</span>)(),</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: replace(inline.escape)(<span class=\"string\">&#x27;])&#x27;</span>, <span class=\"string\">&#x27;~])&#x27;</span>)(),</span><br></pre></td></tr></table></figure>\n<p>就取消了对<code>\\|</code>的转义。</p>\n<p>执行完以上步骤后，记得<code>hexo clean</code>、<code>hexo g</code>走一波。</p>\n<p><strong>总结：哪里被kramed转义就检查<code>escape</code>对应的部分。</strong></p>\n<h2 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3 总结\"></a>3 总结</h2><ul>\n<li>多上GitHub看看原仓库的文档、issues、PR，会有收获的，实在不行直接搜，比百度好使。</li>\n<li>熟悉流程，<strong>Hexo的原理是根据渲染器，把Markdown语法转为HTML语法。</strong>所以一些显示bug不一定是主题的问题，而很有可能是渲染器的问题。所以看看渲染器的源码总是有收获的。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>因<a href=\"https://www.npmjs.com/package/hexo-renderer-marked\">hexo-renderer-marked</a>不支持数学公式的渲染，其他渲染器又有一些问题，如<a href=\"https://www.npmjs.com/package/hexo-renderer-pandoc\">hexo-renderer-pandoc</a>过于沉重，<a href=\"https://www.npmjs.com/package/hexo-renderer-markdown-it\">hexo-renderer-markdown-it</a>对NexT主题支持不佳，因此选用<a href=\"https://www.npmjs.com/package/hexo-renderer-kramed\">hexo-renderer-kramed</a>渲染器。本文解决了该渲染器在渲染Markdown及数学公式时遇到的部分问题。</p>","more":"<h2 id=\"1-hexo-renderer-kramed不能渲染Todo-List\"><a href=\"#1-hexo-renderer-kramed不能渲染Todo-List\" class=\"headerlink\" title=\"1 hexo-renderer-kramed不能渲染Todo List\"></a>1 hexo-renderer-kramed不能渲染Todo List</h2><p>原来的渲染器hexo-renderer-marked是支持的，那就翻一下<a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked的GitHub仓库</a>的Pull Request。</p>\n<p>发现在这个<a href=\"https://github.com/hexojs/hexo-renderer-marked/pull/32\">PR</a>里，hexo-renderer-marked加入了对Todo List的支持，那就拷贝这个PR中<code>lib/renderer.js</code>里新增的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Support To-Do List</span></span><br><span class=\"line\">Renderer.prototype.listitem = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"regexp\">/^\\s*\\[[x ]\\]\\s*/</span>.test(text)) &#123;</span><br><span class=\"line\">    text = text.replace(<span class=\"regexp\">/^\\s*\\[ \\]\\s*/</span>, <span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot;&gt;&lt;/input&gt; &#x27;</span>).replace(<span class=\"regexp\">/^\\s*\\[x\\]\\s*/</span>, <span class=\"string\">&#x27;&lt;input type=&quot;checkbox&quot; checked&gt;&lt;/input&gt; &#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class=\"string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;li&gt;&#x27;</span> + text + <span class=\"string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>加入到本地的<code>hexo</code>文件夹的<code>/node_modules/hexo-renderer-kramed/lib/renderer.js</code>的第19行中。</p>\n<p>保存后重新<code>hexo clean</code>、<code>hexo g</code>，就渲染成功了。</p>\n<p>其实这个解决方案不是我翻PR找到的，而是我在GitHub乱搜索时<a href=\"https://github.com/wafer-li/wafer-li.github.io/blob/source/src/blog-corners/tech/tinkering/hexo/Hexo%20Experience.md\">在这里</a>找到的。本来并不指望解决这个问题的，又学到一招。</p>\n<h2 id=\"2-hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\"><a href=\"#2-hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\" class=\"headerlink\" title=\"2 hexo-renderer-kramed渲染MathJax时与Markdown语法冲突\"></a>2 hexo-renderer-kramed渲染MathJax时与Markdown语法冲突</h2><p>关于如何修改语义冲突，网上的教程讲得很详细了，比如：</p>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/d95a4795f3a8\">hexo下LaTeX无法显示的解决方案 - zealscott - 简书</a></li>\n<li><a href=\"https://murphypei.github.io/blog/2019/03/hexo-render-mathjax.html\">解决hexo-next主题和mathjax下划线冲突问题 | 拾荒志</a></li>\n</ul>\n<p>但网上找到的教程通常只讲述了如何修改<code>_</code>和<code>\\\\</code>的冲突。我将我遇到的所有问题一一整理如下。</p>\n<p>下文的问题通常是行内公式的问题，目前看来公式块受到的影响比较小。</p>\n<h3 id=\"2-1-行内公式与行内代码冲突\"><a href=\"#2-1-行内公式与行内代码冲突\" class=\"headerlink\" title=\"2.1 行内公式与行内代码冲突\"></a>2.1 行内公式与行内代码冲突</h3><p><strong>问题描述</strong>：把行内公式作为行内代码输入时（如下），会显示异常，即<code>$$</code>被转义成`$$了。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`$ a+b $`</span></span><br></pre></td></tr></table></figure>\n<p>翻一下<a href=\"https://github.com/sun11/hexo-renderer-kramed\">hexo-renderer-kramed的文档</a>，发现作者写在这里了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-06.png\" alt=\"\"></p>\n<p>所以要想输入行内代码中的公式，在<code>$</code>前后加上空格就行了：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">` $ a+b $ `</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-下划线-被转义为斜体而非LaTeX下标\"><a href=\"#2-2-下划线-被转义为斜体而非LaTeX下标\" class=\"headerlink\" title=\"2.2 下划线_被转义为斜体而非LaTeX下标\"></a>2.2 下划线<code>_</code>被转义为斜体而非LaTeX下标</h3><p><strong>问题描述</strong>：当公式中出现多个下划线时，会被kramed渲染为Markdown斜体，导致公式显示异常。</p>\n<p>Markdown本身的语法是支持<code>*</code>和<code>_</code>都被转义为<em>斜体</em>的，所以我们可以取消掉kramed对<code>_</code>的转义。</p>\n<p>打开本地<code>hexo</code>文件夹下的<code>/node_modules/kramed/lib/rules/inline.js</code>，找到第20行如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em: <span class=\"regexp\">/^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/</span>,</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em: <span class=\"regexp\">/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/</span>,</span><br></pre></td></tr></table></figure>\n<p>就取消了对下划线<code>_</code>的转义。</p>\n<p>以后使用斜体的话只用<code>*</code>符号就够了。如果LaTeX要使用大量<code>*</code>符号，可用<code>\\ast</code>代替。</p>\n<h3 id=\"2-3-反斜杠-被转义为-而非LaTeX换行\"><a href=\"#2-3-反斜杠-被转义为-而非LaTeX换行\" class=\"headerlink\" title=\"2.3 反斜杠\\\\被转义为\\而非LaTeX换行\"></a>2.3 反斜杠<code>\\\\</code>被转义为<code>\\</code>而非LaTeX换行</h3><p><strong>问题描述</strong>：当公式中出现<code>\\\\</code>表示换行时，会被kramed渲染为<code>\\</code>，导致公式显示异常。</p>\n<p>取消掉对<code>\\\\</code>的转义就行了。</p>\n<p>同上，找到<code>inline.js</code>中第11行如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: <span class=\"regexp\">/^\\\\([\\\\`*\\[\\]()#$+\\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: <span class=\"regexp\">/^\\\\([`*\\[\\]()#$+\\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure>\n<p>就取消了对反斜杠<code>\\\\</code>的转义。</p>\n<h3 id=\"2-4-LaTeX紧贴符-不被转义\"><a href=\"#2-4-LaTeX紧贴符-不被转义\" class=\"headerlink\" title=\"2.4 LaTeX紧贴符\\!不被转义\"></a>2.4 LaTeX紧贴符<code>\\!</code>不被转义</h3><p><strong>问题描述</strong>：当公式中出现<code>\\!</code>表示紧贴符号时，会被kramed渲染为<code>!</code>，导致公式显示异常。</p>\n<p>同上，把<code>escape:</code>后的正则表达式中的<code>!</code>去掉即可，取消掉对<code>\\!</code>的转义。</p>\n<h3 id=\"2-5-反斜杠加竖线-被转义为-而非LaTeX双竖线\"><a href=\"#2-5-反斜杠加竖线-被转义为-而非LaTeX双竖线\" class=\"headerlink\" title=\"2.5 反斜杠加竖线\\|被转义为|而非LaTeX双竖线\"></a>2.5 反斜杠加竖线<code>\\|</code>被转义为<code>|</code>而非LaTeX双竖线</h3><p><strong>问题描述</strong>：当公式中出现<code>\\|</code>表示紧贴符号时，会被kramed渲染为<code>|</code>，导致公式显示异常。</p>\n<p>真是个困扰了半天的bug，上面的<code>escape:</code>后面也没有<code>|</code>啊。</p>\n<p>找了我n个小时，原来还是<code>inline.js</code>代码的问题。</p>\n<p>找到第64行如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: replace(inline.escape)(<span class=\"string\">&#x27;])&#x27;</span>, <span class=\"string\">&#x27;~|])&#x27;</span>)(),</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">escape</span>: replace(inline.escape)(<span class=\"string\">&#x27;])&#x27;</span>, <span class=\"string\">&#x27;~])&#x27;</span>)(),</span><br></pre></td></tr></table></figure>\n<p>就取消了对<code>\\|</code>的转义。</p>\n<p>执行完以上步骤后，记得<code>hexo clean</code>、<code>hexo g</code>走一波。</p>\n<p><strong>总结：哪里被kramed转义就检查<code>escape</code>对应的部分。</strong></p>\n<h2 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3 总结\"></a>3 总结</h2><ul>\n<li>多上GitHub看看原仓库的文档、issues、PR，会有收获的，实在不行直接搜，比百度好使。</li>\n<li>熟悉流程，<strong>Hexo的原理是根据渲染器，把Markdown语法转为HTML语法。</strong>所以一些显示bug不一定是主题的问题，而很有可能是渲染器的问题。所以看看渲染器的源码总是有收获的。</li>\n</ul>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-06.png","popularPost_tmp_gaData":{"updated":"Sat Aug 14 2021 21:10:20 GMT+0800 (中国标准时间)","title":"解决hexo-renderer-kramed渲染冲突的部分问题","path":"2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-06.png","excerpt":"<p>因<a href=\"https://www.npmjs.com/package/hexo-renderer-marked\">hexo-renderer-marked</a>不支持数学公式的渲染，其他渲染器又有一些问题，如<a href=\"https://www.npmjs.com/package/hexo-renderer-pandoc\">hexo-renderer-pandoc</a>过于沉重，<a href=\"https://www.npmjs.com/package/hexo-renderer-markdown-it\">hexo-renderer-markdown-it</a>对NexT主题支持不佳，因此选用<a href=\"https://www.npmjs.com/package/hexo-renderer-kramed\">hexo-renderer-kramed</a>渲染器。本文解决了该渲染器在渲染Markdown及数学公式时遇到的部分问题。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-14T12:16:47.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-14T12:16:47.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Hexo","tags":["博客","Hexo","技术","技巧","bug","GitHub"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2463},{"title":"JavaScript中遍历数组、对象的几种方式","date":"2021-12-14T01:33:05.000Z","comments":1,"_content":"\nJavaScript中数组和对象均可进行遍历。前端开发时，常会用到对数组、对象以及对象数组进行遍历。\n\n<!--more-->\n\n## 1 普通`for`循环\n\n与其他语言一致。\n\n```javascript\nlet array = [1, 2, 3, 4, 5];\nfor (let i = 0; i < array.length; i++) {\n  console.log(array[i]);\t// 1  2  3  4  5\n}\n```\n\n可以使用变量缓存数组长度，进行优化。\n\n```javascript\nlet array = [1, 2, 3, 4, 5];\nfor (let i = 0, len = array.length; i < len; i++) {\n  console.log(array[i]);\t// 1  2  3  4  5\n}\n```\n\n## 2 `for-in`循环\n\n1. 对于数组，`for-in`循环遍历的是数组的**索引值**，例如：\n\n\t```javascript\n\tlet array = [1, 3, 7];\n\tfor (const index in array) {\n\t  console.log(index);\t// 0  1  2\n\t}\n\t```\n\n\t需要注意：这里的索引为**字符串**，而非数值，不能用于计算；且`for-in`会遍历数组所有可枚举属性（包括原型），因此尽量避免使用`for-in`遍历数组。\n\n\t```javascript\n\tlet array = [1, 3, 7];\n\tfor (const index in array) {\n\t  console.log(typeof index);\t// string  string  string\n\t}\n\t```\n\n2. 对于对象，`for-in`循环遍历的是对象的**键名**，例如：\n\n\t```javascript\n\tlet obj = {\n\t  id: 1,\n\t  name: 'Carlo'\n\t};\n\tfor (const key in obj) {\n\t  console.log(key);\t// id  name\n\t}\n\t```\n\n\t需要注意：`for-in`也会遍历到对象原型链上的方法与属性，可以通过`hasOwnPropery`方法判断属性是否为实例属性。\n\t\n\t```javascript\n\tObject.prototype.school = 'ZJU';\t// 原型属性\n\tlet obj = {\n\t  id: 1,\n\t  name: 'Carlo'\n\t};\n\tfor (const key in obj) {\n\t  if (obj.hasOwnProperty(key)) {\n\t    console.log(key);\t// id  name\t不会输出school\n\t  }\n\t}\n\t```\n\n## 3 `for-of`循环\n\n1. 对于数组，`for-of`循环遍历的是数组的**元素值**，例如：\n\n   ```javascript\n   let array = [1, 3, 7];\n   for (const item of array) {\n     console.log(item);\t// 1  3  7\n   }\n   ```\n\n   `for-of`循环不会遍历数组的原型方法与属性，因此是最常用来遍历数组的方法。\n\n2. `for-of`循环**不支持遍历普通对象**，但可以遍历类数组对象、Map和Set等。\n\n以上循环均可以使用`break`、`continue`、`return`语句，例如：\n\n```javascript\nlet array = [1, 3, 7];\nfor (const item of array) {\n  if (item === 3) continue;\n  console.log(item);\t// 1  7\n}\n```\n\n## 4 对象该怎么遍历？\n\n除上文提到的方法外，对象还可以通过以下方式遍历：\n\n1. 键名用`for-in`获取，键值用`obj[key]`获取，会遍历到原型方法与属性。\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo'\n   };\n   for (const key in obj) {\n     console.log(key + ': ' + obj[key]);\t// id: 1  name: Carlo\n   }\n   ```\n\n   注意：上面第6行取值时**不能写**`obj.key`，这时`key`会被认为是`obj`的一个属性，而非循环变量中的`key`；也就是`obj.key`等同于`obj['key']`。\n\n2. 使用内建的`Object.keys`方法，会获得由对象实例属性组成的数组，不包含原型方法与属性。\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo'\n   };\n   for (const key of Object.keys(obj)) {\n     console.log(key + ': ' + obj[key]);\t// id: 1  name: Carlo\n   }\n   ```\n\n   或使用下文提到的`forEach`函数：\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo'\n   };\n   Object.keys(obj).forEach(key => console.log(key + ': ' + obj[key]));\t// id: 1  name: Carlo\n   ```\n\n3. 使用内建的`Object.values`方法，会获得由对象实例属性值组成的数组，不包含原型方法与属性；使用内建的`Object.entries`方法，会获得由对象实例属性和属性值组成的数组，不包含原型方法与属性。这两个方法与`Object.keys`类似，在此不表。\n\n3. 类数组对象、字符串、Map、Set等可迭代对象拥有迭代器，可以使用`for-of`遍历。\n\n   ```javascript\n   let string = 'hello'\n   for (let s of string) {\n     console.log(s);\t// h  e  l  l  o\n   }\n   ```\n\n5. 普通对象也可为其添加`Symbol.iterator`方法，并赋一个生成器函数，以使用`for-of`遍历：\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo',\n     [Symbol.iterator]: function* () {\n       for (const key of Object.keys(this)) {\n         yield this[key];\n       }\n     }\n   };\n   for (const value of obj) {\n     console.log(value);\t// 1  Carlo\n   }\n   ```\n\n## 5 数组的高阶遍历函数\n\n下文提到的遍历函数均用于数组，在开发中经常使用。\n\n### 5.1 `forEach`函数\n\n对数组进行遍历，参数为一个匿名回调函数，匿名函数的参数为元素值与索引值（可省略），并且此处索引值为数字格式。\n\n```javascript\nlet array = [1, 3, 7];\narray.forEach(function (value, i) {\n  console.log(i + ': ' + value);\t// 0: 1  1: 3  2: 7\n})\n```\n\n匿名回调函数可以写成箭头函数，更为精简，下文均使用箭头函数。\n\n```javascript\nlet array = [1, 3, 7];\narray.forEach((value, i) => console.log(i + ': ' + value));\n```\n\n`forEach`功能较弱，甚至不如普通`for`循环；并且**不能使用**`break`、`continue`、`return`语句，类似地，其他高阶函数也不能使用（`return`除外）。\n\n### 5.2 `map`函数\n\n`map`是映射的意思，它对原数组的每个元素都遍历一次，同时返回一个新的值，并放到新数组中，因此其支持`return`，但不能用`return`跳出`map`，下同。\n\n例如，我们想把一个数组变成其两倍，可通过`map`实现：\n\n```javascript\nlet array = [1, 3, 7];\nlet newArray = array.map(i => i * 2);\nconsole.log(newArray);\t// [ 2, 6, 14 ]\n```\n\n再例如，对一个对象数组`people`，我们想得到所有人的`id`数组，即`[1, 2, 3]`。\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\n```\n\n如果使用`forEach`函数，做法如下：\n\n```javascript\nlet peopleId = [];\npeople.forEach(person => peopleId.push(person.id));\n```\n\n会发现不得不先创造一个新数组。如果使用`map`则精简很多，因为其本身就会返回一个数组：\n\n```javascript\nlet peopleId = people.map(person => person.id);\n```\n\n`map`也常被用在构建二维数组中，如：\n\n```javascript\nconst dp = new Array(m).fill(0).map(() => new Array(n).fill(0));\n```\n\n### 5.3 `filter`函数\n\n`filter`是过滤的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将为`true`的元素放到新数组中。\n\n例如，我们想把一个数组中的奇数提取出来，可通过`filter`实现：\n\n```javascript\nlet array = [1, 2, 3, 5, 6, 8];\nlet newArray = array.filter(i => i % 2);\t// 数值1会被转换成布尔值true\nconsole.log(newArray);\t// [ 1, 3, 5 ]\n```\n\n再例如，对对象数组`people`，我们想把名字中第二个字母为a的人提取出来，可通过`filter`实现：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nlet somePeople = people.filter(person => person.name.charAt(1) === 'a');\nconsole.log(somePeople);\t// [ { id: 1, name: 'Carlo' }, { id: 3, name: 'Jack' } ]\n```\n\n### 5.4 `find`函数\n\n`find`是寻找的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将第一个为`true`的元素返回。\n\n例如，对对象数组`people`，我们想把`id`为1的人提取出来，通过`filter`也可实现：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nlet somePeople = people.filter(person => person.id === 1);\nconsole.log(somePeople[0]);\t// { id: 1, name: 'Carlo' }\n```\n\n如果通过`for`循环则是如下逻辑：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nfor (let person of people) {\n  if (person.id === 1) {\n    console.log(person);\t// { id: 1, name: 'Carlo' }\n    break;\n  }\n}\n```\n\n会发现`for-if-break`是个连续的逻辑，否则会重复遍历。\n\n如果使用`find`则精简很多，因为其本身就会返回所需的元素：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nlet person = people.find(person => person.id === 1);\nconsole.log(person);\t// { id: 1, name: 'Carlo' }\n```\n\n注意：当`filter`找不到任何匹配项时，返回空数组；当`find`找不到任何匹配项时，返回`undefined`。\n\n### 5.5 `reduce`函数\n\n`reduce`可以理解为缩减，它把一个数组逐一缩减为一个值，可通过下面的例子理解。\n\n对下面的对象数组`people`，现在想知道每个人的分数总和，通过`for`循环是这样实现的：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo', points: 90},\n  {id: 2, name: 'Bill', points: 95},\n  {id: 3, name: 'Jack', points: 88}\n];\nlet sum = 0;\nfor (let person of people) {\n  sum += person.points;\n}\nconsole.log(sum);\t// 273\n```\n\n`reduce`函数传入两个参数，一个是回调函数（参数为初始变量与数组元素），另一个是初始变量的值，即：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo', points: 90},\n  {id: 2, name: 'Bill', points: 95},\n  {id: 3, name: 'Jack', points: 88}\n];\nlet sum = people.reduce((sum, person) => sum + person.points, 0);\nconsole.log(sum);\t// 273\n```\n\n逻辑是：先把0赋给`sum`，再对`people`里的每个`person`做遍历，执行回调函数，并将每一步的返回值赋给`sum`。\n\n除累加外，我们还可以使用它进行大小比较。例如，我们想返回分数最高的人，可以这样实现：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo', points: 90},\n  {id: 2, name: 'Bill', points: 95},\n  {id: 3, name: 'Jack', points: 88}\n];\nlet highest = people.reduce((highest, person) => (highest.points || 0) > person.points ? highest : person, {});\nconsole.log(highest);\t// { id: 2, name: 'Bill', points: 95 }\n```\n\n如果`reduce`没有给出初始变量的值，数组第一个变量会被赋给初始变量，同时从数组第二个元素开始遍历，注意以下代码的输出结果：\n\n```javascript\nlet arr = [1, 3, 7, 10];\nlet sum1 = arr.reduce((sum, n, i) => {\n  console.log([sum, n, i]);\t// [0,1,0]  [1,3,1]  [4,7,2]  [11,10,3]\n  return sum + n;\n}, 0);\nconsole.log(sum1);\t// 21\nlet sum2 = arr.reduce((sum, n, i) => {\n  console.log([sum, n, i]);\t// [1,3,1]  [4,7,2]  [11,10,3]\n  return sum + n;\n});\nconsole.log(sum2);\t// 21\n```\n\n### 5.6 结合使用\n\n以上函数可以通过链式编程的思想结合使用。\n\n例如，对一个数组中小于100的数，将其扩大一倍再求和，可以这样实现：\n\n```javascript\nlet array = [99, 123, 85, 3, 212, 56];\nlet t = array.filter(i => i < 100).map(i => i * 2).reduce((sum, i) => sum + i, 0);\nconsole.log(t);\t// 486\n```\n","source":"_posts/several-ways-of-traversing-arrays-and-objects-in-javascript.md","raw":"---\ntitle: JavaScript中遍历数组、对象的几种方式\ndate: 2021-12-14 09:33:05\ncategories: JavaScirpt\ntags:\n  - 编程\n  - JavaScript\n  - 基础\n  - 面试\ncomments: true\n---\n\nJavaScript中数组和对象均可进行遍历。前端开发时，常会用到对数组、对象以及对象数组进行遍历。\n\n<!--more-->\n\n## 1 普通`for`循环\n\n与其他语言一致。\n\n```javascript\nlet array = [1, 2, 3, 4, 5];\nfor (let i = 0; i < array.length; i++) {\n  console.log(array[i]);\t// 1  2  3  4  5\n}\n```\n\n可以使用变量缓存数组长度，进行优化。\n\n```javascript\nlet array = [1, 2, 3, 4, 5];\nfor (let i = 0, len = array.length; i < len; i++) {\n  console.log(array[i]);\t// 1  2  3  4  5\n}\n```\n\n## 2 `for-in`循环\n\n1. 对于数组，`for-in`循环遍历的是数组的**索引值**，例如：\n\n\t```javascript\n\tlet array = [1, 3, 7];\n\tfor (const index in array) {\n\t  console.log(index);\t// 0  1  2\n\t}\n\t```\n\n\t需要注意：这里的索引为**字符串**，而非数值，不能用于计算；且`for-in`会遍历数组所有可枚举属性（包括原型），因此尽量避免使用`for-in`遍历数组。\n\n\t```javascript\n\tlet array = [1, 3, 7];\n\tfor (const index in array) {\n\t  console.log(typeof index);\t// string  string  string\n\t}\n\t```\n\n2. 对于对象，`for-in`循环遍历的是对象的**键名**，例如：\n\n\t```javascript\n\tlet obj = {\n\t  id: 1,\n\t  name: 'Carlo'\n\t};\n\tfor (const key in obj) {\n\t  console.log(key);\t// id  name\n\t}\n\t```\n\n\t需要注意：`for-in`也会遍历到对象原型链上的方法与属性，可以通过`hasOwnPropery`方法判断属性是否为实例属性。\n\t\n\t```javascript\n\tObject.prototype.school = 'ZJU';\t// 原型属性\n\tlet obj = {\n\t  id: 1,\n\t  name: 'Carlo'\n\t};\n\tfor (const key in obj) {\n\t  if (obj.hasOwnProperty(key)) {\n\t    console.log(key);\t// id  name\t不会输出school\n\t  }\n\t}\n\t```\n\n## 3 `for-of`循环\n\n1. 对于数组，`for-of`循环遍历的是数组的**元素值**，例如：\n\n   ```javascript\n   let array = [1, 3, 7];\n   for (const item of array) {\n     console.log(item);\t// 1  3  7\n   }\n   ```\n\n   `for-of`循环不会遍历数组的原型方法与属性，因此是最常用来遍历数组的方法。\n\n2. `for-of`循环**不支持遍历普通对象**，但可以遍历类数组对象、Map和Set等。\n\n以上循环均可以使用`break`、`continue`、`return`语句，例如：\n\n```javascript\nlet array = [1, 3, 7];\nfor (const item of array) {\n  if (item === 3) continue;\n  console.log(item);\t// 1  7\n}\n```\n\n## 4 对象该怎么遍历？\n\n除上文提到的方法外，对象还可以通过以下方式遍历：\n\n1. 键名用`for-in`获取，键值用`obj[key]`获取，会遍历到原型方法与属性。\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo'\n   };\n   for (const key in obj) {\n     console.log(key + ': ' + obj[key]);\t// id: 1  name: Carlo\n   }\n   ```\n\n   注意：上面第6行取值时**不能写**`obj.key`，这时`key`会被认为是`obj`的一个属性，而非循环变量中的`key`；也就是`obj.key`等同于`obj['key']`。\n\n2. 使用内建的`Object.keys`方法，会获得由对象实例属性组成的数组，不包含原型方法与属性。\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo'\n   };\n   for (const key of Object.keys(obj)) {\n     console.log(key + ': ' + obj[key]);\t// id: 1  name: Carlo\n   }\n   ```\n\n   或使用下文提到的`forEach`函数：\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo'\n   };\n   Object.keys(obj).forEach(key => console.log(key + ': ' + obj[key]));\t// id: 1  name: Carlo\n   ```\n\n3. 使用内建的`Object.values`方法，会获得由对象实例属性值组成的数组，不包含原型方法与属性；使用内建的`Object.entries`方法，会获得由对象实例属性和属性值组成的数组，不包含原型方法与属性。这两个方法与`Object.keys`类似，在此不表。\n\n3. 类数组对象、字符串、Map、Set等可迭代对象拥有迭代器，可以使用`for-of`遍历。\n\n   ```javascript\n   let string = 'hello'\n   for (let s of string) {\n     console.log(s);\t// h  e  l  l  o\n   }\n   ```\n\n5. 普通对象也可为其添加`Symbol.iterator`方法，并赋一个生成器函数，以使用`for-of`遍历：\n\n   ```javascript\n   let obj = {\n     id: 1,\n     name: 'Carlo',\n     [Symbol.iterator]: function* () {\n       for (const key of Object.keys(this)) {\n         yield this[key];\n       }\n     }\n   };\n   for (const value of obj) {\n     console.log(value);\t// 1  Carlo\n   }\n   ```\n\n## 5 数组的高阶遍历函数\n\n下文提到的遍历函数均用于数组，在开发中经常使用。\n\n### 5.1 `forEach`函数\n\n对数组进行遍历，参数为一个匿名回调函数，匿名函数的参数为元素值与索引值（可省略），并且此处索引值为数字格式。\n\n```javascript\nlet array = [1, 3, 7];\narray.forEach(function (value, i) {\n  console.log(i + ': ' + value);\t// 0: 1  1: 3  2: 7\n})\n```\n\n匿名回调函数可以写成箭头函数，更为精简，下文均使用箭头函数。\n\n```javascript\nlet array = [1, 3, 7];\narray.forEach((value, i) => console.log(i + ': ' + value));\n```\n\n`forEach`功能较弱，甚至不如普通`for`循环；并且**不能使用**`break`、`continue`、`return`语句，类似地，其他高阶函数也不能使用（`return`除外）。\n\n### 5.2 `map`函数\n\n`map`是映射的意思，它对原数组的每个元素都遍历一次，同时返回一个新的值，并放到新数组中，因此其支持`return`，但不能用`return`跳出`map`，下同。\n\n例如，我们想把一个数组变成其两倍，可通过`map`实现：\n\n```javascript\nlet array = [1, 3, 7];\nlet newArray = array.map(i => i * 2);\nconsole.log(newArray);\t// [ 2, 6, 14 ]\n```\n\n再例如，对一个对象数组`people`，我们想得到所有人的`id`数组，即`[1, 2, 3]`。\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\n```\n\n如果使用`forEach`函数，做法如下：\n\n```javascript\nlet peopleId = [];\npeople.forEach(person => peopleId.push(person.id));\n```\n\n会发现不得不先创造一个新数组。如果使用`map`则精简很多，因为其本身就会返回一个数组：\n\n```javascript\nlet peopleId = people.map(person => person.id);\n```\n\n`map`也常被用在构建二维数组中，如：\n\n```javascript\nconst dp = new Array(m).fill(0).map(() => new Array(n).fill(0));\n```\n\n### 5.3 `filter`函数\n\n`filter`是过滤的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将为`true`的元素放到新数组中。\n\n例如，我们想把一个数组中的奇数提取出来，可通过`filter`实现：\n\n```javascript\nlet array = [1, 2, 3, 5, 6, 8];\nlet newArray = array.filter(i => i % 2);\t// 数值1会被转换成布尔值true\nconsole.log(newArray);\t// [ 1, 3, 5 ]\n```\n\n再例如，对对象数组`people`，我们想把名字中第二个字母为a的人提取出来，可通过`filter`实现：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nlet somePeople = people.filter(person => person.name.charAt(1) === 'a');\nconsole.log(somePeople);\t// [ { id: 1, name: 'Carlo' }, { id: 3, name: 'Jack' } ]\n```\n\n### 5.4 `find`函数\n\n`find`是寻找的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将第一个为`true`的元素返回。\n\n例如，对对象数组`people`，我们想把`id`为1的人提取出来，通过`filter`也可实现：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nlet somePeople = people.filter(person => person.id === 1);\nconsole.log(somePeople[0]);\t// { id: 1, name: 'Carlo' }\n```\n\n如果通过`for`循环则是如下逻辑：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nfor (let person of people) {\n  if (person.id === 1) {\n    console.log(person);\t// { id: 1, name: 'Carlo' }\n    break;\n  }\n}\n```\n\n会发现`for-if-break`是个连续的逻辑，否则会重复遍历。\n\n如果使用`find`则精简很多，因为其本身就会返回所需的元素：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo'},\n  {id: 2, name: 'Bill'},\n  {id: 3, name: 'Jack'}\n];\nlet person = people.find(person => person.id === 1);\nconsole.log(person);\t// { id: 1, name: 'Carlo' }\n```\n\n注意：当`filter`找不到任何匹配项时，返回空数组；当`find`找不到任何匹配项时，返回`undefined`。\n\n### 5.5 `reduce`函数\n\n`reduce`可以理解为缩减，它把一个数组逐一缩减为一个值，可通过下面的例子理解。\n\n对下面的对象数组`people`，现在想知道每个人的分数总和，通过`for`循环是这样实现的：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo', points: 90},\n  {id: 2, name: 'Bill', points: 95},\n  {id: 3, name: 'Jack', points: 88}\n];\nlet sum = 0;\nfor (let person of people) {\n  sum += person.points;\n}\nconsole.log(sum);\t// 273\n```\n\n`reduce`函数传入两个参数，一个是回调函数（参数为初始变量与数组元素），另一个是初始变量的值，即：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo', points: 90},\n  {id: 2, name: 'Bill', points: 95},\n  {id: 3, name: 'Jack', points: 88}\n];\nlet sum = people.reduce((sum, person) => sum + person.points, 0);\nconsole.log(sum);\t// 273\n```\n\n逻辑是：先把0赋给`sum`，再对`people`里的每个`person`做遍历，执行回调函数，并将每一步的返回值赋给`sum`。\n\n除累加外，我们还可以使用它进行大小比较。例如，我们想返回分数最高的人，可以这样实现：\n\n```javascript\nlet people = [\n  {id: 1, name: 'Carlo', points: 90},\n  {id: 2, name: 'Bill', points: 95},\n  {id: 3, name: 'Jack', points: 88}\n];\nlet highest = people.reduce((highest, person) => (highest.points || 0) > person.points ? highest : person, {});\nconsole.log(highest);\t// { id: 2, name: 'Bill', points: 95 }\n```\n\n如果`reduce`没有给出初始变量的值，数组第一个变量会被赋给初始变量，同时从数组第二个元素开始遍历，注意以下代码的输出结果：\n\n```javascript\nlet arr = [1, 3, 7, 10];\nlet sum1 = arr.reduce((sum, n, i) => {\n  console.log([sum, n, i]);\t// [0,1,0]  [1,3,1]  [4,7,2]  [11,10,3]\n  return sum + n;\n}, 0);\nconsole.log(sum1);\t// 21\nlet sum2 = arr.reduce((sum, n, i) => {\n  console.log([sum, n, i]);\t// [1,3,1]  [4,7,2]  [11,10,3]\n  return sum + n;\n});\nconsole.log(sum2);\t// 21\n```\n\n### 5.6 结合使用\n\n以上函数可以通过链式编程的思想结合使用。\n\n例如，对一个数组中小于100的数，将其扩大一倍再求和，可以这样实现：\n\n```javascript\nlet array = [99, 123, 85, 3, 212, 56];\nlet t = array.filter(i => i < 100).map(i => i * 2).reduce((sum, i) => sum + i, 0);\nconsole.log(t);\t// 486\n```\n","slug":"several-ways-of-traversing-arrays-and-objects-in-javascript","published":1,"updated":"2022-04-17T12:04:16.381Z","_id":"cl06nlvtt000jf4vi8c0n1ym0","layout":"post","photos":[],"link":"","content":"<p>JavaScript中数组和对象均可进行遍历。前端开发时，常会用到对数组、对象以及对象数组进行遍历。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-普通for循环\"><a href=\"#1-普通for循环\" class=\"headerlink\" title=\"1 普通for循环\"></a>1 普通<code>for</code>循环</h2><p>与其他语言一致。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(array[i]);\t<span class=\"comment\">// 1  2  3  4  5</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以使用变量缓存数组长度，进行优化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = array.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(array[i]);\t<span class=\"comment\">// 1  2  3  4  5</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-for-in循环\"><a href=\"#2-for-in循环\" class=\"headerlink\" title=\"2 for-in循环\"></a>2 <code>for-in</code>循环</h2><ol>\n<li><p>对于数组，<code>for-in</code>循环遍历的是数组的<strong>索引值</strong>，例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">in</span> array) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(index);\t<span class=\"comment\">// 0  1  2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 需要注意：这里的索引为<strong>字符串</strong>，而非数值，不能用于计算；且<code>for-in</code>会遍历数组所有可枚举属性（包括原型），因此尽量避免使用<code>for-in</code>遍历数组。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">in</span> array) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> index);\t<span class=\"comment\">// string  string  string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对于对象，<code>for-in</code>循环遍历的是对象的<strong>键名</strong>，例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key);\t<span class=\"comment\">// id  name</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 需要注意：<code>for-in</code>也会遍历到对象原型链上的方法与属性，可以通过<code>hasOwnPropery</code>方法判断属性是否为实例属性。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.school = <span class=\"string\">&#x27;ZJU&#x27;</span>;\t<span class=\"comment\">// 原型属性</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(key);\t<span class=\"comment\">// id  name\t不会输出school</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"3-for-of循环\"><a href=\"#3-for-of循环\" class=\"headerlink\" title=\"3 for-of循环\"></a>3 <code>for-of</code>循环</h2><ol>\n<li><p>对于数组，<code>for-of</code>循环遍历的是数组的<strong>元素值</strong>，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> array) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item);\t<span class=\"comment\">// 1  3  7</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>for-of</code>循环不会遍历数组的原型方法与属性，因此是最常用来遍历数组的方法。</p>\n</li>\n<li><p><code>for-of</code>循环<strong>不支持遍历普通对象</strong>，但可以遍历类数组对象、Map和Set等。</p>\n</li>\n</ol>\n<p>以上循环均可以使用<code>break</code>、<code>continue</code>、<code>return</code>语句，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> array) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (item === <span class=\"number\">3</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item);\t<span class=\"comment\">// 1  7</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-对象该怎么遍历？\"><a href=\"#4-对象该怎么遍历？\" class=\"headerlink\" title=\"4 对象该怎么遍历？\"></a>4 对象该怎么遍历？</h2><p>除上文提到的方法外，对象还可以通过以下方式遍历：</p>\n<ol>\n<li><p>键名用<code>for-in</code>获取，键值用<code>obj[key]</code>获取，会遍历到原型方法与属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&#x27;: &#x27;</span> + obj[key]);\t<span class=\"comment\">// id: 1  name: Carlo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：上面第6行取值时<strong>不能写</strong><code>obj.key</code>，这时<code>key</code>会被认为是<code>obj</code>的一个属性，而非循环变量中的<code>key</code>；也就是<code>obj.key</code>等同于<code>obj[&#39;key&#39;]</code>。</p>\n</li>\n<li><p>使用内建的<code>Object.keys</code>方法，会获得由对象实例属性组成的数组，不包含原型方法与属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">of</span> <span class=\"built_in\">Object</span>.keys(obj)) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&#x27;: &#x27;</span> + obj[key]);\t<span class=\"comment\">// id: 1  name: Carlo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或使用下文提到的<code>forEach</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&#x27;: &#x27;</span> + obj[key]));\t<span class=\"comment\">// id: 1  name: Carlo</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用内建的<code>Object.values</code>方法，会获得由对象实例属性值组成的数组，不包含原型方法与属性；使用内建的<code>Object.entries</code>方法，会获得由对象实例属性和属性值组成的数组，不包含原型方法与属性。这两个方法与<code>Object.keys</code>类似，在此不表。</p>\n</li>\n<li><p>类数组对象、字符串、Map、Set等可迭代对象拥有迭代器，可以使用<code>for-of</code>遍历。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> s <span class=\"keyword\">of</span> string) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(s);\t<span class=\"comment\">// h  e  l  l  o</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>普通对象也可为其添加<code>Symbol.iterator</code>方法，并赋一个生成器函数，以使用<code>for-of</code>遍历：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>,</span><br><span class=\"line\">  [<span class=\"built_in\">Symbol</span>.iterator]: <span class=\"function\"><span class=\"keyword\">function</span>* (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">of</span> <span class=\"built_in\">Object</span>.keys(<span class=\"built_in\">this</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">yield</span> <span class=\"built_in\">this</span>[key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> value <span class=\"keyword\">of</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);\t<span class=\"comment\">// 1  Carlo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"5-数组的高阶遍历函数\"><a href=\"#5-数组的高阶遍历函数\" class=\"headerlink\" title=\"5 数组的高阶遍历函数\"></a>5 数组的高阶遍历函数</h2><p>下文提到的遍历函数均用于数组，在开发中经常使用。</p>\n<h3 id=\"5-1-forEach函数\"><a href=\"#5-1-forEach函数\" class=\"headerlink\" title=\"5.1 forEach函数\"></a>5.1 <code>forEach</code>函数</h3><p>对数组进行遍历，参数为一个匿名回调函数，匿名函数的参数为元素值与索引值（可省略），并且此处索引值为数字格式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\">array.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value, i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i + <span class=\"string\">&#x27;: &#x27;</span> + value);\t<span class=\"comment\">// 0: 1  1: 3  2: 7</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>匿名回调函数可以写成箭头函数，更为精简，下文均使用箭头函数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\">array.forEach(<span class=\"function\">(<span class=\"params\">value, i</span>) =&gt;</span> <span class=\"built_in\">console</span>.log(i + <span class=\"string\">&#x27;: &#x27;</span> + value));</span><br></pre></td></tr></table></figure>\n<p><code>forEach</code>功能较弱，甚至不如普通<code>for</code>循环；并且<strong>不能使用</strong><code>break</code>、<code>continue</code>、<code>return</code>语句，类似地，其他高阶函数也不能使用（<code>return</code>除外）。</p>\n<h3 id=\"5-2-map函数\"><a href=\"#5-2-map函数\" class=\"headerlink\" title=\"5.2 map函数\"></a>5.2 <code>map</code>函数</h3><p><code>map</code>是映射的意思，它对原数组的每个元素都遍历一次，同时返回一个新的值，并放到新数组中，因此其支持<code>return</code>，但不能用<code>return</code>跳出<code>map</code>，下同。</p>\n<p>例如，我们想把一个数组变成其两倍，可通过<code>map</code>实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArray = array.map(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i * <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArray);\t<span class=\"comment\">// [ 2, 6, 14 ]</span></span><br></pre></td></tr></table></figure>\n<p>再例如，对一个对象数组<code>people</code>，我们想得到所有人的<code>id</code>数组，即<code>[1, 2, 3]</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>如果使用<code>forEach</code>函数，做法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> peopleId = [];</span><br><span class=\"line\">people.forEach(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> peopleId.push(person.id));</span><br></pre></td></tr></table></figure>\n<p>会发现不得不先创造一个新数组。如果使用<code>map</code>则精简很多，因为其本身就会返回一个数组：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> peopleId = people.map(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.id);</span><br></pre></td></tr></table></figure>\n<p><code>map</code>也常被用在构建二维数组中，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(m).fill(<span class=\"number\">0</span>).map(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(n).fill(<span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-3-filter函数\"><a href=\"#5-3-filter函数\" class=\"headerlink\" title=\"5.3 filter函数\"></a>5.3 <code>filter</code>函数</h3><p><code>filter</code>是过滤的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将为<code>true</code>的元素放到新数组中。</p>\n<p>例如，我们想把一个数组中的奇数提取出来，可通过<code>filter</code>实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArray = array.filter(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i % <span class=\"number\">2</span>);\t<span class=\"comment\">// 数值1会被转换成布尔值true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArray);\t<span class=\"comment\">// [ 1, 3, 5 ]</span></span><br></pre></td></tr></table></figure>\n<p>再例如，对对象数组<code>people</code>，我们想把名字中第二个字母为a的人提取出来，可通过<code>filter</code>实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> somePeople = people.filter(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.name.charAt(<span class=\"number\">1</span>) === <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(somePeople);\t<span class=\"comment\">// [ &#123; id: 1, name: &#x27;Carlo&#x27; &#125;, &#123; id: 3, name: &#x27;Jack&#x27; &#125; ]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-4-find函数\"><a href=\"#5-4-find函数\" class=\"headerlink\" title=\"5.4 find函数\"></a>5.4 <code>find</code>函数</h3><p><code>find</code>是寻找的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将第一个为<code>true</code>的元素返回。</p>\n<p>例如，对对象数组<code>people</code>，我们想把<code>id</code>为1的人提取出来，通过<code>filter</code>也可实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> somePeople = people.filter(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.id === <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(somePeople[<span class=\"number\">0</span>]);\t<span class=\"comment\">// &#123; id: 1, name: &#x27;Carlo&#x27; &#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果通过<code>for</code>循环则是如下逻辑：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> person <span class=\"keyword\">of</span> people) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (person.id === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(person);\t<span class=\"comment\">// &#123; id: 1, name: &#x27;Carlo&#x27; &#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>会发现<code>for-if-break</code>是个连续的逻辑，否则会重复遍历。</p>\n<p>如果使用<code>find</code>则精简很多，因为其本身就会返回所需的元素：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> person = people.find(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.id === <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person);\t<span class=\"comment\">// &#123; id: 1, name: &#x27;Carlo&#x27; &#125;</span></span><br></pre></td></tr></table></figure>\n<p>注意：当<code>filter</code>找不到任何匹配项时，返回空数组；当<code>find</code>找不到任何匹配项时，返回<code>undefined</code>。</p>\n<h3 id=\"5-5-reduce函数\"><a href=\"#5-5-reduce函数\" class=\"headerlink\" title=\"5.5 reduce函数\"></a>5.5 <code>reduce</code>函数</h3><p><code>reduce</code>可以理解为缩减，它把一个数组逐一缩减为一个值，可通过下面的例子理解。</p>\n<p>对下面的对象数组<code>people</code>，现在想知道每个人的分数总和，通过<code>for</code>循环是这样实现的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">95</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">88</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> person <span class=\"keyword\">of</span> people) &#123;</span><br><span class=\"line\">  sum += person.points;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum);\t<span class=\"comment\">// 273</span></span><br></pre></td></tr></table></figure>\n<p><code>reduce</code>函数传入两个参数，一个是回调函数（参数为初始变量与数组元素），另一个是初始变量的值，即：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">95</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">88</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = people.reduce(<span class=\"function\">(<span class=\"params\">sum, person</span>) =&gt;</span> sum + person.points, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum);\t<span class=\"comment\">// 273</span></span><br></pre></td></tr></table></figure>\n<p>逻辑是：先把0赋给<code>sum</code>，再对<code>people</code>里的每个<code>person</code>做遍历，执行回调函数，并将每一步的返回值赋给<code>sum</code>。</p>\n<p>除累加外，我们还可以使用它进行大小比较。例如，我们想返回分数最高的人，可以这样实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">95</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">88</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> highest = people.reduce(<span class=\"function\">(<span class=\"params\">highest, person</span>) =&gt;</span> (highest.points || <span class=\"number\">0</span>) &gt; person.points ? highest : person, &#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(highest);\t<span class=\"comment\">// &#123; id: 2, name: &#x27;Bill&#x27;, points: 95 &#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果<code>reduce</code>没有给出初始变量的值，数组第一个变量会被赋给初始变量，同时从数组第二个元素开始遍历，注意以下代码的输出结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum1 = arr.reduce(<span class=\"function\">(<span class=\"params\">sum, n, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log([sum, n, i]);\t<span class=\"comment\">// [0,1,0]  [1,3,1]  [4,7,2]  [11,10,3]</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum + n;</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum1);\t<span class=\"comment\">// 21</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> sum2 = arr.reduce(<span class=\"function\">(<span class=\"params\">sum, n, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log([sum, n, i]);\t<span class=\"comment\">// [1,3,1]  [4,7,2]  [11,10,3]</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum + n;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum2);\t<span class=\"comment\">// 21</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-6-结合使用\"><a href=\"#5-6-结合使用\" class=\"headerlink\" title=\"5.6 结合使用\"></a>5.6 结合使用</h3><p>以上函数可以通过链式编程的思想结合使用。</p>\n<p>例如，对一个数组中小于100的数，将其扩大一倍再求和，可以这样实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">99</span>, <span class=\"number\">123</span>, <span class=\"number\">85</span>, <span class=\"number\">3</span>, <span class=\"number\">212</span>, <span class=\"number\">56</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> t = array.filter(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i &lt; <span class=\"number\">100</span>).map(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i * <span class=\"number\">2</span>).reduce(<span class=\"function\">(<span class=\"params\">sum, i</span>) =&gt;</span> sum + i, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(t);\t<span class=\"comment\">// 486</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>JavaScript中数组和对象均可进行遍历。前端开发时，常会用到对数组、对象以及对象数组进行遍历。</p>","more":"<h2 id=\"1-普通for循环\"><a href=\"#1-普通for循环\" class=\"headerlink\" title=\"1 普通for循环\"></a>1 普通<code>for</code>循环</h2><p>与其他语言一致。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(array[i]);\t<span class=\"comment\">// 1  2  3  4  5</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以使用变量缓存数组长度，进行优化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = array.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(array[i]);\t<span class=\"comment\">// 1  2  3  4  5</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-for-in循环\"><a href=\"#2-for-in循环\" class=\"headerlink\" title=\"2 for-in循环\"></a>2 <code>for-in</code>循环</h2><ol>\n<li><p>对于数组，<code>for-in</code>循环遍历的是数组的<strong>索引值</strong>，例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">in</span> array) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(index);\t<span class=\"comment\">// 0  1  2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 需要注意：这里的索引为<strong>字符串</strong>，而非数值，不能用于计算；且<code>for-in</code>会遍历数组所有可枚举属性（包括原型），因此尽量避免使用<code>for-in</code>遍历数组。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> index <span class=\"keyword\">in</span> array) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> index);\t<span class=\"comment\">// string  string  string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对于对象，<code>for-in</code>循环遍历的是对象的<strong>键名</strong>，例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key);\t<span class=\"comment\">// id  name</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 需要注意：<code>for-in</code>也会遍历到对象原型链上的方法与属性，可以通过<code>hasOwnPropery</code>方法判断属性是否为实例属性。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.school = <span class=\"string\">&#x27;ZJU&#x27;</span>;\t<span class=\"comment\">// 原型属性</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(key);\t<span class=\"comment\">// id  name\t不会输出school</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"3-for-of循环\"><a href=\"#3-for-of循环\" class=\"headerlink\" title=\"3 for-of循环\"></a>3 <code>for-of</code>循环</h2><ol>\n<li><p>对于数组，<code>for-of</code>循环遍历的是数组的<strong>元素值</strong>，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> array) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item);\t<span class=\"comment\">// 1  3  7</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>for-of</code>循环不会遍历数组的原型方法与属性，因此是最常用来遍历数组的方法。</p>\n</li>\n<li><p><code>for-of</code>循环<strong>不支持遍历普通对象</strong>，但可以遍历类数组对象、Map和Set等。</p>\n</li>\n</ol>\n<p>以上循环均可以使用<code>break</code>、<code>continue</code>、<code>return</code>语句，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> array) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (item === <span class=\"number\">3</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item);\t<span class=\"comment\">// 1  7</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-对象该怎么遍历？\"><a href=\"#4-对象该怎么遍历？\" class=\"headerlink\" title=\"4 对象该怎么遍历？\"></a>4 对象该怎么遍历？</h2><p>除上文提到的方法外，对象还可以通过以下方式遍历：</p>\n<ol>\n<li><p>键名用<code>for-in</code>获取，键值用<code>obj[key]</code>获取，会遍历到原型方法与属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&#x27;: &#x27;</span> + obj[key]);\t<span class=\"comment\">// id: 1  name: Carlo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：上面第6行取值时<strong>不能写</strong><code>obj.key</code>，这时<code>key</code>会被认为是<code>obj</code>的一个属性，而非循环变量中的<code>key</code>；也就是<code>obj.key</code>等同于<code>obj[&#39;key&#39;]</code>。</p>\n</li>\n<li><p>使用内建的<code>Object.keys</code>方法，会获得由对象实例属性组成的数组，不包含原型方法与属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">of</span> <span class=\"built_in\">Object</span>.keys(obj)) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&#x27;: &#x27;</span> + obj[key]);\t<span class=\"comment\">// id: 1  name: Carlo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或使用下文提到的<code>forEach</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&#x27;: &#x27;</span> + obj[key]));\t<span class=\"comment\">// id: 1  name: Carlo</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用内建的<code>Object.values</code>方法，会获得由对象实例属性值组成的数组，不包含原型方法与属性；使用内建的<code>Object.entries</code>方法，会获得由对象实例属性和属性值组成的数组，不包含原型方法与属性。这两个方法与<code>Object.keys</code>类似，在此不表。</p>\n</li>\n<li><p>类数组对象、字符串、Map、Set等可迭代对象拥有迭代器，可以使用<code>for-of</code>遍历。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> s <span class=\"keyword\">of</span> string) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(s);\t<span class=\"comment\">// h  e  l  l  o</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>普通对象也可为其添加<code>Symbol.iterator</code>方法，并赋一个生成器函数，以使用<code>for-of</code>遍历：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>,</span><br><span class=\"line\">  [<span class=\"built_in\">Symbol</span>.iterator]: <span class=\"function\"><span class=\"keyword\">function</span>* (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">of</span> <span class=\"built_in\">Object</span>.keys(<span class=\"built_in\">this</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">yield</span> <span class=\"built_in\">this</span>[key];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> value <span class=\"keyword\">of</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);\t<span class=\"comment\">// 1  Carlo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"5-数组的高阶遍历函数\"><a href=\"#5-数组的高阶遍历函数\" class=\"headerlink\" title=\"5 数组的高阶遍历函数\"></a>5 数组的高阶遍历函数</h2><p>下文提到的遍历函数均用于数组，在开发中经常使用。</p>\n<h3 id=\"5-1-forEach函数\"><a href=\"#5-1-forEach函数\" class=\"headerlink\" title=\"5.1 forEach函数\"></a>5.1 <code>forEach</code>函数</h3><p>对数组进行遍历，参数为一个匿名回调函数，匿名函数的参数为元素值与索引值（可省略），并且此处索引值为数字格式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\">array.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value, i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i + <span class=\"string\">&#x27;: &#x27;</span> + value);\t<span class=\"comment\">// 0: 1  1: 3  2: 7</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>匿名回调函数可以写成箭头函数，更为精简，下文均使用箭头函数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\">array.forEach(<span class=\"function\">(<span class=\"params\">value, i</span>) =&gt;</span> <span class=\"built_in\">console</span>.log(i + <span class=\"string\">&#x27;: &#x27;</span> + value));</span><br></pre></td></tr></table></figure>\n<p><code>forEach</code>功能较弱，甚至不如普通<code>for</code>循环；并且<strong>不能使用</strong><code>break</code>、<code>continue</code>、<code>return</code>语句，类似地，其他高阶函数也不能使用（<code>return</code>除外）。</p>\n<h3 id=\"5-2-map函数\"><a href=\"#5-2-map函数\" class=\"headerlink\" title=\"5.2 map函数\"></a>5.2 <code>map</code>函数</h3><p><code>map</code>是映射的意思，它对原数组的每个元素都遍历一次，同时返回一个新的值，并放到新数组中，因此其支持<code>return</code>，但不能用<code>return</code>跳出<code>map</code>，下同。</p>\n<p>例如，我们想把一个数组变成其两倍，可通过<code>map</code>实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArray = array.map(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i * <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArray);\t<span class=\"comment\">// [ 2, 6, 14 ]</span></span><br></pre></td></tr></table></figure>\n<p>再例如，对一个对象数组<code>people</code>，我们想得到所有人的<code>id</code>数组，即<code>[1, 2, 3]</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>如果使用<code>forEach</code>函数，做法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> peopleId = [];</span><br><span class=\"line\">people.forEach(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> peopleId.push(person.id));</span><br></pre></td></tr></table></figure>\n<p>会发现不得不先创造一个新数组。如果使用<code>map</code>则精简很多，因为其本身就会返回一个数组：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> peopleId = people.map(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.id);</span><br></pre></td></tr></table></figure>\n<p><code>map</code>也常被用在构建二维数组中，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(m).fill(<span class=\"number\">0</span>).map(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(n).fill(<span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-3-filter函数\"><a href=\"#5-3-filter函数\" class=\"headerlink\" title=\"5.3 filter函数\"></a>5.3 <code>filter</code>函数</h3><p><code>filter</code>是过滤的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将为<code>true</code>的元素放到新数组中。</p>\n<p>例如，我们想把一个数组中的奇数提取出来，可通过<code>filter</code>实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArray = array.filter(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i % <span class=\"number\">2</span>);\t<span class=\"comment\">// 数值1会被转换成布尔值true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArray);\t<span class=\"comment\">// [ 1, 3, 5 ]</span></span><br></pre></td></tr></table></figure>\n<p>再例如，对对象数组<code>people</code>，我们想把名字中第二个字母为a的人提取出来，可通过<code>filter</code>实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> somePeople = people.filter(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.name.charAt(<span class=\"number\">1</span>) === <span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(somePeople);\t<span class=\"comment\">// [ &#123; id: 1, name: &#x27;Carlo&#x27; &#125;, &#123; id: 3, name: &#x27;Jack&#x27; &#125; ]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-4-find函数\"><a href=\"#5-4-find函数\" class=\"headerlink\" title=\"5.4 find函数\"></a>5.4 <code>find</code>函数</h3><p><code>find</code>是寻找的意思，它对原数组的每个元素都遍历一次，同时返回判断结果（布尔值），将第一个为<code>true</code>的元素返回。</p>\n<p>例如，对对象数组<code>people</code>，我们想把<code>id</code>为1的人提取出来，通过<code>filter</code>也可实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> somePeople = people.filter(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.id === <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(somePeople[<span class=\"number\">0</span>]);\t<span class=\"comment\">// &#123; id: 1, name: &#x27;Carlo&#x27; &#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果通过<code>for</code>循环则是如下逻辑：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> person <span class=\"keyword\">of</span> people) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (person.id === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(person);\t<span class=\"comment\">// &#123; id: 1, name: &#x27;Carlo&#x27; &#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>会发现<code>for-if-break</code>是个连续的逻辑，否则会重复遍历。</p>\n<p>如果使用<code>find</code>则精简很多，因为其本身就会返回所需的元素：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> person = people.find(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.id === <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person);\t<span class=\"comment\">// &#123; id: 1, name: &#x27;Carlo&#x27; &#125;</span></span><br></pre></td></tr></table></figure>\n<p>注意：当<code>filter</code>找不到任何匹配项时，返回空数组；当<code>find</code>找不到任何匹配项时，返回<code>undefined</code>。</p>\n<h3 id=\"5-5-reduce函数\"><a href=\"#5-5-reduce函数\" class=\"headerlink\" title=\"5.5 reduce函数\"></a>5.5 <code>reduce</code>函数</h3><p><code>reduce</code>可以理解为缩减，它把一个数组逐一缩减为一个值，可通过下面的例子理解。</p>\n<p>对下面的对象数组<code>people</code>，现在想知道每个人的分数总和，通过<code>for</code>循环是这样实现的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">95</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">88</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> person <span class=\"keyword\">of</span> people) &#123;</span><br><span class=\"line\">  sum += person.points;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum);\t<span class=\"comment\">// 273</span></span><br></pre></td></tr></table></figure>\n<p><code>reduce</code>函数传入两个参数，一个是回调函数（参数为初始变量与数组元素），另一个是初始变量的值，即：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">95</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">88</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = people.reduce(<span class=\"function\">(<span class=\"params\">sum, person</span>) =&gt;</span> sum + person.points, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum);\t<span class=\"comment\">// 273</span></span><br></pre></td></tr></table></figure>\n<p>逻辑是：先把0赋给<code>sum</code>，再对<code>people</code>里的每个<code>person</code>做遍历，执行回调函数，并将每一步的返回值赋给<code>sum</code>。</p>\n<p>除累加外，我们还可以使用它进行大小比较。例如，我们想返回分数最高的人，可以这样实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> people = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Carlo&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bill&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">95</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>, <span class=\"attr\">points</span>: <span class=\"number\">88</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> highest = people.reduce(<span class=\"function\">(<span class=\"params\">highest, person</span>) =&gt;</span> (highest.points || <span class=\"number\">0</span>) &gt; person.points ? highest : person, &#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(highest);\t<span class=\"comment\">// &#123; id: 2, name: &#x27;Bill&#x27;, points: 95 &#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果<code>reduce</code>没有给出初始变量的值，数组第一个变量会被赋给初始变量，同时从数组第二个元素开始遍历，注意以下代码的输出结果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum1 = arr.reduce(<span class=\"function\">(<span class=\"params\">sum, n, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log([sum, n, i]);\t<span class=\"comment\">// [0,1,0]  [1,3,1]  [4,7,2]  [11,10,3]</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum + n;</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum1);\t<span class=\"comment\">// 21</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> sum2 = arr.reduce(<span class=\"function\">(<span class=\"params\">sum, n, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log([sum, n, i]);\t<span class=\"comment\">// [1,3,1]  [4,7,2]  [11,10,3]</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum + n;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum2);\t<span class=\"comment\">// 21</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-6-结合使用\"><a href=\"#5-6-结合使用\" class=\"headerlink\" title=\"5.6 结合使用\"></a>5.6 结合使用</h3><p>以上函数可以通过链式编程的思想结合使用。</p>\n<p>例如，对一个数组中小于100的数，将其扩大一倍再求和，可以这样实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> array = [<span class=\"number\">99</span>, <span class=\"number\">123</span>, <span class=\"number\">85</span>, <span class=\"number\">3</span>, <span class=\"number\">212</span>, <span class=\"number\">56</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> t = array.filter(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i &lt; <span class=\"number\">100</span>).map(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> i * <span class=\"number\">2</span>).reduce(<span class=\"function\">(<span class=\"params\">sum, i</span>) =&gt;</span> sum + i, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(t);\t<span class=\"comment\">// 486</span></span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Apr 17 2022 20:04:16 GMT+0800 (中国标准时间)","title":"JavaScript中遍历数组、对象的几种方式","path":"2021/12/14/several-ways-of-traversing-arrays-and-objects-in-javascript/","eyeCatchImage":null,"excerpt":"<p>JavaScript中数组和对象均可进行遍历。前端开发时，常会用到对数组、对象以及对象数组进行遍历。</p>","date":{"_isAMomentObject":true,"_i":"2021-12-14T01:33:05.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-12-14T01:33:05.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"JavaScirpt","tags":["编程","JavaScript","基础","面试"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":6754},{"title":"解决Hexo博客手机端无法访问的问题","date":"2021-08-14T06:32:11.000Z","comments":1,"_content":"\n**问题描述**：已经部署到GitHub Pages的Hexo博客，电脑端可以根据域名访问，手机端无法访问。\n\n<!--more-->\n\n### 1 原因\n\n通常是GitHub Pages的ip地址解析出现的bug。电脑端可以正常访问大概率是因为科学上网的缘故，手机端无法访问是因为拒绝了域名解析所用的ip。\n\n### 2 解决方法\n\n#### 2.1 重新ping一下github.io的ip\n\n打开cmd，输入以下指令：\n\n```shell\nping kaluojushi.github.io\n```\n\n`ping`后面跟GitHub Pages的地址，如`username.github.io`。\n\n可以看到当前的ip是185.199.109.153。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-01.png)\n\n#### 2.2 修改域名解析\n\n打开域名DNS解析商（我的是腾讯云），修改A记录的记录值为上面ping到的ip。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-02.png)\n\n#### 2.3 验证\n\n打开[站长工具DNS查询](http://tool.chinaz.com/dns/)，选择A类型，输入域名，查看解析结果，如果为刚才修改的结果就表示成功（如果未成功需要等待一段时间）。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-03.png)\n\n至此电脑端和手机端应该都可以访问了。\n\n![电脑端](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-04.png)\n\n![手机端](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-05.png)\n\n### 3 总结\n\n此问题其实与Hexo无关，还是国内访问GitHub及其所提供的服务不稳定的bug。再有问题就再换A记录！\n\n不知道一条域名是否可以添加多条A记录，没有深入探究，在此暂时不表。\n\n用[Gitee Pages](https://gitee.com/help/articles/4136)代替GitHub Pages其实也是备选项之一，对国内服务的支持更好。\n","source":"_posts/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed.md","raw":"---\ntitle: 解决Hexo博客手机端无法访问的问题\ndate: 2021-08-14 14:32:11\ncategories: Hexo\ntags:\n  - 博客\n  - Hexo\n  - 技术\n  - 技巧\n  - bug\n  - GitHub\ncomments: true\n---\n\n**问题描述**：已经部署到GitHub Pages的Hexo博客，电脑端可以根据域名访问，手机端无法访问。\n\n<!--more-->\n\n### 1 原因\n\n通常是GitHub Pages的ip地址解析出现的bug。电脑端可以正常访问大概率是因为科学上网的缘故，手机端无法访问是因为拒绝了域名解析所用的ip。\n\n### 2 解决方法\n\n#### 2.1 重新ping一下github.io的ip\n\n打开cmd，输入以下指令：\n\n```shell\nping kaluojushi.github.io\n```\n\n`ping`后面跟GitHub Pages的地址，如`username.github.io`。\n\n可以看到当前的ip是185.199.109.153。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-01.png)\n\n#### 2.2 修改域名解析\n\n打开域名DNS解析商（我的是腾讯云），修改A记录的记录值为上面ping到的ip。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-02.png)\n\n#### 2.3 验证\n\n打开[站长工具DNS查询](http://tool.chinaz.com/dns/)，选择A类型，输入域名，查看解析结果，如果为刚才修改的结果就表示成功（如果未成功需要等待一段时间）。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-03.png)\n\n至此电脑端和手机端应该都可以访问了。\n\n![电脑端](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-04.png)\n\n![手机端](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-05.png)\n\n### 3 总结\n\n此问题其实与Hexo无关，还是国内访问GitHub及其所提供的服务不稳定的bug。再有问题就再换A记录！\n\n不知道一条域名是否可以添加多条A记录，没有深入探究，在此暂时不表。\n\n用[Gitee Pages](https://gitee.com/help/articles/4136)代替GitHub Pages其实也是备选项之一，对国内服务的支持更好。\n","slug":"solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed","published":1,"updated":"2021-08-14T07:01:44.000Z","layout":"post","photos":[],"link":"","_id":"cl06nlvtu000kf4vi67uu9tnr","content":"<p><strong>问题描述</strong>：已经部署到GitHub Pages的Hexo博客，电脑端可以根据域名访问，手机端无法访问。</p>\n<span id=\"more\"></span>\n<h3 id=\"1-原因\"><a href=\"#1-原因\" class=\"headerlink\" title=\"1 原因\"></a>1 原因</h3><p>通常是GitHub Pages的ip地址解析出现的bug。电脑端可以正常访问大概率是因为科学上网的缘故，手机端无法访问是因为拒绝了域名解析所用的ip。</p>\n<h3 id=\"2-解决方法\"><a href=\"#2-解决方法\" class=\"headerlink\" title=\"2 解决方法\"></a>2 解决方法</h3><h4 id=\"2-1-重新ping一下github-io的ip\"><a href=\"#2-1-重新ping一下github-io的ip\" class=\"headerlink\" title=\"2.1 重新ping一下github.io的ip\"></a>2.1 重新ping一下github.io的ip</h4><p>打开cmd，输入以下指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping kaluojushi.github.io</span><br></pre></td></tr></table></figure>\n<p><code>ping</code>后面跟GitHub Pages的地址，如<code>username.github.io</code>。</p>\n<p>可以看到当前的ip是185.199.109.153。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-01.png\" alt=\"\"></p>\n<h4 id=\"2-2-修改域名解析\"><a href=\"#2-2-修改域名解析\" class=\"headerlink\" title=\"2.2 修改域名解析\"></a>2.2 修改域名解析</h4><p>打开域名DNS解析商（我的是腾讯云），修改A记录的记录值为上面ping到的ip。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-02.png\" alt=\"\"></p>\n<h4 id=\"2-3-验证\"><a href=\"#2-3-验证\" class=\"headerlink\" title=\"2.3 验证\"></a>2.3 验证</h4><p>打开<a href=\"http://tool.chinaz.com/dns/\">站长工具DNS查询</a>，选择A类型，输入域名，查看解析结果，如果为刚才修改的结果就表示成功（如果未成功需要等待一段时间）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-03.png\" alt=\"\"></p>\n<p>至此电脑端和手机端应该都可以访问了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-04.png\" alt=\"电脑端\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-05.png\" alt=\"手机端\"></p>\n<h3 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3 总结\"></a>3 总结</h3><p>此问题其实与Hexo无关，还是国内访问GitHub及其所提供的服务不稳定的bug。再有问题就再换A记录！</p>\n<p>不知道一条域名是否可以添加多条A记录，没有深入探究，在此暂时不表。</p>\n<p>用<a href=\"https://gitee.com/help/articles/4136\">Gitee Pages</a>代替GitHub Pages其实也是备选项之一，对国内服务的支持更好。</p>\n","site":{"data":{}},"excerpt":"<p><strong>问题描述</strong>：已经部署到GitHub Pages的Hexo博客，电脑端可以根据域名访问，手机端无法访问。</p>","more":"<h3 id=\"1-原因\"><a href=\"#1-原因\" class=\"headerlink\" title=\"1 原因\"></a>1 原因</h3><p>通常是GitHub Pages的ip地址解析出现的bug。电脑端可以正常访问大概率是因为科学上网的缘故，手机端无法访问是因为拒绝了域名解析所用的ip。</p>\n<h3 id=\"2-解决方法\"><a href=\"#2-解决方法\" class=\"headerlink\" title=\"2 解决方法\"></a>2 解决方法</h3><h4 id=\"2-1-重新ping一下github-io的ip\"><a href=\"#2-1-重新ping一下github-io的ip\" class=\"headerlink\" title=\"2.1 重新ping一下github.io的ip\"></a>2.1 重新ping一下github.io的ip</h4><p>打开cmd，输入以下指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping kaluojushi.github.io</span><br></pre></td></tr></table></figure>\n<p><code>ping</code>后面跟GitHub Pages的地址，如<code>username.github.io</code>。</p>\n<p>可以看到当前的ip是185.199.109.153。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-01.png\" alt=\"\"></p>\n<h4 id=\"2-2-修改域名解析\"><a href=\"#2-2-修改域名解析\" class=\"headerlink\" title=\"2.2 修改域名解析\"></a>2.2 修改域名解析</h4><p>打开域名DNS解析商（我的是腾讯云），修改A记录的记录值为上面ping到的ip。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-02.png\" alt=\"\"></p>\n<h4 id=\"2-3-验证\"><a href=\"#2-3-验证\" class=\"headerlink\" title=\"2.3 验证\"></a>2.3 验证</h4><p>打开<a href=\"http://tool.chinaz.com/dns/\">站长工具DNS查询</a>，选择A类型，输入域名，查看解析结果，如果为刚才修改的结果就表示成功（如果未成功需要等待一段时间）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-03.png\" alt=\"\"></p>\n<p>至此电脑端和手机端应该都可以访问了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-04.png\" alt=\"电脑端\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-05.png\" alt=\"手机端\"></p>\n<h3 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3 总结\"></a>3 总结</h3><p>此问题其实与Hexo无关，还是国内访问GitHub及其所提供的服务不稳定的bug。再有问题就再换A记录！</p>\n<p>不知道一条域名是否可以添加多条A记录，没有深入探究，在此暂时不表。</p>\n<p>用<a href=\"https://gitee.com/help/articles/4136\">Gitee Pages</a>代替GitHub Pages其实也是备选项之一，对国内服务的支持更好。</p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-01.png","popularPost_tmp_gaData":{"updated":"Sat Aug 14 2021 15:01:44 GMT+0800 (中国标准时间)","title":"解决Hexo博客手机端无法访问的问题","path":"2021/08/14/solve-the-problem-that-mobile-terminal-of-hexo-blog-cannot-be-accessed/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20210814-01.png","excerpt":"<p><strong>问题描述</strong>：已经部署到GitHub Pages的Hexo博客，电脑端可以根据域名访问，手机端无法访问。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-14T06:32:11.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-14T06:32:11.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Hexo","tags":["博客","Hexo","技术","技巧","bug","GitHub"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":526},{"title":"如何在GitHub Pages中使用动态数据","date":"2021-11-23T06:04:04.000Z","comments":1,"_content":"\n最近在写一个纯前端兴趣项目时遇到的问题，前端需要展示一些数据。在传统的开发模式中，如Java小游戏开发，会把这些数据存储在文件中（如历史分数等），可以对其进行读写。但在前端开发时，这些数据的交互变得比较复杂，尤其是需要读写的时候。\n\n<!--more-->\n\n## 1 需求分析\n\n在传统的本地开发模式中，当我们需要一个长期稳定存储的数据，并可以对它进行读写时，通常不会把它写在代码里，而是放在一个文件中，并通过IO流的方式去操作它，这在Java小游戏开发中比较常见，例如游戏历史分数。\n\n当我们在写纯前端项目，并把它展示到[GitHub Pages](https://pages.github.com/)时，这就不适用了。众所周知，GitHub Pages提供的是静态页面展示，我们应该是可以通过固定的JavaScript代码去实现文件的读取，但如果要写文件的话，且不说JavaScript如何实现文件写入，由于我们的文件放在GitHub仓库里，要更改仓库文件其实就是一次`git push`过程，这就比较奇怪了。\n\n> JavaScript实现文本文件的读取：参考<https://www.cnblogs.com/jscs/p/13444671.html>\n>\n> 写一个函数：\n>\n> ```javascript\n> load(path) {\n> let xhr = new XMLHttpRequest();\n> let okStatus = document.location.protocol === \"file:\" ? 0 : 200;\n> xhr.open('GET', path, false);\n> xhr.overrideMimeType(\"text/html;charset=utf-8\");//默认为utf-8\n> xhr.send(null);\n> return xhr.status === okStatus ? xhr.responseText : null;\n> },\n> ```\n>\n> 然后再调用函数，传入文件路径，返回的是一个字符串，包含文件所有内容：\n>\n> ```javascript\n> let string = load(\"data/text.txt\");\n> console.log(string);\n> ```\n>\n> 也可以使用JSON格式的数据，那就更简单了，在此不表。\n\n但我们又不可避免地需要使用一些动态数据，并通过前端实现读写，最好是像数据库一样，可以实现增删改查。\n\n参考资料：\n\n1. [研究使用Github Pages搭建具有数据库的个人网站](https://blog.csdn.net/tiandixuanwuliang/article/details/81738512)\n2. [github page建立动态网站](https://blog.csdn.net/dongzhuo/article/details/88051383)\n3. [github可以搭建动态网站吗? - 知乎](https://www.zhihu.com/question/30869973?d=123)\n\n## 2 基本页面部分\n\n下面我们举一个例子，这个例子就是个简单的表格，需要有增删改查功能。\n\n在WebStorm或Idea中新建一个项目`CloudBackendExample`，然后新建文件`index.html`，导入Vue和ElementUI，并写一个表格模板。\n\n```html\n<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\"\n        content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n  <!-- import Vue before Element -->\n  <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\n  <!-- import Element CSS -->\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n  <!-- import Element JavaScript -->\n  <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n  <title>测试表格</title>\n</head>\n\n<body>\n<div id=\"app\">\n  <!-- 搜索功能 -->\n  <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n    <el-form-item label=\"姓名\" prop=\"name\">\n      <el-input\n          v-model=\"queryParams.name\"\n          placeholder=\"请输入姓名\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n      />\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n      <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n    </el-form-item>\n  </el-form>\n\n  <!-- 增删改按钮 -->\n  <el-row :gutter=\"10\" class=\"mb8\">\n    <el-col :span=\"1.5\">\n      <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\">新增</el-button>\n    </el-col>\n    <el-col :span=\"1.5\">\n      <el-button type=\"success\" plain icon=\"el-icon-edit\" size=\"mini\" :disabled=\"single\" @click=\"handleUpdate\">修改\n      </el-button>\n    </el-col>\n    <el-col :span=\"1.5\">\n      <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\" @click=\"handleDelete\">删除\n      </el-button>\n    </el-col>\n    <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n  </el-row>\n\n  <!-- 数据表格 -->\n  <el-table v-loading=\"loading\" :data=\"basicList\" @selection-change=\"handleSelectionChange\" stripe>\n    <el-table-column type=\"selection\" width=\"55\" align=\"center\"/>\n    <el-table-column label=\"姓名\" align=\"center\" prop=\"name\"/>\n    <el-table-column label=\"年级\" align=\"center\" prop=\"grade\"/>\n    <el-table-column label=\"得分\" align=\"center\" prop=\"points\"/>\n    <el-table-column label=\"地址\" align=\"center\" prop=\"address\"/>\n    <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n      <template slot-scope=\"scope\">\n        <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\">修改</el-button>\n        <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n\n  <!-- 添加或修改数据对话框 -->\n  <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body>\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"75px\">\n      <el-form-item label=\"姓名\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入姓名\"/>\n      </el-form-item>\n      <el-form-item label=\"年级\" prop=\"grade\">\n        <el-input v-model=\"form.grade\" placeholder=\"请输入年级\"/>\n      </el-form-item>\n      <el-form-item label=\"得分\" prop=\"points\">\n        <el-input-number v-model=\"form.points\" :min=\"0\" :max=\"100\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"地址\" prop=\"address\">\n        <el-input v-model=\"form.address\" placeholder=\"请输入地址\"/>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</body>\n\n<script src=\"index.js\"></script>\n\n<!-- 响应式布局处理 -->\n<style>\n  @media screen and (max-width: 1000px) {\n    .el-dialog {\n      width: 80% !important;\n    }\n  }\n</style>\n```\n\n同时，新建一个`index.js`，先写好一些基本的Vue内容，比如一些数据和方法。\n\n```javascript\nnew Vue({\n  el: '#app',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      selections: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 表格数据\n      tableList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        name: ''\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        name: [{required: true, message: \"姓名不能为空\", trigger: \"blur\"}],\n        grade: [{required: true, message: \"年级不能为空\", trigger: \"blur\"}],\n        points: [{required: true, message: \"得分不能为空\", trigger: \"blur\"}],\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询表格数据 */\n    getList() {\n      this.loading = true;\n      // 这里是查询操作\n      this.loading = false;\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.queryParams = {\n        name: ''\n      };\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.selections = selection;\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加数据\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      // 这里获得修改对象的信息\n      this.open = true;\n      this.title = \"修改数据\";\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          // 这里是新增或修改操作\n          this.open = false;\n          this.getList();\n        }\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        name: null,\n        grade: null,\n        points: null,\n        address: null\n      };\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      // 这里是删除操作\n    }\n  }\n});\n```\n\n这个页面是可以预览的，也没什么问题，它甚至可以直接传到GitHub仓库里，开GitHub Pages后可以直接在网络上预览。但是它没有任何数据，而且增删改查按钮都不能用。\n\n![预览页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-01.png)\n\n## 3 云后端简介\n\n这时候就要用到云后端了。云后端相当于传统项目开发中的数据库+后端，对于纯前端开发来说，它可以实现数据存储、增删改查功能，和传统开发一样，给前端一个api接口，前端用它就好了。\n\n> 大部分的产品都是数据驱动的，它们有一个最大的特点，就是对后端的需求在模式上其实是比较统一的：\n>\n> - 前端负责数据展现和用户交互处理，与后端的 app server 通过网络来交换需要的数据；\n> - app server 负责业务逻辑处理，生成核心数据存储到 data server，或者聚合 data server 查询到的数据返回给客户端；\n> - data server 负责核心数据的存储和备份。\n>\n> 这样的模式适合互联网上绝大部分产品，虽然数据结构有差异、业务逻辑不一样，但是前后端交互的主体——「数据」，抽象来看是一致的，后端的架构（譬如 LAMP）也是大同小异的，而且同样的系统在一遍一遍地被重复开发，极大浪费了我们宝贵的技术资源。\n>\n> ——[LeanCloud文档：数据存储服务总览](https://leancloud.cn/docs/storage_overview.html)\n\n比如以[LeanCloud](https://www.leancloud.cn/)云服务为例，它提供数据存储、云引擎+数据库、即时通讯等服务，我们其实只需要**数据存储**里的**结构化数据存储**功能就可以了。它直接存储JSON对象并提供增删改查接口，这就可以让我们的页面发生变化了。\n\n注册一个LeanCloud账号，进入控制台，创建一个应用，输入应用名称，开发版已经足够使用了。\n\n![创建应用](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-02.png)\n\n我们使用JavaScript写入每个功能，所以参考[LeanCloud里JavaScript的数据存储开发文档](https://leancloud.cn/docs/leanstorage_guide-js.html)。\n\n## 4 写入增删改查功能\n\n### 4.1 准备工作\n\n根据文档，我们首先引入SDK，直接在`index.html`中通过CDN引入：\n\n```html\n<!--  import LeanCloud-->\n<script src=\"//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js\"></script>\n```\n\n然后再在`index.js`开头引用全局变量`AV`：\n\n```js\nconst { Query, User } = AV;\n```\n\n服务需要初始化，我们在控制台中找到应用凭证，将App ID、App Key和服务器地址放到初始化函数中：\n\n![应用凭证](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-03.png)\n\n```js\nAV.init({\n  appId: \"sJRG...\",\n  appKey: \"lgxM...\",\n  serverURL: \"https://sj...\"\n});\n```\n\n搞定之后，还需要创建一个Class来存放结构化数据。根据[文档](https://leancloud.cn/docs/leanstorage_guide-js.html#hash813593086)，Class可以在JavaScript中被创建，但我们并不需要在前端中去创建Class，所以我们在控制台添加好。\n\n在控制台中找到数据存储的结构化数据，创建一个新的Class，并把权限设置为无限制，以便可以进行读写。\n\n![创建Class](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-04.png)\n\n添加若干列，并设置好列名称和列类型：\n\n![添加id属性](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-05.png)\n\n![添加name属性及其他属性](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-06.png)\n\n再在控制台添加几行示例数据，以准备完成接下来的查找功能。\n\n![添加两行示例数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-07.png)\n\n### 4.2 查\n\n首先完成`getList`函数，这是最基本的函数，展示表格、实现搜索都用到它。\n\n构建一个`Av.Query`，无需添加其查询条件，直接寻找，可以获取到所有对象。\n\n```javascript\nconst queryAll = new AV.Query('Data');\t// Data为Class名\nqueryAll.find().then((rows) => {\n  // rows是所有对象的数组\n});\n```\n\n在前端log一下`rows`，发现是这个东西：\n\n![console.log(rows)](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-08.png)\n\n好耶！得到一个数组，这个数组长度为2，正好是我们刚添加的两条数据，里面是2个对象。只是它里面的对象仿佛不是一个我们要的JSON数据。\n\n原来这个对象是封装好的，取属性值可以通过对象的`get`函数，或是通过`attributes`属性。我们把`attributes`属性放到表格数据里。\n\n```javascript\ngetList() {\n  this.loading = true;\n  this.tableList = [];\n  const queryAll = new AV.Query('Data');\n  queryAll.find().then((rows) => {\n    for (let row of rows) {\n      this.tableList.push(row.attributes);\n    }\n    this.loading = false;\n  });\n},\n```\n\n表格中有数据了！\n\n![通过getList，表格拿到了数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-09.png)\n\n接下来完成搜索功能，搜索功能实际上也只是调用`getList`，所以`getList`还需要再根据`queryParams`改一下：\n\n```javascript\ngetList() {\n  this.loading = true;\n  this.tableList = [];\n  const queryAll = new AV.Query('Data');\n  if (this.queryParams.name) {\t// 注意在js中，空字符串被视为false\n    queryAll.contains('name', this.queryParams.name);\n    // 这里相当于SQL中的 name LIKE '%...%'\n  }\n  queryAll.find().then((rows) => {\n    for (let row of rows) {\n      this.tableList.push(row.attributes);\n    }\n    this.loading = false;\n  });\n},\n```\n\n搜索功能就完成了。`handleQuery`和`resetQuery`两个函数也不需要改动。\n\n![搜索功能](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-10.png)\n\n### 4.3 增\n\n新增按钮的函数`handleAdd`无需修改，目前即使我们不写任何操作，点击新增按钮，也可以出现这个对话框：\n\n![添加数据对话框](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-11.png)\n\n我们要写的是确定按钮的函数`submitForm`。由于这个对话框新增与修改共用，因此我们在函数里，需要判断一下当前操作是新增还是修改，它们最大的不同是当前的`form`数据的`id`属性是否为`null`。\n\n```javascript\nsubmitForm() {\n  this.$refs.form.validate(valid => {\n    if (valid) {\n      if (this.form.id != null) {\n        // 这里是修改操作\n        this.open = false;\n        this.getList();\n      } else {\n        // 这里是新增操作\n        this.open = false;\n        this.getList();\n      }\n    }\n  });\n},\n```\n\n添加数据的方法是，先新建一个Data的对象，然后通过`set`设定其属性值，再调用`save`存储到云端。\n\n```javascript\nsubmitForm() {\n  this.$refs.form.validate(valid => {\n    if (valid) {\n      if (this.form.id != null) {\n        // 这里是修改操作\n        this.open = false;\n        this.getList();\n      } else {\n        const data = new AV.Object('Data');\n        data.set('name', this.form.name);\n        data.set('grade', this.form.grade);\n        data.set('points', this.form.points);\n        data.set('address', this.form.address);\n        data.save().then((data) => {\n          this.$message({\n            type: 'success',\n            message: '新增成功!'\n          });\n          this.open = false;\n          this.getList();\n        });\n      }\n    }\n  });\n},\n```\n\n尝试加入一条数据试试，然后看看页面展示的效果和云后端控制台的数据：\n\n![表格中成功新增数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-12.png)\n\n![云后端控制台也成功新增数据，并且自动设置id](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-13.png)\n\n### 4.4 删\n\n我们要写函数`handleDelete`，并且注意，删除可以单选删除，可以多选删除，需要删除的参数可能是对象或数组。这是由是否传入参数`row`来决定的，需要注意的是，虽然上面的删除按钮和右侧的删除按钮调用同一个函数，上面的删除按钮没有传入参数`row`，此时会传入一个**点击事件**并赋给`row`。可以通过判断`row.id`的方式，来判断当前点击的是哪个删除按钮；如果通过`row`，那就无法判断了。\n\n```javascript\nhandleDelete(row) {\n  if (row.id) {\n    this.$confirm('是否确认删除该数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      // 删除单个数据（对象）\n    });\n  } else {\n    const length = this.selections.length;\n    this.$confirm('是否确认删除' + (length > 1 ? '这' + length + '个' : '该') + '数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      // 删除多个数据（数组）\n    });\n  }\n}\n```\n\n对于对象，直接调用`destroy`就好；对于数组，可以使用`destroyAll`一次请求中删除。\n\n```javascript\nhandleDelete(row) {\n  if (row.id) {\n    this.$confirm('是否确认删除该数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      const query = new AV.Query('Data');\n      query.equalTo('id', row.id);\n      query.first().then((data) => {\n        data.destroy().then((data) => {\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          this.getList();\n        });\n      });\n    }).catch(() => {\n      this.$message({\n        type: 'info',\n        message: '已取消删除'\n      });\n    });\n  } else {\n    const length = this.selections.length;\n    this.$confirm('是否确认删除' + (length > 1 ? '这' + length + '个' : '该') + '数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      const ids = this.selections.map(item => item.id);\n      const query = new AV.Query('Data');\n      query.containedIn('id', ids);\n      query.find().then((rows) => {\n        AV.Object.destroyAll(rows).then((rows) => {\t// 找到的rows就是需要被一次删掉的rows数组\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          this.getList();\n        });\n      });\n    }).catch(() => {\n      this.$message({\n        type: 'info',\n        message: '已取消删除'\n      });\n    });\n  }\n}\n```\n\n尝试删除某数据，发现数据从表中和后台中删除。\n\n![删除提示](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-14.png)\n\n### 4.5 改\n\n修改与新增用的是同一个对话框，因此修改时，要先获得修改对象的数据，并赋给`form`。修改对象的传入也有两种方式，一种是当前行`row`，一种是选中数组（长度为1）。\n\n```javascript\nhandleUpdate(row) {\n  this.reset();\n  const id = row.id || this.selections[0].id;\n  const query = new AV.Query('Data');\n  query.equalTo('id', id);\n  query.first().then((data) => {\n    this.form = {\n      id: data.get('id'),\n      name: data.get('name'),\n      grade: data.get('grade'),\n      points: data.get('points'),\n      address: data.get('address')\n    }\n    this.open = true;\n    this.title = \"修改数据\";\n  });\n},\n```\n\n点击右边的修改或是上面的修改，发现可以显示当前数据的信息。\n\n![修改数据对话框](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-15.png)\n\n最后再完成`submitForm`函数中修改操作的部分，这部分与新增操作类似。\n\n```javascript\nsubmitForm() {\n  this.$refs.form.validate(valid => {\n    if (valid) {\n      if (this.form.id != null) {\n        const query = new AV.Query('Data');\n        query.equalTo('id', this.form.id);\n        query.first().then((data) => {\n          data.set('name', this.form.name);\n          data.set('grade', this.form.grade);\n          data.set('points', this.form.points);\n          data.set('address', this.form.address);\n          data.save().then((data) => {\n            this.$message({\n              type: 'success',\n              message: '修改成功!'\n            });\n            this.open = false;\n            this.getList();\n          });\n        })\n      } else {\n        const data = new AV.Object('Data');\n        data.set('name', this.form.name);\n        data.set('grade', this.form.grade);\n        data.set('points', this.form.points);\n        data.set('address', this.form.address);\n        data.save().then((data) => {\n          this.$message({\n            type: 'success',\n            message: '新增成功!'\n          });\n          this.open = false;\n          this.getList();\n        });\n      }\n    }\n  });\n},\n```\n\n尝试修改某数据，发现成功实现修改。\n\n![修改数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-16.png)\n\n![修改成功](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-17.png)\n\n至此，增删改查功能已经全部完成了，这个页面也达到了它实际上的使用效果。\n\n## 5 总结\n\n云后端可以解决纯前端代码有时候需要用到动态数据时的一些难题，其直接提供JSON数据的存储，并提供增删改查接口，省去前端开发中缺少后端服务器和数据库的问题。对于一些简单的前端程序，比如只用前端写一个排行榜并放到GitHub Pages上，这个排行榜数据极其简单，无必要搭建后端和数据库，但数据需要可以实现动态的读写，这时云后端就比较合适。有时候也可以用在前端开发测试模拟数据上，或是在静态博客里面放一些动态数据（如统计访问量，甚至是开发评论系统）。\n\n但其使用范围还是有限，免费版具有用量限制，安全性不高，与数据库的交互还存在一定的不便等。\n\n[腾讯云](https://cloud.tencent.com/)、[阿里云](https://www.aliyun.com/)等也提供更安全稳定的收费版云存储服务，还有[MaxLeap](https://maxleap.cn/s/web/zh_cn/index.html)、[Bomb](https://www.bmob.cn/)等其他云服务提供商，可以根据需要选择。\n\n这个项目的展示页面：<https://corecabin.cn/CloudBackendExample/>\n\n这个项目的源码：<https://github.com/kaluojushi/CloudBackendExample>\n","source":"_posts/how-to-use-dynamic-data-in-github-pages.md","raw":"---\ntitle: 如何在GitHub Pages中使用动态数据\ndate: 2021-11-23 14:04:04\ncategories: Development\ntags:\n  - Vue\n  - ElementUI\n  - 技巧\n  - 前端\n  - 编程\n  - 开发\n  - GitHub\n  - HTML\n  - JavaScript\ncomments: true\n---\n\n最近在写一个纯前端兴趣项目时遇到的问题，前端需要展示一些数据。在传统的开发模式中，如Java小游戏开发，会把这些数据存储在文件中（如历史分数等），可以对其进行读写。但在前端开发时，这些数据的交互变得比较复杂，尤其是需要读写的时候。\n\n<!--more-->\n\n## 1 需求分析\n\n在传统的本地开发模式中，当我们需要一个长期稳定存储的数据，并可以对它进行读写时，通常不会把它写在代码里，而是放在一个文件中，并通过IO流的方式去操作它，这在Java小游戏开发中比较常见，例如游戏历史分数。\n\n当我们在写纯前端项目，并把它展示到[GitHub Pages](https://pages.github.com/)时，这就不适用了。众所周知，GitHub Pages提供的是静态页面展示，我们应该是可以通过固定的JavaScript代码去实现文件的读取，但如果要写文件的话，且不说JavaScript如何实现文件写入，由于我们的文件放在GitHub仓库里，要更改仓库文件其实就是一次`git push`过程，这就比较奇怪了。\n\n> JavaScript实现文本文件的读取：参考<https://www.cnblogs.com/jscs/p/13444671.html>\n>\n> 写一个函数：\n>\n> ```javascript\n> load(path) {\n> let xhr = new XMLHttpRequest();\n> let okStatus = document.location.protocol === \"file:\" ? 0 : 200;\n> xhr.open('GET', path, false);\n> xhr.overrideMimeType(\"text/html;charset=utf-8\");//默认为utf-8\n> xhr.send(null);\n> return xhr.status === okStatus ? xhr.responseText : null;\n> },\n> ```\n>\n> 然后再调用函数，传入文件路径，返回的是一个字符串，包含文件所有内容：\n>\n> ```javascript\n> let string = load(\"data/text.txt\");\n> console.log(string);\n> ```\n>\n> 也可以使用JSON格式的数据，那就更简单了，在此不表。\n\n但我们又不可避免地需要使用一些动态数据，并通过前端实现读写，最好是像数据库一样，可以实现增删改查。\n\n参考资料：\n\n1. [研究使用Github Pages搭建具有数据库的个人网站](https://blog.csdn.net/tiandixuanwuliang/article/details/81738512)\n2. [github page建立动态网站](https://blog.csdn.net/dongzhuo/article/details/88051383)\n3. [github可以搭建动态网站吗? - 知乎](https://www.zhihu.com/question/30869973?d=123)\n\n## 2 基本页面部分\n\n下面我们举一个例子，这个例子就是个简单的表格，需要有增删改查功能。\n\n在WebStorm或Idea中新建一个项目`CloudBackendExample`，然后新建文件`index.html`，导入Vue和ElementUI，并写一个表格模板。\n\n```html\n<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\"\n        content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n  <!-- import Vue before Element -->\n  <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\n  <!-- import Element CSS -->\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n  <!-- import Element JavaScript -->\n  <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n  <title>测试表格</title>\n</head>\n\n<body>\n<div id=\"app\">\n  <!-- 搜索功能 -->\n  <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n    <el-form-item label=\"姓名\" prop=\"name\">\n      <el-input\n          v-model=\"queryParams.name\"\n          placeholder=\"请输入姓名\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n      />\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n      <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n    </el-form-item>\n  </el-form>\n\n  <!-- 增删改按钮 -->\n  <el-row :gutter=\"10\" class=\"mb8\">\n    <el-col :span=\"1.5\">\n      <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\">新增</el-button>\n    </el-col>\n    <el-col :span=\"1.5\">\n      <el-button type=\"success\" plain icon=\"el-icon-edit\" size=\"mini\" :disabled=\"single\" @click=\"handleUpdate\">修改\n      </el-button>\n    </el-col>\n    <el-col :span=\"1.5\">\n      <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\" @click=\"handleDelete\">删除\n      </el-button>\n    </el-col>\n    <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n  </el-row>\n\n  <!-- 数据表格 -->\n  <el-table v-loading=\"loading\" :data=\"basicList\" @selection-change=\"handleSelectionChange\" stripe>\n    <el-table-column type=\"selection\" width=\"55\" align=\"center\"/>\n    <el-table-column label=\"姓名\" align=\"center\" prop=\"name\"/>\n    <el-table-column label=\"年级\" align=\"center\" prop=\"grade\"/>\n    <el-table-column label=\"得分\" align=\"center\" prop=\"points\"/>\n    <el-table-column label=\"地址\" align=\"center\" prop=\"address\"/>\n    <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n      <template slot-scope=\"scope\">\n        <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\">修改</el-button>\n        <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\">删除</el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n\n  <!-- 添加或修改数据对话框 -->\n  <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body>\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"75px\">\n      <el-form-item label=\"姓名\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入姓名\"/>\n      </el-form-item>\n      <el-form-item label=\"年级\" prop=\"grade\">\n        <el-input v-model=\"form.grade\" placeholder=\"请输入年级\"/>\n      </el-form-item>\n      <el-form-item label=\"得分\" prop=\"points\">\n        <el-input-number v-model=\"form.points\" :min=\"0\" :max=\"100\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"地址\" prop=\"address\">\n        <el-input v-model=\"form.address\" placeholder=\"请输入地址\"/>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</body>\n\n<script src=\"index.js\"></script>\n\n<!-- 响应式布局处理 -->\n<style>\n  @media screen and (max-width: 1000px) {\n    .el-dialog {\n      width: 80% !important;\n    }\n  }\n</style>\n```\n\n同时，新建一个`index.js`，先写好一些基本的Vue内容，比如一些数据和方法。\n\n```javascript\nnew Vue({\n  el: '#app',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      selections: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 表格数据\n      tableList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        name: ''\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        name: [{required: true, message: \"姓名不能为空\", trigger: \"blur\"}],\n        grade: [{required: true, message: \"年级不能为空\", trigger: \"blur\"}],\n        points: [{required: true, message: \"得分不能为空\", trigger: \"blur\"}],\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询表格数据 */\n    getList() {\n      this.loading = true;\n      // 这里是查询操作\n      this.loading = false;\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.queryParams = {\n        name: ''\n      };\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.selections = selection;\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加数据\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      // 这里获得修改对象的信息\n      this.open = true;\n      this.title = \"修改数据\";\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          // 这里是新增或修改操作\n          this.open = false;\n          this.getList();\n        }\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        name: null,\n        grade: null,\n        points: null,\n        address: null\n      };\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      // 这里是删除操作\n    }\n  }\n});\n```\n\n这个页面是可以预览的，也没什么问题，它甚至可以直接传到GitHub仓库里，开GitHub Pages后可以直接在网络上预览。但是它没有任何数据，而且增删改查按钮都不能用。\n\n![预览页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-01.png)\n\n## 3 云后端简介\n\n这时候就要用到云后端了。云后端相当于传统项目开发中的数据库+后端，对于纯前端开发来说，它可以实现数据存储、增删改查功能，和传统开发一样，给前端一个api接口，前端用它就好了。\n\n> 大部分的产品都是数据驱动的，它们有一个最大的特点，就是对后端的需求在模式上其实是比较统一的：\n>\n> - 前端负责数据展现和用户交互处理，与后端的 app server 通过网络来交换需要的数据；\n> - app server 负责业务逻辑处理，生成核心数据存储到 data server，或者聚合 data server 查询到的数据返回给客户端；\n> - data server 负责核心数据的存储和备份。\n>\n> 这样的模式适合互联网上绝大部分产品，虽然数据结构有差异、业务逻辑不一样，但是前后端交互的主体——「数据」，抽象来看是一致的，后端的架构（譬如 LAMP）也是大同小异的，而且同样的系统在一遍一遍地被重复开发，极大浪费了我们宝贵的技术资源。\n>\n> ——[LeanCloud文档：数据存储服务总览](https://leancloud.cn/docs/storage_overview.html)\n\n比如以[LeanCloud](https://www.leancloud.cn/)云服务为例，它提供数据存储、云引擎+数据库、即时通讯等服务，我们其实只需要**数据存储**里的**结构化数据存储**功能就可以了。它直接存储JSON对象并提供增删改查接口，这就可以让我们的页面发生变化了。\n\n注册一个LeanCloud账号，进入控制台，创建一个应用，输入应用名称，开发版已经足够使用了。\n\n![创建应用](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-02.png)\n\n我们使用JavaScript写入每个功能，所以参考[LeanCloud里JavaScript的数据存储开发文档](https://leancloud.cn/docs/leanstorage_guide-js.html)。\n\n## 4 写入增删改查功能\n\n### 4.1 准备工作\n\n根据文档，我们首先引入SDK，直接在`index.html`中通过CDN引入：\n\n```html\n<!--  import LeanCloud-->\n<script src=\"//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js\"></script>\n```\n\n然后再在`index.js`开头引用全局变量`AV`：\n\n```js\nconst { Query, User } = AV;\n```\n\n服务需要初始化，我们在控制台中找到应用凭证，将App ID、App Key和服务器地址放到初始化函数中：\n\n![应用凭证](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-03.png)\n\n```js\nAV.init({\n  appId: \"sJRG...\",\n  appKey: \"lgxM...\",\n  serverURL: \"https://sj...\"\n});\n```\n\n搞定之后，还需要创建一个Class来存放结构化数据。根据[文档](https://leancloud.cn/docs/leanstorage_guide-js.html#hash813593086)，Class可以在JavaScript中被创建，但我们并不需要在前端中去创建Class，所以我们在控制台添加好。\n\n在控制台中找到数据存储的结构化数据，创建一个新的Class，并把权限设置为无限制，以便可以进行读写。\n\n![创建Class](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-04.png)\n\n添加若干列，并设置好列名称和列类型：\n\n![添加id属性](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-05.png)\n\n![添加name属性及其他属性](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-06.png)\n\n再在控制台添加几行示例数据，以准备完成接下来的查找功能。\n\n![添加两行示例数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-07.png)\n\n### 4.2 查\n\n首先完成`getList`函数，这是最基本的函数，展示表格、实现搜索都用到它。\n\n构建一个`Av.Query`，无需添加其查询条件，直接寻找，可以获取到所有对象。\n\n```javascript\nconst queryAll = new AV.Query('Data');\t// Data为Class名\nqueryAll.find().then((rows) => {\n  // rows是所有对象的数组\n});\n```\n\n在前端log一下`rows`，发现是这个东西：\n\n![console.log(rows)](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-08.png)\n\n好耶！得到一个数组，这个数组长度为2，正好是我们刚添加的两条数据，里面是2个对象。只是它里面的对象仿佛不是一个我们要的JSON数据。\n\n原来这个对象是封装好的，取属性值可以通过对象的`get`函数，或是通过`attributes`属性。我们把`attributes`属性放到表格数据里。\n\n```javascript\ngetList() {\n  this.loading = true;\n  this.tableList = [];\n  const queryAll = new AV.Query('Data');\n  queryAll.find().then((rows) => {\n    for (let row of rows) {\n      this.tableList.push(row.attributes);\n    }\n    this.loading = false;\n  });\n},\n```\n\n表格中有数据了！\n\n![通过getList，表格拿到了数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-09.png)\n\n接下来完成搜索功能，搜索功能实际上也只是调用`getList`，所以`getList`还需要再根据`queryParams`改一下：\n\n```javascript\ngetList() {\n  this.loading = true;\n  this.tableList = [];\n  const queryAll = new AV.Query('Data');\n  if (this.queryParams.name) {\t// 注意在js中，空字符串被视为false\n    queryAll.contains('name', this.queryParams.name);\n    // 这里相当于SQL中的 name LIKE '%...%'\n  }\n  queryAll.find().then((rows) => {\n    for (let row of rows) {\n      this.tableList.push(row.attributes);\n    }\n    this.loading = false;\n  });\n},\n```\n\n搜索功能就完成了。`handleQuery`和`resetQuery`两个函数也不需要改动。\n\n![搜索功能](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-10.png)\n\n### 4.3 增\n\n新增按钮的函数`handleAdd`无需修改，目前即使我们不写任何操作，点击新增按钮，也可以出现这个对话框：\n\n![添加数据对话框](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-11.png)\n\n我们要写的是确定按钮的函数`submitForm`。由于这个对话框新增与修改共用，因此我们在函数里，需要判断一下当前操作是新增还是修改，它们最大的不同是当前的`form`数据的`id`属性是否为`null`。\n\n```javascript\nsubmitForm() {\n  this.$refs.form.validate(valid => {\n    if (valid) {\n      if (this.form.id != null) {\n        // 这里是修改操作\n        this.open = false;\n        this.getList();\n      } else {\n        // 这里是新增操作\n        this.open = false;\n        this.getList();\n      }\n    }\n  });\n},\n```\n\n添加数据的方法是，先新建一个Data的对象，然后通过`set`设定其属性值，再调用`save`存储到云端。\n\n```javascript\nsubmitForm() {\n  this.$refs.form.validate(valid => {\n    if (valid) {\n      if (this.form.id != null) {\n        // 这里是修改操作\n        this.open = false;\n        this.getList();\n      } else {\n        const data = new AV.Object('Data');\n        data.set('name', this.form.name);\n        data.set('grade', this.form.grade);\n        data.set('points', this.form.points);\n        data.set('address', this.form.address);\n        data.save().then((data) => {\n          this.$message({\n            type: 'success',\n            message: '新增成功!'\n          });\n          this.open = false;\n          this.getList();\n        });\n      }\n    }\n  });\n},\n```\n\n尝试加入一条数据试试，然后看看页面展示的效果和云后端控制台的数据：\n\n![表格中成功新增数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-12.png)\n\n![云后端控制台也成功新增数据，并且自动设置id](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-13.png)\n\n### 4.4 删\n\n我们要写函数`handleDelete`，并且注意，删除可以单选删除，可以多选删除，需要删除的参数可能是对象或数组。这是由是否传入参数`row`来决定的，需要注意的是，虽然上面的删除按钮和右侧的删除按钮调用同一个函数，上面的删除按钮没有传入参数`row`，此时会传入一个**点击事件**并赋给`row`。可以通过判断`row.id`的方式，来判断当前点击的是哪个删除按钮；如果通过`row`，那就无法判断了。\n\n```javascript\nhandleDelete(row) {\n  if (row.id) {\n    this.$confirm('是否确认删除该数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      // 删除单个数据（对象）\n    });\n  } else {\n    const length = this.selections.length;\n    this.$confirm('是否确认删除' + (length > 1 ? '这' + length + '个' : '该') + '数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      // 删除多个数据（数组）\n    });\n  }\n}\n```\n\n对于对象，直接调用`destroy`就好；对于数组，可以使用`destroyAll`一次请求中删除。\n\n```javascript\nhandleDelete(row) {\n  if (row.id) {\n    this.$confirm('是否确认删除该数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      const query = new AV.Query('Data');\n      query.equalTo('id', row.id);\n      query.first().then((data) => {\n        data.destroy().then((data) => {\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          this.getList();\n        });\n      });\n    }).catch(() => {\n      this.$message({\n        type: 'info',\n        message: '已取消删除'\n      });\n    });\n  } else {\n    const length = this.selections.length;\n    this.$confirm('是否确认删除' + (length > 1 ? '这' + length + '个' : '该') + '数据?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(() => {\n      const ids = this.selections.map(item => item.id);\n      const query = new AV.Query('Data');\n      query.containedIn('id', ids);\n      query.find().then((rows) => {\n        AV.Object.destroyAll(rows).then((rows) => {\t// 找到的rows就是需要被一次删掉的rows数组\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          this.getList();\n        });\n      });\n    }).catch(() => {\n      this.$message({\n        type: 'info',\n        message: '已取消删除'\n      });\n    });\n  }\n}\n```\n\n尝试删除某数据，发现数据从表中和后台中删除。\n\n![删除提示](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-14.png)\n\n### 4.5 改\n\n修改与新增用的是同一个对话框，因此修改时，要先获得修改对象的数据，并赋给`form`。修改对象的传入也有两种方式，一种是当前行`row`，一种是选中数组（长度为1）。\n\n```javascript\nhandleUpdate(row) {\n  this.reset();\n  const id = row.id || this.selections[0].id;\n  const query = new AV.Query('Data');\n  query.equalTo('id', id);\n  query.first().then((data) => {\n    this.form = {\n      id: data.get('id'),\n      name: data.get('name'),\n      grade: data.get('grade'),\n      points: data.get('points'),\n      address: data.get('address')\n    }\n    this.open = true;\n    this.title = \"修改数据\";\n  });\n},\n```\n\n点击右边的修改或是上面的修改，发现可以显示当前数据的信息。\n\n![修改数据对话框](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-15.png)\n\n最后再完成`submitForm`函数中修改操作的部分，这部分与新增操作类似。\n\n```javascript\nsubmitForm() {\n  this.$refs.form.validate(valid => {\n    if (valid) {\n      if (this.form.id != null) {\n        const query = new AV.Query('Data');\n        query.equalTo('id', this.form.id);\n        query.first().then((data) => {\n          data.set('name', this.form.name);\n          data.set('grade', this.form.grade);\n          data.set('points', this.form.points);\n          data.set('address', this.form.address);\n          data.save().then((data) => {\n            this.$message({\n              type: 'success',\n              message: '修改成功!'\n            });\n            this.open = false;\n            this.getList();\n          });\n        })\n      } else {\n        const data = new AV.Object('Data');\n        data.set('name', this.form.name);\n        data.set('grade', this.form.grade);\n        data.set('points', this.form.points);\n        data.set('address', this.form.address);\n        data.save().then((data) => {\n          this.$message({\n            type: 'success',\n            message: '新增成功!'\n          });\n          this.open = false;\n          this.getList();\n        });\n      }\n    }\n  });\n},\n```\n\n尝试修改某数据，发现成功实现修改。\n\n![修改数据](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-16.png)\n\n![修改成功](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-17.png)\n\n至此，增删改查功能已经全部完成了，这个页面也达到了它实际上的使用效果。\n\n## 5 总结\n\n云后端可以解决纯前端代码有时候需要用到动态数据时的一些难题，其直接提供JSON数据的存储，并提供增删改查接口，省去前端开发中缺少后端服务器和数据库的问题。对于一些简单的前端程序，比如只用前端写一个排行榜并放到GitHub Pages上，这个排行榜数据极其简单，无必要搭建后端和数据库，但数据需要可以实现动态的读写，这时云后端就比较合适。有时候也可以用在前端开发测试模拟数据上，或是在静态博客里面放一些动态数据（如统计访问量，甚至是开发评论系统）。\n\n但其使用范围还是有限，免费版具有用量限制，安全性不高，与数据库的交互还存在一定的不便等。\n\n[腾讯云](https://cloud.tencent.com/)、[阿里云](https://www.aliyun.com/)等也提供更安全稳定的收费版云存储服务，还有[MaxLeap](https://maxleap.cn/s/web/zh_cn/index.html)、[Bomb](https://www.bmob.cn/)等其他云服务提供商，可以根据需要选择。\n\n这个项目的展示页面：<https://corecabin.cn/CloudBackendExample/>\n\n这个项目的源码：<https://github.com/kaluojushi/CloudBackendExample>\n","slug":"how-to-use-dynamic-data-in-github-pages","published":1,"updated":"2022-02-28T12:08:51.455Z","_id":"cl06nlvuh0030f4vidvkp0u0q","layout":"post","photos":[],"link":"","content":"<p>最近在写一个纯前端兴趣项目时遇到的问题，前端需要展示一些数据。在传统的开发模式中，如Java小游戏开发，会把这些数据存储在文件中（如历史分数等），可以对其进行读写。但在前端开发时，这些数据的交互变得比较复杂，尤其是需要读写的时候。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-需求分析\"><a href=\"#1-需求分析\" class=\"headerlink\" title=\"1 需求分析\"></a>1 需求分析</h2><p>在传统的本地开发模式中，当我们需要一个长期稳定存储的数据，并可以对它进行读写时，通常不会把它写在代码里，而是放在一个文件中，并通过IO流的方式去操作它，这在Java小游戏开发中比较常见，例如游戏历史分数。</p>\n<p>当我们在写纯前端项目，并把它展示到<a href=\"https://pages.github.com/\">GitHub Pages</a>时，这就不适用了。众所周知，GitHub Pages提供的是静态页面展示，我们应该是可以通过固定的JavaScript代码去实现文件的读取，但如果要写文件的话，且不说JavaScript如何实现文件写入，由于我们的文件放在GitHub仓库里，要更改仓库文件其实就是一次<code>git push</code>过程，这就比较奇怪了。</p>\n<blockquote>\n<p>JavaScript实现文本文件的读取：参考<a href=\"https://www.cnblogs.com/jscs/p/13444671.html\">https://www.cnblogs.com/jscs/p/13444671.html</a></p>\n<p>写一个函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">load</span>(<span class=\"params\">path</span>)</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">let</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"keyword\">let</span> okStatus = <span class=\"built_in\">document</span>.location.protocol === <span class=\"string\">&quot;file:&quot;</span> ? <span class=\"number\">0</span> : <span class=\"number\">200</span>;</span><br><span class=\"line\">xhr.open(<span class=\"string\">&#x27;GET&#x27;</span>, path, <span class=\"literal\">false</span>);</span><br><span class=\"line\">xhr.overrideMimeType(<span class=\"string\">&quot;text/html;charset=utf-8&quot;</span>);<span class=\"comment\">//默认为utf-8</span></span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> xhr.status === okStatus ? xhr.responseText : <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>然后再调用函数，传入文件路径，返回的是一个字符串，包含文件所有内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = load(<span class=\"string\">&quot;data/text.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string);</span><br></pre></td></tr></table></figure>\n<p>也可以使用JSON格式的数据，那就更简单了，在此不表。</p>\n</blockquote>\n<p>但我们又不可避免地需要使用一些动态数据，并通过前端实现读写，最好是像数据库一样，可以实现增删改查。</p>\n<p>参考资料：</p>\n<ol>\n<li><a href=\"https://blog.csdn.net/tiandixuanwuliang/article/details/81738512\">研究使用Github Pages搭建具有数据库的个人网站</a></li>\n<li><a href=\"https://blog.csdn.net/dongzhuo/article/details/88051383\">github page建立动态网站</a></li>\n<li><a href=\"https://www.zhihu.com/question/30869973?d=123\">github可以搭建动态网站吗? - 知乎</a></li>\n</ol>\n<h2 id=\"2-基本页面部分\"><a href=\"#2-基本页面部分\" class=\"headerlink\" title=\"2 基本页面部分\"></a>2 基本页面部分</h2><p>下面我们举一个例子，这个例子就是个简单的表格，需要有增删改查功能。</p>\n<p>在WebStorm或Idea中新建一个项目<code>CloudBackendExample</code>，然后新建文件<code>index.html</code>，导入Vue和ElementUI，并写一个表格模板。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- import Vue before Element --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- import Element CSS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- import Element JavaScript --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>测试表格<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 搜索功能 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;queryParams&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;queryForm&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;showSearch&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;68px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入姓名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">keyup.enter.native</span>=<span class=\"string\">&quot;handleQuery&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-search&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleQuery&quot;</span>&gt;</span>搜索<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-refresh&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;resetQuery&quot;</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 增删改按钮 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">plain</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-plus&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleAdd&quot;</span>&gt;</span>新增<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">plain</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;single&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate&quot;</span>&gt;</span>修改</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">plain</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;multiple&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete&quot;</span>&gt;</span>删除</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">right-toolbar</span> <span class=\"attr\">:showSearch.sync</span>=<span class=\"string\">&quot;showSearch&quot;</span> @<span class=\"attr\">queryTable</span>=<span class=\"string\">&quot;getList&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">right-toolbar</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 数据表格 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;basicList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span> <span class=\"attr\">stripe</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;年级&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;grade&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;得分&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;points&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class-name</span>=<span class=\"string\">&quot;small-padding fixed-width&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate(scope.row)&quot;</span>&gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 添加或修改数据对话框 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;700px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;75px&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.name&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入姓名&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;年级&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;grade&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.grade&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入年级&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;得分&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;points&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input-number</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.points&quot;</span> <span class=\"attr\">:min</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">:max</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input-number</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.address&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入地址&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;submitForm&quot;</span>&gt;</span>确 定<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;cancel&quot;</span>&gt;</span>取 消<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 响应式布局处理 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">1000px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.el-dialog</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"attribute\">width</span>: <span class=\"number\">80%</span> <span class=\"meta\">!important</span>;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>同时，新建一个<code>index.js</code>，先写好一些基本的Vue内容，比如一些数据和方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 遮罩层</span></span><br><span class=\"line\">      <span class=\"attr\">loading</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 选中数组</span></span><br><span class=\"line\">      <span class=\"attr\">selections</span>: [],</span><br><span class=\"line\">      <span class=\"comment\">// 非单个禁用</span></span><br><span class=\"line\">      <span class=\"attr\">single</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 非多个禁用</span></span><br><span class=\"line\">      <span class=\"attr\">multiple</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 显示搜索条件</span></span><br><span class=\"line\">      <span class=\"attr\">showSearch</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 表格数据</span></span><br><span class=\"line\">      <span class=\"attr\">tableList</span>: [],</span><br><span class=\"line\">      <span class=\"comment\">// 弹出层标题</span></span><br><span class=\"line\">      <span class=\"attr\">title</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 是否显示弹出层</span></span><br><span class=\"line\">      <span class=\"attr\">open</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 查询参数</span></span><br><span class=\"line\">      <span class=\"attr\">queryParams</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 表单参数</span></span><br><span class=\"line\">      <span class=\"attr\">form</span>: &#123;&#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 表单校验</span></span><br><span class=\"line\">      <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: [&#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;姓名不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;blur&quot;</span>&#125;],</span><br><span class=\"line\">        <span class=\"attr\">grade</span>: [&#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;年级不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;blur&quot;</span>&#125;],</span><br><span class=\"line\">        <span class=\"attr\">points</span>: [&#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;得分不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;blur&quot;</span>&#125;],</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">/** 查询表格数据 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 这里是查询操作</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 搜索按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 重置按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">resetQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.queryParams = &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.handleQuery();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 多选框选中数据</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleSelectionChange</span>(<span class=\"params\">selection</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.selections = selection;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.single = selection.length !== <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.multiple = !selection.length;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 新增按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleAdd</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;添加数据&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 修改按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleUpdate</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">      <span class=\"comment\">// 这里获得修改对象的信息</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;修改数据&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 提交按钮 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 这里是新增或修改操作</span></span><br><span class=\"line\">          <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 取消按钮</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">cancel</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 表单重置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">reset</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form = &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">grade</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">points</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">address</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 删除按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里是删除操作</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这个页面是可以预览的，也没什么问题，它甚至可以直接传到GitHub仓库里，开GitHub Pages后可以直接在网络上预览。但是它没有任何数据，而且增删改查按钮都不能用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-01.png\" alt=\"预览页面\"></p>\n<h2 id=\"3-云后端简介\"><a href=\"#3-云后端简介\" class=\"headerlink\" title=\"3 云后端简介\"></a>3 云后端简介</h2><p>这时候就要用到云后端了。云后端相当于传统项目开发中的数据库+后端，对于纯前端开发来说，它可以实现数据存储、增删改查功能，和传统开发一样，给前端一个api接口，前端用它就好了。</p>\n<blockquote>\n<p>大部分的产品都是数据驱动的，它们有一个最大的特点，就是对后端的需求在模式上其实是比较统一的：</p>\n<ul>\n<li>前端负责数据展现和用户交互处理，与后端的 app server 通过网络来交换需要的数据；</li>\n<li>app server 负责业务逻辑处理，生成核心数据存储到 data server，或者聚合 data server 查询到的数据返回给客户端；</li>\n<li>data server 负责核心数据的存储和备份。</li>\n</ul>\n<p>这样的模式适合互联网上绝大部分产品，虽然数据结构有差异、业务逻辑不一样，但是前后端交互的主体——「数据」，抽象来看是一致的，后端的架构（譬如 LAMP）也是大同小异的，而且同样的系统在一遍一遍地被重复开发，极大浪费了我们宝贵的技术资源。</p>\n<p>——<a href=\"https://leancloud.cn/docs/storage_overview.html\">LeanCloud文档：数据存储服务总览</a></p>\n</blockquote>\n<p>比如以<a href=\"https://www.leancloud.cn/\">LeanCloud</a>云服务为例，它提供数据存储、云引擎+数据库、即时通讯等服务，我们其实只需要<strong>数据存储</strong>里的<strong>结构化数据存储</strong>功能就可以了。它直接存储JSON对象并提供增删改查接口，这就可以让我们的页面发生变化了。</p>\n<p>注册一个LeanCloud账号，进入控制台，创建一个应用，输入应用名称，开发版已经足够使用了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-02.png\" alt=\"创建应用\"></p>\n<p>我们使用JavaScript写入每个功能，所以参考<a href=\"https://leancloud.cn/docs/leanstorage_guide-js.html\">LeanCloud里JavaScript的数据存储开发文档</a>。</p>\n<h2 id=\"4-写入增删改查功能\"><a href=\"#4-写入增删改查功能\" class=\"headerlink\" title=\"4 写入增删改查功能\"></a>4 写入增删改查功能</h2><h3 id=\"4-1-准备工作\"><a href=\"#4-1-准备工作\" class=\"headerlink\" title=\"4.1 准备工作\"></a>4.1 准备工作</h3><p>根据文档，我们首先引入SDK，直接在<code>index.html</code>中通过CDN引入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--  import LeanCloud--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后再在<code>index.js</code>开头引用全局变量<code>AV</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; Query, User &#125; = AV;</span><br></pre></td></tr></table></figure>\n<p>服务需要初始化，我们在控制台中找到应用凭证，将App ID、App Key和服务器地址放到初始化函数中：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-03.png\" alt=\"应用凭证\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AV.init(&#123;</span><br><span class=\"line\">  <span class=\"attr\">appId</span>: <span class=\"string\">&quot;sJRG...&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">appKey</span>: <span class=\"string\">&quot;lgxM...&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">serverURL</span>: <span class=\"string\">&quot;https://sj...&quot;</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>搞定之后，还需要创建一个Class来存放结构化数据。根据<a href=\"https://leancloud.cn/docs/leanstorage_guide-js.html#hash813593086\">文档</a>，Class可以在JavaScript中被创建，但我们并不需要在前端中去创建Class，所以我们在控制台添加好。</p>\n<p>在控制台中找到数据存储的结构化数据，创建一个新的Class，并把权限设置为无限制，以便可以进行读写。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-04.png\" alt=\"创建Class\"></p>\n<p>添加若干列，并设置好列名称和列类型：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-05.png\" alt=\"添加id属性\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-06.png\" alt=\"添加name属性及其他属性\"></p>\n<p>再在控制台添加几行示例数据，以准备完成接下来的查找功能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-07.png\" alt=\"添加两行示例数据\"></p>\n<h3 id=\"4-2-查\"><a href=\"#4-2-查\" class=\"headerlink\" title=\"4.2 查\"></a>4.2 查</h3><p>首先完成<code>getList</code>函数，这是最基本的函数，展示表格、实现搜索都用到它。</p>\n<p>构建一个<code>Av.Query</code>，无需添加其查询条件，直接寻找，可以获取到所有对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> queryAll = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);\t<span class=\"comment\">// Data为Class名</span></span><br><span class=\"line\">queryAll.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// rows是所有对象的数组</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在前端log一下<code>rows</code>，发现是这个东西：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-08.png\" alt=\"console.log(rows)\"></p>\n<p>好耶！得到一个数组，这个数组长度为2，正好是我们刚添加的两条数据，里面是2个对象。只是它里面的对象仿佛不是一个我们要的JSON数据。</p>\n<p>原来这个对象是封装好的，取属性值可以通过对象的<code>get</code>函数，或是通过<code>attributes</code>属性。我们把<code>attributes</code>属性放到表格数据里。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableList = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryAll = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">  queryAll.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> rows) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tableList.push(row.attributes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>表格中有数据了！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-09.png\" alt=\"通过getList，表格拿到了数据\"></p>\n<p>接下来完成搜索功能，搜索功能实际上也只是调用<code>getList</code>，所以<code>getList</code>还需要再根据<code>queryParams</code>改一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableList = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryAll = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.name) &#123;\t<span class=\"comment\">// 注意在js中，空字符串被视为false</span></span><br><span class=\"line\">    queryAll.contains(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.queryParams.name);</span><br><span class=\"line\">    <span class=\"comment\">// 这里相当于SQL中的 name LIKE &#x27;%...%&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  queryAll.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> rows) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tableList.push(row.attributes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>搜索功能就完成了。<code>handleQuery</code>和<code>resetQuery</code>两个函数也不需要改动。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-10.png\" alt=\"搜索功能\"></p>\n<h3 id=\"4-3-增\"><a href=\"#4-3-增\" class=\"headerlink\" title=\"4.3 增\"></a>4.3 增</h3><p>新增按钮的函数<code>handleAdd</code>无需修改，目前即使我们不写任何操作，点击新增按钮，也可以出现这个对话框：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-11.png\" alt=\"添加数据对话框\"></p>\n<p>我们要写的是确定按钮的函数<code>submitForm</code>。由于这个对话框新增与修改共用，因此我们在函数里，需要判断一下当前操作是新增还是修改，它们最大的不同是当前的<code>form</code>数据的<code>id</code>属性是否为<code>null</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里是修改操作</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里是新增操作</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>添加数据的方法是，先新建一个Data的对象，然后通过<code>set</code>设定其属性值，再调用<code>save</code>存储到云端。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里是修改操作</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> data = <span class=\"keyword\">new</span> AV.Object(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.form.name);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;grade&#x27;</span>, <span class=\"built_in\">this</span>.form.grade);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;points&#x27;</span>, <span class=\"built_in\">this</span>.form.points);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;address&#x27;</span>, <span class=\"built_in\">this</span>.form.address);</span><br><span class=\"line\">        data.save().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;新增成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>尝试加入一条数据试试，然后看看页面展示的效果和云后端控制台的数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-12.png\" alt=\"表格中成功新增数据\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-13.png\" alt=\"云后端控制台也成功新增数据，并且自动设置id\"></p>\n<h3 id=\"4-4-删\"><a href=\"#4-4-删\" class=\"headerlink\" title=\"4.4 删\"></a>4.4 删</h3><p>我们要写函数<code>handleDelete</code>，并且注意，删除可以单选删除，可以多选删除，需要删除的参数可能是对象或数组。这是由是否传入参数<code>row</code>来决定的，需要注意的是，虽然上面的删除按钮和右侧的删除按钮调用同一个函数，上面的删除按钮没有传入参数<code>row</code>，此时会传入一个<strong>点击事件</strong>并赋给<code>row</code>。可以通过判断<code>row.id</code>的方式，来判断当前点击的是哪个删除按钮；如果通过<code>row</code>，那就无法判断了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row.id) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除该数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 删除单个数据（对象）</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = <span class=\"built_in\">this</span>.selections.length;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除&#x27;</span> + (length &gt; <span class=\"number\">1</span> ? <span class=\"string\">&#x27;这&#x27;</span> + length + <span class=\"string\">&#x27;个&#x27;</span> : <span class=\"string\">&#x27;该&#x27;</span>) + <span class=\"string\">&#x27;数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 删除多个数据（数组）</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于对象，直接调用<code>destroy</code>就好；对于数组，可以使用<code>destroyAll</code>一次请求中删除。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row.id) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除该数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">      query.equalTo(<span class=\"string\">&#x27;id&#x27;</span>, row.id);</span><br><span class=\"line\">      query.first().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        data.destroy().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;删除成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;info&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;已取消删除&#x27;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = <span class=\"built_in\">this</span>.selections.length;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除&#x27;</span> + (length &gt; <span class=\"number\">1</span> ? <span class=\"string\">&#x27;这&#x27;</span> + length + <span class=\"string\">&#x27;个&#x27;</span> : <span class=\"string\">&#x27;该&#x27;</span>) + <span class=\"string\">&#x27;数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> ids = <span class=\"built_in\">this</span>.selections.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.id);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">      query.containedIn(<span class=\"string\">&#x27;id&#x27;</span>, ids);</span><br><span class=\"line\">      query.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        AV.Object.destroyAll(rows).then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;\t<span class=\"comment\">// 找到的rows就是需要被一次删掉的rows数组</span></span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;删除成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;info&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;已取消删除&#x27;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尝试删除某数据，发现数据从表中和后台中删除。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-14.png\" alt=\"删除提示\"></p>\n<h3 id=\"4-5-改\"><a href=\"#4-5-改\" class=\"headerlink\" title=\"4.5 改\"></a>4.5 改</h3><p>修改与新增用的是同一个对话框，因此修改时，要先获得修改对象的数据，并赋给<code>form</code>。修改对象的传入也有两种方式，一种是当前行<code>row</code>，一种是选中数组（长度为1）。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleUpdate</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> id = row.id || <span class=\"built_in\">this</span>.selections[<span class=\"number\">0</span>].id;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">  query.equalTo(<span class=\"string\">&#x27;id&#x27;</span>, id);</span><br><span class=\"line\">  query.first().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.form = &#123;</span><br><span class=\"line\">      <span class=\"attr\">id</span>: data.get(<span class=\"string\">&#x27;id&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">name</span>: data.get(<span class=\"string\">&#x27;name&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">grade</span>: data.get(<span class=\"string\">&#x27;grade&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">points</span>: data.get(<span class=\"string\">&#x27;points&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">address</span>: data.get(<span class=\"string\">&#x27;address&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;修改数据&quot;</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>点击右边的修改或是上面的修改，发现可以显示当前数据的信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-15.png\" alt=\"修改数据对话框\"></p>\n<p>最后再完成<code>submitForm</code>函数中修改操作的部分，这部分与新增操作类似。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">        query.equalTo(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"built_in\">this</span>.form.id);</span><br><span class=\"line\">        query.first().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.form.name);</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;grade&#x27;</span>, <span class=\"built_in\">this</span>.form.grade);</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;points&#x27;</span>, <span class=\"built_in\">this</span>.form.points);</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;address&#x27;</span>, <span class=\"built_in\">this</span>.form.address);</span><br><span class=\"line\">          data.save().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">              <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">message</span>: <span class=\"string\">&#x27;修改成功!&#x27;</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> data = <span class=\"keyword\">new</span> AV.Object(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.form.name);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;grade&#x27;</span>, <span class=\"built_in\">this</span>.form.grade);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;points&#x27;</span>, <span class=\"built_in\">this</span>.form.points);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;address&#x27;</span>, <span class=\"built_in\">this</span>.form.address);</span><br><span class=\"line\">        data.save().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;新增成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>尝试修改某数据，发现成功实现修改。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-16.png\" alt=\"修改数据\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-17.png\" alt=\"修改成功\"></p>\n<p>至此，增删改查功能已经全部完成了，这个页面也达到了它实际上的使用效果。</p>\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5 总结\"></a>5 总结</h2><p>云后端可以解决纯前端代码有时候需要用到动态数据时的一些难题，其直接提供JSON数据的存储，并提供增删改查接口，省去前端开发中缺少后端服务器和数据库的问题。对于一些简单的前端程序，比如只用前端写一个排行榜并放到GitHub Pages上，这个排行榜数据极其简单，无必要搭建后端和数据库，但数据需要可以实现动态的读写，这时云后端就比较合适。有时候也可以用在前端开发测试模拟数据上，或是在静态博客里面放一些动态数据（如统计访问量，甚至是开发评论系统）。</p>\n<p>但其使用范围还是有限，免费版具有用量限制，安全性不高，与数据库的交互还存在一定的不便等。</p>\n<p><a href=\"https://cloud.tencent.com/\">腾讯云</a>、<a href=\"https://www.aliyun.com/\">阿里云</a>等也提供更安全稳定的收费版云存储服务，还有<a href=\"https://maxleap.cn/s/web/zh_cn/index.html\">MaxLeap</a>、<a href=\"https://www.bmob.cn/\">Bomb</a>等其他云服务提供商，可以根据需要选择。</p>\n<p>这个项目的展示页面：<a href=\"https://corecabin.cn/CloudBackendExample/\">https://corecabin.cn/CloudBackendExample/</a></p>\n<p>这个项目的源码：<a href=\"https://github.com/kaluojushi/CloudBackendExample\">https://github.com/kaluojushi/CloudBackendExample</a></p>\n","site":{"data":{}},"excerpt":"<p>最近在写一个纯前端兴趣项目时遇到的问题，前端需要展示一些数据。在传统的开发模式中，如Java小游戏开发，会把这些数据存储在文件中（如历史分数等），可以对其进行读写。但在前端开发时，这些数据的交互变得比较复杂，尤其是需要读写的时候。</p>","more":"<h2 id=\"1-需求分析\"><a href=\"#1-需求分析\" class=\"headerlink\" title=\"1 需求分析\"></a>1 需求分析</h2><p>在传统的本地开发模式中，当我们需要一个长期稳定存储的数据，并可以对它进行读写时，通常不会把它写在代码里，而是放在一个文件中，并通过IO流的方式去操作它，这在Java小游戏开发中比较常见，例如游戏历史分数。</p>\n<p>当我们在写纯前端项目，并把它展示到<a href=\"https://pages.github.com/\">GitHub Pages</a>时，这就不适用了。众所周知，GitHub Pages提供的是静态页面展示，我们应该是可以通过固定的JavaScript代码去实现文件的读取，但如果要写文件的话，且不说JavaScript如何实现文件写入，由于我们的文件放在GitHub仓库里，要更改仓库文件其实就是一次<code>git push</code>过程，这就比较奇怪了。</p>\n<blockquote>\n<p>JavaScript实现文本文件的读取：参考<a href=\"https://www.cnblogs.com/jscs/p/13444671.html\">https://www.cnblogs.com/jscs/p/13444671.html</a></p>\n<p>写一个函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">load</span>(<span class=\"params\">path</span>)</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">let</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"keyword\">let</span> okStatus = <span class=\"built_in\">document</span>.location.protocol === <span class=\"string\">&quot;file:&quot;</span> ? <span class=\"number\">0</span> : <span class=\"number\">200</span>;</span><br><span class=\"line\">xhr.open(<span class=\"string\">&#x27;GET&#x27;</span>, path, <span class=\"literal\">false</span>);</span><br><span class=\"line\">xhr.overrideMimeType(<span class=\"string\">&quot;text/html;charset=utf-8&quot;</span>);<span class=\"comment\">//默认为utf-8</span></span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> xhr.status === okStatus ? xhr.responseText : <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>然后再调用函数，传入文件路径，返回的是一个字符串，包含文件所有内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> string = load(<span class=\"string\">&quot;data/text.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string);</span><br></pre></td></tr></table></figure>\n<p>也可以使用JSON格式的数据，那就更简单了，在此不表。</p>\n</blockquote>\n<p>但我们又不可避免地需要使用一些动态数据，并通过前端实现读写，最好是像数据库一样，可以实现增删改查。</p>\n<p>参考资料：</p>\n<ol>\n<li><a href=\"https://blog.csdn.net/tiandixuanwuliang/article/details/81738512\">研究使用Github Pages搭建具有数据库的个人网站</a></li>\n<li><a href=\"https://blog.csdn.net/dongzhuo/article/details/88051383\">github page建立动态网站</a></li>\n<li><a href=\"https://www.zhihu.com/question/30869973?d=123\">github可以搭建动态网站吗? - 知乎</a></li>\n</ol>\n<h2 id=\"2-基本页面部分\"><a href=\"#2-基本页面部分\" class=\"headerlink\" title=\"2 基本页面部分\"></a>2 基本页面部分</h2><p>下面我们举一个例子，这个例子就是个简单的表格，需要有增删改查功能。</p>\n<p>在WebStorm或Idea中新建一个项目<code>CloudBackendExample</code>，然后新建文件<code>index.html</code>，导入Vue和ElementUI，并写一个表格模板。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- import Vue before Element --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- import Element CSS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- import Element JavaScript --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>测试表格<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 搜索功能 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;queryParams&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;queryForm&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;showSearch&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;68px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入姓名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">keyup.enter.native</span>=<span class=\"string\">&quot;handleQuery&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-search&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleQuery&quot;</span>&gt;</span>搜索<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-refresh&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;resetQuery&quot;</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 增删改按钮 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">plain</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-plus&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleAdd&quot;</span>&gt;</span>新增<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">plain</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;single&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate&quot;</span>&gt;</span>修改</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">plain</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;multiple&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete&quot;</span>&gt;</span>删除</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">right-toolbar</span> <span class=\"attr\">:showSearch.sync</span>=<span class=\"string\">&quot;showSearch&quot;</span> @<span class=\"attr\">queryTable</span>=<span class=\"string\">&quot;getList&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">right-toolbar</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 数据表格 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;basicList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span> <span class=\"attr\">stripe</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;年级&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;grade&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;得分&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;points&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class-name</span>=<span class=\"string\">&quot;small-padding fixed-width&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate(scope.row)&quot;</span>&gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 添加或修改数据对话框 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;700px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;75px&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.name&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入姓名&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;年级&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;grade&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.grade&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入年级&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;得分&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;points&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input-number</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.points&quot;</span> <span class=\"attr\">:min</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">:max</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input-number</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.address&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入地址&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;submitForm&quot;</span>&gt;</span>确 定<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;cancel&quot;</span>&gt;</span>取 消<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 响应式布局处理 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">1000px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.el-dialog</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"attribute\">width</span>: <span class=\"number\">80%</span> <span class=\"meta\">!important</span>;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>同时，新建一个<code>index.js</code>，先写好一些基本的Vue内容，比如一些数据和方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 遮罩层</span></span><br><span class=\"line\">      <span class=\"attr\">loading</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 选中数组</span></span><br><span class=\"line\">      <span class=\"attr\">selections</span>: [],</span><br><span class=\"line\">      <span class=\"comment\">// 非单个禁用</span></span><br><span class=\"line\">      <span class=\"attr\">single</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 非多个禁用</span></span><br><span class=\"line\">      <span class=\"attr\">multiple</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 显示搜索条件</span></span><br><span class=\"line\">      <span class=\"attr\">showSearch</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 表格数据</span></span><br><span class=\"line\">      <span class=\"attr\">tableList</span>: [],</span><br><span class=\"line\">      <span class=\"comment\">// 弹出层标题</span></span><br><span class=\"line\">      <span class=\"attr\">title</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 是否显示弹出层</span></span><br><span class=\"line\">      <span class=\"attr\">open</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 查询参数</span></span><br><span class=\"line\">      <span class=\"attr\">queryParams</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 表单参数</span></span><br><span class=\"line\">      <span class=\"attr\">form</span>: &#123;&#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 表单校验</span></span><br><span class=\"line\">      <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: [&#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;姓名不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;blur&quot;</span>&#125;],</span><br><span class=\"line\">        <span class=\"attr\">grade</span>: [&#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;年级不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;blur&quot;</span>&#125;],</span><br><span class=\"line\">        <span class=\"attr\">points</span>: [&#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;得分不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;blur&quot;</span>&#125;],</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">/** 查询表格数据 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 这里是查询操作</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 搜索按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 重置按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">resetQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.queryParams = &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.handleQuery();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 多选框选中数据</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleSelectionChange</span>(<span class=\"params\">selection</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.selections = selection;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.single = selection.length !== <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.multiple = !selection.length;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 新增按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleAdd</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;添加数据&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 修改按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleUpdate</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">      <span class=\"comment\">// 这里获得修改对象的信息</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;修改数据&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 提交按钮 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 这里是新增或修改操作</span></span><br><span class=\"line\">          <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 取消按钮</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">cancel</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 表单重置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">reset</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form = &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">grade</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">points</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">address</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 删除按钮操作 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里是删除操作</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这个页面是可以预览的，也没什么问题，它甚至可以直接传到GitHub仓库里，开GitHub Pages后可以直接在网络上预览。但是它没有任何数据，而且增删改查按钮都不能用。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-01.png\" alt=\"预览页面\"></p>\n<h2 id=\"3-云后端简介\"><a href=\"#3-云后端简介\" class=\"headerlink\" title=\"3 云后端简介\"></a>3 云后端简介</h2><p>这时候就要用到云后端了。云后端相当于传统项目开发中的数据库+后端，对于纯前端开发来说，它可以实现数据存储、增删改查功能，和传统开发一样，给前端一个api接口，前端用它就好了。</p>\n<blockquote>\n<p>大部分的产品都是数据驱动的，它们有一个最大的特点，就是对后端的需求在模式上其实是比较统一的：</p>\n<ul>\n<li>前端负责数据展现和用户交互处理，与后端的 app server 通过网络来交换需要的数据；</li>\n<li>app server 负责业务逻辑处理，生成核心数据存储到 data server，或者聚合 data server 查询到的数据返回给客户端；</li>\n<li>data server 负责核心数据的存储和备份。</li>\n</ul>\n<p>这样的模式适合互联网上绝大部分产品，虽然数据结构有差异、业务逻辑不一样，但是前后端交互的主体——「数据」，抽象来看是一致的，后端的架构（譬如 LAMP）也是大同小异的，而且同样的系统在一遍一遍地被重复开发，极大浪费了我们宝贵的技术资源。</p>\n<p>——<a href=\"https://leancloud.cn/docs/storage_overview.html\">LeanCloud文档：数据存储服务总览</a></p>\n</blockquote>\n<p>比如以<a href=\"https://www.leancloud.cn/\">LeanCloud</a>云服务为例，它提供数据存储、云引擎+数据库、即时通讯等服务，我们其实只需要<strong>数据存储</strong>里的<strong>结构化数据存储</strong>功能就可以了。它直接存储JSON对象并提供增删改查接口，这就可以让我们的页面发生变化了。</p>\n<p>注册一个LeanCloud账号，进入控制台，创建一个应用，输入应用名称，开发版已经足够使用了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-02.png\" alt=\"创建应用\"></p>\n<p>我们使用JavaScript写入每个功能，所以参考<a href=\"https://leancloud.cn/docs/leanstorage_guide-js.html\">LeanCloud里JavaScript的数据存储开发文档</a>。</p>\n<h2 id=\"4-写入增删改查功能\"><a href=\"#4-写入增删改查功能\" class=\"headerlink\" title=\"4 写入增删改查功能\"></a>4 写入增删改查功能</h2><h3 id=\"4-1-准备工作\"><a href=\"#4-1-准备工作\" class=\"headerlink\" title=\"4.1 准备工作\"></a>4.1 准备工作</h3><p>根据文档，我们首先引入SDK，直接在<code>index.html</code>中通过CDN引入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--  import LeanCloud--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后再在<code>index.js</code>开头引用全局变量<code>AV</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; Query, User &#125; = AV;</span><br></pre></td></tr></table></figure>\n<p>服务需要初始化，我们在控制台中找到应用凭证，将App ID、App Key和服务器地址放到初始化函数中：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-03.png\" alt=\"应用凭证\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AV.init(&#123;</span><br><span class=\"line\">  <span class=\"attr\">appId</span>: <span class=\"string\">&quot;sJRG...&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">appKey</span>: <span class=\"string\">&quot;lgxM...&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">serverURL</span>: <span class=\"string\">&quot;https://sj...&quot;</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>搞定之后，还需要创建一个Class来存放结构化数据。根据<a href=\"https://leancloud.cn/docs/leanstorage_guide-js.html#hash813593086\">文档</a>，Class可以在JavaScript中被创建，但我们并不需要在前端中去创建Class，所以我们在控制台添加好。</p>\n<p>在控制台中找到数据存储的结构化数据，创建一个新的Class，并把权限设置为无限制，以便可以进行读写。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-04.png\" alt=\"创建Class\"></p>\n<p>添加若干列，并设置好列名称和列类型：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-05.png\" alt=\"添加id属性\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-06.png\" alt=\"添加name属性及其他属性\"></p>\n<p>再在控制台添加几行示例数据，以准备完成接下来的查找功能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-07.png\" alt=\"添加两行示例数据\"></p>\n<h3 id=\"4-2-查\"><a href=\"#4-2-查\" class=\"headerlink\" title=\"4.2 查\"></a>4.2 查</h3><p>首先完成<code>getList</code>函数，这是最基本的函数，展示表格、实现搜索都用到它。</p>\n<p>构建一个<code>Av.Query</code>，无需添加其查询条件，直接寻找，可以获取到所有对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> queryAll = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);\t<span class=\"comment\">// Data为Class名</span></span><br><span class=\"line\">queryAll.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// rows是所有对象的数组</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>在前端log一下<code>rows</code>，发现是这个东西：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-08.png\" alt=\"console.log(rows)\"></p>\n<p>好耶！得到一个数组，这个数组长度为2，正好是我们刚添加的两条数据，里面是2个对象。只是它里面的对象仿佛不是一个我们要的JSON数据。</p>\n<p>原来这个对象是封装好的，取属性值可以通过对象的<code>get</code>函数，或是通过<code>attributes</code>属性。我们把<code>attributes</code>属性放到表格数据里。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableList = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryAll = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">  queryAll.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> rows) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tableList.push(row.attributes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>表格中有数据了！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-09.png\" alt=\"通过getList，表格拿到了数据\"></p>\n<p>接下来完成搜索功能，搜索功能实际上也只是调用<code>getList</code>，所以<code>getList</code>还需要再根据<code>queryParams</code>改一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.loading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableList = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryAll = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.name) &#123;\t<span class=\"comment\">// 注意在js中，空字符串被视为false</span></span><br><span class=\"line\">    queryAll.contains(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.queryParams.name);</span><br><span class=\"line\">    <span class=\"comment\">// 这里相当于SQL中的 name LIKE &#x27;%...%&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  queryAll.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> rows) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tableList.push(row.attributes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>搜索功能就完成了。<code>handleQuery</code>和<code>resetQuery</code>两个函数也不需要改动。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-10.png\" alt=\"搜索功能\"></p>\n<h3 id=\"4-3-增\"><a href=\"#4-3-增\" class=\"headerlink\" title=\"4.3 增\"></a>4.3 增</h3><p>新增按钮的函数<code>handleAdd</code>无需修改，目前即使我们不写任何操作，点击新增按钮，也可以出现这个对话框：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-11.png\" alt=\"添加数据对话框\"></p>\n<p>我们要写的是确定按钮的函数<code>submitForm</code>。由于这个对话框新增与修改共用，因此我们在函数里，需要判断一下当前操作是新增还是修改，它们最大的不同是当前的<code>form</code>数据的<code>id</code>属性是否为<code>null</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里是修改操作</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里是新增操作</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>添加数据的方法是，先新建一个Data的对象，然后通过<code>set</code>设定其属性值，再调用<code>save</code>存储到云端。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里是修改操作</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> data = <span class=\"keyword\">new</span> AV.Object(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.form.name);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;grade&#x27;</span>, <span class=\"built_in\">this</span>.form.grade);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;points&#x27;</span>, <span class=\"built_in\">this</span>.form.points);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;address&#x27;</span>, <span class=\"built_in\">this</span>.form.address);</span><br><span class=\"line\">        data.save().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;新增成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>尝试加入一条数据试试，然后看看页面展示的效果和云后端控制台的数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-12.png\" alt=\"表格中成功新增数据\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-13.png\" alt=\"云后端控制台也成功新增数据，并且自动设置id\"></p>\n<h3 id=\"4-4-删\"><a href=\"#4-4-删\" class=\"headerlink\" title=\"4.4 删\"></a>4.4 删</h3><p>我们要写函数<code>handleDelete</code>，并且注意，删除可以单选删除，可以多选删除，需要删除的参数可能是对象或数组。这是由是否传入参数<code>row</code>来决定的，需要注意的是，虽然上面的删除按钮和右侧的删除按钮调用同一个函数，上面的删除按钮没有传入参数<code>row</code>，此时会传入一个<strong>点击事件</strong>并赋给<code>row</code>。可以通过判断<code>row.id</code>的方式，来判断当前点击的是哪个删除按钮；如果通过<code>row</code>，那就无法判断了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row.id) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除该数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 删除单个数据（对象）</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = <span class=\"built_in\">this</span>.selections.length;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除&#x27;</span> + (length &gt; <span class=\"number\">1</span> ? <span class=\"string\">&#x27;这&#x27;</span> + length + <span class=\"string\">&#x27;个&#x27;</span> : <span class=\"string\">&#x27;该&#x27;</span>) + <span class=\"string\">&#x27;数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 删除多个数据（数组）</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于对象，直接调用<code>destroy</code>就好；对于数组，可以使用<code>destroyAll</code>一次请求中删除。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row.id) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除该数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">      query.equalTo(<span class=\"string\">&#x27;id&#x27;</span>, row.id);</span><br><span class=\"line\">      query.first().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        data.destroy().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;删除成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;info&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;已取消删除&#x27;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = <span class=\"built_in\">this</span>.selections.length;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除&#x27;</span> + (length &gt; <span class=\"number\">1</span> ? <span class=\"string\">&#x27;这&#x27;</span> + length + <span class=\"string\">&#x27;个&#x27;</span> : <span class=\"string\">&#x27;该&#x27;</span>) + <span class=\"string\">&#x27;数据?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> ids = <span class=\"built_in\">this</span>.selections.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.id);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">      query.containedIn(<span class=\"string\">&#x27;id&#x27;</span>, ids);</span><br><span class=\"line\">      query.find().then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        AV.Object.destroyAll(rows).then(<span class=\"function\">(<span class=\"params\">rows</span>) =&gt;</span> &#123;\t<span class=\"comment\">// 找到的rows就是需要被一次删掉的rows数组</span></span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;删除成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;info&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;已取消删除&#x27;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尝试删除某数据，发现数据从表中和后台中删除。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-14.png\" alt=\"删除提示\"></p>\n<h3 id=\"4-5-改\"><a href=\"#4-5-改\" class=\"headerlink\" title=\"4.5 改\"></a>4.5 改</h3><p>修改与新增用的是同一个对话框，因此修改时，要先获得修改对象的数据，并赋给<code>form</code>。修改对象的传入也有两种方式，一种是当前行<code>row</code>，一种是选中数组（长度为1）。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleUpdate</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> id = row.id || <span class=\"built_in\">this</span>.selections[<span class=\"number\">0</span>].id;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">  query.equalTo(<span class=\"string\">&#x27;id&#x27;</span>, id);</span><br><span class=\"line\">  query.first().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.form = &#123;</span><br><span class=\"line\">      <span class=\"attr\">id</span>: data.get(<span class=\"string\">&#x27;id&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">name</span>: data.get(<span class=\"string\">&#x27;name&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">grade</span>: data.get(<span class=\"string\">&#x27;grade&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">points</span>: data.get(<span class=\"string\">&#x27;points&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">address</span>: data.get(<span class=\"string\">&#x27;address&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;修改数据&quot;</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>点击右边的修改或是上面的修改，发现可以显示当前数据的信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-15.png\" alt=\"修改数据对话框\"></p>\n<p>最后再完成<code>submitForm</code>函数中修改操作的部分，这部分与新增操作类似。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.form.validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> query = <span class=\"keyword\">new</span> AV.Query(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">        query.equalTo(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"built_in\">this</span>.form.id);</span><br><span class=\"line\">        query.first().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.form.name);</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;grade&#x27;</span>, <span class=\"built_in\">this</span>.form.grade);</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;points&#x27;</span>, <span class=\"built_in\">this</span>.form.points);</span><br><span class=\"line\">          data.set(<span class=\"string\">&#x27;address&#x27;</span>, <span class=\"built_in\">this</span>.form.address);</span><br><span class=\"line\">          data.save().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">              <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">              <span class=\"attr\">message</span>: <span class=\"string\">&#x27;修改成功!&#x27;</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> data = <span class=\"keyword\">new</span> AV.Object(<span class=\"string\">&#x27;Data&#x27;</span>);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"built_in\">this</span>.form.name);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;grade&#x27;</span>, <span class=\"built_in\">this</span>.form.grade);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;points&#x27;</span>, <span class=\"built_in\">this</span>.form.points);</span><br><span class=\"line\">        data.set(<span class=\"string\">&#x27;address&#x27;</span>, <span class=\"built_in\">this</span>.form.address);</span><br><span class=\"line\">        data.save().then(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;新增成功!&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>尝试修改某数据，发现成功实现修改。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-16.png\" alt=\"修改数据\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-17.png\" alt=\"修改成功\"></p>\n<p>至此，增删改查功能已经全部完成了，这个页面也达到了它实际上的使用效果。</p>\n<h2 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5 总结\"></a>5 总结</h2><p>云后端可以解决纯前端代码有时候需要用到动态数据时的一些难题，其直接提供JSON数据的存储，并提供增删改查接口，省去前端开发中缺少后端服务器和数据库的问题。对于一些简单的前端程序，比如只用前端写一个排行榜并放到GitHub Pages上，这个排行榜数据极其简单，无必要搭建后端和数据库，但数据需要可以实现动态的读写，这时云后端就比较合适。有时候也可以用在前端开发测试模拟数据上，或是在静态博客里面放一些动态数据（如统计访问量，甚至是开发评论系统）。</p>\n<p>但其使用范围还是有限，免费版具有用量限制，安全性不高，与数据库的交互还存在一定的不便等。</p>\n<p><a href=\"https://cloud.tencent.com/\">腾讯云</a>、<a href=\"https://www.aliyun.com/\">阿里云</a>等也提供更安全稳定的收费版云存储服务，还有<a href=\"https://maxleap.cn/s/web/zh_cn/index.html\">MaxLeap</a>、<a href=\"https://www.bmob.cn/\">Bomb</a>等其他云服务提供商，可以根据需要选择。</p>\n<p>这个项目的展示页面：<a href=\"https://corecabin.cn/CloudBackendExample/\">https://corecabin.cn/CloudBackendExample/</a></p>\n<p>这个项目的源码：<a href=\"https://github.com/kaluojushi/CloudBackendExample\">https://github.com/kaluojushi/CloudBackendExample</a></p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-01.png","popularPost_tmp_gaData":{"updated":"Mon Feb 28 2022 20:08:51 GMT+0800 (中国标准时间)","title":"如何在GitHub Pages中使用动态数据","path":"2021/11/23/how-to-use-dynamic-data-in-github-pages/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211122/20211122-01.png","excerpt":"<p>最近在写一个纯前端兴趣项目时遇到的问题，前端需要展示一些数据。在传统的开发模式中，如Java小游戏开发，会把这些数据存储在文件中（如历史分数等），可以对其进行读写。但在前端开发时，这些数据的交互变得比较复杂，尤其是需要读写的时候。</p>","date":{"_isAMomentObject":true,"_i":"2021-11-23T06:04:04.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-11-23T06:04:04.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Development","tags":["编程","前端","技巧","JavaScript","HTML","GitHub","Vue","ElementUI","开发"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":15851},{"title":"Java华容道小游戏源码分析","date":"2021-09-08T09:08:00.000Z","comments":1,"_content":"\n利用Java的Swing编程、事件监听等知识写一个华容道小游戏。这个游戏的作者不是我，但是我根据所学的知识，分析一下游戏的源码，以巩固学习成果。\n\n<!--more-->\n\n## 1 界面分析\n\n华容道游戏的界面如下图所示：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-001.jpg)\n\n一共10个人物，每个人物可以上下左右移动。所以应提前想好一个布局方式，以便在写游戏时设定坐标。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-002.png)\n\n程序所需知识：\n\n- Swing基础\n- Swing基本组件（`JFrame`、`JButton`）\n- 事件监听器（焦点、动作、键盘、鼠标）\n\n## 2 启动类\n\n在IDEA中新建一个项目`Klotski`，并新建启动类`Start.java`和游戏窗体类`GameFrame.java`。根据启动类和游戏主体分离的原则，我们在启动类`Start.java`中只新建游戏窗体就行，不做任何与游戏内容相关的操作。\n\n```java\npublic class Start {\n    public static void main(String[] args) {\n        new GameFrame();\n    }\n}\n```\n\n## 3 人物类\n\n在设计游戏窗体之前，我们先新建一个人物类`Person.java`，这个类用来实例化游戏中每一个人物对象。由于每一个人物对象实际上可以看做窗体的一个按钮，所以使该类继承`JButton`类。\n\n```java\nimport javax.swing.*;\n\npublic class Person extends JButton {\n}\n```\n\n我们为人物类设计三个属性，分别是编号、颜色和字体。编号在后期用于定位人物，颜色和字体方便构造人物时初始化。\n\n```java\nint number;\nColor color = new Color(255, 245, 170);\nFont font = new Font(\"微软雅黑\", Font.BOLD, 12);\n```\n\n### 3.1 构造方法\n\n人物类的构造方法要传进两个参数，分别是编号和人物名字，并在下面对编号、姓名、颜色、字体等进行初始化。\n\n```java\npublic Person(int number, String s) {\n    super(s);\t// 调用父类JButton的构造方法，为按钮命名\n    this.number = number;\n    setBackground(color);\n    setFont(font);\n}\n```\n\n### 3.2 人物变色监听\n\n当我们想让某个人物移动时，我们需要让其从默认颜色变为别的颜色。这里可以为每个按钮添加一个监听器，并且焦点事件监听器是最适合的。当按钮被聚焦的时候，鼠标键盘也可以对指定按钮进行操作。\n\n可以直接让该类实现`FocusListener`接口，并在构造方法加上焦点事件监听器，把自己传入即可。\n\n```java\npublic class Person extends JButton implements FocusListener {\t// 实现FocusListener接口\n    ...\n\n    public Person(int number, String s) {\n        ...\n        addFocusListener(this);\t// 添加焦点事件监听器\n    }\n\n    @Override\n    public void focusGained(FocusEvent e) {\n        setBackground(Color.RED);\t// 按钮获得焦点时，颜色变红\n    }\n\n    @Override\n    public void focusLost(FocusEvent e) {\n        setBackground(color);\t// 按钮失去焦点时，颜色变回默认值\n    }\n}\n```\n\n### 3.3 人物类完整代码\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.FocusEvent;\nimport java.awt.event.FocusListener;\n\npublic class Person extends JButton implements FocusListener {\n    int number;\n    Color color = new Color(255, 245, 170);\n    Font font = new Font(\"微软雅黑\", Font.BOLD, 12);\n\n    public Person(int number, String s) {\n        super(s);\n        this.number = number;\n        setBackground(color);\n        setFont(font);\n        addFocusListener(this);\n    }\n\n    @Override\n    public void focusGained(FocusEvent e) {\n        setBackground(Color.RED);\n    }\n\n    @Override\n    public void focusLost(FocusEvent e) {\n        setBackground(color);\n    }\n}\n```\n\n## 4 游戏窗体类\n\n游戏窗体类是游戏的主体部分，包含显示模块和逻辑模块。首先我们让该类继承`JFrame`类。\n\n```java\nimport javax.swing.*;\n\npublic class GameFrame extends JFrame {\n}\n```\n\n该类首先要有10个人物，那么我们实例化一个`Person`数组；以及在属性中添加几个按钮，为边界按钮（处理游戏边界）和重新开始按钮。\n\n```java\nPerson[] people = new Person[10];\nJButton left, right, above, below;\t// 左、右、上、下边界按钮\nJButton restart = new JButton(\"重新开始\");\n```\n\n### 4.1 构造方法\n\n构造方法中只写与窗体默认设置有关的部分，具体的按钮布置放到一个初始化方法里面去写。\n\n```java\npublic GameFrame() {\n    init();\t// 初始化方法\n    setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n    setBounds(100, 100, 320, 500);\n    setVisible(true);\n    validate();\t// 验证布局\n}\n```\n\n### 4.2 初始化布置\n\n在初始化方法`init()`中，我们一步步放置所需要的组件。首先把窗体设定为绝对布局，并放置重新开始按钮。\n\n```java\npublic void init() {\n    setLayout(null);\n    add(restart);\n    restart.setBounds(100, 320, 120, 35);\n}\n```\n\n启动`Start.java`，查看效果。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-003.png)\n\n接下来放置每个人物。先写一个`String`数组，放置每个人物的名字，再将名字传入本类的属性`people`数组中。\n\n```java\nString[] name = {\"曹操\", \"关羽\", \"马\", \"黄\", \"赵\", \"张\", \"兵\", \"兵\", \"兵\", \"兵\"};\nfor (int i = 0; i < name.length; i++) {\n    people[i] = new Person(i, name[i]);\n    add(people[i]);\n}\n```\n\n设定每个人物按钮的大小和位置。观察第1章界面分析中的图，如果设置每个格子的大小为50像素×50像素，那么曹操就是100像素×100像素；如果游戏左上角的边界为`(54, 54)`，那么曹操所在的位置应为`(104, 54)`。依次类推，设置每个人物的大小和位置。\n\n```java\n// 以左上角的位置为(54, 54)，每个格子大小为50*50，设定每个按钮的位置\npeople[0].setBounds(104, 54, 100, 100);\npeople[1].setBounds(104, 154, 100, 50);\npeople[2].setBounds(54, 154, 50, 100);\npeople[3].setBounds(204, 154, 50, 100);\npeople[4].setBounds(54, 54, 50, 100);\npeople[5].setBounds(204, 54, 50, 100);\npeople[6].setBounds(54, 254, 50, 50);\npeople[7].setBounds(204, 254, 50, 50);\npeople[8].setBounds(104, 204, 50, 50);\npeople[9].setBounds(154, 204, 50, 50);\n```\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-004.png)\n\n再添加游戏边界，游戏边界也可以看做是按钮，我们将这4个按钮设定为宽为5的长条，并根据添加好的人物的位置确定长条位置。\n\n```java\nleft = new JButton();\nright = new JButton();\nabove = new JButton();\nbelow = new JButton();\nadd(left);\nadd(right);\nadd(above);\nadd(below);\n// 以宽为5设定每个长条的大小\nleft.setBounds(49, 49, 5, 260);\nright.setBounds(254, 49, 5, 260);\nabove.setBounds(49, 49, 210, 5);\nbelow.setBounds(49, 304, 210, 5);\nvalidate();\n```\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-005.png)\n\n### 4.3 人物移动操作\n\n写一个`go()`方法，使人物进行上下左右移动。传进去的参数肯定是人物和方向，人物放`Person`类对象就行，方向其实把已有的4个边界按钮放进去就行了，因为它们就代表上下左右，并且可以直接拿它们的边界。\n\n```java\npublic void go(Person man, JButton direction) {\n    \n}\n```\n\n我们的操作判断分为以下几步：\n\n1. 先试着移动一下，获取移动后的位置\n2. 看是否与其他人物的位置或游戏边界的位置相撞\n3. 如果相撞，则不移动；否则进行移动\n\n先试着移动一下，为了方便判断相撞，我们先拿一个矩形类`Rectangle`放这个人物的边界，并获得坐标。\n\n```java\nRectangle manRect = man.getBounds();\t// 人物边界矩形\nint x = manRect.x;\nint y = manRect.y;\n```\n\n再试着移动一下，这里我们只操作`x`和`y`，所以人物、矩形都是实际上没有移动的。\n\n```java\nif (direction == above) {\n    y -= 50;\n} else if (direction == below) {\n    y += 50;\n} else if (direction == left) {\n    x -= 50;\n} else if (direction == right) {\n    x += 50;\n}\n```\n\n再把矩形移动过去（人物还是未动）。\n\n```java\nmanRect.setLocation(x, y);\n```\n\n从这时开始，我们要进行判断，先建立一个布尔型变量`move`并初始化为`true`，并拿矩形类`Rectangle`放其他人物的边界、游戏边界的边界，使用`intersects()`方法判断是否相撞。\n\n```java\nboolean move = true;\t// 移动判断变量\nfor (int i = 0; i < 10; i++) {\n    Rectangle personRect = people[i].getBounds();\t// 每个人物的边界\n    if ((manRect.intersects(personRect) && (man.number != i))) {\t// 操作人物的边界和某个人物边界相撞，且不是自己\n        move = false;\t// 不移动\n    }\n}\nRectangle directionRect = direction.getBounds();\t// 游戏边界的边界\nif (manRect.intersects(directionRect)) {\t// 与游戏边界相撞\n    move = false;\t// 不移动\n}\n```\n\n再根据`move`的结果，对该人物进行移动。\n\n```java\nif (move) {\n    man.setLocation(x, y);\n}\n```\n\n### 4.4 游戏重启监听器\n\n点击重新开始按钮，游戏重启。我们让本类实现`ActionListener`动作事件监听器接口，并在`init()`方法中为`restart`添加监听器。然后重写`actionPerformed()`方法，可以直接销毁游戏窗体，再重新新建实例就行了。\n\n```java\npublic class GameFrame extends JFrame implements ActionListener {\t// 实现ActionListener接口\n    ...\n    public void init() {\n        ...\n        restart.addActionListener(this);\t// 添加动作事件监听器\n        ...\n    }\n\t...\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        dispose();\t// 销毁游戏窗体\n        new GameFrame();\t// 重新实例化\n    }\n}\n```\n\n### 4.5 键盘操作监听器\n\n键盘是可以操作人物的移动的。我们让本类实现`KeyListener`键盘事件监听器接口，并在`init()`方法中为每个人物添加监听器。\n\n```java\npublic class GameFrame extends JFrame implements ActionListener, KeyListener {\t// 实现KeyListener接口\n    ...\n    public void init() {\n        ...\n        for (int i = 0; i < name.length; i++) {\n            people[i] = new Person(i, name[i]);\n            add(people[i]);\n            people[i].addKeyListener(this);\t// 添加键盘事件监听器\n        }\n        ...\n    }\n    ...\n\n    @Override\n    public void keyTyped(KeyEvent e) {\n        \n    }\n\n    @Override\n    public void keyPressed(KeyEvent e) {\n\n    }\n\n    @Override\n    public void keyReleased(KeyEvent e) {\n\n    }\n}\n```\n\n我们只需要重写`keyPressed()`方法。先拿到键盘事件资源（当前聚焦的人物）和键盘按键，并指挥人物按一定方向移动。\n\n```java\n@Override\npublic void keyPressed(KeyEvent e) {\n    Person man = (Person) e.getSource();\t// 获得资源（人物）\n    int keyCode = e.getKeyCode();\t// 获得按键\n    if (keyCode == KeyEvent.VK_UP) {\t// 按上键\n        go(man, above);\t// 向上移动，下同\n    }\n    if (keyCode == KeyEvent.VK_DOWN) {\n        go(man, below);\n    }\n    if (keyCode == KeyEvent.VK_LEFT) {\n        go(man, left);\n    }\n    if (keyCode == KeyEvent.VK_RIGHT) {\n        go(man, right);\n    }\n}\n```\n\n### 4.6 鼠标操作监听器\n\n鼠标不仅可以聚焦人物，也可以操作人物移动。我们让本类实现`MouseListener`鼠标事件监听器接口，并在`init()`方法中为每个人物添加监听器。\n\n```java\npublic class GameFrame extends JFrame implements ActionListener, KeyListener, MouseListener {\t// 实现MouseListener接口\n    ...\n    public void init() {\n        ...\n        for (int i = 0; i < name.length; i++) {\n            people[i] = new Person(i, name[i]);\n            people[i].addKeyListener(this);\n            people[i].addMouseListener(this);\t// 添加鼠标事件监听器\n            add(people[i]);\n        }\n        ...\n    }\n    ...\n    \n    @Override\n    public void mouseClicked(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mousePressed(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseReleased(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseEntered(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseExited(MouseEvent e) {\n\n    }\n}\n```\n\n我们只需要重写`MousePressed()`方法。先拿到鼠标事件资源（鼠标点击的人物）和鼠标坐标，再拿到这个人物的边界大小，根据这个鼠标点击的位置（如点击人物上半部分，则向上移动），指挥人物按一定方向移动。\n\n```java\n@Override\npublic void mousePressed(MouseEvent e) {\n    Person man = (Person) e.getSource();\t// 获得资源（人物）\n    int x = e.getX();\n    int y = e.getY();\t// 鼠标坐标（相对于人物）\n    int w = man.getBounds().width;\n    int h = man.getBounds().height;\t// 人物边界大小\n    if (y < h / 2) {\t// 点击的是上半部分\n        go(man, above);\t// 向上移动，下同\n    }\n    if (y > h / 2) {\n        go(man, below);\n    }\n    if (x < w / 2) {\n        go(man, left);\n    }\n    if(x > w / 2) {\n        go(man, right);\n    }\n}\n```\n\n注意，键盘事件和鼠标事件不用`else-if`，可以让人物斜向运动，运动顺序由程序书写顺序决定。\n\n### 4.7 游戏窗体类完整代码\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.*;\n\npublic class GameFrame extends JFrame implements ActionListener, KeyListener, MouseListener {\n    Person[] people = new Person[10];\n    JButton left, right, above, below;\n    JButton restart = new JButton(\"重新开始\");\n\n    public GameFrame() {\n        init();\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n        setBounds(100, 100, 320, 500);\n        setVisible(true);\n        validate();\n    }\n\n    public void init() {\n        setLayout(null);\n        add(restart);\n        restart.setBounds(100, 320, 120, 35);\n        restart.addActionListener(this);\n\n        String[] name = {\"曹操\", \"关羽\", \"马\", \"黄\", \"赵\", \"张\", \"兵\", \"兵\", \"兵\", \"兵\"};\n        for (int i = 0; i < name.length; i++) {\n            people[i] = new Person(i, name[i]);\n            people[i].addKeyListener(this);\n            people[i].addMouseListener(this);\n            add(people[i]);\n        }\n\n        people[0].setBounds(104, 54, 100, 100);\n        people[1].setBounds(104, 154, 100, 50);\n        people[2].setBounds(54, 154, 50, 100);\n        people[3].setBounds(204, 154, 50, 100);\n        people[4].setBounds(54, 54, 50, 100);\n        people[5].setBounds(204, 54, 50, 100);\n        people[6].setBounds(54, 254, 50, 50);\n        people[7].setBounds(204, 254, 50, 50);\n        people[8].setBounds(104, 204, 50, 50);\n        people[9].setBounds(154, 204, 50, 50);\n\n        left = new JButton();\n        right = new JButton();\n        above = new JButton();\n        below = new JButton();\n        add(left);\n        add(right);\n        add(above);\n        add(below);\n        left.setBounds(49, 49, 5, 260);\n        right.setBounds(254, 49, 5, 260);\n        above.setBounds(49, 49, 210, 5);\n        below.setBounds(49, 304, 210, 5);\n        validate();\n    }\n\n    public void go(Person man, JButton direction) {\n        Rectangle manRect = man.getBounds();\n        int x = manRect.x;\n        int y = manRect.y;\n        if (direction == above) {\n            y -= 50;\n        } else if (direction == below) {\n            y += 50;\n        } else if (direction == left) {\n            x -= 50;\n        } else if (direction == right) {\n            x += 50;\n        }\n        manRect.setLocation(x, y);\n\n        boolean move = true;\n        for (int i = 0; i < 10; i++) {\n            Rectangle personRect = people[i].getBounds();\n            if ((manRect.intersects(personRect) && (man.number != i))) {\n                move = false;\n            }\n        }\n        Rectangle directionRect = direction.getBounds();\n        if (manRect.intersects(directionRect)) {\n            move = false;\n        }\n\n        if (move) {\n            man.setLocation(x, y);\n        }\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        dispose();\n        new GameFrame();\n    }\n\n    @Override\n    public void keyTyped(KeyEvent e) {\n\n    }\n\n    @Override\n    public void keyPressed(KeyEvent e) {\n        Person man = (Person) e.getSource();\n        int keyCode = e.getKeyCode();\n        if (keyCode == KeyEvent.VK_UP) {\n            go(man, above);\n        }\n        if (keyCode == KeyEvent.VK_DOWN) {\n            go(man, below);\n        }\n        if (keyCode == KeyEvent.VK_LEFT) {\n            go(man, left);\n        }\n        if (keyCode == KeyEvent.VK_RIGHT) {\n            go(man, right);\n        }\n    }\n\n    @Override\n    public void keyReleased(KeyEvent e) {\n\n    }\n\n    @Override\n    public void mouseClicked(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mousePressed(MouseEvent e) {\n        Person man = (Person) e.getSource();\n        int x = e.getX();\n        int y = e.getY();\n        int w = man.getBounds().width;\n        int h = man.getBounds().height;\n        if (y < h / 2) {\n            go(man, above);\n        }\n        if (y > h / 2) {\n            go(man, below);\n        }\n        if (x < w / 2) {\n            go(man, left);\n        }\n        if (x > w / 2) {\n            go(man, right);\n        }\n    }\n\n    @Override\n    public void mouseReleased(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseEntered(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseExited(MouseEvent e) {\n\n    }\n}\n```\n\n## 5 扩展与总结\n\n- **步数统计：**可以新写一个属性`step`，每`go()`一次就`step++`，统计游戏步数。\n- **成功判定：**当曹操走到某个坐标的时候，游戏就成功并结束了。\n- **不同关卡：**华容道有横刀立马、齐头并前、兵分三路等多种摆放方法，可以只改变人物坐标，实现不同的关卡。\n- **记录进度：**把步数、人物坐标存档到文件里，下次可以直接读档，接着来。\n- **平台迁移：**把代码换成JavaScript版，并写到网页上，游戏基本逻辑是一样的。\n\n这个游戏应该不难，逻辑上没有其他游戏那么多，主要是巩固Swing编程的基础。\n\n走了好多遍终于成功了：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-006.png)\n\n[完整代码点这里获取](https://github.com/kaluojushi/MyJavaPersonalDevelopment/tree/main/Klotski)\n","source":"_posts/java-klotski-game-source-code-analysis.md","raw":"---\ntitle: Java华容道小游戏源码分析\ndate: 2021-09-08 17:08:00\ncategories: Java\ntags:\n  - 编程\n  - Java\n  - 游戏\n  - Swing\n  - GUI\ncomments: true\n---\n\n利用Java的Swing编程、事件监听等知识写一个华容道小游戏。这个游戏的作者不是我，但是我根据所学的知识，分析一下游戏的源码，以巩固学习成果。\n\n<!--more-->\n\n## 1 界面分析\n\n华容道游戏的界面如下图所示：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-001.jpg)\n\n一共10个人物，每个人物可以上下左右移动。所以应提前想好一个布局方式，以便在写游戏时设定坐标。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-002.png)\n\n程序所需知识：\n\n- Swing基础\n- Swing基本组件（`JFrame`、`JButton`）\n- 事件监听器（焦点、动作、键盘、鼠标）\n\n## 2 启动类\n\n在IDEA中新建一个项目`Klotski`，并新建启动类`Start.java`和游戏窗体类`GameFrame.java`。根据启动类和游戏主体分离的原则，我们在启动类`Start.java`中只新建游戏窗体就行，不做任何与游戏内容相关的操作。\n\n```java\npublic class Start {\n    public static void main(String[] args) {\n        new GameFrame();\n    }\n}\n```\n\n## 3 人物类\n\n在设计游戏窗体之前，我们先新建一个人物类`Person.java`，这个类用来实例化游戏中每一个人物对象。由于每一个人物对象实际上可以看做窗体的一个按钮，所以使该类继承`JButton`类。\n\n```java\nimport javax.swing.*;\n\npublic class Person extends JButton {\n}\n```\n\n我们为人物类设计三个属性，分别是编号、颜色和字体。编号在后期用于定位人物，颜色和字体方便构造人物时初始化。\n\n```java\nint number;\nColor color = new Color(255, 245, 170);\nFont font = new Font(\"微软雅黑\", Font.BOLD, 12);\n```\n\n### 3.1 构造方法\n\n人物类的构造方法要传进两个参数，分别是编号和人物名字，并在下面对编号、姓名、颜色、字体等进行初始化。\n\n```java\npublic Person(int number, String s) {\n    super(s);\t// 调用父类JButton的构造方法，为按钮命名\n    this.number = number;\n    setBackground(color);\n    setFont(font);\n}\n```\n\n### 3.2 人物变色监听\n\n当我们想让某个人物移动时，我们需要让其从默认颜色变为别的颜色。这里可以为每个按钮添加一个监听器，并且焦点事件监听器是最适合的。当按钮被聚焦的时候，鼠标键盘也可以对指定按钮进行操作。\n\n可以直接让该类实现`FocusListener`接口，并在构造方法加上焦点事件监听器，把自己传入即可。\n\n```java\npublic class Person extends JButton implements FocusListener {\t// 实现FocusListener接口\n    ...\n\n    public Person(int number, String s) {\n        ...\n        addFocusListener(this);\t// 添加焦点事件监听器\n    }\n\n    @Override\n    public void focusGained(FocusEvent e) {\n        setBackground(Color.RED);\t// 按钮获得焦点时，颜色变红\n    }\n\n    @Override\n    public void focusLost(FocusEvent e) {\n        setBackground(color);\t// 按钮失去焦点时，颜色变回默认值\n    }\n}\n```\n\n### 3.3 人物类完整代码\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.FocusEvent;\nimport java.awt.event.FocusListener;\n\npublic class Person extends JButton implements FocusListener {\n    int number;\n    Color color = new Color(255, 245, 170);\n    Font font = new Font(\"微软雅黑\", Font.BOLD, 12);\n\n    public Person(int number, String s) {\n        super(s);\n        this.number = number;\n        setBackground(color);\n        setFont(font);\n        addFocusListener(this);\n    }\n\n    @Override\n    public void focusGained(FocusEvent e) {\n        setBackground(Color.RED);\n    }\n\n    @Override\n    public void focusLost(FocusEvent e) {\n        setBackground(color);\n    }\n}\n```\n\n## 4 游戏窗体类\n\n游戏窗体类是游戏的主体部分，包含显示模块和逻辑模块。首先我们让该类继承`JFrame`类。\n\n```java\nimport javax.swing.*;\n\npublic class GameFrame extends JFrame {\n}\n```\n\n该类首先要有10个人物，那么我们实例化一个`Person`数组；以及在属性中添加几个按钮，为边界按钮（处理游戏边界）和重新开始按钮。\n\n```java\nPerson[] people = new Person[10];\nJButton left, right, above, below;\t// 左、右、上、下边界按钮\nJButton restart = new JButton(\"重新开始\");\n```\n\n### 4.1 构造方法\n\n构造方法中只写与窗体默认设置有关的部分，具体的按钮布置放到一个初始化方法里面去写。\n\n```java\npublic GameFrame() {\n    init();\t// 初始化方法\n    setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n    setBounds(100, 100, 320, 500);\n    setVisible(true);\n    validate();\t// 验证布局\n}\n```\n\n### 4.2 初始化布置\n\n在初始化方法`init()`中，我们一步步放置所需要的组件。首先把窗体设定为绝对布局，并放置重新开始按钮。\n\n```java\npublic void init() {\n    setLayout(null);\n    add(restart);\n    restart.setBounds(100, 320, 120, 35);\n}\n```\n\n启动`Start.java`，查看效果。\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-003.png)\n\n接下来放置每个人物。先写一个`String`数组，放置每个人物的名字，再将名字传入本类的属性`people`数组中。\n\n```java\nString[] name = {\"曹操\", \"关羽\", \"马\", \"黄\", \"赵\", \"张\", \"兵\", \"兵\", \"兵\", \"兵\"};\nfor (int i = 0; i < name.length; i++) {\n    people[i] = new Person(i, name[i]);\n    add(people[i]);\n}\n```\n\n设定每个人物按钮的大小和位置。观察第1章界面分析中的图，如果设置每个格子的大小为50像素×50像素，那么曹操就是100像素×100像素；如果游戏左上角的边界为`(54, 54)`，那么曹操所在的位置应为`(104, 54)`。依次类推，设置每个人物的大小和位置。\n\n```java\n// 以左上角的位置为(54, 54)，每个格子大小为50*50，设定每个按钮的位置\npeople[0].setBounds(104, 54, 100, 100);\npeople[1].setBounds(104, 154, 100, 50);\npeople[2].setBounds(54, 154, 50, 100);\npeople[3].setBounds(204, 154, 50, 100);\npeople[4].setBounds(54, 54, 50, 100);\npeople[5].setBounds(204, 54, 50, 100);\npeople[6].setBounds(54, 254, 50, 50);\npeople[7].setBounds(204, 254, 50, 50);\npeople[8].setBounds(104, 204, 50, 50);\npeople[9].setBounds(154, 204, 50, 50);\n```\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-004.png)\n\n再添加游戏边界，游戏边界也可以看做是按钮，我们将这4个按钮设定为宽为5的长条，并根据添加好的人物的位置确定长条位置。\n\n```java\nleft = new JButton();\nright = new JButton();\nabove = new JButton();\nbelow = new JButton();\nadd(left);\nadd(right);\nadd(above);\nadd(below);\n// 以宽为5设定每个长条的大小\nleft.setBounds(49, 49, 5, 260);\nright.setBounds(254, 49, 5, 260);\nabove.setBounds(49, 49, 210, 5);\nbelow.setBounds(49, 304, 210, 5);\nvalidate();\n```\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-005.png)\n\n### 4.3 人物移动操作\n\n写一个`go()`方法，使人物进行上下左右移动。传进去的参数肯定是人物和方向，人物放`Person`类对象就行，方向其实把已有的4个边界按钮放进去就行了，因为它们就代表上下左右，并且可以直接拿它们的边界。\n\n```java\npublic void go(Person man, JButton direction) {\n    \n}\n```\n\n我们的操作判断分为以下几步：\n\n1. 先试着移动一下，获取移动后的位置\n2. 看是否与其他人物的位置或游戏边界的位置相撞\n3. 如果相撞，则不移动；否则进行移动\n\n先试着移动一下，为了方便判断相撞，我们先拿一个矩形类`Rectangle`放这个人物的边界，并获得坐标。\n\n```java\nRectangle manRect = man.getBounds();\t// 人物边界矩形\nint x = manRect.x;\nint y = manRect.y;\n```\n\n再试着移动一下，这里我们只操作`x`和`y`，所以人物、矩形都是实际上没有移动的。\n\n```java\nif (direction == above) {\n    y -= 50;\n} else if (direction == below) {\n    y += 50;\n} else if (direction == left) {\n    x -= 50;\n} else if (direction == right) {\n    x += 50;\n}\n```\n\n再把矩形移动过去（人物还是未动）。\n\n```java\nmanRect.setLocation(x, y);\n```\n\n从这时开始，我们要进行判断，先建立一个布尔型变量`move`并初始化为`true`，并拿矩形类`Rectangle`放其他人物的边界、游戏边界的边界，使用`intersects()`方法判断是否相撞。\n\n```java\nboolean move = true;\t// 移动判断变量\nfor (int i = 0; i < 10; i++) {\n    Rectangle personRect = people[i].getBounds();\t// 每个人物的边界\n    if ((manRect.intersects(personRect) && (man.number != i))) {\t// 操作人物的边界和某个人物边界相撞，且不是自己\n        move = false;\t// 不移动\n    }\n}\nRectangle directionRect = direction.getBounds();\t// 游戏边界的边界\nif (manRect.intersects(directionRect)) {\t// 与游戏边界相撞\n    move = false;\t// 不移动\n}\n```\n\n再根据`move`的结果，对该人物进行移动。\n\n```java\nif (move) {\n    man.setLocation(x, y);\n}\n```\n\n### 4.4 游戏重启监听器\n\n点击重新开始按钮，游戏重启。我们让本类实现`ActionListener`动作事件监听器接口，并在`init()`方法中为`restart`添加监听器。然后重写`actionPerformed()`方法，可以直接销毁游戏窗体，再重新新建实例就行了。\n\n```java\npublic class GameFrame extends JFrame implements ActionListener {\t// 实现ActionListener接口\n    ...\n    public void init() {\n        ...\n        restart.addActionListener(this);\t// 添加动作事件监听器\n        ...\n    }\n\t...\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        dispose();\t// 销毁游戏窗体\n        new GameFrame();\t// 重新实例化\n    }\n}\n```\n\n### 4.5 键盘操作监听器\n\n键盘是可以操作人物的移动的。我们让本类实现`KeyListener`键盘事件监听器接口，并在`init()`方法中为每个人物添加监听器。\n\n```java\npublic class GameFrame extends JFrame implements ActionListener, KeyListener {\t// 实现KeyListener接口\n    ...\n    public void init() {\n        ...\n        for (int i = 0; i < name.length; i++) {\n            people[i] = new Person(i, name[i]);\n            add(people[i]);\n            people[i].addKeyListener(this);\t// 添加键盘事件监听器\n        }\n        ...\n    }\n    ...\n\n    @Override\n    public void keyTyped(KeyEvent e) {\n        \n    }\n\n    @Override\n    public void keyPressed(KeyEvent e) {\n\n    }\n\n    @Override\n    public void keyReleased(KeyEvent e) {\n\n    }\n}\n```\n\n我们只需要重写`keyPressed()`方法。先拿到键盘事件资源（当前聚焦的人物）和键盘按键，并指挥人物按一定方向移动。\n\n```java\n@Override\npublic void keyPressed(KeyEvent e) {\n    Person man = (Person) e.getSource();\t// 获得资源（人物）\n    int keyCode = e.getKeyCode();\t// 获得按键\n    if (keyCode == KeyEvent.VK_UP) {\t// 按上键\n        go(man, above);\t// 向上移动，下同\n    }\n    if (keyCode == KeyEvent.VK_DOWN) {\n        go(man, below);\n    }\n    if (keyCode == KeyEvent.VK_LEFT) {\n        go(man, left);\n    }\n    if (keyCode == KeyEvent.VK_RIGHT) {\n        go(man, right);\n    }\n}\n```\n\n### 4.6 鼠标操作监听器\n\n鼠标不仅可以聚焦人物，也可以操作人物移动。我们让本类实现`MouseListener`鼠标事件监听器接口，并在`init()`方法中为每个人物添加监听器。\n\n```java\npublic class GameFrame extends JFrame implements ActionListener, KeyListener, MouseListener {\t// 实现MouseListener接口\n    ...\n    public void init() {\n        ...\n        for (int i = 0; i < name.length; i++) {\n            people[i] = new Person(i, name[i]);\n            people[i].addKeyListener(this);\n            people[i].addMouseListener(this);\t// 添加鼠标事件监听器\n            add(people[i]);\n        }\n        ...\n    }\n    ...\n    \n    @Override\n    public void mouseClicked(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mousePressed(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseReleased(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseEntered(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseExited(MouseEvent e) {\n\n    }\n}\n```\n\n我们只需要重写`MousePressed()`方法。先拿到鼠标事件资源（鼠标点击的人物）和鼠标坐标，再拿到这个人物的边界大小，根据这个鼠标点击的位置（如点击人物上半部分，则向上移动），指挥人物按一定方向移动。\n\n```java\n@Override\npublic void mousePressed(MouseEvent e) {\n    Person man = (Person) e.getSource();\t// 获得资源（人物）\n    int x = e.getX();\n    int y = e.getY();\t// 鼠标坐标（相对于人物）\n    int w = man.getBounds().width;\n    int h = man.getBounds().height;\t// 人物边界大小\n    if (y < h / 2) {\t// 点击的是上半部分\n        go(man, above);\t// 向上移动，下同\n    }\n    if (y > h / 2) {\n        go(man, below);\n    }\n    if (x < w / 2) {\n        go(man, left);\n    }\n    if(x > w / 2) {\n        go(man, right);\n    }\n}\n```\n\n注意，键盘事件和鼠标事件不用`else-if`，可以让人物斜向运动，运动顺序由程序书写顺序决定。\n\n### 4.7 游戏窗体类完整代码\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.*;\n\npublic class GameFrame extends JFrame implements ActionListener, KeyListener, MouseListener {\n    Person[] people = new Person[10];\n    JButton left, right, above, below;\n    JButton restart = new JButton(\"重新开始\");\n\n    public GameFrame() {\n        init();\n        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n        setBounds(100, 100, 320, 500);\n        setVisible(true);\n        validate();\n    }\n\n    public void init() {\n        setLayout(null);\n        add(restart);\n        restart.setBounds(100, 320, 120, 35);\n        restart.addActionListener(this);\n\n        String[] name = {\"曹操\", \"关羽\", \"马\", \"黄\", \"赵\", \"张\", \"兵\", \"兵\", \"兵\", \"兵\"};\n        for (int i = 0; i < name.length; i++) {\n            people[i] = new Person(i, name[i]);\n            people[i].addKeyListener(this);\n            people[i].addMouseListener(this);\n            add(people[i]);\n        }\n\n        people[0].setBounds(104, 54, 100, 100);\n        people[1].setBounds(104, 154, 100, 50);\n        people[2].setBounds(54, 154, 50, 100);\n        people[3].setBounds(204, 154, 50, 100);\n        people[4].setBounds(54, 54, 50, 100);\n        people[5].setBounds(204, 54, 50, 100);\n        people[6].setBounds(54, 254, 50, 50);\n        people[7].setBounds(204, 254, 50, 50);\n        people[8].setBounds(104, 204, 50, 50);\n        people[9].setBounds(154, 204, 50, 50);\n\n        left = new JButton();\n        right = new JButton();\n        above = new JButton();\n        below = new JButton();\n        add(left);\n        add(right);\n        add(above);\n        add(below);\n        left.setBounds(49, 49, 5, 260);\n        right.setBounds(254, 49, 5, 260);\n        above.setBounds(49, 49, 210, 5);\n        below.setBounds(49, 304, 210, 5);\n        validate();\n    }\n\n    public void go(Person man, JButton direction) {\n        Rectangle manRect = man.getBounds();\n        int x = manRect.x;\n        int y = manRect.y;\n        if (direction == above) {\n            y -= 50;\n        } else if (direction == below) {\n            y += 50;\n        } else if (direction == left) {\n            x -= 50;\n        } else if (direction == right) {\n            x += 50;\n        }\n        manRect.setLocation(x, y);\n\n        boolean move = true;\n        for (int i = 0; i < 10; i++) {\n            Rectangle personRect = people[i].getBounds();\n            if ((manRect.intersects(personRect) && (man.number != i))) {\n                move = false;\n            }\n        }\n        Rectangle directionRect = direction.getBounds();\n        if (manRect.intersects(directionRect)) {\n            move = false;\n        }\n\n        if (move) {\n            man.setLocation(x, y);\n        }\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        dispose();\n        new GameFrame();\n    }\n\n    @Override\n    public void keyTyped(KeyEvent e) {\n\n    }\n\n    @Override\n    public void keyPressed(KeyEvent e) {\n        Person man = (Person) e.getSource();\n        int keyCode = e.getKeyCode();\n        if (keyCode == KeyEvent.VK_UP) {\n            go(man, above);\n        }\n        if (keyCode == KeyEvent.VK_DOWN) {\n            go(man, below);\n        }\n        if (keyCode == KeyEvent.VK_LEFT) {\n            go(man, left);\n        }\n        if (keyCode == KeyEvent.VK_RIGHT) {\n            go(man, right);\n        }\n    }\n\n    @Override\n    public void keyReleased(KeyEvent e) {\n\n    }\n\n    @Override\n    public void mouseClicked(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mousePressed(MouseEvent e) {\n        Person man = (Person) e.getSource();\n        int x = e.getX();\n        int y = e.getY();\n        int w = man.getBounds().width;\n        int h = man.getBounds().height;\n        if (y < h / 2) {\n            go(man, above);\n        }\n        if (y > h / 2) {\n            go(man, below);\n        }\n        if (x < w / 2) {\n            go(man, left);\n        }\n        if (x > w / 2) {\n            go(man, right);\n        }\n    }\n\n    @Override\n    public void mouseReleased(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseEntered(MouseEvent e) {\n\n    }\n\n    @Override\n    public void mouseExited(MouseEvent e) {\n\n    }\n}\n```\n\n## 5 扩展与总结\n\n- **步数统计：**可以新写一个属性`step`，每`go()`一次就`step++`，统计游戏步数。\n- **成功判定：**当曹操走到某个坐标的时候，游戏就成功并结束了。\n- **不同关卡：**华容道有横刀立马、齐头并前、兵分三路等多种摆放方法，可以只改变人物坐标，实现不同的关卡。\n- **记录进度：**把步数、人物坐标存档到文件里，下次可以直接读档，接着来。\n- **平台迁移：**把代码换成JavaScript版，并写到网页上，游戏基本逻辑是一样的。\n\n这个游戏应该不难，逻辑上没有其他游戏那么多，主要是巩固Swing编程的基础。\n\n走了好多遍终于成功了：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-006.png)\n\n[完整代码点这里获取](https://github.com/kaluojushi/MyJavaPersonalDevelopment/tree/main/Klotski)\n","slug":"java-klotski-game-source-code-analysis","published":1,"updated":"2021-09-08T13:01:03.265Z","layout":"post","photos":[],"link":"","_id":"cl06nlvuh0031f4vif02i8ilg","content":"<p>利用Java的Swing编程、事件监听等知识写一个华容道小游戏。这个游戏的作者不是我，但是我根据所学的知识，分析一下游戏的源码，以巩固学习成果。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-界面分析\"><a href=\"#1-界面分析\" class=\"headerlink\" title=\"1 界面分析\"></a>1 界面分析</h2><p>华容道游戏的界面如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-001.jpg\" alt=\"\"></p>\n<p>一共10个人物，每个人物可以上下左右移动。所以应提前想好一个布局方式，以便在写游戏时设定坐标。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-002.png\" alt=\"\"></p>\n<p>程序所需知识：</p>\n<ul>\n<li>Swing基础</li>\n<li>Swing基本组件（<code>JFrame</code>、<code>JButton</code>）</li>\n<li>事件监听器（焦点、动作、键盘、鼠标）</li>\n</ul>\n<h2 id=\"2-启动类\"><a href=\"#2-启动类\" class=\"headerlink\" title=\"2 启动类\"></a>2 启动类</h2><p>在IDEA中新建一个项目<code>Klotski</code>，并新建启动类<code>Start.java</code>和游戏窗体类<code>GameFrame.java</code>。根据启动类和游戏主体分离的原则，我们在启动类<code>Start.java</code>中只新建游戏窗体就行，不做任何与游戏内容相关的操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Start</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> GameFrame();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-人物类\"><a href=\"#3-人物类\" class=\"headerlink\" title=\"3 人物类\"></a>3 人物类</h2><p>在设计游戏窗体之前，我们先新建一个人物类<code>Person.java</code>，这个类用来实例化游戏中每一个人物对象。由于每一个人物对象实际上可以看做窗体的一个按钮，所以使该类继承<code>JButton</code>类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">JButton</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们为人物类设计三个属性，分别是编号、颜色和字体。编号在后期用于定位人物，颜色和字体方便构造人物时初始化。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> number;</span><br><span class=\"line\">Color color = <span class=\"keyword\">new</span> Color(<span class=\"number\">255</span>, <span class=\"number\">245</span>, <span class=\"number\">170</span>);</span><br><span class=\"line\">Font font = <span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.BOLD, <span class=\"number\">12</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-构造方法\"><a href=\"#3-1-构造方法\" class=\"headerlink\" title=\"3.1 构造方法\"></a>3.1 构造方法</h3><p>人物类的构造方法要传进两个参数，分别是编号和人物名字，并在下面对编号、姓名、颜色、字体等进行初始化。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"keyword\">int</span> number, String s)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(s);\t<span class=\"comment\">// 调用父类JButton的构造方法，为按钮命名</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.number = number;</span><br><span class=\"line\">    setBackground(color);</span><br><span class=\"line\">    setFont(font);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-人物变色监听\"><a href=\"#3-2-人物变色监听\" class=\"headerlink\" title=\"3.2 人物变色监听\"></a>3.2 人物变色监听</h3><p>当我们想让某个人物移动时，我们需要让其从默认颜色变为别的颜色。这里可以为每个按钮添加一个监听器，并且焦点事件监听器是最适合的。当按钮被聚焦的时候，鼠标键盘也可以对指定按钮进行操作。</p>\n<p>可以直接让该类实现<code>FocusListener</code>接口，并在构造方法加上焦点事件监听器，把自己传入即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">JButton</span> <span class=\"keyword\">implements</span> <span class=\"title\">FocusListener</span> </span>&#123;\t<span class=\"comment\">// 实现FocusListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"keyword\">int</span> number, String s)</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        addFocusListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加焦点事件监听器</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusGained</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(Color.RED);\t<span class=\"comment\">// 按钮获得焦点时，颜色变红</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusLost</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(color);\t<span class=\"comment\">// 按钮失去焦点时，颜色变回默认值</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-人物类完整代码\"><a href=\"#3-3-人物类完整代码\" class=\"headerlink\" title=\"3.3 人物类完整代码\"></a>3.3 人物类完整代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.FocusEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.FocusListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">JButton</span> <span class=\"keyword\">implements</span> <span class=\"title\">FocusListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number;</span><br><span class=\"line\">    Color color = <span class=\"keyword\">new</span> Color(<span class=\"number\">255</span>, <span class=\"number\">245</span>, <span class=\"number\">170</span>);</span><br><span class=\"line\">    Font font = <span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.BOLD, <span class=\"number\">12</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"keyword\">int</span> number, String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(s);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.number = number;</span><br><span class=\"line\">        setBackground(color);</span><br><span class=\"line\">        setFont(font);</span><br><span class=\"line\">        addFocusListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusGained</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(Color.RED);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusLost</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(color);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-游戏窗体类\"><a href=\"#4-游戏窗体类\" class=\"headerlink\" title=\"4 游戏窗体类\"></a>4 游戏窗体类</h2><p>游戏窗体类是游戏的主体部分，包含显示模块和逻辑模块。首先我们让该类继承<code>JFrame</code>类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该类首先要有10个人物，那么我们实例化一个<code>Person</code>数组；以及在属性中添加几个按钮，为边界按钮（处理游戏边界）和重新开始按钮。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person[] people = <span class=\"keyword\">new</span> Person[<span class=\"number\">10</span>];</span><br><span class=\"line\">JButton left, right, above, below;\t<span class=\"comment\">// 左、右、上、下边界按钮</span></span><br><span class=\"line\">JButton restart = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;重新开始&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-构造方法\"><a href=\"#4-1-构造方法\" class=\"headerlink\" title=\"4.1 构造方法\"></a>4.1 构造方法</h3><p>构造方法中只写与窗体默认设置有关的部分，具体的按钮布置放到一个初始化方法里面去写。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">GameFrame</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    init();\t<span class=\"comment\">// 初始化方法</span></span><br><span class=\"line\">    setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class=\"line\">    setBounds(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">500</span>);</span><br><span class=\"line\">    setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    validate();\t<span class=\"comment\">// 验证布局</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-初始化布置\"><a href=\"#4-2-初始化布置\" class=\"headerlink\" title=\"4.2 初始化布置\"></a>4.2 初始化布置</h3><p>在初始化方法<code>init()</code>中，我们一步步放置所需要的组件。首先把窗体设定为绝对布局，并放置重新开始按钮。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    setLayout(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    add(restart);</span><br><span class=\"line\">    restart.setBounds(<span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">120</span>, <span class=\"number\">35</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动<code>Start.java</code>，查看效果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-003.png\" alt=\"\"></p>\n<p>接下来放置每个人物。先写一个<code>String</code>数组，放置每个人物的名字，再将名字传入本类的属性<code>people</code>数组中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String[] name = &#123;<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"string\">&quot;关羽&quot;</span>, <span class=\"string\">&quot;马&quot;</span>, <span class=\"string\">&quot;黄&quot;</span>, <span class=\"string\">&quot;赵&quot;</span>, <span class=\"string\">&quot;张&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">    people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">    add(people[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>设定每个人物按钮的大小和位置。观察第1章界面分析中的图，如果设置每个格子的大小为50像素×50像素，那么曹操就是100像素×100像素；如果游戏左上角的边界为<code>(54, 54)</code>，那么曹操所在的位置应为<code>(104, 54)</code>。依次类推，设置每个人物的大小和位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以左上角的位置为(54, 54)，每个格子大小为50*50，设定每个按钮的位置</span></span><br><span class=\"line\">people[<span class=\"number\">0</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">54</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">1</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">154</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">2</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">3</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">4</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">5</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">6</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">7</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">8</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">9</span>].setBounds(<span class=\"number\">154</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-004.png\" alt=\"\"></p>\n<p>再添加游戏边界，游戏边界也可以看做是按钮，我们将这4个按钮设定为宽为5的长条，并根据添加好的人物的位置确定长条位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">right = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">above = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">below = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">add(left);</span><br><span class=\"line\">add(right);</span><br><span class=\"line\">add(above);</span><br><span class=\"line\">add(below);</span><br><span class=\"line\"><span class=\"comment\">// 以宽为5设定每个长条的大小</span></span><br><span class=\"line\">left.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">right.setBounds(<span class=\"number\">254</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">above.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">below.setBounds(<span class=\"number\">49</span>, <span class=\"number\">304</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">validate();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-005.png\" alt=\"\"></p>\n<h3 id=\"4-3-人物移动操作\"><a href=\"#4-3-人物移动操作\" class=\"headerlink\" title=\"4.3 人物移动操作\"></a>4.3 人物移动操作</h3><p>写一个<code>go()</code>方法，使人物进行上下左右移动。传进去的参数肯定是人物和方向，人物放<code>Person</code>类对象就行，方向其实把已有的4个边界按钮放进去就行了，因为它们就代表上下左右，并且可以直接拿它们的边界。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">(Person man, JButton direction)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们的操作判断分为以下几步：</p>\n<ol>\n<li>先试着移动一下，获取移动后的位置</li>\n<li>看是否与其他人物的位置或游戏边界的位置相撞</li>\n<li>如果相撞，则不移动；否则进行移动</li>\n</ol>\n<p>先试着移动一下，为了方便判断相撞，我们先拿一个矩形类<code>Rectangle</code>放这个人物的边界，并获得坐标。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rectangle manRect = man.getBounds();\t<span class=\"comment\">// 人物边界矩形</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> x = manRect.x;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = manRect.y;</span><br></pre></td></tr></table></figure>\n<p>再试着移动一下，这里我们只操作<code>x</code>和<code>y</code>，所以人物、矩形都是实际上没有移动的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (direction == above) &#123;</span><br><span class=\"line\">    y -= <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == below) &#123;</span><br><span class=\"line\">    y += <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == left) &#123;</span><br><span class=\"line\">    x -= <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == right) &#123;</span><br><span class=\"line\">    x += <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再把矩形移动过去（人物还是未动）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">manRect.setLocation(x, y);</span><br></pre></td></tr></table></figure>\n<p>从这时开始，我们要进行判断，先建立一个布尔型变量<code>move</code>并初始化为<code>true</code>，并拿矩形类<code>Rectangle</code>放其他人物的边界、游戏边界的边界，使用<code>intersects()</code>方法判断是否相撞。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> move = <span class=\"keyword\">true</span>;\t<span class=\"comment\">// 移动判断变量</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    Rectangle personRect = people[i].getBounds();\t<span class=\"comment\">// 每个人物的边界</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((manRect.intersects(personRect) &amp;&amp; (man.number != i))) &#123;\t<span class=\"comment\">// 操作人物的边界和某个人物边界相撞，且不是自己</span></span><br><span class=\"line\">        move = <span class=\"keyword\">false</span>;\t<span class=\"comment\">// 不移动</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Rectangle directionRect = direction.getBounds();\t<span class=\"comment\">// 游戏边界的边界</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (manRect.intersects(directionRect)) &#123;\t<span class=\"comment\">// 与游戏边界相撞</span></span><br><span class=\"line\">    move = <span class=\"keyword\">false</span>;\t<span class=\"comment\">// 不移动</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再根据<code>move</code>的结果，对该人物进行移动。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (move) &#123;</span><br><span class=\"line\">    man.setLocation(x, y);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-游戏重启监听器\"><a href=\"#4-4-游戏重启监听器\" class=\"headerlink\" title=\"4.4 游戏重启监听器\"></a>4.4 游戏重启监听器</h3><p>点击重新开始按钮，游戏重启。我们让本类实现<code>ActionListener</code>动作事件监听器接口，并在<code>init()</code>方法中为<code>restart</code>添加监听器。然后重写<code>actionPerformed()</code>方法，可以直接销毁游戏窗体，再重新新建实例就行了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span> </span>&#123;\t<span class=\"comment\">// 实现ActionListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        restart.addActionListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加动作事件监听器</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">        dispose();\t<span class=\"comment\">// 销毁游戏窗体</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> GameFrame();\t<span class=\"comment\">// 重新实例化</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-5-键盘操作监听器\"><a href=\"#4-5-键盘操作监听器\" class=\"headerlink\" title=\"4.5 键盘操作监听器\"></a>4.5 键盘操作监听器</h3><p>键盘是可以操作人物的移动的。我们让本类实现<code>KeyListener</code>键盘事件监听器接口，并在<code>init()</code>方法中为每个人物添加监听器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">KeyListener</span> </span>&#123;\t<span class=\"comment\">// 实现KeyListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">            people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">            add(people[i]);</span><br><span class=\"line\">            people[i].addKeyListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加键盘事件监听器</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyTyped</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyReleased</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们只需要重写<code>keyPressed()</code>方法。先拿到键盘事件资源（当前聚焦的人物）和键盘按键，并指挥人物按一定方向移动。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">    Person man = (Person) e.getSource();\t<span class=\"comment\">// 获得资源（人物）</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> keyCode = e.getKeyCode();\t<span class=\"comment\">// 获得按键</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_UP) &#123;\t<span class=\"comment\">// 按上键</span></span><br><span class=\"line\">        go(man, above);\t<span class=\"comment\">// 向上移动，下同</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_DOWN) &#123;</span><br><span class=\"line\">        go(man, below);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_LEFT) &#123;</span><br><span class=\"line\">        go(man, left);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_RIGHT) &#123;</span><br><span class=\"line\">        go(man, right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-6-鼠标操作监听器\"><a href=\"#4-6-鼠标操作监听器\" class=\"headerlink\" title=\"4.6 鼠标操作监听器\"></a>4.6 鼠标操作监听器</h3><p>鼠标不仅可以聚焦人物，也可以操作人物移动。我们让本类实现<code>MouseListener</code>鼠标事件监听器接口，并在<code>init()</code>方法中为每个人物添加监听器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">KeyListener</span>, <span class=\"title\">MouseListener</span> </span>&#123;\t<span class=\"comment\">// 实现MouseListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">            people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">            people[i].addKeyListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            people[i].addMouseListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加鼠标事件监听器</span></span><br><span class=\"line\">            add(people[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们只需要重写<code>MousePressed()</code>方法。先拿到鼠标事件资源（鼠标点击的人物）和鼠标坐标，再拿到这个人物的边界大小，根据这个鼠标点击的位置（如点击人物上半部分，则向上移动），指挥人物按一定方向移动。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">    Person man = (Person) e.getSource();\t<span class=\"comment\">// 获得资源（人物）</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x = e.getX();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> y = e.getY();\t<span class=\"comment\">// 鼠标坐标（相对于人物）</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> w = man.getBounds().width;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> h = man.getBounds().height;\t<span class=\"comment\">// 人物边界大小</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y &lt; h / <span class=\"number\">2</span>) &#123;\t<span class=\"comment\">// 点击的是上半部分</span></span><br><span class=\"line\">        go(man, above);\t<span class=\"comment\">// 向上移动，下同</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y &gt; h / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        go(man, below);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x &lt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        go(man, left);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &gt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        go(man, right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，键盘事件和鼠标事件不用<code>else-if</code>，可以让人物斜向运动，运动顺序由程序书写顺序决定。</p>\n<h3 id=\"4-7-游戏窗体类完整代码\"><a href=\"#4-7-游戏窗体类完整代码\" class=\"headerlink\" title=\"4.7 游戏窗体类完整代码\"></a>4.7 游戏窗体类完整代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">KeyListener</span>, <span class=\"title\">MouseListener</span> </span>&#123;</span><br><span class=\"line\">    Person[] people = <span class=\"keyword\">new</span> Person[<span class=\"number\">10</span>];</span><br><span class=\"line\">    JButton left, right, above, below;</span><br><span class=\"line\">    JButton restart = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;重新开始&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">GameFrame</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        init();</span><br><span class=\"line\">        setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class=\"line\">        setBounds(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">500</span>);</span><br><span class=\"line\">        setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        validate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        setLayout(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">        add(restart);</span><br><span class=\"line\">        restart.setBounds(<span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">120</span>, <span class=\"number\">35</span>);</span><br><span class=\"line\">        restart.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] name = &#123;<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"string\">&quot;关羽&quot;</span>, <span class=\"string\">&quot;马&quot;</span>, <span class=\"string\">&quot;黄&quot;</span>, <span class=\"string\">&quot;赵&quot;</span>, <span class=\"string\">&quot;张&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">            people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">            people[i].addKeyListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            people[i].addMouseListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            add(people[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        people[<span class=\"number\">0</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">54</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">1</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">154</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">2</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">3</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">4</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">5</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">6</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">7</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">8</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">9</span>].setBounds(<span class=\"number\">154</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        left = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        right = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        above = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        below = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        add(left);</span><br><span class=\"line\">        add(right);</span><br><span class=\"line\">        add(above);</span><br><span class=\"line\">        add(below);</span><br><span class=\"line\">        left.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">        right.setBounds(<span class=\"number\">254</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">        above.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        below.setBounds(<span class=\"number\">49</span>, <span class=\"number\">304</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        validate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">(Person man, JButton direction)</span> </span>&#123;</span><br><span class=\"line\">        Rectangle manRect = man.getBounds();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = manRect.x;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = manRect.y;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (direction == above) &#123;</span><br><span class=\"line\">            y -= <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == below) &#123;</span><br><span class=\"line\">            y += <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == left) &#123;</span><br><span class=\"line\">            x -= <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == right) &#123;</span><br><span class=\"line\">            x += <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        manRect.setLocation(x, y);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> move = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">            Rectangle personRect = people[i].getBounds();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((manRect.intersects(personRect) &amp;&amp; (man.number != i))) &#123;</span><br><span class=\"line\">                move = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Rectangle directionRect = direction.getBounds();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (manRect.intersects(directionRect)) &#123;</span><br><span class=\"line\">            move = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move) &#123;</span><br><span class=\"line\">            man.setLocation(x, y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">        dispose();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> GameFrame();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyTyped</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">        Person man = (Person) e.getSource();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> keyCode = e.getKeyCode();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_UP) &#123;</span><br><span class=\"line\">            go(man, above);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_DOWN) &#123;</span><br><span class=\"line\">            go(man, below);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_LEFT) &#123;</span><br><span class=\"line\">            go(man, left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_RIGHT) &#123;</span><br><span class=\"line\">            go(man, right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyReleased</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">        Person man = (Person) e.getSource();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = e.getX();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = e.getY();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> w = man.getBounds().width;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = man.getBounds().height;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y &lt; h / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, above);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y &gt; h / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, below);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &gt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-扩展与总结\"><a href=\"#5-扩展与总结\" class=\"headerlink\" title=\"5 扩展与总结\"></a>5 扩展与总结</h2><ul>\n<li><strong>步数统计：</strong>可以新写一个属性<code>step</code>，每<code>go()</code>一次就<code>step++</code>，统计游戏步数。</li>\n<li><strong>成功判定：</strong>当曹操走到某个坐标的时候，游戏就成功并结束了。</li>\n<li><strong>不同关卡：</strong>华容道有横刀立马、齐头并前、兵分三路等多种摆放方法，可以只改变人物坐标，实现不同的关卡。</li>\n<li><strong>记录进度：</strong>把步数、人物坐标存档到文件里，下次可以直接读档，接着来。</li>\n<li><strong>平台迁移：</strong>把代码换成JavaScript版，并写到网页上，游戏基本逻辑是一样的。</li>\n</ul>\n<p>这个游戏应该不难，逻辑上没有其他游戏那么多，主要是巩固Swing编程的基础。</p>\n<p>走了好多遍终于成功了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-006.png\" alt=\"\"></p>\n<p><a href=\"https://github.com/kaluojushi/MyJavaPersonalDevelopment/tree/main/Klotski\">完整代码点这里获取</a></p>\n","site":{"data":{}},"excerpt":"<p>利用Java的Swing编程、事件监听等知识写一个华容道小游戏。这个游戏的作者不是我，但是我根据所学的知识，分析一下游戏的源码，以巩固学习成果。</p>","more":"<h2 id=\"1-界面分析\"><a href=\"#1-界面分析\" class=\"headerlink\" title=\"1 界面分析\"></a>1 界面分析</h2><p>华容道游戏的界面如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-001.jpg\" alt=\"\"></p>\n<p>一共10个人物，每个人物可以上下左右移动。所以应提前想好一个布局方式，以便在写游戏时设定坐标。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-002.png\" alt=\"\"></p>\n<p>程序所需知识：</p>\n<ul>\n<li>Swing基础</li>\n<li>Swing基本组件（<code>JFrame</code>、<code>JButton</code>）</li>\n<li>事件监听器（焦点、动作、键盘、鼠标）</li>\n</ul>\n<h2 id=\"2-启动类\"><a href=\"#2-启动类\" class=\"headerlink\" title=\"2 启动类\"></a>2 启动类</h2><p>在IDEA中新建一个项目<code>Klotski</code>，并新建启动类<code>Start.java</code>和游戏窗体类<code>GameFrame.java</code>。根据启动类和游戏主体分离的原则，我们在启动类<code>Start.java</code>中只新建游戏窗体就行，不做任何与游戏内容相关的操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Start</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> GameFrame();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-人物类\"><a href=\"#3-人物类\" class=\"headerlink\" title=\"3 人物类\"></a>3 人物类</h2><p>在设计游戏窗体之前，我们先新建一个人物类<code>Person.java</code>，这个类用来实例化游戏中每一个人物对象。由于每一个人物对象实际上可以看做窗体的一个按钮，所以使该类继承<code>JButton</code>类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">JButton</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们为人物类设计三个属性，分别是编号、颜色和字体。编号在后期用于定位人物，颜色和字体方便构造人物时初始化。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> number;</span><br><span class=\"line\">Color color = <span class=\"keyword\">new</span> Color(<span class=\"number\">255</span>, <span class=\"number\">245</span>, <span class=\"number\">170</span>);</span><br><span class=\"line\">Font font = <span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.BOLD, <span class=\"number\">12</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-构造方法\"><a href=\"#3-1-构造方法\" class=\"headerlink\" title=\"3.1 构造方法\"></a>3.1 构造方法</h3><p>人物类的构造方法要传进两个参数，分别是编号和人物名字，并在下面对编号、姓名、颜色、字体等进行初始化。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"keyword\">int</span> number, String s)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(s);\t<span class=\"comment\">// 调用父类JButton的构造方法，为按钮命名</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.number = number;</span><br><span class=\"line\">    setBackground(color);</span><br><span class=\"line\">    setFont(font);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-人物变色监听\"><a href=\"#3-2-人物变色监听\" class=\"headerlink\" title=\"3.2 人物变色监听\"></a>3.2 人物变色监听</h3><p>当我们想让某个人物移动时，我们需要让其从默认颜色变为别的颜色。这里可以为每个按钮添加一个监听器，并且焦点事件监听器是最适合的。当按钮被聚焦的时候，鼠标键盘也可以对指定按钮进行操作。</p>\n<p>可以直接让该类实现<code>FocusListener</code>接口，并在构造方法加上焦点事件监听器，把自己传入即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">JButton</span> <span class=\"keyword\">implements</span> <span class=\"title\">FocusListener</span> </span>&#123;\t<span class=\"comment\">// 实现FocusListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"keyword\">int</span> number, String s)</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        addFocusListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加焦点事件监听器</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusGained</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(Color.RED);\t<span class=\"comment\">// 按钮获得焦点时，颜色变红</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusLost</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(color);\t<span class=\"comment\">// 按钮失去焦点时，颜色变回默认值</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-人物类完整代码\"><a href=\"#3-3-人物类完整代码\" class=\"headerlink\" title=\"3.3 人物类完整代码\"></a>3.3 人物类完整代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.FocusEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.FocusListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">JButton</span> <span class=\"keyword\">implements</span> <span class=\"title\">FocusListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number;</span><br><span class=\"line\">    Color color = <span class=\"keyword\">new</span> Color(<span class=\"number\">255</span>, <span class=\"number\">245</span>, <span class=\"number\">170</span>);</span><br><span class=\"line\">    Font font = <span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.BOLD, <span class=\"number\">12</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"keyword\">int</span> number, String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(s);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.number = number;</span><br><span class=\"line\">        setBackground(color);</span><br><span class=\"line\">        setFont(font);</span><br><span class=\"line\">        addFocusListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusGained</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(Color.RED);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">focusLost</span><span class=\"params\">(FocusEvent e)</span> </span>&#123;</span><br><span class=\"line\">        setBackground(color);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-游戏窗体类\"><a href=\"#4-游戏窗体类\" class=\"headerlink\" title=\"4 游戏窗体类\"></a>4 游戏窗体类</h2><p>游戏窗体类是游戏的主体部分，包含显示模块和逻辑模块。首先我们让该类继承<code>JFrame</code>类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该类首先要有10个人物，那么我们实例化一个<code>Person</code>数组；以及在属性中添加几个按钮，为边界按钮（处理游戏边界）和重新开始按钮。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person[] people = <span class=\"keyword\">new</span> Person[<span class=\"number\">10</span>];</span><br><span class=\"line\">JButton left, right, above, below;\t<span class=\"comment\">// 左、右、上、下边界按钮</span></span><br><span class=\"line\">JButton restart = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;重新开始&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-构造方法\"><a href=\"#4-1-构造方法\" class=\"headerlink\" title=\"4.1 构造方法\"></a>4.1 构造方法</h3><p>构造方法中只写与窗体默认设置有关的部分，具体的按钮布置放到一个初始化方法里面去写。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">GameFrame</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    init();\t<span class=\"comment\">// 初始化方法</span></span><br><span class=\"line\">    setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class=\"line\">    setBounds(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">500</span>);</span><br><span class=\"line\">    setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    validate();\t<span class=\"comment\">// 验证布局</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-初始化布置\"><a href=\"#4-2-初始化布置\" class=\"headerlink\" title=\"4.2 初始化布置\"></a>4.2 初始化布置</h3><p>在初始化方法<code>init()</code>中，我们一步步放置所需要的组件。首先把窗体设定为绝对布局，并放置重新开始按钮。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    setLayout(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    add(restart);</span><br><span class=\"line\">    restart.setBounds(<span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">120</span>, <span class=\"number\">35</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动<code>Start.java</code>，查看效果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-003.png\" alt=\"\"></p>\n<p>接下来放置每个人物。先写一个<code>String</code>数组，放置每个人物的名字，再将名字传入本类的属性<code>people</code>数组中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String[] name = &#123;<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"string\">&quot;关羽&quot;</span>, <span class=\"string\">&quot;马&quot;</span>, <span class=\"string\">&quot;黄&quot;</span>, <span class=\"string\">&quot;赵&quot;</span>, <span class=\"string\">&quot;张&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">    people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">    add(people[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>设定每个人物按钮的大小和位置。观察第1章界面分析中的图，如果设置每个格子的大小为50像素×50像素，那么曹操就是100像素×100像素；如果游戏左上角的边界为<code>(54, 54)</code>，那么曹操所在的位置应为<code>(104, 54)</code>。依次类推，设置每个人物的大小和位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以左上角的位置为(54, 54)，每个格子大小为50*50，设定每个按钮的位置</span></span><br><span class=\"line\">people[<span class=\"number\">0</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">54</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">1</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">154</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">2</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">3</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">4</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">5</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">people[<span class=\"number\">6</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">7</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">8</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">people[<span class=\"number\">9</span>].setBounds(<span class=\"number\">154</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-004.png\" alt=\"\"></p>\n<p>再添加游戏边界，游戏边界也可以看做是按钮，我们将这4个按钮设定为宽为5的长条，并根据添加好的人物的位置确定长条位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">right = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">above = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">below = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">add(left);</span><br><span class=\"line\">add(right);</span><br><span class=\"line\">add(above);</span><br><span class=\"line\">add(below);</span><br><span class=\"line\"><span class=\"comment\">// 以宽为5设定每个长条的大小</span></span><br><span class=\"line\">left.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">right.setBounds(<span class=\"number\">254</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">above.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">below.setBounds(<span class=\"number\">49</span>, <span class=\"number\">304</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">validate();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-005.png\" alt=\"\"></p>\n<h3 id=\"4-3-人物移动操作\"><a href=\"#4-3-人物移动操作\" class=\"headerlink\" title=\"4.3 人物移动操作\"></a>4.3 人物移动操作</h3><p>写一个<code>go()</code>方法，使人物进行上下左右移动。传进去的参数肯定是人物和方向，人物放<code>Person</code>类对象就行，方向其实把已有的4个边界按钮放进去就行了，因为它们就代表上下左右，并且可以直接拿它们的边界。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">(Person man, JButton direction)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们的操作判断分为以下几步：</p>\n<ol>\n<li>先试着移动一下，获取移动后的位置</li>\n<li>看是否与其他人物的位置或游戏边界的位置相撞</li>\n<li>如果相撞，则不移动；否则进行移动</li>\n</ol>\n<p>先试着移动一下，为了方便判断相撞，我们先拿一个矩形类<code>Rectangle</code>放这个人物的边界，并获得坐标。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rectangle manRect = man.getBounds();\t<span class=\"comment\">// 人物边界矩形</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> x = manRect.x;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = manRect.y;</span><br></pre></td></tr></table></figure>\n<p>再试着移动一下，这里我们只操作<code>x</code>和<code>y</code>，所以人物、矩形都是实际上没有移动的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (direction == above) &#123;</span><br><span class=\"line\">    y -= <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == below) &#123;</span><br><span class=\"line\">    y += <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == left) &#123;</span><br><span class=\"line\">    x -= <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == right) &#123;</span><br><span class=\"line\">    x += <span class=\"number\">50</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再把矩形移动过去（人物还是未动）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">manRect.setLocation(x, y);</span><br></pre></td></tr></table></figure>\n<p>从这时开始，我们要进行判断，先建立一个布尔型变量<code>move</code>并初始化为<code>true</code>，并拿矩形类<code>Rectangle</code>放其他人物的边界、游戏边界的边界，使用<code>intersects()</code>方法判断是否相撞。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> move = <span class=\"keyword\">true</span>;\t<span class=\"comment\">// 移动判断变量</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    Rectangle personRect = people[i].getBounds();\t<span class=\"comment\">// 每个人物的边界</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((manRect.intersects(personRect) &amp;&amp; (man.number != i))) &#123;\t<span class=\"comment\">// 操作人物的边界和某个人物边界相撞，且不是自己</span></span><br><span class=\"line\">        move = <span class=\"keyword\">false</span>;\t<span class=\"comment\">// 不移动</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Rectangle directionRect = direction.getBounds();\t<span class=\"comment\">// 游戏边界的边界</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (manRect.intersects(directionRect)) &#123;\t<span class=\"comment\">// 与游戏边界相撞</span></span><br><span class=\"line\">    move = <span class=\"keyword\">false</span>;\t<span class=\"comment\">// 不移动</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再根据<code>move</code>的结果，对该人物进行移动。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (move) &#123;</span><br><span class=\"line\">    man.setLocation(x, y);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-游戏重启监听器\"><a href=\"#4-4-游戏重启监听器\" class=\"headerlink\" title=\"4.4 游戏重启监听器\"></a>4.4 游戏重启监听器</h3><p>点击重新开始按钮，游戏重启。我们让本类实现<code>ActionListener</code>动作事件监听器接口，并在<code>init()</code>方法中为<code>restart</code>添加监听器。然后重写<code>actionPerformed()</code>方法，可以直接销毁游戏窗体，再重新新建实例就行了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span> </span>&#123;\t<span class=\"comment\">// 实现ActionListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        restart.addActionListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加动作事件监听器</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">        dispose();\t<span class=\"comment\">// 销毁游戏窗体</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> GameFrame();\t<span class=\"comment\">// 重新实例化</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-5-键盘操作监听器\"><a href=\"#4-5-键盘操作监听器\" class=\"headerlink\" title=\"4.5 键盘操作监听器\"></a>4.5 键盘操作监听器</h3><p>键盘是可以操作人物的移动的。我们让本类实现<code>KeyListener</code>键盘事件监听器接口，并在<code>init()</code>方法中为每个人物添加监听器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">KeyListener</span> </span>&#123;\t<span class=\"comment\">// 实现KeyListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">            people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">            add(people[i]);</span><br><span class=\"line\">            people[i].addKeyListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加键盘事件监听器</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyTyped</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyReleased</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们只需要重写<code>keyPressed()</code>方法。先拿到键盘事件资源（当前聚焦的人物）和键盘按键，并指挥人物按一定方向移动。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">    Person man = (Person) e.getSource();\t<span class=\"comment\">// 获得资源（人物）</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> keyCode = e.getKeyCode();\t<span class=\"comment\">// 获得按键</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_UP) &#123;\t<span class=\"comment\">// 按上键</span></span><br><span class=\"line\">        go(man, above);\t<span class=\"comment\">// 向上移动，下同</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_DOWN) &#123;</span><br><span class=\"line\">        go(man, below);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_LEFT) &#123;</span><br><span class=\"line\">        go(man, left);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_RIGHT) &#123;</span><br><span class=\"line\">        go(man, right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-6-鼠标操作监听器\"><a href=\"#4-6-鼠标操作监听器\" class=\"headerlink\" title=\"4.6 鼠标操作监听器\"></a>4.6 鼠标操作监听器</h3><p>鼠标不仅可以聚焦人物，也可以操作人物移动。我们让本类实现<code>MouseListener</code>鼠标事件监听器接口，并在<code>init()</code>方法中为每个人物添加监听器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">KeyListener</span>, <span class=\"title\">MouseListener</span> </span>&#123;\t<span class=\"comment\">// 实现MouseListener接口</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">            people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">            people[i].addKeyListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            people[i].addMouseListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 添加鼠标事件监听器</span></span><br><span class=\"line\">            add(people[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们只需要重写<code>MousePressed()</code>方法。先拿到鼠标事件资源（鼠标点击的人物）和鼠标坐标，再拿到这个人物的边界大小，根据这个鼠标点击的位置（如点击人物上半部分，则向上移动），指挥人物按一定方向移动。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">    Person man = (Person) e.getSource();\t<span class=\"comment\">// 获得资源（人物）</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x = e.getX();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> y = e.getY();\t<span class=\"comment\">// 鼠标坐标（相对于人物）</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> w = man.getBounds().width;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> h = man.getBounds().height;\t<span class=\"comment\">// 人物边界大小</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y &lt; h / <span class=\"number\">2</span>) &#123;\t<span class=\"comment\">// 点击的是上半部分</span></span><br><span class=\"line\">        go(man, above);\t<span class=\"comment\">// 向上移动，下同</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y &gt; h / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        go(man, below);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x &lt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        go(man, left);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &gt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        go(man, right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，键盘事件和鼠标事件不用<code>else-if</code>，可以让人物斜向运动，运动顺序由程序书写顺序决定。</p>\n<h3 id=\"4-7-游戏窗体类完整代码\"><a href=\"#4-7-游戏窗体类完整代码\" class=\"headerlink\" title=\"4.7 游戏窗体类完整代码\"></a>4.7 游戏窗体类完整代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">KeyListener</span>, <span class=\"title\">MouseListener</span> </span>&#123;</span><br><span class=\"line\">    Person[] people = <span class=\"keyword\">new</span> Person[<span class=\"number\">10</span>];</span><br><span class=\"line\">    JButton left, right, above, below;</span><br><span class=\"line\">    JButton restart = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;重新开始&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">GameFrame</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        init();</span><br><span class=\"line\">        setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class=\"line\">        setBounds(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">500</span>);</span><br><span class=\"line\">        setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        validate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        setLayout(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">        add(restart);</span><br><span class=\"line\">        restart.setBounds(<span class=\"number\">100</span>, <span class=\"number\">320</span>, <span class=\"number\">120</span>, <span class=\"number\">35</span>);</span><br><span class=\"line\">        restart.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] name = &#123;<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"string\">&quot;关羽&quot;</span>, <span class=\"string\">&quot;马&quot;</span>, <span class=\"string\">&quot;黄&quot;</span>, <span class=\"string\">&quot;赵&quot;</span>, <span class=\"string\">&quot;张&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>, <span class=\"string\">&quot;兵&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length; i++) &#123;</span><br><span class=\"line\">            people[i] = <span class=\"keyword\">new</span> Person(i, name[i]);</span><br><span class=\"line\">            people[i].addKeyListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            people[i].addMouseListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            add(people[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        people[<span class=\"number\">0</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">54</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">1</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">154</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">2</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">3</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">154</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">4</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">5</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">54</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">        people[<span class=\"number\">6</span>].setBounds(<span class=\"number\">54</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">7</span>].setBounds(<span class=\"number\">204</span>, <span class=\"number\">254</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">8</span>].setBounds(<span class=\"number\">104</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        people[<span class=\"number\">9</span>].setBounds(<span class=\"number\">154</span>, <span class=\"number\">204</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        left = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        right = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        above = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        below = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">        add(left);</span><br><span class=\"line\">        add(right);</span><br><span class=\"line\">        add(above);</span><br><span class=\"line\">        add(below);</span><br><span class=\"line\">        left.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">        right.setBounds(<span class=\"number\">254</span>, <span class=\"number\">49</span>, <span class=\"number\">5</span>, <span class=\"number\">260</span>);</span><br><span class=\"line\">        above.setBounds(<span class=\"number\">49</span>, <span class=\"number\">49</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        below.setBounds(<span class=\"number\">49</span>, <span class=\"number\">304</span>, <span class=\"number\">210</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        validate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">(Person man, JButton direction)</span> </span>&#123;</span><br><span class=\"line\">        Rectangle manRect = man.getBounds();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = manRect.x;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = manRect.y;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (direction == above) &#123;</span><br><span class=\"line\">            y -= <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == below) &#123;</span><br><span class=\"line\">            y += <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == left) &#123;</span><br><span class=\"line\">            x -= <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (direction == right) &#123;</span><br><span class=\"line\">            x += <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        manRect.setLocation(x, y);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> move = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">            Rectangle personRect = people[i].getBounds();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((manRect.intersects(personRect) &amp;&amp; (man.number != i))) &#123;</span><br><span class=\"line\">                move = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Rectangle directionRect = direction.getBounds();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (manRect.intersects(directionRect)) &#123;</span><br><span class=\"line\">            move = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move) &#123;</span><br><span class=\"line\">            man.setLocation(x, y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">        dispose();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> GameFrame();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyTyped</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">        Person man = (Person) e.getSource();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> keyCode = e.getKeyCode();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_UP) &#123;</span><br><span class=\"line\">            go(man, above);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_DOWN) &#123;</span><br><span class=\"line\">            go(man, below);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_LEFT) &#123;</span><br><span class=\"line\">            go(man, left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (keyCode == KeyEvent.VK_RIGHT) &#123;</span><br><span class=\"line\">            go(man, right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyReleased</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">        Person man = (Person) e.getSource();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = e.getX();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = e.getY();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> w = man.getBounds().width;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = man.getBounds().height;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y &lt; h / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, above);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y &gt; h / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, below);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &gt; w / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            go(man, right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-扩展与总结\"><a href=\"#5-扩展与总结\" class=\"headerlink\" title=\"5 扩展与总结\"></a>5 扩展与总结</h2><ul>\n<li><strong>步数统计：</strong>可以新写一个属性<code>step</code>，每<code>go()</code>一次就<code>step++</code>，统计游戏步数。</li>\n<li><strong>成功判定：</strong>当曹操走到某个坐标的时候，游戏就成功并结束了。</li>\n<li><strong>不同关卡：</strong>华容道有横刀立马、齐头并前、兵分三路等多种摆放方法，可以只改变人物坐标，实现不同的关卡。</li>\n<li><strong>记录进度：</strong>把步数、人物坐标存档到文件里，下次可以直接读档，接着来。</li>\n<li><strong>平台迁移：</strong>把代码换成JavaScript版，并写到网页上，游戏基本逻辑是一样的。</li>\n</ul>\n<p>这个游戏应该不难，逻辑上没有其他游戏那么多，主要是巩固Swing编程的基础。</p>\n<p>走了好多遍终于成功了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-006.png\" alt=\"\"></p>\n<p><a href=\"https://github.com/kaluojushi/MyJavaPersonalDevelopment/tree/main/Klotski\">完整代码点这里获取</a></p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-001.jpg","popularPost_tmp_gaData":{"updated":"Wed Sep 08 2021 21:01:03 GMT+0800 (中国标准时间)","title":"Java华容道小游戏源码分析","path":"2021/09/08/java-klotski-game-source-code-analysis/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/EX01-001.jpg","excerpt":"<p>利用Java的Swing编程、事件监听等知识写一个华容道小游戏。这个游戏的作者不是我，但是我根据所学的知识，分析一下游戏的源码，以巩固学习成果。</p>","date":{"_isAMomentObject":true,"_i":"2021-09-08T09:08:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-09-08T09:08:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Java","tags":["编程","Java","游戏","Swing","GUI"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":11505},{"title":"Java网络通信编程的笔记和实例","date":"2021-09-13T06:35:00.000Z","comments":1,"_content":"\n本文整理了学习Java网络通信编程的笔记，并分析了若干程序实例，以巩固学习成果。\n\n<!--more-->\n\n## 1 网络通信编程笔记\n\n### 1.1 网络程序设计基础\n\n#### 1.1.1 基本概念\n\n- 局域网（LAN）、广域网（WAN）\n- IP协议，IP地址（IPv4，4个字节表示）\n- TCP协议（传输控制协议）：类似拨打电话，固接连线，可靠性高，有顺序\n- UDP协议（数据用户报协议）：类似发送信件，无连接通信，可靠性低，不保证顺序\n- 端口（port）：假想的连接装置，计算机与网络的物理连接，为整数\n- 套接字（Socket）：假想的连接装置，连接程序与端口\n\n#### 1.1.2 网络通信的要素\n\n- **通信双方地址：**IP、端口号\n- **网络通信协议：**TCP/IP协议\n\n### 1.2 TCP程序设计基础\n\n#### 1.2.1 `InetAddress`类\n\n与IP地址相关的类，注意该类会抛`UnknownHostException`异常\n\n- IP地址：\n  - 本机`localhost`（127.0.0.1）\n  - IPv4（4个字节组成，42亿），IPv6（128位，8个无符16进制整数）\n  - 公网（互联网），私网（局域网），ABCD类地址\n- 无构造器，不可被`new`，只可被自己的方法返回\n- 常用方法：\n  - `getByName(String host)` 获取与Host对应的`InetAddress`对象\n  - `getHostAddress()` 获取对象所包含的IP地址，返回String\n  - `getHostName()` 获取IP主机名，返回String\n  - `getLocalHost()` 获取本地主机的`InetAddress`对象\n\n#### 1.2.2 `ServerSocket`类\n\n服务器套接字，等待网络请求，注意该类会抛`IOException`异常\n\n- 端口：\n  - 0~65535\n  - 不同的进程用不同的端口号，类似于门牌\n  - 端口分类：\n    - 公有端口0~1023（`HTTP`80、`HTTPS`443、`FTP`21、`Telent`23）\n    - 程序注册端口1024~49151（`Tomcat`8080、`MySQL`3306、`Oracle`1521）\n    - 动态（私有）端口49152~65535\n- `InetSocketAddress`类：与`InetAddress`类似，加入了端口，可以`new`，传入String地址和int端口，有`getPort()`等方法\n- `ServerSocket`用于等待网络请求，构造方法：\n  - `ServerSocket()` 非绑定服务器套接字\n  - `ServerSocket(int port)` 绑定特定端口\n  - `ServerSocket(int port, int backlog)` 指定本机端口、指定的`backlog`\n  - `ServerSocket(int port, int backlog, InetAddress bindAddress)` 指定端口、侦听`backlog`和绑定到的本地IP地址\n- `ServerSocket`的常用方法：\n  - `accept()` 等待客户机连接，若连接返回一个Socket套接字\n  - `isBound()` 判断绑定状态\n  - `getInetAddress()` 返回本地地址的`InetAddress`\n  - `isClosed()` 返回关闭状态\n  - `close()` 关闭服务器套接字\n  - `bind(SocketAddress endpoint)` 绑定到特定地址（IP和端口）\n  - `getLocalPort()` 获取等待端口\n\n#### 1.2.3 TCP网络程序\n\n- 通信协议：速率、传输码率、代码结构、传输控制等\n\n  - TCP/IP协议：协议簇，最出名的是TCP协议和IP协议\n  - TCP：连接、稳定，三次握手四次挥手，客户端服务端架构，传输完成释放连接，效率低\n  - UDP：不连接、不稳定，客户端服务端无明确界限，效率高\n\n- 参见第2章的实例\n\n#### 1.2.4 Tomcat基础\n\n- Tomcat是一个服务端，客户端通过浏览器进入\n- 一般使用8080端口\n\n### 1.4 UDP程序设计基础\n\n#### 1.4.1 UDP通信\n\n- 基本模式：\n  - 数据打包（数据包），发往目的地\n  - 接收数据包并查看\n- 发送数据包步骤：\n  - 创建数据报套接字（`DatagramSocket()`）\n  - 创建发送的数据包（`DatagramPacket(byte[] buf, int offset, int length, InetAddress ip, int port)`）\n  - 发送数据包（`DatagramSocket().send()`）\n- 接收数据包步骤：\n  - 创建数据报套接字并绑定到端口（`DatagramSocket(int port)`）\n  - 创建字节数组接收数据包（`DatagramPacket(byte[] buf, int length)`）\n  - 接收UDP包（`DatagramSocket().receive()`）\n\n#### 1.4.2 `DatagramPacket`类\n\n- 表示数据包\n- 构造方法：\n  - `DatagramPacket(byte[] buf, int length)` 指定数据包的内存空间和大小\n  - `DatagramPacket(byte[] buf, int length, InetAddress ip, int port)` 指定数据包的目标地址和端口\n\n#### 1.4.3 `DatagramSocket`类\n\n- 表示发送和接收数据包的数据报套接字\n- 构造方法：\n  - `DatagramSocket()` 绑定到本地主机任何可用端口\n  - `DatagramSocket(int port)` 绑定到本地主机指定端口\n  - `DatagramSocket(int port, InetAddress ip)` 绑定到指定的本地地址\n\n#### 1.4.4 UDP网络程序\n\n- 服务端、客户端没有明确的界限\n\n- 参见第3章的实例\n\n\n### 1.5 URL类\n\n统一资源定位器，通过地址定位互联网上的资源\n\n- URL的形式：`协议 : // ip地址 : 端口 / 项目名 / 资源`\n\n- 构造方法：传入字符串，`URL(String url)`\n\n- 常用方法：\n\n  - `getProtocol()` 获取协议名\n  - `getHost()` 获取主机IP\n  - `getPort()` 获取端口\n  - `getPath()` 获取路径\n  - `getFile()` 获取完整路径\n  - `getQuery()` 获取查询名\n\n- 参见第4章的实例\n\n\n## 2 TCP网络程序示例\n\n### 2.1 简单的接收器（服务端）、发送器（客户端）程序\n\n接收器（`MyReceiver.java`）\n\n```java\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class MyReceiver {\n    public static void main(String[] args) {\n        ServerSocket serverSocket = null;\n        Socket socket = null;\n        InputStream is = null;\n        ByteArrayOutputStream baos = null;\n\n        try {\n            serverSocket = new ServerSocket(9005);\t// 实例化一个服务器套接字，端口9005\n            socket = serverSocket.accept();\t// 使用套接字对象接收客户端连接该端口，连接后返回套接字，可以理解为“插座”\n            is = socket.getInputStream();\t// 获取“插座”套接字的输入流\n            baos = new ByteArrayOutputStream();\t// 实例化字节数组输出流\n            byte[] buffer = new byte[1024];\t// 字节数组\n            int len;\t//长度\n            while ((len = is.read(buffer)) != -1) {\t// 读取输入流到字节数组，若长度有效\n                baos.write(buffer, 0, len);\t// 则将字节数组写入到字节数组输出流中\n            }\n            System.out.println(baos);\t// 打印字节数组输出流\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\t// 以下关闭流和套接字，注意顺序先打开的后关闭\n            if (baos != null) {\n                try {\n                    baos.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (is != null) {\n                try {\n                    is.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (socket != null) {\n                try {\n                    socket.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (serverSocket != null) {\n                try {\n                    serverSocket.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n\n发送器（`MyTransmitter.java`）\n\n```java\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.net.InetAddress;\nimport java.net.Socket;\n\npublic class MyTransmitter {\n    public static void main(String[] args) {\n        Socket socket = null;\n        OutputStream os = null;\n        try {\n            InetAddress serverIP = InetAddress.getByName(\"127.0.0.1\");\t// 获取本地主机的IP对象\n            int port = 9005;\t// 端口9005\n            socket = new Socket(serverIP, port);\t// 使用IP和端口实例化套接字，可以理解为“插头”，并连接到“插座”\n            os = socket.getOutputStream();\t// 获取“插头”套接字的输出流\n            os.write(\"你好！\".getBytes());\t// 输出流写入字符串转换的字节数组\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\t// 以下关闭流和套接字\n            if (os != null) {\n                try {\n                    os.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (socket != null) {\n                try {\n                    socket.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n\n说明：\n\n1. 服务端和客户端都需要有套接字，分别是`ServerSocket`和`Socket`，并且绑定到统一端口。服务端还有一个`Socket`，是连接端口的返回结果。\n2. 注意输入流和输出流的使用，客户端使用**输出流**，通过套接字输出；服务端使用**输入流**，通过套接字输入，而这股输入流需要输出的话，还需要一个输出流。\n\n先启动`MyReceiver.java`，再启动`MyTransmitter.java`，观察到`MyReceiver.java`输出：\n\n```out\n你好！\n```\n\n### 2.2 较复杂的服务端、客户端程序\n\n服务端（`MyTCPServer.java`）\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class MyTCPServer {\n    private ServerSocket server;\n    private Socket socket;\n    private BufferedReader reader;\n\n    public static void main(String[] args) {\n        MyTCPServer tcp = new MyTCPServer();\t// 实例化服务端\n        tcp.getServer();\t// 服务端启动服务\n    }\n\n    void getServer() {\t// 服务端启用服务方法\n        try {\n            server = new ServerSocket(8998);\t// 实例化一个服务器套接字，端口8998\n            System.out.println(\"服务器套接字创建成功！\");\n            while (true) {\n                System.out.println(\"等待客户端连接...\");\n                socket = server.accept();\t// 使用套接字对象接收客户端连接该端口，连接后返回“插座”套接字\n                System.out.println(\"客户端连接成功！\");\n                reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));\t// 将“插座”套接字的输入流放到缓存读取器中\n                getClientMessage();\t// 获取客户端信息\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void getClientMessage() {\t// 获取客户端信息方法\n        try {\n            while (true) {\n                System.out.println(\"客户端：\" + reader.readLine());\t// 将缓存读取器的读取内容输出\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n            if (socket != null) {\n                socket.close();\n            }\n            if (server != null) {\n                server.close();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n客户端（`MyTCPClient.java`）\n\n```java\nimport javax.swing.*;\nimport javax.swing.border.BevelBorder;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.net.Socket;\n\npublic class MyTCPClient extends JFrame {\n    Container c;\n    private final JTextArea ta = new JTextArea();\n    private final JTextField tf = new JTextField();\n    Socket socket;\n    private PrintWriter writer;\t// 这是一个字符输出流过滤器，可以对字符流进行处理\n\n    public MyTCPClient(String title) {\n        super(title);\t// 标题\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        c = getContentPane();\n        final JScrollPane sp = new JScrollPane();\t// 滚动面板\n        sp.setBorder(new BevelBorder(BevelBorder.RAISED));\t// 设置滚动面板的边框为斜角边框，且为凸起斜面\n        c.add(sp, BorderLayout.CENTER);\t// 把滚动面板放到窗体中间\n        sp.setViewportView(ta);\t// 创建视口并设置视图为文本域（即把文本域放到滚动面板中）\n        ta.setFont(new Font(\"微软雅黑\", Font.PLAIN, 16));\n        ta.setEditable(false);\t// 文本域不可编辑\n        c.add(tf, BorderLayout.SOUTH);\t// 把文本框放到窗体底部\n        tf.setFont(new Font(\"微软雅黑\", Font.PLAIN, 16));\n        tf.addActionListener(new ActionListener() {\t// 监听文本框回车事件\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                writer.println(tf.getText());\t// 将文本框的信息写入流，这股流会通过端口传输到服务端\n                ta.append(tf.getText() + '\\n');\t// 在文本域中，把文本框写入的文本加进去\n                ta.setSelectionEnd(ta.getText().length());\t// 把文本域选择的结束位置放到文本域文本末尾\n                tf.setText(\"\");\t// 清空文本框\n            }\n        });\n    }\n\n    public static void main(String[] args) {\n        MyTCPClient client = new MyTCPClient(\"客户端系统\");\t// 实例化客户端\n        client.setBounds(600, 300, 400, 400);\n        client.setVisible(true);\n        client.connect();\t// 客户端连接\n    }\n\n    private void connect() {\t// 客户端连接方法\n        ta.append(\"尝试连接中...\\n\");\n        try {\n            socket = new Socket(\"127.0.0.1\", 8998);\t// 使用IP和端口实例化“插头”套接字，并连接到“插座”\n            writer = new PrintWriter(socket.getOutputStream(), true);\t// 将“插头”套接器的输出流放到过滤器中，true表示自动行刷新\n            ta.append(\"完成连接！\\n\");\n        } catch (IOException e) {\n            ta.append(\"连接失败！请检查服务器端\\n\");\n        }\n    }\n}\n```\n\n说明：\n\n1. 服务端将获取客户端的方法放在无限循环中，以便无限接收客户端的信息。\n2. 根据屏幕提示的信息，确定客户端是何时连接上服务端的。\n\n先启动`MyTCPServer.java`，再启动`MyTCPClient.java`，在窗体输入文字，观察到窗体变化与`MyTCPServer.java`输出：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/007.png)\n\n```out\n服务器套接字创建成功！\n等待客户端连接...\n客户端连接成功！\n客户端：你好！\n客户端：我是客户端\n```\n\n### 2.3 简单的文件传输程序\n\n服务端（`FileReceiver.java`）\n\n```java\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class FileReceiver {\n    public static void main(String[] args) throws IOException {\n        ServerSocket server = new ServerSocket(9000);\t// 端口9000\n        Socket socket = server.accept();\t// 监听客户端连接\n        InputStream is = socket.getInputStream();\t// 获得套接字输入流\n        FileOutputStream fos = new FileOutputStream(\"receive.png\");\t// 实例化文件输出流\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = is.read(buffer)) != -1) {\t// 读取套接字输入流\n            fos.write(buffer, 0, len);\t// 写入到文件输出流\n        }\n\n        BufferedWriter endBw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\t// 获得套接字输出流，并放到缓存字符写入器中\n        endBw.write(\"接收完毕\");\t// 写入字符串到输出流\n\n        endBw.close();\t// 关闭流与套接字\n        fos.close();\n        is.close();\n        socket.close();\n        server.close();\n    }\n}\n```\n\n客户端（`FileSender.png`）\n\n```java\nimport java.io.*;\nimport java.net.Socket;\n\npublic class FileSender {\n    public static void main(String[] args) throws IOException {\n        Socket socket = new Socket(\"127.0.0.1\", 9000);\t// 连接端口\n        OutputStream os = socket.getOutputStream();\t// 获得套接字输出流\n        FileInputStream fis = new FileInputStream(\"send.png\");\t// 实例化文件输入流\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = fis.read(buffer)) != -1) {\t// 读取文件输入流\n            os.write(buffer, 0, len);\t// 写入到套接字输出流\n        }\n\n        socket.shutdownOutput();\t// 单向关闭客户端的套接字输出流\n\n        BufferedReader endBr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\t// 获得套接字输入流，并放到缓存字符读取器中\n        System.out.println(endBr.readLine());\t// 打印读取器读取到的字符串\n\n        endBr.close();\t// 关闭流与套接字\n        fis.close();\n        os.close();\n        socket.close();\n    }\n}\n```\n\n说明：\n\n1. 示例中涉及到的输入输出流分别有（以输入流为例）：`InputStream`（接收套接字流）、`FileInputStream`（用于文件与系统间的传输流）、`InputStreamReader`（管道）、`BufferedReader`（用于处理服务端的回传字符）。\n2. 注意客户端第15行的`socket.shutdownOutput();`，若不写这一行，即使客户端已写入完毕（并开始进行输入流的等待），服务端仍在继续读取（因为服务端第13行的`is.read(buffer)`，读取的字节数已为0，因此循环无法退出，处于读取0字节写入0字节的状态），因此要单向关闭客户端的套接字输出流，保证服务端结束读取。\n\n先启动`FileReceiver.java`，再启动`FileSender.java`，观察到文件`receive.png`生成，以及`FileSender.java`输出：\n\n```java\n接收完毕\n```\n\n## 3 UDP网络程序示例\n\n### 3.1 简单的发送器、接收器程序\n\n发送器（`MyUDPSender.java`）\n\n```java\nimport java.net.*;\n\npublic class MyUDPSender {\n    public static void main(String[] args) throws Exception {\n        DatagramSocket socket = new DatagramSocket();\t// 创建数据报套接字\n        String msg = \"你好！\";\n        byte[] buffer = msg.getBytes();\n        InetAddress localhost = InetAddress.getByName(\"localhost\");\n        int port = 9090;\n        DatagramPacket packet = new DatagramPacket(buffer, 0, buffer.length, localhost, port);\t// 创建要发送的数据包，并绑定内容和发送地址\n        socket.send(packet);\t// 发送数据包\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n接收器（`MyUDPReceiver.java`）\n\n```java\nimport java.net.*;\n\npublic class MyUDPReceiver {\n    public static void main(String[] args) throws Exception {\n        DatagramSocket socket = new DatagramSocket(9090);\t// 创建数据报套接字，绑定到9090端口\n        byte[] buffer = new byte[1024];\t// 创建缓存数组\n        DatagramPacket packet = new DatagramPacket(buffer, 0, buffer.length);\t// 创建要接收的数据包载体\n        socket.receive(packet);\t// 接收数据包（程序阻塞）\n        System.out.println(packet.getAddress().getHostAddress());\t// 获取数据包的地址\n        System.out.println(new String(packet.getData(), 0, packet.getLength()));\t// 获取数据包的数据\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n说明：\n\n1. 发送器和接收器都有数据报套接字`DatagramSocket`和数据包`DatagramPacket`，但使用方式不同。\n   - 发送器的`DatagramSocket`不用绑定端口，因为它只用`send()`方法，无需绑定发送者的端口；接收器的`DatagramSocket`需要绑定端口，因为它用`receive()`方法需要明确自己的地址。\n   - 发送器的`DatagramPacket`需要绑定发送地址，因为它已有内容并打包好，需要向特定地址传递；接收器的`DatagramPacket`不用绑定地址，因为它是一个空的容器，只起接收载体作用。\n2. 接收器第10行，`packet.getLength()`不能用`packet.getData().length`代替，数据包大小与数据字节数组的大小是不同的。\n\n先启动`MyUDPReceiver.java`，观察到程序开始等待，再启动`MyUDPSender.java`，观察到`MyUDPReceiver.java`输出：\n\n```out\n127.0.0.1\n你好！\n```\n\n### 3.2 较复杂的聊天器程序（多线程）\n\n聊天发送端线程（`MyChatSender.java`）\n\n```java\nimport java.io.*;\nimport java.net.*;\n\npublic class MyChatSender implements Runnable {\n    DatagramSocket socket = null;\t// 数据报套接字\n    BufferedReader reader = null;\t// 缓存输入流\n    private final String toIP;\t// 发送的IP地址（理解为“写信时的对方地址”）\n    private final int toPort;\t// 发送的端口（理解为“写信时的对方门牌号”）\n\n    public MyChatSender(String toIP, int toPort) {\n        this.toIP = toIP;\n        this.toPort = toPort;\n\n        try {\n            socket = new DatagramSocket();\t// 创建发送端的套接字\n            reader = new BufferedReader(new InputStreamReader(System.in));\t// 缓存输入流放入系统输入\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                String data = reader.readLine();\t// 读取输入流的一行字符串\n                byte[] dataBytes = data.getBytes();\t// 字符串转换为字节数组\n                DatagramPacket packet = new DatagramPacket(dataBytes, 0, dataBytes.length, new InetSocketAddress(toIP, toPort));\t// 将字节数组打包，并绑定到对应IP和端口\n                socket.send(packet);\t// 发送数据包\n                if (\"bye\".equals(data)) {\t// 如果输入\"bye\"，退出发送循环\n                    break;\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        try {\n            reader.close();\t// 关闭流\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n聊天接收端线程（`MyChatReceiver.java`）\n\n```java\nimport java.io.*;\nimport java.net.*;\n\npublic class MyChatReceiver implements Runnable {\n    DatagramSocket socket = null;\t// 数据报套接字\n    private final String fromName;\t// 来源的名字（理解为“写信时的寄件人姓名”）\n\n    public MyChatReceiver(int port, String fromName) {\n        this.fromName = fromName;\n        try {\n            socket = new DatagramSocket(port);\t// 创建接收端的套接字，并绑定到一个接收端口\n        } catch (SocketException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                byte[] container = new byte[1024];\t// 字节数组容器\n                DatagramPacket packet = new DatagramPacket(container, 0, container.length);\t// 创建数据包容器\n                socket.receive(packet);\t// 阻塞式接收数据包\n                byte[] dataBytes = packet.getData();\t// 把数据包的缓存数据放到字节数组里\n                String data = new String(dataBytes, 0, packet.getLength());\t// 将缓存数据转换为字符串\n                System.out.println(fromName + \"：\" + data);\t// 输出\n                if (\"bye\".equals(data)) {// 如果收到\"bye\"，退出接收循环\n                    break;\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n聊天者A（`ChatterA.java`）\n\n```java\npublic class ChatterA {\n    public static void main(String[] args) {\n        new Thread(new MyChatSender(\"localhost\", 9999)).start();\t// 启动A的发送端线程\n        new Thread(new MyChatReceiver(8888, \"B\")).start();\t// 启动A的接收端线程\n    }\n}\n```\n\n聊天者B（`ChatterB.java`）\n\n```java\npublic class ChatterB {\n    public static void main(String[] args) {\n        new Thread(new MyChatSender(\"localhost\", 8888)).start();\t// 启动B的发送端线程\n        new Thread(new MyChatReceiver(9999, \"A\")).start();\t// 启动B的接收端线程\n    }\n}\n```\n\n说明：每个聊天者有两个线程，以及两个所需端口。A向`localhost`的9999端口发信息，同时接收发送到8888端口名为B发来的信息；B向`localhost`的8888端口发信息，同时接收发送到9999端口名为A发来的信息。\n\n分别启动`ChatterA.java`和`ChatterB.java`，并输入文字，观察到两个程序分别输出：\n\n```out\n你好！\nB：你好啊！\n今天天气真不错。\nB：是啊，今天天气晴朗。\nbye\nB：bye\n```\n\n```out\nA：你好！\n你好啊！\nA：今天天气真不错。\n是啊，今天天气晴朗。\nA：bye\nbye\n```\n\n### 3.3 较复杂的广播、收音机程序\n\n广播（`MyBroadcast.java`）\n\n```java\nimport java.net.*;\n\npublic class MyBroadcast extends Thread {\t// 实现线程\n    String msg = \"欢迎收听广播节目。\";\t// 广播信息\n    int port = 9898;\t// 端口9898\n    InetAddress ipGroup;\t//IP组\n    MulticastSocket socket;\t// 多点广播套接字\n\n    MyBroadcast() throws Exception {\n        ipGroup = InetAddress.getByName(\"224.255.10.0\");\t// 指定地址\n        socket = new MulticastSocket(port);\t// 创建一个指定端口的套接字\n        socket.setTimeToLive(1);\t// 指定发送范围是本地网络\n        socket.joinGroup(ipGroup);\t// 加入广播组\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            byte[] data = msg.getBytes();\t// 字节数组\n            DatagramPacket packet = new DatagramPacket(data, data.length, ipGroup, port);\t//数据打包并绑定地址端口\n            System.out.println(new String(data));\t// 输出广播信息\n            try {\n                socket.send(packet);\t// 发送数据包\n                sleep(3000);\t// 休眠3秒\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        MyBroadcast broadcast = new MyBroadcast();\t// 创建广播\n        broadcast.start();\t// 启动广播\n    }\n}\n```\n\n收音机（`MyRadio.java`）\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.*;\nimport java.net.*;\n\npublic class MyRadio extends JFrame implements Runnable, ActionListener {\n    int port;\t// 端口\n    InetAddress ipGroup;\t// IP组\n    MulticastSocket socket;\t// 多点广播套接字\n    JButton start = new JButton(\"开始接收\");\t// 开始按钮\n    JButton stop = new JButton(\"停止接收\");\t// 停止按钮\n    JTextArea startArea = new JTextArea(10, 10);\t// 广播信息区域（显示目前接收到的一条信息）\n    JTextArea receivedArea = new JTextArea(10, 10);\t// 接收信息区域（显示历史接收到的所有信息）\n    Thread thread;\t// 线程\n    boolean isStopped = false;\t// 是否停止\n\n    public MyRadio() throws Exception {\n        super(\"数据报收音机\");\t// 标题\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        thread = new Thread(this);\t// 代理自己\n        start.addActionListener(this);\n        stop.addActionListener(this);\t// 按钮添加监听器\n        startArea.setForeground(Color.BLUE);\n        JPanel north = new JPanel();\t// 顶部面板\n        north.add(start);\n        north.add(stop);\n        add(north, BorderLayout.NORTH);\n        JPanel center = new JPanel(new GridLayout(1, 2));\t// 中部面板\n        center.add(startArea);\n        center.add(receivedArea);\n        add(center, BorderLayout.CENTER);\n        validate();\t// 刷新布局\n\n        port = 9898;\t// 端口9898\n        ipGroup = InetAddress.getByName(\"224.255.10.0\");\t// IP组指定地址\n        socket = new MulticastSocket(port);\t// 套接字绑定端口\n        socket.joinGroup(ipGroup);\t// 套接字加入广播组\n\n        setBounds(100, 50, 360, 380);\n        setVisible(true);\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            byte[] data = new byte[1024];\t// 字节数组\n            DatagramPacket packet = new DatagramPacket(data, data.length, ipGroup, port);\t// 数据包容器\n            try {\n                socket.receive(packet);\t// 接收数据包\n                String msg = new String(packet.getData(), 0, packet.getLength());\t// 缓存数据转换为字符串\n                startArea.setText(\"正在接收的内容：\\n\" + msg);\t// 打印在广播区域上\n                receivedArea.append(msg + \"\\n\");\t// 添加在接收区域上\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            if (isStopped) {\t// 如果停止接收，退出循环\n                break;\n            }\n        }\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\t// 监听\n        if (e.getSource() == start) {\n            start.setBackground(Color.RED);\n            stop.setBackground(Color.YELLOW);\n            if (!(thread.isAlive())) {\t// 如果线程不处于新建状态\n                thread = new Thread(this);\t// 新建线程\n            }\n            thread.start();\t// 启动线程\n            isStopped = false;\n        }\n        if (e.getSource() == stop) {\n            start.setBackground(Color.YELLOW);\n            stop.setBackground(Color.RED);\n            isStopped = true;\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        MyRadio radio = new MyRadio();\t// 创建广播\n        radio.setSize(460, 200);\n    }\n}\n```\n\n说明：\n\n1. 发出广播和接收广播的地址必须位于同一个组内，地址范围是224.0.0.0~224.255.255.255，该地址不代表某个特定主机的位置。\n2. 加入同一个组的主机可以在某个端口广播信息，也可以在某个端口接收信息。\n\n启动`MyBroadcast.java`，观察到其开始输出；启动`MyRadio.java`并点击开始接收按钮，观察到其开始接收广播信息：\n\n```java\n欢迎收听广播节目。\n欢迎收听广播节目。\n欢迎收听广播节目。\n```\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/008.png)\n\n## 4 利用URL下载网络资源示例\n\n```java\nimport javax.net.ssl.HttpsURLConnection;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.net.URL;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        URL url = new URL(\"https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png\");\t// 新建URL，并初始化为网络资源地址\n        HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();\t// URL开启连接\n        InputStream is = connection.getInputStream();\t// 获取连接输入流\n        FileOutputStream fos = new FileOutputStream(\"logo.png\");\t// 新建文件输出流\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = is.read(buffer)) != -1) {\t// 读入连接输入流\n            fos.write(buffer, 0, len);\t// 写入到文件输入流\n        }\n        fos.close();\t// 关闭流与连接\n        is.close();\n        connection.disconnect();\n    }\n}\n```\n\n观察到文件`logo.png`的生成。\n\n## 5 I/O补充\n\n**使用输入流、输出流时以下这段代码的原理：**\n\n```java\nFileInputStream fis = new FileInputStream(\"xxx\");\t// 文件输入流\nOutputStream os = new OutputStream();\t// 输出流\nbyte[] buffer = new byte[1024];\nint len;\nwhile ((len = fis.read(buffer)) != -1) {\n    os.write(buffer, 0, len);\n}\n```\n\n- `buffer`是一个字节数组，长度为1024，类似于一个缓冲区。\n- `fis.read(buffer)`，这一步从输入流读取`buffer`大小的字节（即1024），把这些字节赋给`buffer`，并返回读取的字节数。\n- 把读取的字节数赋值给`len`，然后对`len`进行判断。\n- 把`buffer`数组的0到`len`位置的字节写入输出流。\n- 每次循环，`buffer`就被重新赋值一次，因此文件大小与`buffer`的长度1024是没有关系的。\n- 读取到输入流末尾时，`read()`方法返回-1，循环结束。\n- 注意：缓冲区的大小不应太小，否则会涉及到编码问题，部分字节被强行拆分到两个缓冲区时可能会出现乱码。\n\n","source":"_posts/notes-and-examples-of-java-network-communication-programming.md","raw":"---\ntitle: Java网络通信编程的笔记和实例\ndate: 2021-09-13 14:35:00\ncategories: Java\ntags:\n  - 编程\n  - Java\n  - 网络通信\n  - 网络编程\n  - TCP\n  - IP\n  - UDP\n  - URL\ncomments: true\n---\n\n本文整理了学习Java网络通信编程的笔记，并分析了若干程序实例，以巩固学习成果。\n\n<!--more-->\n\n## 1 网络通信编程笔记\n\n### 1.1 网络程序设计基础\n\n#### 1.1.1 基本概念\n\n- 局域网（LAN）、广域网（WAN）\n- IP协议，IP地址（IPv4，4个字节表示）\n- TCP协议（传输控制协议）：类似拨打电话，固接连线，可靠性高，有顺序\n- UDP协议（数据用户报协议）：类似发送信件，无连接通信，可靠性低，不保证顺序\n- 端口（port）：假想的连接装置，计算机与网络的物理连接，为整数\n- 套接字（Socket）：假想的连接装置，连接程序与端口\n\n#### 1.1.2 网络通信的要素\n\n- **通信双方地址：**IP、端口号\n- **网络通信协议：**TCP/IP协议\n\n### 1.2 TCP程序设计基础\n\n#### 1.2.1 `InetAddress`类\n\n与IP地址相关的类，注意该类会抛`UnknownHostException`异常\n\n- IP地址：\n  - 本机`localhost`（127.0.0.1）\n  - IPv4（4个字节组成，42亿），IPv6（128位，8个无符16进制整数）\n  - 公网（互联网），私网（局域网），ABCD类地址\n- 无构造器，不可被`new`，只可被自己的方法返回\n- 常用方法：\n  - `getByName(String host)` 获取与Host对应的`InetAddress`对象\n  - `getHostAddress()` 获取对象所包含的IP地址，返回String\n  - `getHostName()` 获取IP主机名，返回String\n  - `getLocalHost()` 获取本地主机的`InetAddress`对象\n\n#### 1.2.2 `ServerSocket`类\n\n服务器套接字，等待网络请求，注意该类会抛`IOException`异常\n\n- 端口：\n  - 0~65535\n  - 不同的进程用不同的端口号，类似于门牌\n  - 端口分类：\n    - 公有端口0~1023（`HTTP`80、`HTTPS`443、`FTP`21、`Telent`23）\n    - 程序注册端口1024~49151（`Tomcat`8080、`MySQL`3306、`Oracle`1521）\n    - 动态（私有）端口49152~65535\n- `InetSocketAddress`类：与`InetAddress`类似，加入了端口，可以`new`，传入String地址和int端口，有`getPort()`等方法\n- `ServerSocket`用于等待网络请求，构造方法：\n  - `ServerSocket()` 非绑定服务器套接字\n  - `ServerSocket(int port)` 绑定特定端口\n  - `ServerSocket(int port, int backlog)` 指定本机端口、指定的`backlog`\n  - `ServerSocket(int port, int backlog, InetAddress bindAddress)` 指定端口、侦听`backlog`和绑定到的本地IP地址\n- `ServerSocket`的常用方法：\n  - `accept()` 等待客户机连接，若连接返回一个Socket套接字\n  - `isBound()` 判断绑定状态\n  - `getInetAddress()` 返回本地地址的`InetAddress`\n  - `isClosed()` 返回关闭状态\n  - `close()` 关闭服务器套接字\n  - `bind(SocketAddress endpoint)` 绑定到特定地址（IP和端口）\n  - `getLocalPort()` 获取等待端口\n\n#### 1.2.3 TCP网络程序\n\n- 通信协议：速率、传输码率、代码结构、传输控制等\n\n  - TCP/IP协议：协议簇，最出名的是TCP协议和IP协议\n  - TCP：连接、稳定，三次握手四次挥手，客户端服务端架构，传输完成释放连接，效率低\n  - UDP：不连接、不稳定，客户端服务端无明确界限，效率高\n\n- 参见第2章的实例\n\n#### 1.2.4 Tomcat基础\n\n- Tomcat是一个服务端，客户端通过浏览器进入\n- 一般使用8080端口\n\n### 1.4 UDP程序设计基础\n\n#### 1.4.1 UDP通信\n\n- 基本模式：\n  - 数据打包（数据包），发往目的地\n  - 接收数据包并查看\n- 发送数据包步骤：\n  - 创建数据报套接字（`DatagramSocket()`）\n  - 创建发送的数据包（`DatagramPacket(byte[] buf, int offset, int length, InetAddress ip, int port)`）\n  - 发送数据包（`DatagramSocket().send()`）\n- 接收数据包步骤：\n  - 创建数据报套接字并绑定到端口（`DatagramSocket(int port)`）\n  - 创建字节数组接收数据包（`DatagramPacket(byte[] buf, int length)`）\n  - 接收UDP包（`DatagramSocket().receive()`）\n\n#### 1.4.2 `DatagramPacket`类\n\n- 表示数据包\n- 构造方法：\n  - `DatagramPacket(byte[] buf, int length)` 指定数据包的内存空间和大小\n  - `DatagramPacket(byte[] buf, int length, InetAddress ip, int port)` 指定数据包的目标地址和端口\n\n#### 1.4.3 `DatagramSocket`类\n\n- 表示发送和接收数据包的数据报套接字\n- 构造方法：\n  - `DatagramSocket()` 绑定到本地主机任何可用端口\n  - `DatagramSocket(int port)` 绑定到本地主机指定端口\n  - `DatagramSocket(int port, InetAddress ip)` 绑定到指定的本地地址\n\n#### 1.4.4 UDP网络程序\n\n- 服务端、客户端没有明确的界限\n\n- 参见第3章的实例\n\n\n### 1.5 URL类\n\n统一资源定位器，通过地址定位互联网上的资源\n\n- URL的形式：`协议 : // ip地址 : 端口 / 项目名 / 资源`\n\n- 构造方法：传入字符串，`URL(String url)`\n\n- 常用方法：\n\n  - `getProtocol()` 获取协议名\n  - `getHost()` 获取主机IP\n  - `getPort()` 获取端口\n  - `getPath()` 获取路径\n  - `getFile()` 获取完整路径\n  - `getQuery()` 获取查询名\n\n- 参见第4章的实例\n\n\n## 2 TCP网络程序示例\n\n### 2.1 简单的接收器（服务端）、发送器（客户端）程序\n\n接收器（`MyReceiver.java`）\n\n```java\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class MyReceiver {\n    public static void main(String[] args) {\n        ServerSocket serverSocket = null;\n        Socket socket = null;\n        InputStream is = null;\n        ByteArrayOutputStream baos = null;\n\n        try {\n            serverSocket = new ServerSocket(9005);\t// 实例化一个服务器套接字，端口9005\n            socket = serverSocket.accept();\t// 使用套接字对象接收客户端连接该端口，连接后返回套接字，可以理解为“插座”\n            is = socket.getInputStream();\t// 获取“插座”套接字的输入流\n            baos = new ByteArrayOutputStream();\t// 实例化字节数组输出流\n            byte[] buffer = new byte[1024];\t// 字节数组\n            int len;\t//长度\n            while ((len = is.read(buffer)) != -1) {\t// 读取输入流到字节数组，若长度有效\n                baos.write(buffer, 0, len);\t// 则将字节数组写入到字节数组输出流中\n            }\n            System.out.println(baos);\t// 打印字节数组输出流\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\t// 以下关闭流和套接字，注意顺序先打开的后关闭\n            if (baos != null) {\n                try {\n                    baos.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (is != null) {\n                try {\n                    is.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (socket != null) {\n                try {\n                    socket.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (serverSocket != null) {\n                try {\n                    serverSocket.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n\n发送器（`MyTransmitter.java`）\n\n```java\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.net.InetAddress;\nimport java.net.Socket;\n\npublic class MyTransmitter {\n    public static void main(String[] args) {\n        Socket socket = null;\n        OutputStream os = null;\n        try {\n            InetAddress serverIP = InetAddress.getByName(\"127.0.0.1\");\t// 获取本地主机的IP对象\n            int port = 9005;\t// 端口9005\n            socket = new Socket(serverIP, port);\t// 使用IP和端口实例化套接字，可以理解为“插头”，并连接到“插座”\n            os = socket.getOutputStream();\t// 获取“插头”套接字的输出流\n            os.write(\"你好！\".getBytes());\t// 输出流写入字符串转换的字节数组\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\t// 以下关闭流和套接字\n            if (os != null) {\n                try {\n                    os.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (socket != null) {\n                try {\n                    socket.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n\n说明：\n\n1. 服务端和客户端都需要有套接字，分别是`ServerSocket`和`Socket`，并且绑定到统一端口。服务端还有一个`Socket`，是连接端口的返回结果。\n2. 注意输入流和输出流的使用，客户端使用**输出流**，通过套接字输出；服务端使用**输入流**，通过套接字输入，而这股输入流需要输出的话，还需要一个输出流。\n\n先启动`MyReceiver.java`，再启动`MyTransmitter.java`，观察到`MyReceiver.java`输出：\n\n```out\n你好！\n```\n\n### 2.2 较复杂的服务端、客户端程序\n\n服务端（`MyTCPServer.java`）\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class MyTCPServer {\n    private ServerSocket server;\n    private Socket socket;\n    private BufferedReader reader;\n\n    public static void main(String[] args) {\n        MyTCPServer tcp = new MyTCPServer();\t// 实例化服务端\n        tcp.getServer();\t// 服务端启动服务\n    }\n\n    void getServer() {\t// 服务端启用服务方法\n        try {\n            server = new ServerSocket(8998);\t// 实例化一个服务器套接字，端口8998\n            System.out.println(\"服务器套接字创建成功！\");\n            while (true) {\n                System.out.println(\"等待客户端连接...\");\n                socket = server.accept();\t// 使用套接字对象接收客户端连接该端口，连接后返回“插座”套接字\n                System.out.println(\"客户端连接成功！\");\n                reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));\t// 将“插座”套接字的输入流放到缓存读取器中\n                getClientMessage();\t// 获取客户端信息\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void getClientMessage() {\t// 获取客户端信息方法\n        try {\n            while (true) {\n                System.out.println(\"客户端：\" + reader.readLine());\t// 将缓存读取器的读取内容输出\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        try {\n            if (reader != null) {\n                reader.close();\n            }\n            if (socket != null) {\n                socket.close();\n            }\n            if (server != null) {\n                server.close();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n客户端（`MyTCPClient.java`）\n\n```java\nimport javax.swing.*;\nimport javax.swing.border.BevelBorder;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.net.Socket;\n\npublic class MyTCPClient extends JFrame {\n    Container c;\n    private final JTextArea ta = new JTextArea();\n    private final JTextField tf = new JTextField();\n    Socket socket;\n    private PrintWriter writer;\t// 这是一个字符输出流过滤器，可以对字符流进行处理\n\n    public MyTCPClient(String title) {\n        super(title);\t// 标题\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        c = getContentPane();\n        final JScrollPane sp = new JScrollPane();\t// 滚动面板\n        sp.setBorder(new BevelBorder(BevelBorder.RAISED));\t// 设置滚动面板的边框为斜角边框，且为凸起斜面\n        c.add(sp, BorderLayout.CENTER);\t// 把滚动面板放到窗体中间\n        sp.setViewportView(ta);\t// 创建视口并设置视图为文本域（即把文本域放到滚动面板中）\n        ta.setFont(new Font(\"微软雅黑\", Font.PLAIN, 16));\n        ta.setEditable(false);\t// 文本域不可编辑\n        c.add(tf, BorderLayout.SOUTH);\t// 把文本框放到窗体底部\n        tf.setFont(new Font(\"微软雅黑\", Font.PLAIN, 16));\n        tf.addActionListener(new ActionListener() {\t// 监听文本框回车事件\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                writer.println(tf.getText());\t// 将文本框的信息写入流，这股流会通过端口传输到服务端\n                ta.append(tf.getText() + '\\n');\t// 在文本域中，把文本框写入的文本加进去\n                ta.setSelectionEnd(ta.getText().length());\t// 把文本域选择的结束位置放到文本域文本末尾\n                tf.setText(\"\");\t// 清空文本框\n            }\n        });\n    }\n\n    public static void main(String[] args) {\n        MyTCPClient client = new MyTCPClient(\"客户端系统\");\t// 实例化客户端\n        client.setBounds(600, 300, 400, 400);\n        client.setVisible(true);\n        client.connect();\t// 客户端连接\n    }\n\n    private void connect() {\t// 客户端连接方法\n        ta.append(\"尝试连接中...\\n\");\n        try {\n            socket = new Socket(\"127.0.0.1\", 8998);\t// 使用IP和端口实例化“插头”套接字，并连接到“插座”\n            writer = new PrintWriter(socket.getOutputStream(), true);\t// 将“插头”套接器的输出流放到过滤器中，true表示自动行刷新\n            ta.append(\"完成连接！\\n\");\n        } catch (IOException e) {\n            ta.append(\"连接失败！请检查服务器端\\n\");\n        }\n    }\n}\n```\n\n说明：\n\n1. 服务端将获取客户端的方法放在无限循环中，以便无限接收客户端的信息。\n2. 根据屏幕提示的信息，确定客户端是何时连接上服务端的。\n\n先启动`MyTCPServer.java`，再启动`MyTCPClient.java`，在窗体输入文字，观察到窗体变化与`MyTCPServer.java`输出：\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/007.png)\n\n```out\n服务器套接字创建成功！\n等待客户端连接...\n客户端连接成功！\n客户端：你好！\n客户端：我是客户端\n```\n\n### 2.3 简单的文件传输程序\n\n服务端（`FileReceiver.java`）\n\n```java\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class FileReceiver {\n    public static void main(String[] args) throws IOException {\n        ServerSocket server = new ServerSocket(9000);\t// 端口9000\n        Socket socket = server.accept();\t// 监听客户端连接\n        InputStream is = socket.getInputStream();\t// 获得套接字输入流\n        FileOutputStream fos = new FileOutputStream(\"receive.png\");\t// 实例化文件输出流\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = is.read(buffer)) != -1) {\t// 读取套接字输入流\n            fos.write(buffer, 0, len);\t// 写入到文件输出流\n        }\n\n        BufferedWriter endBw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\t// 获得套接字输出流，并放到缓存字符写入器中\n        endBw.write(\"接收完毕\");\t// 写入字符串到输出流\n\n        endBw.close();\t// 关闭流与套接字\n        fos.close();\n        is.close();\n        socket.close();\n        server.close();\n    }\n}\n```\n\n客户端（`FileSender.png`）\n\n```java\nimport java.io.*;\nimport java.net.Socket;\n\npublic class FileSender {\n    public static void main(String[] args) throws IOException {\n        Socket socket = new Socket(\"127.0.0.1\", 9000);\t// 连接端口\n        OutputStream os = socket.getOutputStream();\t// 获得套接字输出流\n        FileInputStream fis = new FileInputStream(\"send.png\");\t// 实例化文件输入流\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = fis.read(buffer)) != -1) {\t// 读取文件输入流\n            os.write(buffer, 0, len);\t// 写入到套接字输出流\n        }\n\n        socket.shutdownOutput();\t// 单向关闭客户端的套接字输出流\n\n        BufferedReader endBr = new BufferedReader(new InputStreamReader(socket.getInputStream()));\t// 获得套接字输入流，并放到缓存字符读取器中\n        System.out.println(endBr.readLine());\t// 打印读取器读取到的字符串\n\n        endBr.close();\t// 关闭流与套接字\n        fis.close();\n        os.close();\n        socket.close();\n    }\n}\n```\n\n说明：\n\n1. 示例中涉及到的输入输出流分别有（以输入流为例）：`InputStream`（接收套接字流）、`FileInputStream`（用于文件与系统间的传输流）、`InputStreamReader`（管道）、`BufferedReader`（用于处理服务端的回传字符）。\n2. 注意客户端第15行的`socket.shutdownOutput();`，若不写这一行，即使客户端已写入完毕（并开始进行输入流的等待），服务端仍在继续读取（因为服务端第13行的`is.read(buffer)`，读取的字节数已为0，因此循环无法退出，处于读取0字节写入0字节的状态），因此要单向关闭客户端的套接字输出流，保证服务端结束读取。\n\n先启动`FileReceiver.java`，再启动`FileSender.java`，观察到文件`receive.png`生成，以及`FileSender.java`输出：\n\n```java\n接收完毕\n```\n\n## 3 UDP网络程序示例\n\n### 3.1 简单的发送器、接收器程序\n\n发送器（`MyUDPSender.java`）\n\n```java\nimport java.net.*;\n\npublic class MyUDPSender {\n    public static void main(String[] args) throws Exception {\n        DatagramSocket socket = new DatagramSocket();\t// 创建数据报套接字\n        String msg = \"你好！\";\n        byte[] buffer = msg.getBytes();\n        InetAddress localhost = InetAddress.getByName(\"localhost\");\n        int port = 9090;\n        DatagramPacket packet = new DatagramPacket(buffer, 0, buffer.length, localhost, port);\t// 创建要发送的数据包，并绑定内容和发送地址\n        socket.send(packet);\t// 发送数据包\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n接收器（`MyUDPReceiver.java`）\n\n```java\nimport java.net.*;\n\npublic class MyUDPReceiver {\n    public static void main(String[] args) throws Exception {\n        DatagramSocket socket = new DatagramSocket(9090);\t// 创建数据报套接字，绑定到9090端口\n        byte[] buffer = new byte[1024];\t// 创建缓存数组\n        DatagramPacket packet = new DatagramPacket(buffer, 0, buffer.length);\t// 创建要接收的数据包载体\n        socket.receive(packet);\t// 接收数据包（程序阻塞）\n        System.out.println(packet.getAddress().getHostAddress());\t// 获取数据包的地址\n        System.out.println(new String(packet.getData(), 0, packet.getLength()));\t// 获取数据包的数据\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n说明：\n\n1. 发送器和接收器都有数据报套接字`DatagramSocket`和数据包`DatagramPacket`，但使用方式不同。\n   - 发送器的`DatagramSocket`不用绑定端口，因为它只用`send()`方法，无需绑定发送者的端口；接收器的`DatagramSocket`需要绑定端口，因为它用`receive()`方法需要明确自己的地址。\n   - 发送器的`DatagramPacket`需要绑定发送地址，因为它已有内容并打包好，需要向特定地址传递；接收器的`DatagramPacket`不用绑定地址，因为它是一个空的容器，只起接收载体作用。\n2. 接收器第10行，`packet.getLength()`不能用`packet.getData().length`代替，数据包大小与数据字节数组的大小是不同的。\n\n先启动`MyUDPReceiver.java`，观察到程序开始等待，再启动`MyUDPSender.java`，观察到`MyUDPReceiver.java`输出：\n\n```out\n127.0.0.1\n你好！\n```\n\n### 3.2 较复杂的聊天器程序（多线程）\n\n聊天发送端线程（`MyChatSender.java`）\n\n```java\nimport java.io.*;\nimport java.net.*;\n\npublic class MyChatSender implements Runnable {\n    DatagramSocket socket = null;\t// 数据报套接字\n    BufferedReader reader = null;\t// 缓存输入流\n    private final String toIP;\t// 发送的IP地址（理解为“写信时的对方地址”）\n    private final int toPort;\t// 发送的端口（理解为“写信时的对方门牌号”）\n\n    public MyChatSender(String toIP, int toPort) {\n        this.toIP = toIP;\n        this.toPort = toPort;\n\n        try {\n            socket = new DatagramSocket();\t// 创建发送端的套接字\n            reader = new BufferedReader(new InputStreamReader(System.in));\t// 缓存输入流放入系统输入\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                String data = reader.readLine();\t// 读取输入流的一行字符串\n                byte[] dataBytes = data.getBytes();\t// 字符串转换为字节数组\n                DatagramPacket packet = new DatagramPacket(dataBytes, 0, dataBytes.length, new InetSocketAddress(toIP, toPort));\t// 将字节数组打包，并绑定到对应IP和端口\n                socket.send(packet);\t// 发送数据包\n                if (\"bye\".equals(data)) {\t// 如果输入\"bye\"，退出发送循环\n                    break;\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        try {\n            reader.close();\t// 关闭流\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n聊天接收端线程（`MyChatReceiver.java`）\n\n```java\nimport java.io.*;\nimport java.net.*;\n\npublic class MyChatReceiver implements Runnable {\n    DatagramSocket socket = null;\t// 数据报套接字\n    private final String fromName;\t// 来源的名字（理解为“写信时的寄件人姓名”）\n\n    public MyChatReceiver(int port, String fromName) {\n        this.fromName = fromName;\n        try {\n            socket = new DatagramSocket(port);\t// 创建接收端的套接字，并绑定到一个接收端口\n        } catch (SocketException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                byte[] container = new byte[1024];\t// 字节数组容器\n                DatagramPacket packet = new DatagramPacket(container, 0, container.length);\t// 创建数据包容器\n                socket.receive(packet);\t// 阻塞式接收数据包\n                byte[] dataBytes = packet.getData();\t// 把数据包的缓存数据放到字节数组里\n                String data = new String(dataBytes, 0, packet.getLength());\t// 将缓存数据转换为字符串\n                System.out.println(fromName + \"：\" + data);\t// 输出\n                if (\"bye\".equals(data)) {// 如果收到\"bye\"，退出接收循环\n                    break;\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        socket.close();\t// 关闭套接字\n    }\n}\n```\n\n聊天者A（`ChatterA.java`）\n\n```java\npublic class ChatterA {\n    public static void main(String[] args) {\n        new Thread(new MyChatSender(\"localhost\", 9999)).start();\t// 启动A的发送端线程\n        new Thread(new MyChatReceiver(8888, \"B\")).start();\t// 启动A的接收端线程\n    }\n}\n```\n\n聊天者B（`ChatterB.java`）\n\n```java\npublic class ChatterB {\n    public static void main(String[] args) {\n        new Thread(new MyChatSender(\"localhost\", 8888)).start();\t// 启动B的发送端线程\n        new Thread(new MyChatReceiver(9999, \"A\")).start();\t// 启动B的接收端线程\n    }\n}\n```\n\n说明：每个聊天者有两个线程，以及两个所需端口。A向`localhost`的9999端口发信息，同时接收发送到8888端口名为B发来的信息；B向`localhost`的8888端口发信息，同时接收发送到9999端口名为A发来的信息。\n\n分别启动`ChatterA.java`和`ChatterB.java`，并输入文字，观察到两个程序分别输出：\n\n```out\n你好！\nB：你好啊！\n今天天气真不错。\nB：是啊，今天天气晴朗。\nbye\nB：bye\n```\n\n```out\nA：你好！\n你好啊！\nA：今天天气真不错。\n是啊，今天天气晴朗。\nA：bye\nbye\n```\n\n### 3.3 较复杂的广播、收音机程序\n\n广播（`MyBroadcast.java`）\n\n```java\nimport java.net.*;\n\npublic class MyBroadcast extends Thread {\t// 实现线程\n    String msg = \"欢迎收听广播节目。\";\t// 广播信息\n    int port = 9898;\t// 端口9898\n    InetAddress ipGroup;\t//IP组\n    MulticastSocket socket;\t// 多点广播套接字\n\n    MyBroadcast() throws Exception {\n        ipGroup = InetAddress.getByName(\"224.255.10.0\");\t// 指定地址\n        socket = new MulticastSocket(port);\t// 创建一个指定端口的套接字\n        socket.setTimeToLive(1);\t// 指定发送范围是本地网络\n        socket.joinGroup(ipGroup);\t// 加入广播组\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            byte[] data = msg.getBytes();\t// 字节数组\n            DatagramPacket packet = new DatagramPacket(data, data.length, ipGroup, port);\t//数据打包并绑定地址端口\n            System.out.println(new String(data));\t// 输出广播信息\n            try {\n                socket.send(packet);\t// 发送数据包\n                sleep(3000);\t// 休眠3秒\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        MyBroadcast broadcast = new MyBroadcast();\t// 创建广播\n        broadcast.start();\t// 启动广播\n    }\n}\n```\n\n收音机（`MyRadio.java`）\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.*;\nimport java.net.*;\n\npublic class MyRadio extends JFrame implements Runnable, ActionListener {\n    int port;\t// 端口\n    InetAddress ipGroup;\t// IP组\n    MulticastSocket socket;\t// 多点广播套接字\n    JButton start = new JButton(\"开始接收\");\t// 开始按钮\n    JButton stop = new JButton(\"停止接收\");\t// 停止按钮\n    JTextArea startArea = new JTextArea(10, 10);\t// 广播信息区域（显示目前接收到的一条信息）\n    JTextArea receivedArea = new JTextArea(10, 10);\t// 接收信息区域（显示历史接收到的所有信息）\n    Thread thread;\t// 线程\n    boolean isStopped = false;\t// 是否停止\n\n    public MyRadio() throws Exception {\n        super(\"数据报收音机\");\t// 标题\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        thread = new Thread(this);\t// 代理自己\n        start.addActionListener(this);\n        stop.addActionListener(this);\t// 按钮添加监听器\n        startArea.setForeground(Color.BLUE);\n        JPanel north = new JPanel();\t// 顶部面板\n        north.add(start);\n        north.add(stop);\n        add(north, BorderLayout.NORTH);\n        JPanel center = new JPanel(new GridLayout(1, 2));\t// 中部面板\n        center.add(startArea);\n        center.add(receivedArea);\n        add(center, BorderLayout.CENTER);\n        validate();\t// 刷新布局\n\n        port = 9898;\t// 端口9898\n        ipGroup = InetAddress.getByName(\"224.255.10.0\");\t// IP组指定地址\n        socket = new MulticastSocket(port);\t// 套接字绑定端口\n        socket.joinGroup(ipGroup);\t// 套接字加入广播组\n\n        setBounds(100, 50, 360, 380);\n        setVisible(true);\n    }\n\n    @Override\n    public void run() {\n        while (true) {\n            byte[] data = new byte[1024];\t// 字节数组\n            DatagramPacket packet = new DatagramPacket(data, data.length, ipGroup, port);\t// 数据包容器\n            try {\n                socket.receive(packet);\t// 接收数据包\n                String msg = new String(packet.getData(), 0, packet.getLength());\t// 缓存数据转换为字符串\n                startArea.setText(\"正在接收的内容：\\n\" + msg);\t// 打印在广播区域上\n                receivedArea.append(msg + \"\\n\");\t// 添加在接收区域上\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            if (isStopped) {\t// 如果停止接收，退出循环\n                break;\n            }\n        }\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\t// 监听\n        if (e.getSource() == start) {\n            start.setBackground(Color.RED);\n            stop.setBackground(Color.YELLOW);\n            if (!(thread.isAlive())) {\t// 如果线程不处于新建状态\n                thread = new Thread(this);\t// 新建线程\n            }\n            thread.start();\t// 启动线程\n            isStopped = false;\n        }\n        if (e.getSource() == stop) {\n            start.setBackground(Color.YELLOW);\n            stop.setBackground(Color.RED);\n            isStopped = true;\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        MyRadio radio = new MyRadio();\t// 创建广播\n        radio.setSize(460, 200);\n    }\n}\n```\n\n说明：\n\n1. 发出广播和接收广播的地址必须位于同一个组内，地址范围是224.0.0.0~224.255.255.255，该地址不代表某个特定主机的位置。\n2. 加入同一个组的主机可以在某个端口广播信息，也可以在某个端口接收信息。\n\n启动`MyBroadcast.java`，观察到其开始输出；启动`MyRadio.java`并点击开始接收按钮，观察到其开始接收广播信息：\n\n```java\n欢迎收听广播节目。\n欢迎收听广播节目。\n欢迎收听广播节目。\n```\n\n![](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/008.png)\n\n## 4 利用URL下载网络资源示例\n\n```java\nimport javax.net.ssl.HttpsURLConnection;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.net.URL;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        URL url = new URL(\"https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png\");\t// 新建URL，并初始化为网络资源地址\n        HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();\t// URL开启连接\n        InputStream is = connection.getInputStream();\t// 获取连接输入流\n        FileOutputStream fos = new FileOutputStream(\"logo.png\");\t// 新建文件输出流\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = is.read(buffer)) != -1) {\t// 读入连接输入流\n            fos.write(buffer, 0, len);\t// 写入到文件输入流\n        }\n        fos.close();\t// 关闭流与连接\n        is.close();\n        connection.disconnect();\n    }\n}\n```\n\n观察到文件`logo.png`的生成。\n\n## 5 I/O补充\n\n**使用输入流、输出流时以下这段代码的原理：**\n\n```java\nFileInputStream fis = new FileInputStream(\"xxx\");\t// 文件输入流\nOutputStream os = new OutputStream();\t// 输出流\nbyte[] buffer = new byte[1024];\nint len;\nwhile ((len = fis.read(buffer)) != -1) {\n    os.write(buffer, 0, len);\n}\n```\n\n- `buffer`是一个字节数组，长度为1024，类似于一个缓冲区。\n- `fis.read(buffer)`，这一步从输入流读取`buffer`大小的字节（即1024），把这些字节赋给`buffer`，并返回读取的字节数。\n- 把读取的字节数赋值给`len`，然后对`len`进行判断。\n- 把`buffer`数组的0到`len`位置的字节写入输出流。\n- 每次循环，`buffer`就被重新赋值一次，因此文件大小与`buffer`的长度1024是没有关系的。\n- 读取到输入流末尾时，`read()`方法返回-1，循环结束。\n- 注意：缓冲区的大小不应太小，否则会涉及到编码问题，部分字节被强行拆分到两个缓冲区时可能会出现乱码。\n\n","slug":"notes-and-examples-of-java-network-communication-programming","published":1,"updated":"2021-09-13T07:31:52.449Z","layout":"post","photos":[],"link":"","_id":"cl06nlvui0034f4vi8ylxdn3v","content":"<p>本文整理了学习Java网络通信编程的笔记，并分析了若干程序实例，以巩固学习成果。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-网络通信编程笔记\"><a href=\"#1-网络通信编程笔记\" class=\"headerlink\" title=\"1 网络通信编程笔记\"></a>1 网络通信编程笔记</h2><h3 id=\"1-1-网络程序设计基础\"><a href=\"#1-1-网络程序设计基础\" class=\"headerlink\" title=\"1.1 网络程序设计基础\"></a>1.1 网络程序设计基础</h3><h4 id=\"1-1-1-基本概念\"><a href=\"#1-1-1-基本概念\" class=\"headerlink\" title=\"1.1.1 基本概念\"></a>1.1.1 基本概念</h4><ul>\n<li>局域网（LAN）、广域网（WAN）</li>\n<li>IP协议，IP地址（IPv4，4个字节表示）</li>\n<li>TCP协议（传输控制协议）：类似拨打电话，固接连线，可靠性高，有顺序</li>\n<li>UDP协议（数据用户报协议）：类似发送信件，无连接通信，可靠性低，不保证顺序</li>\n<li>端口（port）：假想的连接装置，计算机与网络的物理连接，为整数</li>\n<li>套接字（Socket）：假想的连接装置，连接程序与端口</li>\n</ul>\n<h4 id=\"1-1-2-网络通信的要素\"><a href=\"#1-1-2-网络通信的要素\" class=\"headerlink\" title=\"1.1.2 网络通信的要素\"></a>1.1.2 网络通信的要素</h4><ul>\n<li><strong>通信双方地址：</strong>IP、端口号</li>\n<li><strong>网络通信协议：</strong>TCP/IP协议</li>\n</ul>\n<h3 id=\"1-2-TCP程序设计基础\"><a href=\"#1-2-TCP程序设计基础\" class=\"headerlink\" title=\"1.2 TCP程序设计基础\"></a>1.2 TCP程序设计基础</h3><h4 id=\"1-2-1-InetAddress类\"><a href=\"#1-2-1-InetAddress类\" class=\"headerlink\" title=\"1.2.1 InetAddress类\"></a>1.2.1 <code>InetAddress</code>类</h4><p>与IP地址相关的类，注意该类会抛<code>UnknownHostException</code>异常</p>\n<ul>\n<li>IP地址：<ul>\n<li>本机<code>localhost</code>（127.0.0.1）</li>\n<li>IPv4（4个字节组成，42亿），IPv6（128位，8个无符16进制整数）</li>\n<li>公网（互联网），私网（局域网），ABCD类地址</li>\n</ul>\n</li>\n<li>无构造器，不可被<code>new</code>，只可被自己的方法返回</li>\n<li>常用方法：<ul>\n<li><code>getByName(String host)</code> 获取与Host对应的<code>InetAddress</code>对象</li>\n<li><code>getHostAddress()</code> 获取对象所包含的IP地址，返回String</li>\n<li><code>getHostName()</code> 获取IP主机名，返回String</li>\n<li><code>getLocalHost()</code> 获取本地主机的<code>InetAddress</code>对象</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-2-ServerSocket类\"><a href=\"#1-2-2-ServerSocket类\" class=\"headerlink\" title=\"1.2.2 ServerSocket类\"></a>1.2.2 <code>ServerSocket</code>类</h4><p>服务器套接字，等待网络请求，注意该类会抛<code>IOException</code>异常</p>\n<ul>\n<li>端口：<ul>\n<li>0~65535</li>\n<li>不同的进程用不同的端口号，类似于门牌</li>\n<li>端口分类：<ul>\n<li>公有端口0~1023（<code>HTTP</code>80、<code>HTTPS</code>443、<code>FTP</code>21、<code>Telent</code>23）</li>\n<li>程序注册端口1024~49151（<code>Tomcat</code>8080、<code>MySQL</code>3306、<code>Oracle</code>1521）</li>\n<li>动态（私有）端口49152~65535</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>InetSocketAddress</code>类：与<code>InetAddress</code>类似，加入了端口，可以<code>new</code>，传入String地址和int端口，有<code>getPort()</code>等方法</li>\n<li><code>ServerSocket</code>用于等待网络请求，构造方法：<ul>\n<li><code>ServerSocket()</code> 非绑定服务器套接字</li>\n<li><code>ServerSocket(int port)</code> 绑定特定端口</li>\n<li><code>ServerSocket(int port, int backlog)</code> 指定本机端口、指定的<code>backlog</code></li>\n<li><code>ServerSocket(int port, int backlog, InetAddress bindAddress)</code> 指定端口、侦听<code>backlog</code>和绑定到的本地IP地址</li>\n</ul>\n</li>\n<li><code>ServerSocket</code>的常用方法：<ul>\n<li><code>accept()</code> 等待客户机连接，若连接返回一个Socket套接字</li>\n<li><code>isBound()</code> 判断绑定状态</li>\n<li><code>getInetAddress()</code> 返回本地地址的<code>InetAddress</code></li>\n<li><code>isClosed()</code> 返回关闭状态</li>\n<li><code>close()</code> 关闭服务器套接字</li>\n<li><code>bind(SocketAddress endpoint)</code> 绑定到特定地址（IP和端口）</li>\n<li><code>getLocalPort()</code> 获取等待端口</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-3-TCP网络程序\"><a href=\"#1-2-3-TCP网络程序\" class=\"headerlink\" title=\"1.2.3 TCP网络程序\"></a>1.2.3 TCP网络程序</h4><ul>\n<li><p>通信协议：速率、传输码率、代码结构、传输控制等</p>\n<ul>\n<li>TCP/IP协议：协议簇，最出名的是TCP协议和IP协议</li>\n<li>TCP：连接、稳定，三次握手四次挥手，客户端服务端架构，传输完成释放连接，效率低</li>\n<li>UDP：不连接、不稳定，客户端服务端无明确界限，效率高</li>\n</ul>\n</li>\n<li><p>参见第2章的实例</p>\n</li>\n</ul>\n<h4 id=\"1-2-4-Tomcat基础\"><a href=\"#1-2-4-Tomcat基础\" class=\"headerlink\" title=\"1.2.4 Tomcat基础\"></a>1.2.4 Tomcat基础</h4><ul>\n<li>Tomcat是一个服务端，客户端通过浏览器进入</li>\n<li>一般使用8080端口</li>\n</ul>\n<h3 id=\"1-4-UDP程序设计基础\"><a href=\"#1-4-UDP程序设计基础\" class=\"headerlink\" title=\"1.4 UDP程序设计基础\"></a>1.4 UDP程序设计基础</h3><h4 id=\"1-4-1-UDP通信\"><a href=\"#1-4-1-UDP通信\" class=\"headerlink\" title=\"1.4.1 UDP通信\"></a>1.4.1 UDP通信</h4><ul>\n<li>基本模式：<ul>\n<li>数据打包（数据包），发往目的地</li>\n<li>接收数据包并查看</li>\n</ul>\n</li>\n<li>发送数据包步骤：<ul>\n<li>创建数据报套接字（<code>DatagramSocket()</code>）</li>\n<li>创建发送的数据包（<code>DatagramPacket(byte[] buf, int offset, int length, InetAddress ip, int port)</code>）</li>\n<li>发送数据包（<code>DatagramSocket().send()</code>）</li>\n</ul>\n</li>\n<li>接收数据包步骤：<ul>\n<li>创建数据报套接字并绑定到端口（<code>DatagramSocket(int port)</code>）</li>\n<li>创建字节数组接收数据包（<code>DatagramPacket(byte[] buf, int length)</code>）</li>\n<li>接收UDP包（<code>DatagramSocket().receive()</code>）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-2-DatagramPacket类\"><a href=\"#1-4-2-DatagramPacket类\" class=\"headerlink\" title=\"1.4.2 DatagramPacket类\"></a>1.4.2 <code>DatagramPacket</code>类</h4><ul>\n<li>表示数据包</li>\n<li>构造方法：<ul>\n<li><code>DatagramPacket(byte[] buf, int length)</code> 指定数据包的内存空间和大小</li>\n<li><code>DatagramPacket(byte[] buf, int length, InetAddress ip, int port)</code> 指定数据包的目标地址和端口</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-3-DatagramSocket类\"><a href=\"#1-4-3-DatagramSocket类\" class=\"headerlink\" title=\"1.4.3 DatagramSocket类\"></a>1.4.3 <code>DatagramSocket</code>类</h4><ul>\n<li>表示发送和接收数据包的数据报套接字</li>\n<li>构造方法：<ul>\n<li><code>DatagramSocket()</code> 绑定到本地主机任何可用端口</li>\n<li><code>DatagramSocket(int port)</code> 绑定到本地主机指定端口</li>\n<li><code>DatagramSocket(int port, InetAddress ip)</code> 绑定到指定的本地地址</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-4-UDP网络程序\"><a href=\"#1-4-4-UDP网络程序\" class=\"headerlink\" title=\"1.4.4 UDP网络程序\"></a>1.4.4 UDP网络程序</h4><ul>\n<li><p>服务端、客户端没有明确的界限</p>\n</li>\n<li><p>参见第3章的实例</p>\n</li>\n</ul>\n<h3 id=\"1-5-URL类\"><a href=\"#1-5-URL类\" class=\"headerlink\" title=\"1.5 URL类\"></a>1.5 URL类</h3><p>统一资源定位器，通过地址定位互联网上的资源</p>\n<ul>\n<li><p>URL的形式：<code>协议 : // ip地址 : 端口 / 项目名 / 资源</code></p>\n</li>\n<li><p>构造方法：传入字符串，<code>URL(String url)</code></p>\n</li>\n<li><p>常用方法：</p>\n<ul>\n<li><code>getProtocol()</code> 获取协议名</li>\n<li><code>getHost()</code> 获取主机IP</li>\n<li><code>getPort()</code> 获取端口</li>\n<li><code>getPath()</code> 获取路径</li>\n<li><code>getFile()</code> 获取完整路径</li>\n<li><code>getQuery()</code> 获取查询名</li>\n</ul>\n</li>\n<li><p>参见第4章的实例</p>\n</li>\n</ul>\n<h2 id=\"2-TCP网络程序示例\"><a href=\"#2-TCP网络程序示例\" class=\"headerlink\" title=\"2 TCP网络程序示例\"></a>2 TCP网络程序示例</h2><h3 id=\"2-1-简单的接收器（服务端）、发送器（客户端）程序\"><a href=\"#2-1-简单的接收器（服务端）、发送器（客户端）程序\" class=\"headerlink\" title=\"2.1 简单的接收器（服务端）、发送器（客户端）程序\"></a>2.1 简单的接收器（服务端）、发送器（客户端）程序</h3><p>接收器（<code>MyReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyReceiver</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ServerSocket serverSocket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        InputStream is = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ByteArrayOutputStream baos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            serverSocket = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9005</span>);\t<span class=\"comment\">// 实例化一个服务器套接字，端口9005</span></span><br><span class=\"line\">            socket = serverSocket.accept();\t<span class=\"comment\">// 使用套接字对象接收客户端连接该端口，连接后返回套接字，可以理解为“插座”</span></span><br><span class=\"line\">            is = socket.getInputStream();\t<span class=\"comment\">// 获取“插座”套接字的输入流</span></span><br><span class=\"line\">            baos = <span class=\"keyword\">new</span> ByteArrayOutputStream();\t<span class=\"comment\">// 实例化字节数组输出流</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 字节数组</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> len;\t<span class=\"comment\">//长度</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读取输入流到字节数组，若长度有效</span></span><br><span class=\"line\">                baos.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 则将字节数组写入到字节数组输出流中</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(baos);\t<span class=\"comment\">// 打印字节数组输出流</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;\t<span class=\"comment\">// 以下关闭流和套接字，注意顺序先打开的后关闭</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (baos != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    baos.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (is != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    is.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (socket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (serverSocket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    serverSocket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发送器（<code>MyTransmitter.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTransmitter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        OutputStream os = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InetAddress serverIP = InetAddress.getByName(<span class=\"string\">&quot;127.0.0.1&quot;</span>);\t<span class=\"comment\">// 获取本地主机的IP对象</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> port = <span class=\"number\">9005</span>;\t<span class=\"comment\">// 端口9005</span></span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> Socket(serverIP, port);\t<span class=\"comment\">// 使用IP和端口实例化套接字，可以理解为“插头”，并连接到“插座”</span></span><br><span class=\"line\">            os = socket.getOutputStream();\t<span class=\"comment\">// 获取“插头”套接字的输出流</span></span><br><span class=\"line\">            os.write(<span class=\"string\">&quot;你好！&quot;</span>.getBytes());\t<span class=\"comment\">// 输出流写入字符串转换的字节数组</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;\t<span class=\"comment\">// 以下关闭流和套接字</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (os != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    os.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (socket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>服务端和客户端都需要有套接字，分别是<code>ServerSocket</code>和<code>Socket</code>，并且绑定到统一端口。服务端还有一个<code>Socket</code>，是连接端口的返回结果。</li>\n<li>注意输入流和输出流的使用，客户端使用<strong>输出流</strong>，通过套接字输出；服务端使用<strong>输入流</strong>，通过套接字输入，而这股输入流需要输出的话，还需要一个输出流。</li>\n</ol>\n<p>先启动<code>MyReceiver.java</code>，再启动<code>MyTransmitter.java</code>，观察到<code>MyReceiver.java</code>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你好！</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-较复杂的服务端、客户端程序\"><a href=\"#2-2-较复杂的服务端、客户端程序\" class=\"headerlink\" title=\"2.2 较复杂的服务端、客户端程序\"></a>2.2 较复杂的服务端、客户端程序</h3><p>服务端（<code>MyTCPServer.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTCPServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ServerSocket server;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket socket;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BufferedReader reader;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyTCPServer tcp = <span class=\"keyword\">new</span> MyTCPServer();\t<span class=\"comment\">// 实例化服务端</span></span><br><span class=\"line\">        tcp.getServer();\t<span class=\"comment\">// 服务端启动服务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getServer</span><span class=\"params\">()</span> </span>&#123;\t<span class=\"comment\">// 服务端启用服务方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8998</span>);\t<span class=\"comment\">// 实例化一个服务器套接字，端口8998</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;服务器套接字创建成功！&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;等待客户端连接...&quot;</span>);</span><br><span class=\"line\">                socket = server.accept();\t<span class=\"comment\">// 使用套接字对象接收客户端连接该端口，连接后返回“插座”套接字</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;客户端连接成功！&quot;</span>);</span><br><span class=\"line\">                reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));\t<span class=\"comment\">// 将“插座”套接字的输入流放到缓存读取器中</span></span><br><span class=\"line\">                getClientMessage();\t<span class=\"comment\">// 获取客户端信息</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">getClientMessage</span><span class=\"params\">()</span> </span>&#123;\t<span class=\"comment\">// 获取客户端信息方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;客户端：&quot;</span> + reader.readLine());\t<span class=\"comment\">// 将缓存读取器的读取内容输出</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (reader != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                reader.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (socket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                socket.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (server != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                server.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>客户端（<code>MyTCPClient.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.border.BevelBorder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTCPClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> </span>&#123;</span><br><span class=\"line\">    Container c;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> JTextArea ta = <span class=\"keyword\">new</span> JTextArea();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> JTextField tf = <span class=\"keyword\">new</span> JTextField();</span><br><span class=\"line\">    Socket socket;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> PrintWriter writer;\t<span class=\"comment\">// 这是一个字符输出流过滤器，可以对字符流进行处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyTCPClient</span><span class=\"params\">(String title)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(title);\t<span class=\"comment\">// 标题</span></span><br><span class=\"line\">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class=\"line\">        c = getContentPane();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> JScrollPane sp = <span class=\"keyword\">new</span> JScrollPane();\t<span class=\"comment\">// 滚动面板</span></span><br><span class=\"line\">        sp.setBorder(<span class=\"keyword\">new</span> BevelBorder(BevelBorder.RAISED));\t<span class=\"comment\">// 设置滚动面板的边框为斜角边框，且为凸起斜面</span></span><br><span class=\"line\">        c.add(sp, BorderLayout.CENTER);\t<span class=\"comment\">// 把滚动面板放到窗体中间</span></span><br><span class=\"line\">        sp.setViewportView(ta);\t<span class=\"comment\">// 创建视口并设置视图为文本域（即把文本域放到滚动面板中）</span></span><br><span class=\"line\">        ta.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.PLAIN, <span class=\"number\">16</span>));</span><br><span class=\"line\">        ta.setEditable(<span class=\"keyword\">false</span>);\t<span class=\"comment\">// 文本域不可编辑</span></span><br><span class=\"line\">        c.add(tf, BorderLayout.SOUTH);\t<span class=\"comment\">// 把文本框放到窗体底部</span></span><br><span class=\"line\">        tf.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.PLAIN, <span class=\"number\">16</span>));</span><br><span class=\"line\">        tf.addActionListener(<span class=\"keyword\">new</span> ActionListener() &#123;\t<span class=\"comment\">// 监听文本框回车事件</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">                writer.println(tf.getText());\t<span class=\"comment\">// 将文本框的信息写入流，这股流会通过端口传输到服务端</span></span><br><span class=\"line\">                ta.append(tf.getText() + <span class=\"string\">&#x27;\\n&#x27;</span>);\t<span class=\"comment\">// 在文本域中，把文本框写入的文本加进去</span></span><br><span class=\"line\">                ta.setSelectionEnd(ta.getText().length());\t<span class=\"comment\">// 把文本域选择的结束位置放到文本域文本末尾</span></span><br><span class=\"line\">                tf.setText(<span class=\"string\">&quot;&quot;</span>);\t<span class=\"comment\">// 清空文本框</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyTCPClient client = <span class=\"keyword\">new</span> MyTCPClient(<span class=\"string\">&quot;客户端系统&quot;</span>);\t<span class=\"comment\">// 实例化客户端</span></span><br><span class=\"line\">        client.setBounds(<span class=\"number\">600</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        client.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        client.connect();\t<span class=\"comment\">// 客户端连接</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">connect</span><span class=\"params\">()</span> </span>&#123;\t<span class=\"comment\">// 客户端连接方法</span></span><br><span class=\"line\">        ta.append(<span class=\"string\">&quot;尝试连接中...\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">8998</span>);\t<span class=\"comment\">// 使用IP和端口实例化“插头”套接字，并连接到“插座”</span></span><br><span class=\"line\">            writer = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream(), <span class=\"keyword\">true</span>);\t<span class=\"comment\">// 将“插头”套接器的输出流放到过滤器中，true表示自动行刷新</span></span><br><span class=\"line\">            ta.append(<span class=\"string\">&quot;完成连接！\\n&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            ta.append(<span class=\"string\">&quot;连接失败！请检查服务器端\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>服务端将获取客户端的方法放在无限循环中，以便无限接收客户端的信息。</li>\n<li>根据屏幕提示的信息，确定客户端是何时连接上服务端的。</li>\n</ol>\n<p>先启动<code>MyTCPServer.java</code>，再启动<code>MyTCPClient.java</code>，在窗体输入文字，观察到窗体变化与<code>MyTCPServer.java</code>输出：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/007.png\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">服务器套接字创建成功！</span><br><span class=\"line\">等待客户端连接...</span><br><span class=\"line\">客户端连接成功！</span><br><span class=\"line\">客户端：你好！</span><br><span class=\"line\">客户端：我是客户端</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-简单的文件传输程序\"><a href=\"#2-3-简单的文件传输程序\" class=\"headerlink\" title=\"2.3 简单的文件传输程序\"></a>2.3 简单的文件传输程序</h3><p>服务端（<code>FileReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileReceiver</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9000</span>);\t<span class=\"comment\">// 端口9000</span></span><br><span class=\"line\">        Socket socket = server.accept();\t<span class=\"comment\">// 监听客户端连接</span></span><br><span class=\"line\">        InputStream is = socket.getInputStream();\t<span class=\"comment\">// 获得套接字输入流</span></span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;receive.png&quot;</span>);\t<span class=\"comment\">// 实例化文件输出流</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读取套接字输入流</span></span><br><span class=\"line\">            fos.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 写入到文件输出流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedWriter endBw = <span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(socket.getOutputStream()));\t<span class=\"comment\">// 获得套接字输出流，并放到缓存字符写入器中</span></span><br><span class=\"line\">        endBw.write(<span class=\"string\">&quot;接收完毕&quot;</span>);\t<span class=\"comment\">// 写入字符串到输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\">        endBw.close();\t<span class=\"comment\">// 关闭流与套接字</span></span><br><span class=\"line\">        fos.close();</span><br><span class=\"line\">        is.close();</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">        server.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>客户端（<code>FileSender.png</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileSender</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        Socket socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">9000</span>);\t<span class=\"comment\">// 连接端口</span></span><br><span class=\"line\">        OutputStream os = socket.getOutputStream();\t<span class=\"comment\">// 获得套接字输出流</span></span><br><span class=\"line\">        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;send.png&quot;</span>);\t<span class=\"comment\">// 实例化文件输入流</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = fis.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读取文件输入流</span></span><br><span class=\"line\">            os.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 写入到套接字输出流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        socket.shutdownOutput();\t<span class=\"comment\">// 单向关闭客户端的套接字输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedReader endBr = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));\t<span class=\"comment\">// 获得套接字输入流，并放到缓存字符读取器中</span></span><br><span class=\"line\">        System.out.println(endBr.readLine());\t<span class=\"comment\">// 打印读取器读取到的字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">        endBr.close();\t<span class=\"comment\">// 关闭流与套接字</span></span><br><span class=\"line\">        fis.close();</span><br><span class=\"line\">        os.close();</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>示例中涉及到的输入输出流分别有（以输入流为例）：<code>InputStream</code>（接收套接字流）、<code>FileInputStream</code>（用于文件与系统间的传输流）、<code>InputStreamReader</code>（管道）、<code>BufferedReader</code>（用于处理服务端的回传字符）。</li>\n<li>注意客户端第15行的<code>socket.shutdownOutput();</code>，若不写这一行，即使客户端已写入完毕（并开始进行输入流的等待），服务端仍在继续读取（因为服务端第13行的<code>is.read(buffer)</code>，读取的字节数已为0，因此循环无法退出，处于读取0字节写入0字节的状态），因此要单向关闭客户端的套接字输出流，保证服务端结束读取。</li>\n</ol>\n<p>先启动<code>FileReceiver.java</code>，再启动<code>FileSender.java</code>，观察到文件<code>receive.png</code>生成，以及<code>FileSender.java</code>输出：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接收完毕</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-UDP网络程序示例\"><a href=\"#3-UDP网络程序示例\" class=\"headerlink\" title=\"3 UDP网络程序示例\"></a>3 UDP网络程序示例</h2><h3 id=\"3-1-简单的发送器、接收器程序\"><a href=\"#3-1-简单的发送器、接收器程序\" class=\"headerlink\" title=\"3.1 简单的发送器、接收器程序\"></a>3.1 简单的发送器、接收器程序</h3><p>发送器（<code>MyUDPSender.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyUDPSender</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        DatagramSocket socket = <span class=\"keyword\">new</span> DatagramSocket();\t<span class=\"comment\">// 创建数据报套接字</span></span><br><span class=\"line\">        String msg = <span class=\"string\">&quot;你好！&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = msg.getBytes();</span><br><span class=\"line\">        InetAddress localhost = InetAddress.getByName(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> port = <span class=\"number\">9090</span>;</span><br><span class=\"line\">        DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(buffer, <span class=\"number\">0</span>, buffer.length, localhost, port);\t<span class=\"comment\">// 创建要发送的数据包，并绑定内容和发送地址</span></span><br><span class=\"line\">        socket.send(packet);\t<span class=\"comment\">// 发送数据包</span></span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收器（<code>MyUDPReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyUDPReceiver</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        DatagramSocket socket = <span class=\"keyword\">new</span> DatagramSocket(<span class=\"number\">9090</span>);\t<span class=\"comment\">// 创建数据报套接字，绑定到9090端口</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 创建缓存数组</span></span><br><span class=\"line\">        DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(buffer, <span class=\"number\">0</span>, buffer.length);\t<span class=\"comment\">// 创建要接收的数据包载体</span></span><br><span class=\"line\">        socket.receive(packet);\t<span class=\"comment\">// 接收数据包（程序阻塞）</span></span><br><span class=\"line\">        System.out.println(packet.getAddress().getHostAddress());\t<span class=\"comment\">// 获取数据包的地址</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> String(packet.getData(), <span class=\"number\">0</span>, packet.getLength()));\t<span class=\"comment\">// 获取数据包的数据</span></span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>发送器和接收器都有数据报套接字<code>DatagramSocket</code>和数据包<code>DatagramPacket</code>，但使用方式不同。<ul>\n<li>发送器的<code>DatagramSocket</code>不用绑定端口，因为它只用<code>send()</code>方法，无需绑定发送者的端口；接收器的<code>DatagramSocket</code>需要绑定端口，因为它用<code>receive()</code>方法需要明确自己的地址。</li>\n<li>发送器的<code>DatagramPacket</code>需要绑定发送地址，因为它已有内容并打包好，需要向特定地址传递；接收器的<code>DatagramPacket</code>不用绑定地址，因为它是一个空的容器，只起接收载体作用。</li>\n</ul>\n</li>\n<li>接收器第10行，<code>packet.getLength()</code>不能用<code>packet.getData().length</code>代替，数据包大小与数据字节数组的大小是不同的。</li>\n</ol>\n<p>先启动<code>MyUDPReceiver.java</code>，观察到程序开始等待，再启动<code>MyUDPSender.java</code>，观察到<code>MyUDPReceiver.java</code>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1</span><br><span class=\"line\">你好！</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-较复杂的聊天器程序（多线程）\"><a href=\"#3-2-较复杂的聊天器程序（多线程）\" class=\"headerlink\" title=\"3.2 较复杂的聊天器程序（多线程）\"></a>3.2 较复杂的聊天器程序（多线程）</h3><p>聊天发送端线程（<code>MyChatSender.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyChatSender</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    DatagramSocket socket = <span class=\"keyword\">null</span>;\t<span class=\"comment\">// 数据报套接字</span></span><br><span class=\"line\">    BufferedReader reader = <span class=\"keyword\">null</span>;\t<span class=\"comment\">// 缓存输入流</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String toIP;\t<span class=\"comment\">// 发送的IP地址（理解为“写信时的对方地址”）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> toPort;\t<span class=\"comment\">// 发送的端口（理解为“写信时的对方门牌号”）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyChatSender</span><span class=\"params\">(String toIP, <span class=\"keyword\">int</span> toPort)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.toIP = toIP;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.toPort = toPort;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> DatagramSocket();\t<span class=\"comment\">// 创建发送端的套接字</span></span><br><span class=\"line\">            reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));\t<span class=\"comment\">// 缓存输入流放入系统输入</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                String data = reader.readLine();\t<span class=\"comment\">// 读取输入流的一行字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] dataBytes = data.getBytes();\t<span class=\"comment\">// 字符串转换为字节数组</span></span><br><span class=\"line\">                DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(dataBytes, <span class=\"number\">0</span>, dataBytes.length, <span class=\"keyword\">new</span> InetSocketAddress(toIP, toPort));\t<span class=\"comment\">// 将字节数组打包，并绑定到对应IP和端口</span></span><br><span class=\"line\">                socket.send(packet);\t<span class=\"comment\">// 发送数据包</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;bye&quot;</span>.equals(data)) &#123;\t<span class=\"comment\">// 如果输入&quot;bye&quot;，退出发送循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            reader.close();\t<span class=\"comment\">// 关闭流</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>聊天接收端线程（<code>MyChatReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyChatReceiver</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    DatagramSocket socket = <span class=\"keyword\">null</span>;\t<span class=\"comment\">// 数据报套接字</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String fromName;\t<span class=\"comment\">// 来源的名字（理解为“写信时的寄件人姓名”）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyChatReceiver</span><span class=\"params\">(<span class=\"keyword\">int</span> port, String fromName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.fromName = fromName;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> DatagramSocket(port);\t<span class=\"comment\">// 创建接收端的套接字，并绑定到一个接收端口</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SocketException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] container = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 字节数组容器</span></span><br><span class=\"line\">                DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(container, <span class=\"number\">0</span>, container.length);\t<span class=\"comment\">// 创建数据包容器</span></span><br><span class=\"line\">                socket.receive(packet);\t<span class=\"comment\">// 阻塞式接收数据包</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] dataBytes = packet.getData();\t<span class=\"comment\">// 把数据包的缓存数据放到字节数组里</span></span><br><span class=\"line\">                String data = <span class=\"keyword\">new</span> String(dataBytes, <span class=\"number\">0</span>, packet.getLength());\t<span class=\"comment\">// 将缓存数据转换为字符串</span></span><br><span class=\"line\">                System.out.println(fromName + <span class=\"string\">&quot;：&quot;</span> + data);\t<span class=\"comment\">// 输出</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;bye&quot;</span>.equals(data)) &#123;<span class=\"comment\">// 如果收到&quot;bye&quot;，退出接收循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>聊天者A（<code>ChatterA.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChatterA</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatSender(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">9999</span>)).start();\t<span class=\"comment\">// 启动A的发送端线程</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatReceiver(<span class=\"number\">8888</span>, <span class=\"string\">&quot;B&quot;</span>)).start();\t<span class=\"comment\">// 启动A的接收端线程</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>聊天者B（<code>ChatterB.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChatterB</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatSender(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">8888</span>)).start();\t<span class=\"comment\">// 启动B的发送端线程</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatReceiver(<span class=\"number\">9999</span>, <span class=\"string\">&quot;A&quot;</span>)).start();\t<span class=\"comment\">// 启动B的接收端线程</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：每个聊天者有两个线程，以及两个所需端口。A向<code>localhost</code>的9999端口发信息，同时接收发送到8888端口名为B发来的信息；B向<code>localhost</code>的8888端口发信息，同时接收发送到9999端口名为A发来的信息。</p>\n<p>分别启动<code>ChatterA.java</code>和<code>ChatterB.java</code>，并输入文字，观察到两个程序分别输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你好！</span><br><span class=\"line\">B：你好啊！</span><br><span class=\"line\">今天天气真不错。</span><br><span class=\"line\">B：是啊，今天天气晴朗。</span><br><span class=\"line\">bye</span><br><span class=\"line\">B：bye</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A：你好！</span><br><span class=\"line\">你好啊！</span><br><span class=\"line\">A：今天天气真不错。</span><br><span class=\"line\">是啊，今天天气晴朗。</span><br><span class=\"line\">A：bye</span><br><span class=\"line\">bye</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-较复杂的广播、收音机程序\"><a href=\"#3-3-较复杂的广播、收音机程序\" class=\"headerlink\" title=\"3.3 较复杂的广播、收音机程序\"></a>3.3 较复杂的广播、收音机程序</h3><p>广播（<code>MyBroadcast.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBroadcast</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;\t<span class=\"comment\">// 实现线程</span></span><br><span class=\"line\">    String msg = <span class=\"string\">&quot;欢迎收听广播节目。&quot;</span>;\t<span class=\"comment\">// 广播信息</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> port = <span class=\"number\">9898</span>;\t<span class=\"comment\">// 端口9898</span></span><br><span class=\"line\">    InetAddress ipGroup;\t<span class=\"comment\">//IP组</span></span><br><span class=\"line\">    MulticastSocket socket;\t<span class=\"comment\">// 多点广播套接字</span></span><br><span class=\"line\"></span><br><span class=\"line\">    MyBroadcast() <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        ipGroup = InetAddress.getByName(<span class=\"string\">&quot;224.255.10.0&quot;</span>);\t<span class=\"comment\">// 指定地址</span></span><br><span class=\"line\">        socket = <span class=\"keyword\">new</span> MulticastSocket(port);\t<span class=\"comment\">// 创建一个指定端口的套接字</span></span><br><span class=\"line\">        socket.setTimeToLive(<span class=\"number\">1</span>);\t<span class=\"comment\">// 指定发送范围是本地网络</span></span><br><span class=\"line\">        socket.joinGroup(ipGroup);\t<span class=\"comment\">// 加入广播组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] data = msg.getBytes();\t<span class=\"comment\">// 字节数组</span></span><br><span class=\"line\">            DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(data, data.length, ipGroup, port);\t<span class=\"comment\">//数据打包并绑定地址端口</span></span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(data));\t<span class=\"comment\">// 输出广播信息</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                socket.send(packet);\t<span class=\"comment\">// 发送数据包</span></span><br><span class=\"line\">                sleep(<span class=\"number\">3000</span>);\t<span class=\"comment\">// 休眠3秒</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        MyBroadcast broadcast = <span class=\"keyword\">new</span> MyBroadcast();\t<span class=\"comment\">// 创建广播</span></span><br><span class=\"line\">        broadcast.start();\t<span class=\"comment\">// 启动广播</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>收音机（<code>MyRadio.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRadio</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span>, <span class=\"title\">ActionListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> port;\t<span class=\"comment\">// 端口</span></span><br><span class=\"line\">    InetAddress ipGroup;\t<span class=\"comment\">// IP组</span></span><br><span class=\"line\">    MulticastSocket socket;\t<span class=\"comment\">// 多点广播套接字</span></span><br><span class=\"line\">    JButton start = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;开始接收&quot;</span>);\t<span class=\"comment\">// 开始按钮</span></span><br><span class=\"line\">    JButton stop = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;停止接收&quot;</span>);\t<span class=\"comment\">// 停止按钮</span></span><br><span class=\"line\">    JTextArea startArea = <span class=\"keyword\">new</span> JTextArea(<span class=\"number\">10</span>, <span class=\"number\">10</span>);\t<span class=\"comment\">// 广播信息区域（显示目前接收到的一条信息）</span></span><br><span class=\"line\">    JTextArea receivedArea = <span class=\"keyword\">new</span> JTextArea(<span class=\"number\">10</span>, <span class=\"number\">10</span>);\t<span class=\"comment\">// 接收信息区域（显示历史接收到的所有信息）</span></span><br><span class=\"line\">    Thread thread;\t<span class=\"comment\">// 线程</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> isStopped = <span class=\"keyword\">false</span>;\t<span class=\"comment\">// 是否停止</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyRadio</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"string\">&quot;数据报收音机&quot;</span>);\t<span class=\"comment\">// 标题</span></span><br><span class=\"line\">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class=\"line\">        thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 代理自己</span></span><br><span class=\"line\">        start.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        stop.addActionListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 按钮添加监听器</span></span><br><span class=\"line\">        startArea.setForeground(Color.BLUE);</span><br><span class=\"line\">        JPanel north = <span class=\"keyword\">new</span> JPanel();\t<span class=\"comment\">// 顶部面板</span></span><br><span class=\"line\">        north.add(start);</span><br><span class=\"line\">        north.add(stop);</span><br><span class=\"line\">        add(north, BorderLayout.NORTH);</span><br><span class=\"line\">        JPanel center = <span class=\"keyword\">new</span> JPanel(<span class=\"keyword\">new</span> GridLayout(<span class=\"number\">1</span>, <span class=\"number\">2</span>));\t<span class=\"comment\">// 中部面板</span></span><br><span class=\"line\">        center.add(startArea);</span><br><span class=\"line\">        center.add(receivedArea);</span><br><span class=\"line\">        add(center, BorderLayout.CENTER);</span><br><span class=\"line\">        validate();\t<span class=\"comment\">// 刷新布局</span></span><br><span class=\"line\"></span><br><span class=\"line\">        port = <span class=\"number\">9898</span>;\t<span class=\"comment\">// 端口9898</span></span><br><span class=\"line\">        ipGroup = InetAddress.getByName(<span class=\"string\">&quot;224.255.10.0&quot;</span>);\t<span class=\"comment\">// IP组指定地址</span></span><br><span class=\"line\">        socket = <span class=\"keyword\">new</span> MulticastSocket(port);\t<span class=\"comment\">// 套接字绑定端口</span></span><br><span class=\"line\">        socket.joinGroup(ipGroup);\t<span class=\"comment\">// 套接字加入广播组</span></span><br><span class=\"line\"></span><br><span class=\"line\">        setBounds(<span class=\"number\">100</span>, <span class=\"number\">50</span>, <span class=\"number\">360</span>, <span class=\"number\">380</span>);</span><br><span class=\"line\">        setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 字节数组</span></span><br><span class=\"line\">            DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(data, data.length, ipGroup, port);\t<span class=\"comment\">// 数据包容器</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                socket.receive(packet);\t<span class=\"comment\">// 接收数据包</span></span><br><span class=\"line\">                String msg = <span class=\"keyword\">new</span> String(packet.getData(), <span class=\"number\">0</span>, packet.getLength());\t<span class=\"comment\">// 缓存数据转换为字符串</span></span><br><span class=\"line\">                startArea.setText(<span class=\"string\">&quot;正在接收的内容：\\n&quot;</span> + msg);\t<span class=\"comment\">// 打印在广播区域上</span></span><br><span class=\"line\">                receivedArea.append(msg + <span class=\"string\">&quot;\\n&quot;</span>);\t<span class=\"comment\">// 添加在接收区域上</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isStopped) &#123;\t<span class=\"comment\">// 如果停止接收，退出循环</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;\t<span class=\"comment\">// 监听</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == start) &#123;</span><br><span class=\"line\">            start.setBackground(Color.RED);</span><br><span class=\"line\">            stop.setBackground(Color.YELLOW);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!(thread.isAlive())) &#123;\t<span class=\"comment\">// 如果线程不处于新建状态</span></span><br><span class=\"line\">                thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 新建线程</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            thread.start();\t<span class=\"comment\">// 启动线程</span></span><br><span class=\"line\">            isStopped = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == stop) &#123;</span><br><span class=\"line\">            start.setBackground(Color.YELLOW);</span><br><span class=\"line\">            stop.setBackground(Color.RED);</span><br><span class=\"line\">            isStopped = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        MyRadio radio = <span class=\"keyword\">new</span> MyRadio();\t<span class=\"comment\">// 创建广播</span></span><br><span class=\"line\">        radio.setSize(<span class=\"number\">460</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>发出广播和接收广播的地址必须位于同一个组内，地址范围是224.0.0.0~224.255.255.255，该地址不代表某个特定主机的位置。</li>\n<li>加入同一个组的主机可以在某个端口广播信息，也可以在某个端口接收信息。</li>\n</ol>\n<p>启动<code>MyBroadcast.java</code>，观察到其开始输出；启动<code>MyRadio.java</code>并点击开始接收按钮，观察到其开始接收广播信息：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">欢迎收听广播节目。</span><br><span class=\"line\">欢迎收听广播节目。</span><br><span class=\"line\">欢迎收听广播节目。</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/008.png\" alt=\"\"></p>\n<h2 id=\"4-利用URL下载网络资源示例\"><a href=\"#4-利用URL下载网络资源示例\" class=\"headerlink\" title=\"4 利用URL下载网络资源示例\"></a>4 利用URL下载网络资源示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.HttpsURLConnection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        URL url = <span class=\"keyword\">new</span> URL(<span class=\"string\">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span>);\t<span class=\"comment\">// 新建URL，并初始化为网络资源地址</span></span><br><span class=\"line\">        HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();\t<span class=\"comment\">// URL开启连接</span></span><br><span class=\"line\">        InputStream is = connection.getInputStream();\t<span class=\"comment\">// 获取连接输入流</span></span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;logo.png&quot;</span>);\t<span class=\"comment\">// 新建文件输出流</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读入连接输入流</span></span><br><span class=\"line\">            fos.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 写入到文件输入流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fos.close();\t<span class=\"comment\">// 关闭流与连接</span></span><br><span class=\"line\">        is.close();</span><br><span class=\"line\">        connection.disconnect();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>观察到文件<code>logo.png</code>的生成。</p>\n<h2 id=\"5-I-O补充\"><a href=\"#5-I-O补充\" class=\"headerlink\" title=\"5 I/O补充\"></a>5 I/O补充</h2><p><strong>使用输入流、输出流时以下这段代码的原理：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;xxx&quot;</span>);\t<span class=\"comment\">// 文件输入流</span></span><br><span class=\"line\">OutputStream os = <span class=\"keyword\">new</span> OutputStream();\t<span class=\"comment\">// 输出流</span></span><br><span class=\"line\"><span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> len;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len = fis.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    os.write(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>buffer</code>是一个字节数组，长度为1024，类似于一个缓冲区。</li>\n<li><code>fis.read(buffer)</code>，这一步从输入流读取<code>buffer</code>大小的字节（即1024），把这些字节赋给<code>buffer</code>，并返回读取的字节数。</li>\n<li>把读取的字节数赋值给<code>len</code>，然后对<code>len</code>进行判断。</li>\n<li>把<code>buffer</code>数组的0到<code>len</code>位置的字节写入输出流。</li>\n<li>每次循环，<code>buffer</code>就被重新赋值一次，因此文件大小与<code>buffer</code>的长度1024是没有关系的。</li>\n<li>读取到输入流末尾时，<code>read()</code>方法返回-1，循环结束。</li>\n<li>注意：缓冲区的大小不应太小，否则会涉及到编码问题，部分字节被强行拆分到两个缓冲区时可能会出现乱码。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>本文整理了学习Java网络通信编程的笔记，并分析了若干程序实例，以巩固学习成果。</p>","more":"<h2 id=\"1-网络通信编程笔记\"><a href=\"#1-网络通信编程笔记\" class=\"headerlink\" title=\"1 网络通信编程笔记\"></a>1 网络通信编程笔记</h2><h3 id=\"1-1-网络程序设计基础\"><a href=\"#1-1-网络程序设计基础\" class=\"headerlink\" title=\"1.1 网络程序设计基础\"></a>1.1 网络程序设计基础</h3><h4 id=\"1-1-1-基本概念\"><a href=\"#1-1-1-基本概念\" class=\"headerlink\" title=\"1.1.1 基本概念\"></a>1.1.1 基本概念</h4><ul>\n<li>局域网（LAN）、广域网（WAN）</li>\n<li>IP协议，IP地址（IPv4，4个字节表示）</li>\n<li>TCP协议（传输控制协议）：类似拨打电话，固接连线，可靠性高，有顺序</li>\n<li>UDP协议（数据用户报协议）：类似发送信件，无连接通信，可靠性低，不保证顺序</li>\n<li>端口（port）：假想的连接装置，计算机与网络的物理连接，为整数</li>\n<li>套接字（Socket）：假想的连接装置，连接程序与端口</li>\n</ul>\n<h4 id=\"1-1-2-网络通信的要素\"><a href=\"#1-1-2-网络通信的要素\" class=\"headerlink\" title=\"1.1.2 网络通信的要素\"></a>1.1.2 网络通信的要素</h4><ul>\n<li><strong>通信双方地址：</strong>IP、端口号</li>\n<li><strong>网络通信协议：</strong>TCP/IP协议</li>\n</ul>\n<h3 id=\"1-2-TCP程序设计基础\"><a href=\"#1-2-TCP程序设计基础\" class=\"headerlink\" title=\"1.2 TCP程序设计基础\"></a>1.2 TCP程序设计基础</h3><h4 id=\"1-2-1-InetAddress类\"><a href=\"#1-2-1-InetAddress类\" class=\"headerlink\" title=\"1.2.1 InetAddress类\"></a>1.2.1 <code>InetAddress</code>类</h4><p>与IP地址相关的类，注意该类会抛<code>UnknownHostException</code>异常</p>\n<ul>\n<li>IP地址：<ul>\n<li>本机<code>localhost</code>（127.0.0.1）</li>\n<li>IPv4（4个字节组成，42亿），IPv6（128位，8个无符16进制整数）</li>\n<li>公网（互联网），私网（局域网），ABCD类地址</li>\n</ul>\n</li>\n<li>无构造器，不可被<code>new</code>，只可被自己的方法返回</li>\n<li>常用方法：<ul>\n<li><code>getByName(String host)</code> 获取与Host对应的<code>InetAddress</code>对象</li>\n<li><code>getHostAddress()</code> 获取对象所包含的IP地址，返回String</li>\n<li><code>getHostName()</code> 获取IP主机名，返回String</li>\n<li><code>getLocalHost()</code> 获取本地主机的<code>InetAddress</code>对象</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-2-ServerSocket类\"><a href=\"#1-2-2-ServerSocket类\" class=\"headerlink\" title=\"1.2.2 ServerSocket类\"></a>1.2.2 <code>ServerSocket</code>类</h4><p>服务器套接字，等待网络请求，注意该类会抛<code>IOException</code>异常</p>\n<ul>\n<li>端口：<ul>\n<li>0~65535</li>\n<li>不同的进程用不同的端口号，类似于门牌</li>\n<li>端口分类：<ul>\n<li>公有端口0~1023（<code>HTTP</code>80、<code>HTTPS</code>443、<code>FTP</code>21、<code>Telent</code>23）</li>\n<li>程序注册端口1024~49151（<code>Tomcat</code>8080、<code>MySQL</code>3306、<code>Oracle</code>1521）</li>\n<li>动态（私有）端口49152~65535</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>InetSocketAddress</code>类：与<code>InetAddress</code>类似，加入了端口，可以<code>new</code>，传入String地址和int端口，有<code>getPort()</code>等方法</li>\n<li><code>ServerSocket</code>用于等待网络请求，构造方法：<ul>\n<li><code>ServerSocket()</code> 非绑定服务器套接字</li>\n<li><code>ServerSocket(int port)</code> 绑定特定端口</li>\n<li><code>ServerSocket(int port, int backlog)</code> 指定本机端口、指定的<code>backlog</code></li>\n<li><code>ServerSocket(int port, int backlog, InetAddress bindAddress)</code> 指定端口、侦听<code>backlog</code>和绑定到的本地IP地址</li>\n</ul>\n</li>\n<li><code>ServerSocket</code>的常用方法：<ul>\n<li><code>accept()</code> 等待客户机连接，若连接返回一个Socket套接字</li>\n<li><code>isBound()</code> 判断绑定状态</li>\n<li><code>getInetAddress()</code> 返回本地地址的<code>InetAddress</code></li>\n<li><code>isClosed()</code> 返回关闭状态</li>\n<li><code>close()</code> 关闭服务器套接字</li>\n<li><code>bind(SocketAddress endpoint)</code> 绑定到特定地址（IP和端口）</li>\n<li><code>getLocalPort()</code> 获取等待端口</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-3-TCP网络程序\"><a href=\"#1-2-3-TCP网络程序\" class=\"headerlink\" title=\"1.2.3 TCP网络程序\"></a>1.2.3 TCP网络程序</h4><ul>\n<li><p>通信协议：速率、传输码率、代码结构、传输控制等</p>\n<ul>\n<li>TCP/IP协议：协议簇，最出名的是TCP协议和IP协议</li>\n<li>TCP：连接、稳定，三次握手四次挥手，客户端服务端架构，传输完成释放连接，效率低</li>\n<li>UDP：不连接、不稳定，客户端服务端无明确界限，效率高</li>\n</ul>\n</li>\n<li><p>参见第2章的实例</p>\n</li>\n</ul>\n<h4 id=\"1-2-4-Tomcat基础\"><a href=\"#1-2-4-Tomcat基础\" class=\"headerlink\" title=\"1.2.4 Tomcat基础\"></a>1.2.4 Tomcat基础</h4><ul>\n<li>Tomcat是一个服务端，客户端通过浏览器进入</li>\n<li>一般使用8080端口</li>\n</ul>\n<h3 id=\"1-4-UDP程序设计基础\"><a href=\"#1-4-UDP程序设计基础\" class=\"headerlink\" title=\"1.4 UDP程序设计基础\"></a>1.4 UDP程序设计基础</h3><h4 id=\"1-4-1-UDP通信\"><a href=\"#1-4-1-UDP通信\" class=\"headerlink\" title=\"1.4.1 UDP通信\"></a>1.4.1 UDP通信</h4><ul>\n<li>基本模式：<ul>\n<li>数据打包（数据包），发往目的地</li>\n<li>接收数据包并查看</li>\n</ul>\n</li>\n<li>发送数据包步骤：<ul>\n<li>创建数据报套接字（<code>DatagramSocket()</code>）</li>\n<li>创建发送的数据包（<code>DatagramPacket(byte[] buf, int offset, int length, InetAddress ip, int port)</code>）</li>\n<li>发送数据包（<code>DatagramSocket().send()</code>）</li>\n</ul>\n</li>\n<li>接收数据包步骤：<ul>\n<li>创建数据报套接字并绑定到端口（<code>DatagramSocket(int port)</code>）</li>\n<li>创建字节数组接收数据包（<code>DatagramPacket(byte[] buf, int length)</code>）</li>\n<li>接收UDP包（<code>DatagramSocket().receive()</code>）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-2-DatagramPacket类\"><a href=\"#1-4-2-DatagramPacket类\" class=\"headerlink\" title=\"1.4.2 DatagramPacket类\"></a>1.4.2 <code>DatagramPacket</code>类</h4><ul>\n<li>表示数据包</li>\n<li>构造方法：<ul>\n<li><code>DatagramPacket(byte[] buf, int length)</code> 指定数据包的内存空间和大小</li>\n<li><code>DatagramPacket(byte[] buf, int length, InetAddress ip, int port)</code> 指定数据包的目标地址和端口</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-3-DatagramSocket类\"><a href=\"#1-4-3-DatagramSocket类\" class=\"headerlink\" title=\"1.4.3 DatagramSocket类\"></a>1.4.3 <code>DatagramSocket</code>类</h4><ul>\n<li>表示发送和接收数据包的数据报套接字</li>\n<li>构造方法：<ul>\n<li><code>DatagramSocket()</code> 绑定到本地主机任何可用端口</li>\n<li><code>DatagramSocket(int port)</code> 绑定到本地主机指定端口</li>\n<li><code>DatagramSocket(int port, InetAddress ip)</code> 绑定到指定的本地地址</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-4-4-UDP网络程序\"><a href=\"#1-4-4-UDP网络程序\" class=\"headerlink\" title=\"1.4.4 UDP网络程序\"></a>1.4.4 UDP网络程序</h4><ul>\n<li><p>服务端、客户端没有明确的界限</p>\n</li>\n<li><p>参见第3章的实例</p>\n</li>\n</ul>\n<h3 id=\"1-5-URL类\"><a href=\"#1-5-URL类\" class=\"headerlink\" title=\"1.5 URL类\"></a>1.5 URL类</h3><p>统一资源定位器，通过地址定位互联网上的资源</p>\n<ul>\n<li><p>URL的形式：<code>协议 : // ip地址 : 端口 / 项目名 / 资源</code></p>\n</li>\n<li><p>构造方法：传入字符串，<code>URL(String url)</code></p>\n</li>\n<li><p>常用方法：</p>\n<ul>\n<li><code>getProtocol()</code> 获取协议名</li>\n<li><code>getHost()</code> 获取主机IP</li>\n<li><code>getPort()</code> 获取端口</li>\n<li><code>getPath()</code> 获取路径</li>\n<li><code>getFile()</code> 获取完整路径</li>\n<li><code>getQuery()</code> 获取查询名</li>\n</ul>\n</li>\n<li><p>参见第4章的实例</p>\n</li>\n</ul>\n<h2 id=\"2-TCP网络程序示例\"><a href=\"#2-TCP网络程序示例\" class=\"headerlink\" title=\"2 TCP网络程序示例\"></a>2 TCP网络程序示例</h2><h3 id=\"2-1-简单的接收器（服务端）、发送器（客户端）程序\"><a href=\"#2-1-简单的接收器（服务端）、发送器（客户端）程序\" class=\"headerlink\" title=\"2.1 简单的接收器（服务端）、发送器（客户端）程序\"></a>2.1 简单的接收器（服务端）、发送器（客户端）程序</h3><p>接收器（<code>MyReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyReceiver</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ServerSocket serverSocket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        InputStream is = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ByteArrayOutputStream baos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            serverSocket = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9005</span>);\t<span class=\"comment\">// 实例化一个服务器套接字，端口9005</span></span><br><span class=\"line\">            socket = serverSocket.accept();\t<span class=\"comment\">// 使用套接字对象接收客户端连接该端口，连接后返回套接字，可以理解为“插座”</span></span><br><span class=\"line\">            is = socket.getInputStream();\t<span class=\"comment\">// 获取“插座”套接字的输入流</span></span><br><span class=\"line\">            baos = <span class=\"keyword\">new</span> ByteArrayOutputStream();\t<span class=\"comment\">// 实例化字节数组输出流</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 字节数组</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> len;\t<span class=\"comment\">//长度</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读取输入流到字节数组，若长度有效</span></span><br><span class=\"line\">                baos.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 则将字节数组写入到字节数组输出流中</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(baos);\t<span class=\"comment\">// 打印字节数组输出流</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;\t<span class=\"comment\">// 以下关闭流和套接字，注意顺序先打开的后关闭</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (baos != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    baos.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (is != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    is.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (socket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (serverSocket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    serverSocket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发送器（<code>MyTransmitter.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTransmitter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        OutputStream os = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            InetAddress serverIP = InetAddress.getByName(<span class=\"string\">&quot;127.0.0.1&quot;</span>);\t<span class=\"comment\">// 获取本地主机的IP对象</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> port = <span class=\"number\">9005</span>;\t<span class=\"comment\">// 端口9005</span></span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> Socket(serverIP, port);\t<span class=\"comment\">// 使用IP和端口实例化套接字，可以理解为“插头”，并连接到“插座”</span></span><br><span class=\"line\">            os = socket.getOutputStream();\t<span class=\"comment\">// 获取“插头”套接字的输出流</span></span><br><span class=\"line\">            os.write(<span class=\"string\">&quot;你好！&quot;</span>.getBytes());\t<span class=\"comment\">// 输出流写入字符串转换的字节数组</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;\t<span class=\"comment\">// 以下关闭流和套接字</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (os != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    os.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (socket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    socket.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>服务端和客户端都需要有套接字，分别是<code>ServerSocket</code>和<code>Socket</code>，并且绑定到统一端口。服务端还有一个<code>Socket</code>，是连接端口的返回结果。</li>\n<li>注意输入流和输出流的使用，客户端使用<strong>输出流</strong>，通过套接字输出；服务端使用<strong>输入流</strong>，通过套接字输入，而这股输入流需要输出的话，还需要一个输出流。</li>\n</ol>\n<p>先启动<code>MyReceiver.java</code>，再启动<code>MyTransmitter.java</code>，观察到<code>MyReceiver.java</code>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你好！</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-较复杂的服务端、客户端程序\"><a href=\"#2-2-较复杂的服务端、客户端程序\" class=\"headerlink\" title=\"2.2 较复杂的服务端、客户端程序\"></a>2.2 较复杂的服务端、客户端程序</h3><p>服务端（<code>MyTCPServer.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTCPServer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ServerSocket server;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket socket;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BufferedReader reader;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyTCPServer tcp = <span class=\"keyword\">new</span> MyTCPServer();\t<span class=\"comment\">// 实例化服务端</span></span><br><span class=\"line\">        tcp.getServer();\t<span class=\"comment\">// 服务端启动服务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getServer</span><span class=\"params\">()</span> </span>&#123;\t<span class=\"comment\">// 服务端启用服务方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8998</span>);\t<span class=\"comment\">// 实例化一个服务器套接字，端口8998</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;服务器套接字创建成功！&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;等待客户端连接...&quot;</span>);</span><br><span class=\"line\">                socket = server.accept();\t<span class=\"comment\">// 使用套接字对象接收客户端连接该端口，连接后返回“插座”套接字</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;客户端连接成功！&quot;</span>);</span><br><span class=\"line\">                reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));\t<span class=\"comment\">// 将“插座”套接字的输入流放到缓存读取器中</span></span><br><span class=\"line\">                getClientMessage();\t<span class=\"comment\">// 获取客户端信息</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">getClientMessage</span><span class=\"params\">()</span> </span>&#123;\t<span class=\"comment\">// 获取客户端信息方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;客户端：&quot;</span> + reader.readLine());\t<span class=\"comment\">// 将缓存读取器的读取内容输出</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (reader != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                reader.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (socket != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                socket.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (server != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                server.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>客户端（<code>MyTCPClient.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.border.BevelBorder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTCPClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> </span>&#123;</span><br><span class=\"line\">    Container c;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> JTextArea ta = <span class=\"keyword\">new</span> JTextArea();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> JTextField tf = <span class=\"keyword\">new</span> JTextField();</span><br><span class=\"line\">    Socket socket;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> PrintWriter writer;\t<span class=\"comment\">// 这是一个字符输出流过滤器，可以对字符流进行处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyTCPClient</span><span class=\"params\">(String title)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(title);\t<span class=\"comment\">// 标题</span></span><br><span class=\"line\">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class=\"line\">        c = getContentPane();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> JScrollPane sp = <span class=\"keyword\">new</span> JScrollPane();\t<span class=\"comment\">// 滚动面板</span></span><br><span class=\"line\">        sp.setBorder(<span class=\"keyword\">new</span> BevelBorder(BevelBorder.RAISED));\t<span class=\"comment\">// 设置滚动面板的边框为斜角边框，且为凸起斜面</span></span><br><span class=\"line\">        c.add(sp, BorderLayout.CENTER);\t<span class=\"comment\">// 把滚动面板放到窗体中间</span></span><br><span class=\"line\">        sp.setViewportView(ta);\t<span class=\"comment\">// 创建视口并设置视图为文本域（即把文本域放到滚动面板中）</span></span><br><span class=\"line\">        ta.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.PLAIN, <span class=\"number\">16</span>));</span><br><span class=\"line\">        ta.setEditable(<span class=\"keyword\">false</span>);\t<span class=\"comment\">// 文本域不可编辑</span></span><br><span class=\"line\">        c.add(tf, BorderLayout.SOUTH);\t<span class=\"comment\">// 把文本框放到窗体底部</span></span><br><span class=\"line\">        tf.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;微软雅黑&quot;</span>, Font.PLAIN, <span class=\"number\">16</span>));</span><br><span class=\"line\">        tf.addActionListener(<span class=\"keyword\">new</span> ActionListener() &#123;\t<span class=\"comment\">// 监听文本框回车事件</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">                writer.println(tf.getText());\t<span class=\"comment\">// 将文本框的信息写入流，这股流会通过端口传输到服务端</span></span><br><span class=\"line\">                ta.append(tf.getText() + <span class=\"string\">&#x27;\\n&#x27;</span>);\t<span class=\"comment\">// 在文本域中，把文本框写入的文本加进去</span></span><br><span class=\"line\">                ta.setSelectionEnd(ta.getText().length());\t<span class=\"comment\">// 把文本域选择的结束位置放到文本域文本末尾</span></span><br><span class=\"line\">                tf.setText(<span class=\"string\">&quot;&quot;</span>);\t<span class=\"comment\">// 清空文本框</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyTCPClient client = <span class=\"keyword\">new</span> MyTCPClient(<span class=\"string\">&quot;客户端系统&quot;</span>);\t<span class=\"comment\">// 实例化客户端</span></span><br><span class=\"line\">        client.setBounds(<span class=\"number\">600</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\">        client.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        client.connect();\t<span class=\"comment\">// 客户端连接</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">connect</span><span class=\"params\">()</span> </span>&#123;\t<span class=\"comment\">// 客户端连接方法</span></span><br><span class=\"line\">        ta.append(<span class=\"string\">&quot;尝试连接中...\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">8998</span>);\t<span class=\"comment\">// 使用IP和端口实例化“插头”套接字，并连接到“插座”</span></span><br><span class=\"line\">            writer = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream(), <span class=\"keyword\">true</span>);\t<span class=\"comment\">// 将“插头”套接器的输出流放到过滤器中，true表示自动行刷新</span></span><br><span class=\"line\">            ta.append(<span class=\"string\">&quot;完成连接！\\n&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            ta.append(<span class=\"string\">&quot;连接失败！请检查服务器端\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>服务端将获取客户端的方法放在无限循环中，以便无限接收客户端的信息。</li>\n<li>根据屏幕提示的信息，确定客户端是何时连接上服务端的。</li>\n</ol>\n<p>先启动<code>MyTCPServer.java</code>，再启动<code>MyTCPClient.java</code>，在窗体输入文字，观察到窗体变化与<code>MyTCPServer.java</code>输出：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/007.png\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">服务器套接字创建成功！</span><br><span class=\"line\">等待客户端连接...</span><br><span class=\"line\">客户端连接成功！</span><br><span class=\"line\">客户端：你好！</span><br><span class=\"line\">客户端：我是客户端</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-简单的文件传输程序\"><a href=\"#2-3-简单的文件传输程序\" class=\"headerlink\" title=\"2.3 简单的文件传输程序\"></a>2.3 简单的文件传输程序</h3><p>服务端（<code>FileReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileReceiver</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9000</span>);\t<span class=\"comment\">// 端口9000</span></span><br><span class=\"line\">        Socket socket = server.accept();\t<span class=\"comment\">// 监听客户端连接</span></span><br><span class=\"line\">        InputStream is = socket.getInputStream();\t<span class=\"comment\">// 获得套接字输入流</span></span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;receive.png&quot;</span>);\t<span class=\"comment\">// 实例化文件输出流</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读取套接字输入流</span></span><br><span class=\"line\">            fos.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 写入到文件输出流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedWriter endBw = <span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(socket.getOutputStream()));\t<span class=\"comment\">// 获得套接字输出流，并放到缓存字符写入器中</span></span><br><span class=\"line\">        endBw.write(<span class=\"string\">&quot;接收完毕&quot;</span>);\t<span class=\"comment\">// 写入字符串到输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\">        endBw.close();\t<span class=\"comment\">// 关闭流与套接字</span></span><br><span class=\"line\">        fos.close();</span><br><span class=\"line\">        is.close();</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">        server.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>客户端（<code>FileSender.png</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileSender</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        Socket socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">9000</span>);\t<span class=\"comment\">// 连接端口</span></span><br><span class=\"line\">        OutputStream os = socket.getOutputStream();\t<span class=\"comment\">// 获得套接字输出流</span></span><br><span class=\"line\">        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;send.png&quot;</span>);\t<span class=\"comment\">// 实例化文件输入流</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = fis.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读取文件输入流</span></span><br><span class=\"line\">            os.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 写入到套接字输出流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        socket.shutdownOutput();\t<span class=\"comment\">// 单向关闭客户端的套接字输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedReader endBr = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));\t<span class=\"comment\">// 获得套接字输入流，并放到缓存字符读取器中</span></span><br><span class=\"line\">        System.out.println(endBr.readLine());\t<span class=\"comment\">// 打印读取器读取到的字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">        endBr.close();\t<span class=\"comment\">// 关闭流与套接字</span></span><br><span class=\"line\">        fis.close();</span><br><span class=\"line\">        os.close();</span><br><span class=\"line\">        socket.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>示例中涉及到的输入输出流分别有（以输入流为例）：<code>InputStream</code>（接收套接字流）、<code>FileInputStream</code>（用于文件与系统间的传输流）、<code>InputStreamReader</code>（管道）、<code>BufferedReader</code>（用于处理服务端的回传字符）。</li>\n<li>注意客户端第15行的<code>socket.shutdownOutput();</code>，若不写这一行，即使客户端已写入完毕（并开始进行输入流的等待），服务端仍在继续读取（因为服务端第13行的<code>is.read(buffer)</code>，读取的字节数已为0，因此循环无法退出，处于读取0字节写入0字节的状态），因此要单向关闭客户端的套接字输出流，保证服务端结束读取。</li>\n</ol>\n<p>先启动<code>FileReceiver.java</code>，再启动<code>FileSender.java</code>，观察到文件<code>receive.png</code>生成，以及<code>FileSender.java</code>输出：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接收完毕</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-UDP网络程序示例\"><a href=\"#3-UDP网络程序示例\" class=\"headerlink\" title=\"3 UDP网络程序示例\"></a>3 UDP网络程序示例</h2><h3 id=\"3-1-简单的发送器、接收器程序\"><a href=\"#3-1-简单的发送器、接收器程序\" class=\"headerlink\" title=\"3.1 简单的发送器、接收器程序\"></a>3.1 简单的发送器、接收器程序</h3><p>发送器（<code>MyUDPSender.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyUDPSender</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        DatagramSocket socket = <span class=\"keyword\">new</span> DatagramSocket();\t<span class=\"comment\">// 创建数据报套接字</span></span><br><span class=\"line\">        String msg = <span class=\"string\">&quot;你好！&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = msg.getBytes();</span><br><span class=\"line\">        InetAddress localhost = InetAddress.getByName(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> port = <span class=\"number\">9090</span>;</span><br><span class=\"line\">        DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(buffer, <span class=\"number\">0</span>, buffer.length, localhost, port);\t<span class=\"comment\">// 创建要发送的数据包，并绑定内容和发送地址</span></span><br><span class=\"line\">        socket.send(packet);\t<span class=\"comment\">// 发送数据包</span></span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收器（<code>MyUDPReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyUDPReceiver</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        DatagramSocket socket = <span class=\"keyword\">new</span> DatagramSocket(<span class=\"number\">9090</span>);\t<span class=\"comment\">// 创建数据报套接字，绑定到9090端口</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 创建缓存数组</span></span><br><span class=\"line\">        DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(buffer, <span class=\"number\">0</span>, buffer.length);\t<span class=\"comment\">// 创建要接收的数据包载体</span></span><br><span class=\"line\">        socket.receive(packet);\t<span class=\"comment\">// 接收数据包（程序阻塞）</span></span><br><span class=\"line\">        System.out.println(packet.getAddress().getHostAddress());\t<span class=\"comment\">// 获取数据包的地址</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> String(packet.getData(), <span class=\"number\">0</span>, packet.getLength()));\t<span class=\"comment\">// 获取数据包的数据</span></span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>发送器和接收器都有数据报套接字<code>DatagramSocket</code>和数据包<code>DatagramPacket</code>，但使用方式不同。<ul>\n<li>发送器的<code>DatagramSocket</code>不用绑定端口，因为它只用<code>send()</code>方法，无需绑定发送者的端口；接收器的<code>DatagramSocket</code>需要绑定端口，因为它用<code>receive()</code>方法需要明确自己的地址。</li>\n<li>发送器的<code>DatagramPacket</code>需要绑定发送地址，因为它已有内容并打包好，需要向特定地址传递；接收器的<code>DatagramPacket</code>不用绑定地址，因为它是一个空的容器，只起接收载体作用。</li>\n</ul>\n</li>\n<li>接收器第10行，<code>packet.getLength()</code>不能用<code>packet.getData().length</code>代替，数据包大小与数据字节数组的大小是不同的。</li>\n</ol>\n<p>先启动<code>MyUDPReceiver.java</code>，观察到程序开始等待，再启动<code>MyUDPSender.java</code>，观察到<code>MyUDPReceiver.java</code>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1</span><br><span class=\"line\">你好！</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-较复杂的聊天器程序（多线程）\"><a href=\"#3-2-较复杂的聊天器程序（多线程）\" class=\"headerlink\" title=\"3.2 较复杂的聊天器程序（多线程）\"></a>3.2 较复杂的聊天器程序（多线程）</h3><p>聊天发送端线程（<code>MyChatSender.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyChatSender</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    DatagramSocket socket = <span class=\"keyword\">null</span>;\t<span class=\"comment\">// 数据报套接字</span></span><br><span class=\"line\">    BufferedReader reader = <span class=\"keyword\">null</span>;\t<span class=\"comment\">// 缓存输入流</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String toIP;\t<span class=\"comment\">// 发送的IP地址（理解为“写信时的对方地址”）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> toPort;\t<span class=\"comment\">// 发送的端口（理解为“写信时的对方门牌号”）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyChatSender</span><span class=\"params\">(String toIP, <span class=\"keyword\">int</span> toPort)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.toIP = toIP;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.toPort = toPort;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> DatagramSocket();\t<span class=\"comment\">// 创建发送端的套接字</span></span><br><span class=\"line\">            reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));\t<span class=\"comment\">// 缓存输入流放入系统输入</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                String data = reader.readLine();\t<span class=\"comment\">// 读取输入流的一行字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] dataBytes = data.getBytes();\t<span class=\"comment\">// 字符串转换为字节数组</span></span><br><span class=\"line\">                DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(dataBytes, <span class=\"number\">0</span>, dataBytes.length, <span class=\"keyword\">new</span> InetSocketAddress(toIP, toPort));\t<span class=\"comment\">// 将字节数组打包，并绑定到对应IP和端口</span></span><br><span class=\"line\">                socket.send(packet);\t<span class=\"comment\">// 发送数据包</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;bye&quot;</span>.equals(data)) &#123;\t<span class=\"comment\">// 如果输入&quot;bye&quot;，退出发送循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            reader.close();\t<span class=\"comment\">// 关闭流</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>聊天接收端线程（<code>MyChatReceiver.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyChatReceiver</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    DatagramSocket socket = <span class=\"keyword\">null</span>;\t<span class=\"comment\">// 数据报套接字</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String fromName;\t<span class=\"comment\">// 来源的名字（理解为“写信时的寄件人姓名”）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyChatReceiver</span><span class=\"params\">(<span class=\"keyword\">int</span> port, String fromName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.fromName = fromName;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> DatagramSocket(port);\t<span class=\"comment\">// 创建接收端的套接字，并绑定到一个接收端口</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SocketException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] container = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 字节数组容器</span></span><br><span class=\"line\">                DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(container, <span class=\"number\">0</span>, container.length);\t<span class=\"comment\">// 创建数据包容器</span></span><br><span class=\"line\">                socket.receive(packet);\t<span class=\"comment\">// 阻塞式接收数据包</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] dataBytes = packet.getData();\t<span class=\"comment\">// 把数据包的缓存数据放到字节数组里</span></span><br><span class=\"line\">                String data = <span class=\"keyword\">new</span> String(dataBytes, <span class=\"number\">0</span>, packet.getLength());\t<span class=\"comment\">// 将缓存数据转换为字符串</span></span><br><span class=\"line\">                System.out.println(fromName + <span class=\"string\">&quot;：&quot;</span> + data);\t<span class=\"comment\">// 输出</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;bye&quot;</span>.equals(data)) &#123;<span class=\"comment\">// 如果收到&quot;bye&quot;，退出接收循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        socket.close();\t<span class=\"comment\">// 关闭套接字</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>聊天者A（<code>ChatterA.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChatterA</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatSender(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">9999</span>)).start();\t<span class=\"comment\">// 启动A的发送端线程</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatReceiver(<span class=\"number\">8888</span>, <span class=\"string\">&quot;B&quot;</span>)).start();\t<span class=\"comment\">// 启动A的接收端线程</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>聊天者B（<code>ChatterB.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChatterB</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatSender(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">8888</span>)).start();\t<span class=\"comment\">// 启动B的发送端线程</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> MyChatReceiver(<span class=\"number\">9999</span>, <span class=\"string\">&quot;A&quot;</span>)).start();\t<span class=\"comment\">// 启动B的接收端线程</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：每个聊天者有两个线程，以及两个所需端口。A向<code>localhost</code>的9999端口发信息，同时接收发送到8888端口名为B发来的信息；B向<code>localhost</code>的8888端口发信息，同时接收发送到9999端口名为A发来的信息。</p>\n<p>分别启动<code>ChatterA.java</code>和<code>ChatterB.java</code>，并输入文字，观察到两个程序分别输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你好！</span><br><span class=\"line\">B：你好啊！</span><br><span class=\"line\">今天天气真不错。</span><br><span class=\"line\">B：是啊，今天天气晴朗。</span><br><span class=\"line\">bye</span><br><span class=\"line\">B：bye</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A：你好！</span><br><span class=\"line\">你好啊！</span><br><span class=\"line\">A：今天天气真不错。</span><br><span class=\"line\">是啊，今天天气晴朗。</span><br><span class=\"line\">A：bye</span><br><span class=\"line\">bye</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-较复杂的广播、收音机程序\"><a href=\"#3-3-较复杂的广播、收音机程序\" class=\"headerlink\" title=\"3.3 较复杂的广播、收音机程序\"></a>3.3 较复杂的广播、收音机程序</h3><p>广播（<code>MyBroadcast.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBroadcast</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;\t<span class=\"comment\">// 实现线程</span></span><br><span class=\"line\">    String msg = <span class=\"string\">&quot;欢迎收听广播节目。&quot;</span>;\t<span class=\"comment\">// 广播信息</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> port = <span class=\"number\">9898</span>;\t<span class=\"comment\">// 端口9898</span></span><br><span class=\"line\">    InetAddress ipGroup;\t<span class=\"comment\">//IP组</span></span><br><span class=\"line\">    MulticastSocket socket;\t<span class=\"comment\">// 多点广播套接字</span></span><br><span class=\"line\"></span><br><span class=\"line\">    MyBroadcast() <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        ipGroup = InetAddress.getByName(<span class=\"string\">&quot;224.255.10.0&quot;</span>);\t<span class=\"comment\">// 指定地址</span></span><br><span class=\"line\">        socket = <span class=\"keyword\">new</span> MulticastSocket(port);\t<span class=\"comment\">// 创建一个指定端口的套接字</span></span><br><span class=\"line\">        socket.setTimeToLive(<span class=\"number\">1</span>);\t<span class=\"comment\">// 指定发送范围是本地网络</span></span><br><span class=\"line\">        socket.joinGroup(ipGroup);\t<span class=\"comment\">// 加入广播组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] data = msg.getBytes();\t<span class=\"comment\">// 字节数组</span></span><br><span class=\"line\">            DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(data, data.length, ipGroup, port);\t<span class=\"comment\">//数据打包并绑定地址端口</span></span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(data));\t<span class=\"comment\">// 输出广播信息</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                socket.send(packet);\t<span class=\"comment\">// 发送数据包</span></span><br><span class=\"line\">                sleep(<span class=\"number\">3000</span>);\t<span class=\"comment\">// 休眠3秒</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        MyBroadcast broadcast = <span class=\"keyword\">new</span> MyBroadcast();\t<span class=\"comment\">// 创建广播</span></span><br><span class=\"line\">        broadcast.start();\t<span class=\"comment\">// 启动广播</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>收音机（<code>MyRadio.java</code>）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRadio</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span>, <span class=\"title\">ActionListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> port;\t<span class=\"comment\">// 端口</span></span><br><span class=\"line\">    InetAddress ipGroup;\t<span class=\"comment\">// IP组</span></span><br><span class=\"line\">    MulticastSocket socket;\t<span class=\"comment\">// 多点广播套接字</span></span><br><span class=\"line\">    JButton start = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;开始接收&quot;</span>);\t<span class=\"comment\">// 开始按钮</span></span><br><span class=\"line\">    JButton stop = <span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;停止接收&quot;</span>);\t<span class=\"comment\">// 停止按钮</span></span><br><span class=\"line\">    JTextArea startArea = <span class=\"keyword\">new</span> JTextArea(<span class=\"number\">10</span>, <span class=\"number\">10</span>);\t<span class=\"comment\">// 广播信息区域（显示目前接收到的一条信息）</span></span><br><span class=\"line\">    JTextArea receivedArea = <span class=\"keyword\">new</span> JTextArea(<span class=\"number\">10</span>, <span class=\"number\">10</span>);\t<span class=\"comment\">// 接收信息区域（显示历史接收到的所有信息）</span></span><br><span class=\"line\">    Thread thread;\t<span class=\"comment\">// 线程</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> isStopped = <span class=\"keyword\">false</span>;\t<span class=\"comment\">// 是否停止</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyRadio</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"string\">&quot;数据报收音机&quot;</span>);\t<span class=\"comment\">// 标题</span></span><br><span class=\"line\">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class=\"line\">        thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 代理自己</span></span><br><span class=\"line\">        start.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        stop.addActionListener(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 按钮添加监听器</span></span><br><span class=\"line\">        startArea.setForeground(Color.BLUE);</span><br><span class=\"line\">        JPanel north = <span class=\"keyword\">new</span> JPanel();\t<span class=\"comment\">// 顶部面板</span></span><br><span class=\"line\">        north.add(start);</span><br><span class=\"line\">        north.add(stop);</span><br><span class=\"line\">        add(north, BorderLayout.NORTH);</span><br><span class=\"line\">        JPanel center = <span class=\"keyword\">new</span> JPanel(<span class=\"keyword\">new</span> GridLayout(<span class=\"number\">1</span>, <span class=\"number\">2</span>));\t<span class=\"comment\">// 中部面板</span></span><br><span class=\"line\">        center.add(startArea);</span><br><span class=\"line\">        center.add(receivedArea);</span><br><span class=\"line\">        add(center, BorderLayout.CENTER);</span><br><span class=\"line\">        validate();\t<span class=\"comment\">// 刷新布局</span></span><br><span class=\"line\"></span><br><span class=\"line\">        port = <span class=\"number\">9898</span>;\t<span class=\"comment\">// 端口9898</span></span><br><span class=\"line\">        ipGroup = InetAddress.getByName(<span class=\"string\">&quot;224.255.10.0&quot;</span>);\t<span class=\"comment\">// IP组指定地址</span></span><br><span class=\"line\">        socket = <span class=\"keyword\">new</span> MulticastSocket(port);\t<span class=\"comment\">// 套接字绑定端口</span></span><br><span class=\"line\">        socket.joinGroup(ipGroup);\t<span class=\"comment\">// 套接字加入广播组</span></span><br><span class=\"line\"></span><br><span class=\"line\">        setBounds(<span class=\"number\">100</span>, <span class=\"number\">50</span>, <span class=\"number\">360</span>, <span class=\"number\">380</span>);</span><br><span class=\"line\">        setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];\t<span class=\"comment\">// 字节数组</span></span><br><span class=\"line\">            DatagramPacket packet = <span class=\"keyword\">new</span> DatagramPacket(data, data.length, ipGroup, port);\t<span class=\"comment\">// 数据包容器</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                socket.receive(packet);\t<span class=\"comment\">// 接收数据包</span></span><br><span class=\"line\">                String msg = <span class=\"keyword\">new</span> String(packet.getData(), <span class=\"number\">0</span>, packet.getLength());\t<span class=\"comment\">// 缓存数据转换为字符串</span></span><br><span class=\"line\">                startArea.setText(<span class=\"string\">&quot;正在接收的内容：\\n&quot;</span> + msg);\t<span class=\"comment\">// 打印在广播区域上</span></span><br><span class=\"line\">                receivedArea.append(msg + <span class=\"string\">&quot;\\n&quot;</span>);\t<span class=\"comment\">// 添加在接收区域上</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isStopped) &#123;\t<span class=\"comment\">// 如果停止接收，退出循环</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;\t<span class=\"comment\">// 监听</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == start) &#123;</span><br><span class=\"line\">            start.setBackground(Color.RED);</span><br><span class=\"line\">            stop.setBackground(Color.YELLOW);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!(thread.isAlive())) &#123;\t<span class=\"comment\">// 如果线程不处于新建状态</span></span><br><span class=\"line\">                thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);\t<span class=\"comment\">// 新建线程</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            thread.start();\t<span class=\"comment\">// 启动线程</span></span><br><span class=\"line\">            isStopped = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == stop) &#123;</span><br><span class=\"line\">            start.setBackground(Color.YELLOW);</span><br><span class=\"line\">            stop.setBackground(Color.RED);</span><br><span class=\"line\">            isStopped = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        MyRadio radio = <span class=\"keyword\">new</span> MyRadio();\t<span class=\"comment\">// 创建广播</span></span><br><span class=\"line\">        radio.setSize(<span class=\"number\">460</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ol>\n<li>发出广播和接收广播的地址必须位于同一个组内，地址范围是224.0.0.0~224.255.255.255，该地址不代表某个特定主机的位置。</li>\n<li>加入同一个组的主机可以在某个端口广播信息，也可以在某个端口接收信息。</li>\n</ol>\n<p>启动<code>MyBroadcast.java</code>，观察到其开始输出；启动<code>MyRadio.java</code>并点击开始接收按钮，观察到其开始接收广播信息：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">欢迎收听广播节目。</span><br><span class=\"line\">欢迎收听广播节目。</span><br><span class=\"line\">欢迎收听广播节目。</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/008.png\" alt=\"\"></p>\n<h2 id=\"4-利用URL下载网络资源示例\"><a href=\"#4-利用URL下载网络资源示例\" class=\"headerlink\" title=\"4 利用URL下载网络资源示例\"></a>4 利用URL下载网络资源示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.HttpsURLConnection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        URL url = <span class=\"keyword\">new</span> URL(<span class=\"string\">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span>);\t<span class=\"comment\">// 新建URL，并初始化为网络资源地址</span></span><br><span class=\"line\">        HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();\t<span class=\"comment\">// URL开启连接</span></span><br><span class=\"line\">        InputStream is = connection.getInputStream();\t<span class=\"comment\">// 获取连接输入流</span></span><br><span class=\"line\">        FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;logo.png&quot;</span>);\t<span class=\"comment\">// 新建文件输出流</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;\t<span class=\"comment\">// 读入连接输入流</span></span><br><span class=\"line\">            fos.write(buffer, <span class=\"number\">0</span>, len);\t<span class=\"comment\">// 写入到文件输入流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fos.close();\t<span class=\"comment\">// 关闭流与连接</span></span><br><span class=\"line\">        is.close();</span><br><span class=\"line\">        connection.disconnect();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>观察到文件<code>logo.png</code>的生成。</p>\n<h2 id=\"5-I-O补充\"><a href=\"#5-I-O补充\" class=\"headerlink\" title=\"5 I/O补充\"></a>5 I/O补充</h2><p><strong>使用输入流、输出流时以下这段代码的原理：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;xxx&quot;</span>);\t<span class=\"comment\">// 文件输入流</span></span><br><span class=\"line\">OutputStream os = <span class=\"keyword\">new</span> OutputStream();\t<span class=\"comment\">// 输出流</span></span><br><span class=\"line\"><span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> len;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len = fis.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    os.write(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>buffer</code>是一个字节数组，长度为1024，类似于一个缓冲区。</li>\n<li><code>fis.read(buffer)</code>，这一步从输入流读取<code>buffer</code>大小的字节（即1024），把这些字节赋给<code>buffer</code>，并返回读取的字节数。</li>\n<li>把读取的字节数赋值给<code>len</code>，然后对<code>len</code>进行判断。</li>\n<li>把<code>buffer</code>数组的0到<code>len</code>位置的字节写入输出流。</li>\n<li>每次循环，<code>buffer</code>就被重新赋值一次，因此文件大小与<code>buffer</code>的长度1024是没有关系的。</li>\n<li>读取到输入流末尾时，<code>read()</code>方法返回-1，循环结束。</li>\n<li>注意：缓冲区的大小不应太小，否则会涉及到编码问题，部分字节被强行拆分到两个缓冲区时可能会出现乱码。</li>\n</ul>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/007.png","popularPost_tmp_gaData":{"updated":"Mon Sep 13 2021 15:31:52 GMT+0800 (中国标准时间)","title":"Java网络通信编程的笔记和实例","path":"2021/09/13/notes-and-examples-of-java-network-communication-programming/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/java/007.png","excerpt":"<p>本文整理了学习Java网络通信编程的笔记，并分析了若干程序实例，以巩固学习成果。</p>","date":{"_isAMomentObject":true,"_i":"2021-09-13T06:35:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-09-13T06:35:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Java","tags":["编程","Java","网络通信","网络编程","TCP","IP","UDP","URL"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":19344},{"title":"开发某机床厂远程运维平台的前端技术总结（1）","date":"2021-10-27T14:33:05.000Z","comments":1,"_content":"\n今年3月到7月，我参与了课题组负责的**某机床厂远程运维平台开发**的项目，并主要承担前端开发工作。这个项目马上（10月底）就要结题了，因此总结一下在这半年的开发过程中遇到的一些技术问题或难题，以给之后的学习或开发作参考。\n\n<!--more-->\n\n## 1 项目简介\n\n这个项目是导师接的一个工业互联网项目，用于某机床厂的远程运营维护。从3月开始，我们就着手参与这个项目。\n\n> 本平台主要适用于工业互联网远程运维场景，采集机床运行数据，及时、准确地为机床厂提供机床的各项运行数据可视化、设备故障的报警等相关信息，高效地为用户提供机床的远程运维服务。\n>\n> ——《智能运维云平台用户操作手册》\n\n这个平台由3个团队共同参与开发，分别是杭州团队（浙大）、苏州团队（苏州研究院）和昆山团队（昆山某公司），后来昆山团队退出了，项目就完全由杭州和苏州负责了。\n\n这个项目里我们杭州团队负责了【企业中心】、【设备中心】的开发，在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。杭州团队是包括我在内的3个研究生，我负责前端，另外2个同学负责后端，其中1个还负责数据库管理。\n\n4月初，我们经过了多次讨论，研究了若干技术选型，如人人开源、JeecgBoot等，最终决定以[若依管理系统](http://ruoyi.vip/)为基础，搭建我们的平台。从以下我们做好的首页中，也可以见到一丝端倪。\n\n![首页](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-01 - 副本2.png)\n\n（首页除了下面的**合作伙伴**是我设计的外，其他全部是苏州团队设计的）\n\n从4月开始，我着手学习前端三件套、[Vue](https://v3.cn.vuejs.org/)与[ElementUI](https://element.eleme.cn/#/zh-CN)，并到后期边做边学，积累了很多技术经验。并且由于前端需要后端支持，因此我也在自己的电脑上搭配了完整的后端环境。\n\n## 2 企业中心\n\n【企业中心】用于管理该公司对接的所有企业，也就是它的销售方。\n\n### 2.1 企业管理\n\n我们第一个着手做的就是【企业中心】的【企业管理】模块。这是一个单表，即这个模块只需要**增删改查**的功能，能实现数据项的罗列与变更功能。由于若依系统自带**代码生成器**，可以根据数据库的某个表自动生成后端代码（domain、mapper、service、controller四个层）以及前端代码（api接口和vue页面），所以这很大程度减轻了我们的工作量，我们只需要生成表再改一改就好了。下文中与表有关的模块大多数都是这么做的。\n\n![企业管理页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-02.png)\n\n#### 2.1.1 企业地区\n\n这是后来加的一个功能，客户要求在【企业管理】模块，每个企业可以有一个对应的地区，并且可以根据地区筛选企业。\n\n要导入全国的省市区数据就是一个很麻烦的过程，这个是很难做到写死在代码里的。我找到了ElementUI提供的一个npm包，包含所有中国省市区级联数据，即[element-china-area-data](https://www.npmjs.com/package/element-china-area-data)，并根据[这个页面的示例](https://plortinus.github.io/element-china-area-data/index.html)做了这个功能。这个包是ElementUI提供的，所以可以直接使用[ElementUI的级联选择器](https://element.eleme.cn/#/zh-CN/component/cascader)。\n\n1. 导入这个包里所用到的几个数组和对象。\n\n   ```javascript\n   import {provinceAndCityData, regionData, provinceAndCityDataPlus, regionDataPlus, CodeToText, TextToCode} from 'element-china-area-data';\n   ```\n\n2. 数据库里，每一条企业数据省、市、区是三个字段，在前端表格的显示上，要稍微修改一下格式：\n\n   ```html\n   <el-table v-loading=\"loading\" :data=\"infoList\" @selection-change=\"handleSelectionChange\">\n     ...\n     <el-table-column label=\"地区\" align=\"center\" prop=\"province\" :formatter=\"provinceFormat\"/>\n     ...\n   </el-table>\n   ```\n\n   ```javascript\n   // 地区处理\n   provinceFormat(row, column) {\n     let region = '';\n     if (row.province) {\n       region += row.province;\n     }\n     for (let item of [row.city, row.country]) {\n       if (item) {\n         region += '/' + item;\n       }\n     }\n     return region;\n   },\n   ```\n\n   ![表格里显示的地区](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-03.png)\n\n   因为数据库里有单独的“省”字段，因此搜索时可以只筛选省。\n\n   ```html\n   <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"75px\">\n     <el-form-item label=\"企业地区\" prop=\"province\">\n       <el-select\n         size=\"small\"\n         v-model=\"queryParams.province\"\n         clearable\n         filterable\n         placeholder=\"请选择或搜索企业地区\"\n       >\n         <el-option\n           v-for=\"province in provinceOptions\"\n           :key=\"province.value\"\n           :label=\"province.label\"\n           :value=\"province.value\">\n         </el-option>\n       </el-select>\n     </el-form-item>\n     ...\n   </el-form>\n   ```\n\n   ```javascript\n   data() {\n     return {\n       ...\n       provinceOptions: regionData.map(province => ({value: province.label, label: province.label})),\n       ...\n     }\n   }\n   ```\n\n   ![搜索功能的企业地区](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-04.png)\n\n3. 新增企业功能，客户要求省份信息必填，市区信息选填，所以这个级联菜单与element-china-area-data的展示页面做得有所不同。\n\n   ```html\n   <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body>\n     <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n       <el-row>\n         ...\n         <el-col :span=\"12\">\n           <el-form-item label=\"企业地区\" prop=\"province\">\n             <el-select\n               v-model=\"form.province\"\n               display=\"inline-block\"\n               placeholder=\"请选择或搜索企业地区\"\n               clearable\n               filterable\n               style=\"width: 100%;\"\n               @change=\"handleRegionInfo\">\n               <el-option\n                 v-for=\"province in provinceOptions\"\n                 :key=\"province.value\"\n                 :label=\"province.label\"\n                 :value=\"province.value\">\n               </el-option>\n             </el-select>\n           </el-form-item>\n         </el-col>\n         <el-col :span=\"12\">\n           <el-form-item label=\"具体市区\" prop=\"selectedRegionOptions\">\n             <el-cascader\n               v-if=\"form.province\"\n               :options=\"regionOptions\"\n               v-model=\"form.selectedRegionOptions\"\n               :key=\"provinceRefresh\"\n               clearable\n               filterable\n               style=\"width: 100%\"\n               placeholder=\"请选择或搜索具体市区\"\n             >\n             </el-cascader>\n             <el-cascader\n               v-else\n               disabled\n               style=\"width: 100%\"\n               placeholder=\"请先选择企业地区\">\n             </el-cascader>\n           </el-form-item>\n         </el-col>\n         ...\n       </el-row>\n     </el-form>\n     ...\n   </el-dialog>\n   ```\n\n   下拉列表和级联列表要联动，什么省就要给什么市，所以要给级联表加个`key`（否则级联表不会根据所选省份变化），并且绑定到一个`provinceRefresh`的变量上，并在其他相关部分将其设置为省份的`code`，然后在某个函数处理省份的变化，见如下的`script`部分：\n\n   ```javascript\n   data() {\n     return {\n       ...\n       regionOptions: [],\n       provinceRefresh: null,\n       rules: {\n         ...\n         province: [\n           {required: true, message: \"企业地区不能为空\", trigger: \"change\"}\n         ],\n         ...\n       },\n     };\n   },\n   methods: {\n     ...\n     /** 新增按钮操作 */\n     handleAdd() {\n       this.reset();\n       this.regionOptions = this.form.province ? regionData.find(province => province.label === this.form.province).children : [];\n       this.provinceRefresh = this.form.province ? TextToCode[this.form.province].code : null;\n       this.open = true;\n       this.title = \"添加企业\";\n       },\n       /** 修改按钮操作 */\n     handleUpdate(row) {\n       this.reset();\n       const id = row.id || this.ids\n       getInfo(id).then(response => {\n         this.form = response.data;\n         if (this.form.province) {\n           this.regionOptions =  regionData.find(province => province.label === this.form.province).children;\n           if (this.form.city && this.form.country) {\n             this.form.selectedRegionOptions = [TextToCode[this.form.province][this.form.city].code, TextToCode[this.form.province][this.form.city][this.form.country].code];\n           }\n           this.provinceRefresh = TextToCode[this.form.province].code;\n         }\n         this.open = true;\n         this.title = \"修改企业\";\n       });\n     },\n     /** 提交按钮 */\n     submitForm() {\n       if (this.form.selectedRegionOptions.length) {\n         this.form.city = CodeToText[this.form.selectedRegionOptions[0]];\n         this.form.country = CodeToText[this.form.selectedRegionOptions[1]];\n       }\n       else {\n         this.form.city = '';\n         this.form.country = '';\n       }\n       this.provinceRefresh = null;\n       this.$refs[\"form\"].validate(valid => {\n         if (valid) {\n           if (this.form.id != null) {\n             updateInfo(this.form).then(response => {\n               this.msgSuccess(\"修改成功\");\n               this.open = false;\n               this.getList();\n             });\n           } else {\n             addInfo(this.form).then(response => {\n               this.msgSuccess(\"新增成功\");\n               this.open = false;\n               this.getList();\n             });\n           }\n         }\n       });\n     },\n     ...\n     // 企业地区修改\n     handleRegionInfo() {\n       if (this.form.province) {\n         this.regionOptions = regionData.find(province => province.label === this.form.province).children;\n         this.provinceRefresh = TextToCode[this.form.province].code\n       }\n     }\n   }\n   ```\n\n   ![添加企业界面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-05.png)\n\n#### 2.1.2 字典的使用\n\n字典是若依系统自带的功能，对于一些常用的选项，若依可以将他们存在同一个数据库中，并设置键、值，以便可以随时调用。\n\n通常使用字典的步骤如下：\n\n1. 在【字典管理】里新增一个字典，设置字典名称（即字典释义）和字典类型（即变量名）：\n\n   ![字典管理页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-07.png)\n\n2. 点开这个字典页面，向里面添加数据，分别输入标签和键值：\n\n   ![字典数据页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-08.png)\n\n3. 在前端的Vue代码里，使用下拉菜单时，绑定键值：\n\n   ```html\n   <el-form-item label=\"数据类型\" prop=\"paramType\">\n     <el-select v-model=\"queryParams.paramType\" placeholder=\"请选择数据类型\" clearable size=\"small\">\n       <el-option\n         v-for=\"dict in paramTypeOptions\"\n         :key=\"dict.dictValue\"\n         :label=\"dict.dictLabel\"\n         :value=\"dict.dictValue\"\n       />\n     </el-select>\n   </el-form-item>\n   ```\n\n4. 在前端的`script`部分，定义这个数组，并且使用若依自带的函数去获取它：\n\n   ```javascript\n   data() {\n     return {\n       ...\n       paramTypeOptions: [],\n       ...\n     };\n   },\n   created: {\n     ...\n     this.getDicts(\"device_param_type\").then(response => {\n       this.paramTypeOptions = response.data;\n     });\n     ...\n   },\n   ```\n\n5. 在表格里使用时，需要定义一个格式函数，因为数据库里存的是字典键值，表格里展示的是字典标签：\n\n   ```html\n   <el-table-column label=\"数据类型\" align=\"center\" prop=\"paramType\" :formatter=\"paramTypeFormat\"/>\n   ```\n\n   ```javascript\n   // 数据类型字典翻译\n   paramTypeFormat(row, column) {\n     return this.selectDictLabel(this.paramTypeOptions, row.paramType);\n   },\n   ```\n\n在【企业管理】模块里，用到了许多类似于字典的选项，如经营状态、企业行业、公司类型，但我在代码中没用使用字典，而是写死在代码的数组里的。这样做的好处是节省函数调用，坏处是当我需要调整选项的时候，无法从前端或数据库去更改它，而是需要修改源代码。\n\n```html\n<el-form-item label=\"经营状态\" prop=\"operationState\">\n  <el-select\n    v-model=\"queryParams.operationState\"\n    clearable\n    size=\"small\"\n    placeholder=\"请选择经营状态\">\n    <el-option\n      v-for=\"os in operationStateOptions\"\n      :key=\"os.value\"\n      :label=\"os.label\"\n      :value=\"os.value\">\n    </el-option>\n  </el-select>\n</el-form-item>\n```\n\n```javascript\ndata() {\n  return {\n    ...\n    operationStateOptions: [],\n    ...\n  };\n},\n...\ncreated: {\n  this.getOperationStateOptions();\n  ...\n},\nmethods: {\n  ...\n  getOperationStateOptions() {\n    this.operationStateOptions = [];\n    for (let item of [\"存续\", \"在业\", \"吊销\", \"注销\", \"迁入\", \"迁出\", \"停业\", \"清算\"]) {\n      this.operationStateOptions.push({\n        value: item,\n        label: item\n      });\n    }\n  },\n  ...\n}\n```\n\n当然可能有更好的写法，但是只要让这个数组成为一个对象数组，并且有键值对（即`value`和`label`）就好了。\n\n如果需要前面出现编号，就改一下`label`：\n\n```javascript\ngetCompanyTypeOptions() {\n  this.companyTypeOptions = [];\n  let types = [\"有限责任公司（自然人独资）\", \"有限责任公司（自然人投资或控股）\", \"股份有限公司\", \"有限合伙企业\", \"外商独资公司\", \"个人独资企业\", \"国有独资公司\", \"外资企业\", \"非公司企业\", \"其他\"];\n  for (let index in types) {\n    this.companyTypeOptions.push({\n      value: types[index],\n      label: (parseInt(index) + 1) + '、' + types[index]\n    });\n  }\n},\n```\n\n![公司类型](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-09.png)\n\n（对于JavaScript的`for-each`循环，`in`循环的是数组的索引或对象的键，即`let index in array`、`let key in object`，`of`循环的是数组的元素，即`let item of array`；知道了索引或键，可以通过方括号或小数点去访问对应的元素或值；更详细可以看这篇文章：《{% post_link several-ways-of-traversing-arrays-and-objects-in-javascript %}》）\n\n#### 2.1.3 删除按钮的提示修改\n\n若依自带的删除提示是这样的：\n\n```javascript\n/** 删除按钮操作 */\nhandleDelete(row) {\n  const ids = row.id || this.ids;\n  this.$confirm('是否确认删除企业中心编号为\"' + ids + '\"的数据项?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(function() {\n      return delInfo(ids);\n    }).then(() => {\n      this.getList();\n      this.msgSuccess(\"删除成功\");\n    })\n},\n```\n\n第3行这个获取id，实际上是判断删除按钮的入口，是单个数据项，还是勾选后点击的删除，前者是一个对象（即参数`row`）的id，后者是一个id数组，通过逻辑或选择一个值。但是第4行会暴露主键id，因此我对这部分代码（以及我们做的所有模块的删除功能）做了如下修改：\n\n```javascript\n/** 删除按钮操作 */\nhandleDelete(row) {\n  const ids = row.id || this.ids;\n  let idsLength;\n  switch (typeof(ids)) {\n    case 'number' : idsLength = 1; break;\n    case 'object' : idsLength = ids.length; break;\n  }\n  this.$confirm('是否确认删除' + (idsLength>1 ? '这'+idsLength+'个' : '该') + '企业?', \"警告\", {\n    confirmButtonText: \"确定\",\n    cancelButtonText: \"取消\",\n    type: \"warning\"\n  }).then(function () {\n    return delInfo(ids);\n  }).then(() => {\n    this.getList();\n    this.msgSuccess(\"删除成功\");\n  })\n},\n```\n\nJavaScript的`typeof`函数可以返回变量的类型（字符串表示），如果是`number`类型，说明这是`row.id`，长度为1；如果是`object`类型（数组即对象），说明这是`this.ids`，长度为数组的`length`。再判断ids的长度是否大于1，输出对应的结果。\n\n![删除企业](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-10.png)\n\n#### 2.1.4 解决手机端消息框显示不全的问题\n\n在做响应式布局时遇到的bug，像上面删除时弹出的警告框，如果屏幕宽度过窄，可能显示不全，连确定按钮都点不到：\n\n![在屏幕宽度过窄时，消息框显示不全](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-19.png)\n\n所以我在代码的最后都加了一个样式：\n\n```css\n<style>\n@media screen and (max-width: 750px) {\n  .el-message-box {\n    width: 80% !important;\n  }\n}\n</style>\n```\n\n使消息框在屏幕尺寸小于750px时，宽度调整为相对尺寸（80%），避免显示不全。\n\n### 2.2 组织管理\n\n【组织管理】模块是一个树表。客户的要求是，对于某一个企业，可以给它加下级组织（下级部门），这个组织可以继续添加下级组织，企业也是一个组织，所有的企业应平级，即企业的上级组织汇聚到一个顶级组织（顶点）。加了组织后，机床就可以绑定到这个组织。\n\n![组织管理页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-11.png)\n\n#### 2.2.1 树表的逻辑\n\n数据库是没法放树表的，只可以放单表。每个组织在数据库中是单独的一项，表面上是同级的，但是可以给它加一个字段，表示该组织的上级组织。由于上下级组织是一对多的关系，所以我们只关注某个组织的上级组织，并一层层关联起来。\n\n数据库里，`org_id`是主键，`enterprise_id`跟踪这个组织的最顶层（指企业层）是什么，`higher_org`跟踪这个组织的上层组织是什么。\n\n![数据库里的组织表](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-12.png)\n\n![该表表示的逻辑关系](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-13.png)\n\n前端页面的显示方式见上上上图。\n\n#### 2.2.2 后端对于树表的处理\n\n由于**一个企业同时也是一个组织**，所以凡是在【企业管理】模块做的**增删改**操作都要关联到【组织管理】模块：\n\n- 增：【企业管理】增加一个企业，【组织管理】就要增加这个企业组织\n- 删：【企业管理】删除一个企业，【组织管理】就要删除这个企业组织及其所有下级组织（所有`enterprise_id`符合企业id的组织）\n- 改：【企业管理】更改了企业的名称，【组织管理】就要对对应的企业组织（在所有`enterprise_id`符合企业id的组织里找`higher_org`为0的组织）改名\n\n这个工作前端后端都可以做，经过权衡，我们决定让后端完成这个工作，更改`xml`文件就可以了。\n\n#### 2.2.3 前端对于树表的处理\n\n若依展示树表的方式是使用一个`Treeselect`组件。之后的代码里，如果要使用树表下拉框，也需要注册这个组件。\n\n```javascript\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nexport default {\n  name: \"Org\",\n  components: {\n    Treeselect\n  },\n  ...\n};\n```\n\n树表在下拉框的使用：\n\n```html\n<el-col :span=\"24\" v-if=\"form.higherOrg !== 0\">\n  <el-form-item label=\"上级组织\" prop=\"higherOrg\">\n    <treeselect\n      v-model=\"form.higherOrg\"\n      :options=\"orgOptions\"\n      :normalizer=\"normalizer\"\n      placeholder=\"请选择或搜索上级组织\" />\n  </el-form-item>\n</el-col>\n```\n\n![添加组织页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-14.png)\n\n我对若依自动生成的树表进行了一些修改，以便更满足我们的逻辑要求：\n\n1. 若依默认的下拉树结构有顶级节点，并设置id为0：\n\n   ```javascript\n   /** 查询部门下拉树结构 */\n   getTreeselect() {\n     listOrg().then(response => {\n       this.orgOptions = [];\n       const data = { orgId: 0, deptName: '顶级节点', children: [] };\n       data.children = this.handleTree(response.data, \"orgId\", \"higherOrg\");\n       this.orgOptions.push(data);\n     });\n   },\n   ```\n\n   我们需要有顶级节点的存在，但是不希望它出现在下拉树里，就把它去掉，直接设置`orgOptions`：\n\n   ```javascript\n   /** 查询部门下拉树结构 */\n   getTreeselect() {\n     listOrg().then(response => {\n       this.orgOptions = this.handleTree(response.data, \"orgId\", \"higherOrg\");\n     });\n   },\n   ```\n\n2. 用户点击表格上方的新增时，页面如下：\n\n   ![添加组织页面（普通）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-16 - 副本.png)\n\n   用户点击表格右侧的新增时，可以填充对应的所属企业与上级组织（表示新增该组织的下级组织），符合操作逻辑：\n\n   ```javascript\n   /** 新增按钮操作 */\n   handleAdd(row) {\n     this.reset();\n     if (row !== undefined) {\n       this.form.higherOrg = row.orgId;\n       this.form.enterpriseId = row.enterpriseId;\n     }\n     this.getTreeselect();\n     this.open = true;\n     this.title = \"添加组织\";\n   },\n   ```\n\n   ![添加组织页面（特定组织）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-17.png)\n\n3. 对于企业组织，我们不希望用户在【组织管理】对其做过多的改动（因为改动可以在【企业管理】完成），就做如下修改：\n\n   - 企业组织不需要删除按钮，给它加一个`v-if`：\n\n     ```html\n     <el-button\n       v-if=\"scope.row.higherOrg !== 0\"\n       size=\"mini\"\n       type=\"text\"\n       icon=\"el-icon-delete\"\n       @click=\"handleDelete(scope.row)\"\n       v-hasPermi=\"['enterpriseCenter:org:remove']\"\n     >删除</el-button>\n     ```\n\n     ![隐藏企业组织的删除](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-15.png)\n\n   - 企业组织本身不需要展现上级组织，加`v-if`将其隐藏；企业组织的所属企业与部门名称不希望用户在此修改，加`v-if`和`disabled`属性：\n\n     ```html\n     <!-- 添加或修改组织管理对话框 -->\n     <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" append-to-body>\n       <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n         <el-row>\n           <el-col :span=\"24\">\n             <el-form-item label=\"所属企业\" prop=\"enterpriseId\">\n               <el-select\n                 v-model=\"form.enterpriseId\"\n                 filterable\n                 v-if=\"form.higherOrg !== 0\"\n                 placeholder=\"请选择或搜索所属企业\"\n                 style=\"width: 100%\">\n                 <el-option\n                   v-for=\"enter in enterOptions\"\n                   :key=\"enter.value\"\n                   :label=\"enter.label\"\n                   :value=\"enter.value\">\n                 </el-option>\n               </el-select>\n               <el-select\n                 v-model=\"form.enterpriseId\"\n                 filterable\n                 v-else\n                 disabled\n                 placeholder=\"请选择或搜索所属企业\"\n                 style=\"width: 100%\">\n                 <el-option\n                   ...\n                 </el-option>\n               </el-select>\n             </el-form-item>\n           </el-col>\n           <el-col :span=\"24\"  v-if=\"form.higherOrg !== 0\">\n             <el-form-item label=\"上级组织\" prop=\"higherOrg\">\n               <treeselect\n                 v-model=\"form.higherOrg\"\n                 :options=\"orgOptions\"\n                 :normalizer=\"normalizer\"\n                 placeholder=\"请选择或搜索上级组织\" />\n             </el-form-item>\n           </el-col>\n           <el-col :span=\"24\">\n             <el-form-item label=\"部门名称\" prop=\"deptName\">\n               <el-input v-model=\"form.deptName\" v-if=\"form.higherOrg !== 0\" placeholder=\"请输入部门名称\" />\n               <el-input v-model=\"form.deptName\" v-else :disabled=\"true\" placeholder=\"请输入部门名称\" />\n             </el-form-item>\n           </el-col>\n           ...\n         </el-row>\n       </el-form>\n     </el-dialog>\n     ```\n\n     ![修改组织页面（企业组织）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-18.png)\n\n     这样就只允许修改企业组织的地址、联系人、电话等信息。\n\n## 3 设备中心\n\n【设备中心】用于管理该公司的机床设备，以便实时监控。\n\n### 3.1 变量信息\n\n【变量信息】模块是个很简单的单表，用来存储用户的自定义变量。\n\n![变量信息页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-20.png)\n\n#### 3.1.1 变量绑定功能的逻辑\n\n1. 后端用Node-RED采集加入网络的机床的数据，采用**饱和采集**，即采集所有机床的所有数据\n2. 用户在【设备信息】模块加入设备，并设置数控系统id\n3. 用户在【变量信息】模块里自定义一个变量，并将该变量与MongoDB数据库采集到的变量名关联起来\n4. 用户在【设备类型】模块里对该设备的类型绑定需要的变量\n5. 系统根据该机床的数控系统id，拿到MongoDB里该机床的所有数据\n6. 前端再判断哪些变量绑定了，绑定的展示给用户，未绑定的不予展示\n\n事实上，我们还做不到远程控制（绑定的采集，不绑定的不采集），只能饱和采集、饱和获取数据，再按需展示。\n\n#### 3.1.2 变量关联\n\n自定义变量的目的，是前端展示变量数据时，可以自定义显示的变量名、变量单位等。它本身不具有任何意义，除非与MongoDB的变量关联。\n\nMongoDB采集到的数据有特殊的变量字段名，用户自定义变量后，与该变量字段关联，就可以使用这个数据。\n\n如MongoDB的`poweronTime`采集到了数据220，前端显示：`当前运行时间：220 分钟`。如果用户更改这个变量的名称与单位，则前端显示随之改变，但数值不变。（不支持单位转换，如果单位设置为秒，则还是显示`220 秒`）\n\n![添加变量信息页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-21.png)\n\n```html\n<!-- 添加或修改变量信息对话框 -->\n<el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" append-to-body>\n  <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\n    <el-form-item label=\"变量名称\" prop=\"paramName\">\n      <el-input v-model=\"form.paramName\" placeholder=\"请输入变量名称\" />\n    </el-form-item>\n    <el-form-item label=\"变量关联\" prop=\"mongoId\">\n      <el-select\n        v-model=\"form.mongoId\"\n        style=\"width: 100%\"\n        filterable\n        clearable\n        placeholder=\"请选择或搜索系统变量\">\n        <el-option\n          v-for=\"mv in mongoVariableOptions\"\n          :key=\"mv.value\"\n          :label=\"mv.label\"\n          :value=\"mv.value\">\n          <span style=\"float:left\">{{ mv.label }}</span>\n          <span style=\"float:right; color: #8492a6; font-size: 13px\">{{ mv.description }}</span>\n        </el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"数据类型\" prop=\"paramType\">\n      <el-select v-model=\"form.paramType\" placeholder=\"请选择数据类型\" style=\"width: 100%;\">\n        <el-option\n          v-for=\"dict in paramTypeOptions\"\n          :key=\"dict.dictValue\"\n          :label=\"dict.dictLabel\"\n          :value=\"dict.dictValue\">\n        </el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"变量单位\" prop=\"paramUnit\">\n      <el-input v-model=\"form.paramUnit\" placeholder=\"请输入变量单位\" v-if=\"form.paramType === 'numerical'\"/>\n      <el-input v-model=\"form.paramUnit\" disabled placeholder=\"仅数值型变量可输入单位\" v-else/>\n    </el-form-item>\n    ...\n  </el-form>\n  ...\n</el-dialog>\n```\n\n`mongoVariableOptions`是从数据库里拿的，因为它一般不会变化，所以没有做前端入口，但是保留了前端api调用。如果要修改，需要直接操作数据库。同时，由于自定义变量数据库存放的是mongoDB变量的id，因此表格里需要做格式化，不能显示id，要显示`label`。\n\n```javascript\n// mongo变量列表获取\ngetMongoVariables() {\n  listMongoVariable().then(response => {\n    this.mongoVariableOptions = [];\n    for (let row of response.rows) {\n      let item = {\n        value: row.id,\n        label: row.mongoName,\n        description: row.mongoDescription\n      };\n      this.mongoVariableOptions.push(item);\n    }\n  });\n},\n// 变量关联翻译\nmongoIdFormat(row, column) {\n  return this.mongoVariableOptions.find(mongo => mongo.value === row.mongoId)? this.mongoVariableOptions.find(mongo => mongo.value === row.mongoId).label : '';\n},\n```\n\n这里用到了[`find`函数](https://www.runoob.com/jsref/jsref-find.html)，用来代替复杂的`for-if`来寻找数组中符合条件的元素。否则以上代码就会写成：\n\n```javascript\n// 变量关联翻译\nmongoIdFormat(row, column) {\n  for (let mongo of this.mongoVariableOptions) {\n    if (mongo.value === row.mongoId) {\n      return mongo.label;\n    } else {\n      return '';\n    }\n  }\n},\n```\n\n显然太麻烦了，尤其是在类似的操作很多的情况下。\n\n### 3.2 设备类型\n\n【设备类型】模块也是个简单单表，用来定义机床的类型，但我们在上面加了绑定变量的功能。\n\n![设备类型页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-22.png)\n\n#### 3.2.1 图片上传与显示\n\n图片上传功能是若依自带的`ImageUpload`组件，不需要额外设置。\n\n![添加设备类型页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-23.png)\n\n图片传到数据库的是图片路径字符串，为了显示在表格里，我写了如下的代码：\n\n```html\n<el-table v-loading=\"loading\" :data=\"typeList\" @selection-change=\"handleSelectionChange\">\n  ...\n  <el-table-column label=\"类型图片\" align=\"center\" prop=\"devicetypeImage\">\n    <template slot-scope=\"scope\">\n      <el-image\n        v-if=\"scope.row.devicetypeImage !== null\"\n        style=\"width: 100px; height: 100px;\"\n        :src=\"scope.row.devicetypeImage\"\n        :preview-src-list=\"[scope.row.devicetypeImage]\">\n      </el-image>\n    </template>\n  </el-table-column>\n  ...\n</el-table>\n```\n\n图片有则显示，没有则不显示，如果不加`v-if`，没有图片时会出现一个读取图片失败的方框占位，影响美观。\n\n#### 3.2.2 单选/多选按钮的逻辑\n\n表格内有两类按钮，一类是表格上方带颜色的按钮，一类是表格右边每个数据项的蓝色文字按钮。这两类按钮功能基本一致。\n\n表格右边的按钮与每个数据项关联，因此只对某个数据项起作用；表格上方的按钮与表格左边的多选框关联，因此不一定只对一个数据项起作用。像修改按钮，不允许多选操作，只允许单选操作，删除按钮则同时支持单选/多选操作。我们设计的绑定变量功能应与修改按钮类似。\n\n若依则是通过如下方式设置这两种按钮的逻辑的：\n\n- 表格数据项按钮传参，为当前参数；上方的按钮不传参，此时函数的参数就为`undefined`，通过一个数组`ids`去处理。再通过逻辑或选择，见2.1.3节。\n- 上方的按钮设置`disabled`属性为布尔值`single`或`multiple`，在勾选时改变其布尔值，以达到按钮启用效果。\n\n```html\n<el-row :gutter=\"10\" class=\"mb8\">\n  ...\n  <el-col :span=\"1.5\">\n    <el-button\n      type=\"success\"\n      plain\n      icon=\"el-icon-edit\"\n      size=\"mini\"\n      :disabled=\"single\"\n      @click=\"handleUpdate\"\n      v-hasPermi=\"['deviceCenter:type:edit']\"\n    >修改</el-button>\n  </el-col>\n  <el-col :span=\"1.5\">\n    <el-button\n      type=\"danger\"\n      plain\n      icon=\"el-icon-delete\"\n      size=\"mini\"\n      :disabled=\"multiple\"\n      @click=\"handleDelete\"\n      v-hasPermi=\"['deviceCenter:type:remove']\"\n    >删除</el-button>\n  </el-col>\n  ...\n  <el-col :span=\"1.5\">\n    <el-button\n      type=\"info\"\n      plain\n      icon=\"el-icon-key\"\n      size=\"mini\"\n      :disabled=\"single\"\n      @click=\"handleBind\"\n      v-hasPermi=\"['deviceCenter:type:bind']\"\n    >绑定变量</el-button>\n  </el-col>\n  ...\n</el-row>\n\n<el-table v-loading=\"loading\" :data=\"typeList\" @selection-change=\"handleSelectionChange\">\n  <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n  ...\n  <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n    <template slot-scope=\"scope\">\n      <el-button\n        size=\"mini\"\n        type=\"text\"\n        icon=\"el-icon-edit\"\n        @click=\"handleUpdate(scope.row)\"\n        v-hasPermi=\"['deviceCenter:type:edit']\"\n      >修改</el-button>\n      <el-button\n        size=\"mini\"\n        type=\"text\"\n        icon=\"el-icon-key\"\n        @click=\"handleBind(scope.row)\"\n        v-hasPermi=\"['deviceCenter:type:edit']\"\n      >绑定</el-button>\n      <el-button\n        size=\"mini\"\n        type=\"text\"\n        icon=\"el-icon-delete\"\n        @click=\"handleDelete(scope.row)\"\n        v-hasPermi=\"['deviceCenter:type:remove']\"\n      >删除</el-button>\n    </template>\n  </el-table-column>\n</el-table>\n```\n\n```javascript\ndata() {\n  return {\n    ...\n    // 选中数组\n    ids: [],\n    // 非单个禁用\n    single: true,\n    // 非多个禁用\n    multiple: true,\n    ...\n  };\n},\nmethods: {\n  ...\n  // 多选框选中数据\n  handleSelectionChange(selection) {\n    this.ids = selection.map(item => item.id)\n    this.single = selection.length!==1\n    this.multiple = !selection.length\n  },\n  ...\n}\n```\n\n#### 3.2.3 绑定变量\n\n绑定变量用的是一个穿梭框，基于[ElementUI的穿梭框](https://element.eleme.cn/#/zh-CN/component/transfer)设计。左边是变量列表，右边是已与该类型绑定的变量。\n\n![对设备类型绑定变量页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-24.png)\n\n**Vue部分**，将穿梭框放在一个对话框里即可。\n\n```html\n<!-- 绑定变量对话框 -->\n<el-dialog :title=\"bindingparamTitle\" :visible.sync=\"bindingparamOpen\" width=\"800px\" append-to-body>\n  <div style=\"text-align: center\">\n    <el-transfer\n      v-model=\"deviceBindingParamValue\"\n      style=\"text-align: left; display: inline-block\"\n      :titles=\"['全部变量','已选择的变量']\"\n      filterable\n      filter-placeholder=\"请输入变量名称\"\n      :data=\"paramOptions\" />\n  </div>\n  <div slot=\"footer\" class=\"dialog-footer\">\n    <el-button type=\"primary\" @click=\"bindingparamSubmitForm\">确 定</el-button>\n    <el-button @click=\"bindingparamCancel\">取 消</el-button>\n  </div>\n</el-dialog>\n```\n\n**`script`部分**，当用户点击某个设备类型的绑定按钮时，调用`handleBind`函数：\n\n```javascript\n/** 绑定变量按钮操作 */\nhandleBind(row) {\n  this.deviceBindingParamValue = [];\n  this.deviceBindingParamValueOrigin =[];\n  this.bindingTypeId = row.id || this.ids[0];\n  listDevicetypeparam().then(response => {\n    for(let row of response.rows) {\n      if (row.devicetypeId === this.bindingTypeId) {\n        this.deviceBindingParamValue.push(row.paramId);\n        this.deviceBindingParamValueOrigin.push(row.paramId);\n      }\n    }\n  });\n  getType(this.bindingTypeId).then(response => {\n    this.bindingparamOpen = true;\n    this.bindingparamTitle = \"对设备类型绑定变量\";\n  });\n},\n```\n\n提前准备一个类型与变量的关联表，存储两者id。上面第6行查询该表，并把属于该类型的已绑定的变量id拿出来放在数组中备用。\n\n用户在穿梭框内操作完毕，准备点击确定按钮时，调用`bindingparamSubmitForm`函数：\n\n```javascript\n/** 绑定变量提交按钮 */\nbindingparamSubmitForm() {\n  let needToDelete = [];\n  let needToAdd = [];\n  const difference = this.deviceBindingParamValueOrigin.concat(this.deviceBindingParamValue).filter(function(v, i, arr) {\n    return arr.indexOf(v) === arr.lastIndexOf(v);\n  });\n  for (let dif of difference) {\n    if (this.deviceBindingParamValue.indexOf(dif) >= 0) {\n      needToAdd.push(dif);\n    }\n    else if (this.deviceBindingParamValueOrigin.indexOf(dif) >= 0) {\n      needToDelete.push(dif);\n    }\n  }\n  for (let add of needToAdd) {\n    addDevicetypeparam({\n      devicetypeId: this.bindingTypeId,\n      paramId: add,\n      enterpriseId: null\n    });\n    listDevice().then(response => {\n      for (let device of response.rows) {\n        if (device.devicetypeId === this.bindingTypeId) {\n          addDeviceParamType({\n            deviceId: device.id,\n            paramId: add,\n            devicetypeId: this.bindingTypeId,\n            ncsId: device.ncsId,\n            enterpriseId: device.enterpriseId\n          })\n        }\n      }\n    });\n  }\n  for (let del of needToDelete) {\n    listDevicetypeparam().then(response => {\n      for (let row of response.rows) {\n        if (row.devicetypeId === this.bindingTypeId && row.paramId === del) {\n          delDevicetypeparam(row.id);\n          break;\n        }\n      }\n    });\n    listDeviceParamType().then(response => {\n      for (let row of response.rows) {\n        if (row.devicetypeId === this.bindingTypeId && row.paramId === del) {\n          delDeviceParamType(row.id);\n        }\n      }\n    });\n  }\n  if (needToAdd.length !== 0 || needToDelete.length !== 0) {\n    this.msgSuccess(\"成功\");\n  }\n  this.bindingparamOpen = false;\n  this.getList();\n},\n```\n\n上述代码的逻辑是，判断一下现在的`deviceBindingParamValue`数组与穿梭框修改后的有哪些变化，有加的就加`needToAdd`，有删除的就加`needToDelete`，再逐一修改。其中5-15行这里：\n\n```javascript\nconst difference = this.deviceBindingParamValueOrigin.concat(this.deviceBindingParamValue).filter(function(v, i, arr) {\n  return arr.indexOf(v) === arr.lastIndexOf(v);\n});\nfor (let dif of difference) {\n  if (this.deviceBindingParamValue.indexOf(dif) >= 0) {\n    needToAdd.push(dif);\n  }\n  else if (this.deviceBindingParamValueOrigin.indexOf(dif) >= 0) {\n    needToDelete.push(dif);\n  }\n}\n```\n\n`concat`连接改变前和改变后的两个数组，`filter`筛选出其中元素前后索引值相等的数组（即只出现一次的数字，就是被改变的），再通过判断这个数组中每个元素出现在改变前还是改变后的数组，确定要加还是要删。\n\n如`deviceBindingParamValueOrigin`数组（改变前）为`[1, 2, 4]`，`deviceBindingParamValue`数组（改变后）为`[1, 4, 5]`，则[`concat`](https://www.runoob.com/jsref/jsref-concat-string.html)后为`[1, 2, 4, 1, 4, 5]`，[`filter`](https://www.runoob.com/jsref/jsref-filter.html)后为`[2, 5]`，判断后，`needToAdd`为`[5]`，`needToDelete`为`[2]`，再拿这两个数组去做真正地增删操作。\n\n用户准备点击取消按钮时，调用`bindingparamCancel`函数：\n\n```javascript\n// 绑定变量取消按钮\nbindingparamCancel() {\n  this.bindingparamOpen = false;\n  this.deviceBindingParamValue = [];\n  this.deviceBindingParamValueOrigin =[];\n  this.bindingTypeId = 0;\n}\n```\n\n### 3.3 设备信息\n\n【设备信息】模块也是个单表，用来存储每台具体的设备。\n\n![设备信息页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-25.png)\n\n这个单表没有更多的技术难点。每个数据项的操作加了一个更多信息按钮，这个按钮可以跳转到该机床的监控页面，跳转是通过路由进行的，这一部分放到后面再讲。\n\n```html\n<router-link :to=\"`/status/device/` + scope.row.id\">\n  <el-button\n    size=\"mini\"\n    type=\"text\"\n    icon=\"el-icon-more\"\n  >更多信息\n  </el-button>\n</router-link>\n```\n\n\n\n---\n\n以上【企业中心】和【设备中心】两个模块，如果不算后期不断地调整美化，只算页面和功能的大体成型，我大概做了**3个星期**左右。这3个星期也是边学边做的一个过程，巩固了很多Vue和JavaScript的知识，对于我的代码和debug能力有很大的提升。昆山团队退出后，我们开始忙于【工作台】与【统计报表】的制作，这花了我**整整2个月**。这两个模块的技术难度也不亚于这篇文章所提到的，下次有空再补充！\n\n![企业中心和设备中心的commit过程](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-26.png)\n","source":"_posts/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-1.md","raw":"---\ntitle: 开发某机床厂远程运维平台的前端技术总结（1）\ndate: 2021-10-27 22:33:05\ncategories: Development\ntags:\n  - Vue\n  - ElementUI\n  - 技术\n  - 前端\n  - 编程\n  - 开发\n  - 远程运维\n  - 工业互联网平台\ncomments: true\n---\n\n今年3月到7月，我参与了课题组负责的**某机床厂远程运维平台开发**的项目，并主要承担前端开发工作。这个项目马上（10月底）就要结题了，因此总结一下在这半年的开发过程中遇到的一些技术问题或难题，以给之后的学习或开发作参考。\n\n<!--more-->\n\n## 1 项目简介\n\n这个项目是导师接的一个工业互联网项目，用于某机床厂的远程运营维护。从3月开始，我们就着手参与这个项目。\n\n> 本平台主要适用于工业互联网远程运维场景，采集机床运行数据，及时、准确地为机床厂提供机床的各项运行数据可视化、设备故障的报警等相关信息，高效地为用户提供机床的远程运维服务。\n>\n> ——《智能运维云平台用户操作手册》\n\n这个平台由3个团队共同参与开发，分别是杭州团队（浙大）、苏州团队（苏州研究院）和昆山团队（昆山某公司），后来昆山团队退出了，项目就完全由杭州和苏州负责了。\n\n这个项目里我们杭州团队负责了【企业中心】、【设备中心】的开发，在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。杭州团队是包括我在内的3个研究生，我负责前端，另外2个同学负责后端，其中1个还负责数据库管理。\n\n4月初，我们经过了多次讨论，研究了若干技术选型，如人人开源、JeecgBoot等，最终决定以[若依管理系统](http://ruoyi.vip/)为基础，搭建我们的平台。从以下我们做好的首页中，也可以见到一丝端倪。\n\n![首页](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-01 - 副本2.png)\n\n（首页除了下面的**合作伙伴**是我设计的外，其他全部是苏州团队设计的）\n\n从4月开始，我着手学习前端三件套、[Vue](https://v3.cn.vuejs.org/)与[ElementUI](https://element.eleme.cn/#/zh-CN)，并到后期边做边学，积累了很多技术经验。并且由于前端需要后端支持，因此我也在自己的电脑上搭配了完整的后端环境。\n\n## 2 企业中心\n\n【企业中心】用于管理该公司对接的所有企业，也就是它的销售方。\n\n### 2.1 企业管理\n\n我们第一个着手做的就是【企业中心】的【企业管理】模块。这是一个单表，即这个模块只需要**增删改查**的功能，能实现数据项的罗列与变更功能。由于若依系统自带**代码生成器**，可以根据数据库的某个表自动生成后端代码（domain、mapper、service、controller四个层）以及前端代码（api接口和vue页面），所以这很大程度减轻了我们的工作量，我们只需要生成表再改一改就好了。下文中与表有关的模块大多数都是这么做的。\n\n![企业管理页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-02.png)\n\n#### 2.1.1 企业地区\n\n这是后来加的一个功能，客户要求在【企业管理】模块，每个企业可以有一个对应的地区，并且可以根据地区筛选企业。\n\n要导入全国的省市区数据就是一个很麻烦的过程，这个是很难做到写死在代码里的。我找到了ElementUI提供的一个npm包，包含所有中国省市区级联数据，即[element-china-area-data](https://www.npmjs.com/package/element-china-area-data)，并根据[这个页面的示例](https://plortinus.github.io/element-china-area-data/index.html)做了这个功能。这个包是ElementUI提供的，所以可以直接使用[ElementUI的级联选择器](https://element.eleme.cn/#/zh-CN/component/cascader)。\n\n1. 导入这个包里所用到的几个数组和对象。\n\n   ```javascript\n   import {provinceAndCityData, regionData, provinceAndCityDataPlus, regionDataPlus, CodeToText, TextToCode} from 'element-china-area-data';\n   ```\n\n2. 数据库里，每一条企业数据省、市、区是三个字段，在前端表格的显示上，要稍微修改一下格式：\n\n   ```html\n   <el-table v-loading=\"loading\" :data=\"infoList\" @selection-change=\"handleSelectionChange\">\n     ...\n     <el-table-column label=\"地区\" align=\"center\" prop=\"province\" :formatter=\"provinceFormat\"/>\n     ...\n   </el-table>\n   ```\n\n   ```javascript\n   // 地区处理\n   provinceFormat(row, column) {\n     let region = '';\n     if (row.province) {\n       region += row.province;\n     }\n     for (let item of [row.city, row.country]) {\n       if (item) {\n         region += '/' + item;\n       }\n     }\n     return region;\n   },\n   ```\n\n   ![表格里显示的地区](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-03.png)\n\n   因为数据库里有单独的“省”字段，因此搜索时可以只筛选省。\n\n   ```html\n   <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"75px\">\n     <el-form-item label=\"企业地区\" prop=\"province\">\n       <el-select\n         size=\"small\"\n         v-model=\"queryParams.province\"\n         clearable\n         filterable\n         placeholder=\"请选择或搜索企业地区\"\n       >\n         <el-option\n           v-for=\"province in provinceOptions\"\n           :key=\"province.value\"\n           :label=\"province.label\"\n           :value=\"province.value\">\n         </el-option>\n       </el-select>\n     </el-form-item>\n     ...\n   </el-form>\n   ```\n\n   ```javascript\n   data() {\n     return {\n       ...\n       provinceOptions: regionData.map(province => ({value: province.label, label: province.label})),\n       ...\n     }\n   }\n   ```\n\n   ![搜索功能的企业地区](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-04.png)\n\n3. 新增企业功能，客户要求省份信息必填，市区信息选填，所以这个级联菜单与element-china-area-data的展示页面做得有所不同。\n\n   ```html\n   <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body>\n     <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n       <el-row>\n         ...\n         <el-col :span=\"12\">\n           <el-form-item label=\"企业地区\" prop=\"province\">\n             <el-select\n               v-model=\"form.province\"\n               display=\"inline-block\"\n               placeholder=\"请选择或搜索企业地区\"\n               clearable\n               filterable\n               style=\"width: 100%;\"\n               @change=\"handleRegionInfo\">\n               <el-option\n                 v-for=\"province in provinceOptions\"\n                 :key=\"province.value\"\n                 :label=\"province.label\"\n                 :value=\"province.value\">\n               </el-option>\n             </el-select>\n           </el-form-item>\n         </el-col>\n         <el-col :span=\"12\">\n           <el-form-item label=\"具体市区\" prop=\"selectedRegionOptions\">\n             <el-cascader\n               v-if=\"form.province\"\n               :options=\"regionOptions\"\n               v-model=\"form.selectedRegionOptions\"\n               :key=\"provinceRefresh\"\n               clearable\n               filterable\n               style=\"width: 100%\"\n               placeholder=\"请选择或搜索具体市区\"\n             >\n             </el-cascader>\n             <el-cascader\n               v-else\n               disabled\n               style=\"width: 100%\"\n               placeholder=\"请先选择企业地区\">\n             </el-cascader>\n           </el-form-item>\n         </el-col>\n         ...\n       </el-row>\n     </el-form>\n     ...\n   </el-dialog>\n   ```\n\n   下拉列表和级联列表要联动，什么省就要给什么市，所以要给级联表加个`key`（否则级联表不会根据所选省份变化），并且绑定到一个`provinceRefresh`的变量上，并在其他相关部分将其设置为省份的`code`，然后在某个函数处理省份的变化，见如下的`script`部分：\n\n   ```javascript\n   data() {\n     return {\n       ...\n       regionOptions: [],\n       provinceRefresh: null,\n       rules: {\n         ...\n         province: [\n           {required: true, message: \"企业地区不能为空\", trigger: \"change\"}\n         ],\n         ...\n       },\n     };\n   },\n   methods: {\n     ...\n     /** 新增按钮操作 */\n     handleAdd() {\n       this.reset();\n       this.regionOptions = this.form.province ? regionData.find(province => province.label === this.form.province).children : [];\n       this.provinceRefresh = this.form.province ? TextToCode[this.form.province].code : null;\n       this.open = true;\n       this.title = \"添加企业\";\n       },\n       /** 修改按钮操作 */\n     handleUpdate(row) {\n       this.reset();\n       const id = row.id || this.ids\n       getInfo(id).then(response => {\n         this.form = response.data;\n         if (this.form.province) {\n           this.regionOptions =  regionData.find(province => province.label === this.form.province).children;\n           if (this.form.city && this.form.country) {\n             this.form.selectedRegionOptions = [TextToCode[this.form.province][this.form.city].code, TextToCode[this.form.province][this.form.city][this.form.country].code];\n           }\n           this.provinceRefresh = TextToCode[this.form.province].code;\n         }\n         this.open = true;\n         this.title = \"修改企业\";\n       });\n     },\n     /** 提交按钮 */\n     submitForm() {\n       if (this.form.selectedRegionOptions.length) {\n         this.form.city = CodeToText[this.form.selectedRegionOptions[0]];\n         this.form.country = CodeToText[this.form.selectedRegionOptions[1]];\n       }\n       else {\n         this.form.city = '';\n         this.form.country = '';\n       }\n       this.provinceRefresh = null;\n       this.$refs[\"form\"].validate(valid => {\n         if (valid) {\n           if (this.form.id != null) {\n             updateInfo(this.form).then(response => {\n               this.msgSuccess(\"修改成功\");\n               this.open = false;\n               this.getList();\n             });\n           } else {\n             addInfo(this.form).then(response => {\n               this.msgSuccess(\"新增成功\");\n               this.open = false;\n               this.getList();\n             });\n           }\n         }\n       });\n     },\n     ...\n     // 企业地区修改\n     handleRegionInfo() {\n       if (this.form.province) {\n         this.regionOptions = regionData.find(province => province.label === this.form.province).children;\n         this.provinceRefresh = TextToCode[this.form.province].code\n       }\n     }\n   }\n   ```\n\n   ![添加企业界面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-05.png)\n\n#### 2.1.2 字典的使用\n\n字典是若依系统自带的功能，对于一些常用的选项，若依可以将他们存在同一个数据库中，并设置键、值，以便可以随时调用。\n\n通常使用字典的步骤如下：\n\n1. 在【字典管理】里新增一个字典，设置字典名称（即字典释义）和字典类型（即变量名）：\n\n   ![字典管理页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-07.png)\n\n2. 点开这个字典页面，向里面添加数据，分别输入标签和键值：\n\n   ![字典数据页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-08.png)\n\n3. 在前端的Vue代码里，使用下拉菜单时，绑定键值：\n\n   ```html\n   <el-form-item label=\"数据类型\" prop=\"paramType\">\n     <el-select v-model=\"queryParams.paramType\" placeholder=\"请选择数据类型\" clearable size=\"small\">\n       <el-option\n         v-for=\"dict in paramTypeOptions\"\n         :key=\"dict.dictValue\"\n         :label=\"dict.dictLabel\"\n         :value=\"dict.dictValue\"\n       />\n     </el-select>\n   </el-form-item>\n   ```\n\n4. 在前端的`script`部分，定义这个数组，并且使用若依自带的函数去获取它：\n\n   ```javascript\n   data() {\n     return {\n       ...\n       paramTypeOptions: [],\n       ...\n     };\n   },\n   created: {\n     ...\n     this.getDicts(\"device_param_type\").then(response => {\n       this.paramTypeOptions = response.data;\n     });\n     ...\n   },\n   ```\n\n5. 在表格里使用时，需要定义一个格式函数，因为数据库里存的是字典键值，表格里展示的是字典标签：\n\n   ```html\n   <el-table-column label=\"数据类型\" align=\"center\" prop=\"paramType\" :formatter=\"paramTypeFormat\"/>\n   ```\n\n   ```javascript\n   // 数据类型字典翻译\n   paramTypeFormat(row, column) {\n     return this.selectDictLabel(this.paramTypeOptions, row.paramType);\n   },\n   ```\n\n在【企业管理】模块里，用到了许多类似于字典的选项，如经营状态、企业行业、公司类型，但我在代码中没用使用字典，而是写死在代码的数组里的。这样做的好处是节省函数调用，坏处是当我需要调整选项的时候，无法从前端或数据库去更改它，而是需要修改源代码。\n\n```html\n<el-form-item label=\"经营状态\" prop=\"operationState\">\n  <el-select\n    v-model=\"queryParams.operationState\"\n    clearable\n    size=\"small\"\n    placeholder=\"请选择经营状态\">\n    <el-option\n      v-for=\"os in operationStateOptions\"\n      :key=\"os.value\"\n      :label=\"os.label\"\n      :value=\"os.value\">\n    </el-option>\n  </el-select>\n</el-form-item>\n```\n\n```javascript\ndata() {\n  return {\n    ...\n    operationStateOptions: [],\n    ...\n  };\n},\n...\ncreated: {\n  this.getOperationStateOptions();\n  ...\n},\nmethods: {\n  ...\n  getOperationStateOptions() {\n    this.operationStateOptions = [];\n    for (let item of [\"存续\", \"在业\", \"吊销\", \"注销\", \"迁入\", \"迁出\", \"停业\", \"清算\"]) {\n      this.operationStateOptions.push({\n        value: item,\n        label: item\n      });\n    }\n  },\n  ...\n}\n```\n\n当然可能有更好的写法，但是只要让这个数组成为一个对象数组，并且有键值对（即`value`和`label`）就好了。\n\n如果需要前面出现编号，就改一下`label`：\n\n```javascript\ngetCompanyTypeOptions() {\n  this.companyTypeOptions = [];\n  let types = [\"有限责任公司（自然人独资）\", \"有限责任公司（自然人投资或控股）\", \"股份有限公司\", \"有限合伙企业\", \"外商独资公司\", \"个人独资企业\", \"国有独资公司\", \"外资企业\", \"非公司企业\", \"其他\"];\n  for (let index in types) {\n    this.companyTypeOptions.push({\n      value: types[index],\n      label: (parseInt(index) + 1) + '、' + types[index]\n    });\n  }\n},\n```\n\n![公司类型](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-09.png)\n\n（对于JavaScript的`for-each`循环，`in`循环的是数组的索引或对象的键，即`let index in array`、`let key in object`，`of`循环的是数组的元素，即`let item of array`；知道了索引或键，可以通过方括号或小数点去访问对应的元素或值；更详细可以看这篇文章：《{% post_link several-ways-of-traversing-arrays-and-objects-in-javascript %}》）\n\n#### 2.1.3 删除按钮的提示修改\n\n若依自带的删除提示是这样的：\n\n```javascript\n/** 删除按钮操作 */\nhandleDelete(row) {\n  const ids = row.id || this.ids;\n  this.$confirm('是否确认删除企业中心编号为\"' + ids + '\"的数据项?', \"警告\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(function() {\n      return delInfo(ids);\n    }).then(() => {\n      this.getList();\n      this.msgSuccess(\"删除成功\");\n    })\n},\n```\n\n第3行这个获取id，实际上是判断删除按钮的入口，是单个数据项，还是勾选后点击的删除，前者是一个对象（即参数`row`）的id，后者是一个id数组，通过逻辑或选择一个值。但是第4行会暴露主键id，因此我对这部分代码（以及我们做的所有模块的删除功能）做了如下修改：\n\n```javascript\n/** 删除按钮操作 */\nhandleDelete(row) {\n  const ids = row.id || this.ids;\n  let idsLength;\n  switch (typeof(ids)) {\n    case 'number' : idsLength = 1; break;\n    case 'object' : idsLength = ids.length; break;\n  }\n  this.$confirm('是否确认删除' + (idsLength>1 ? '这'+idsLength+'个' : '该') + '企业?', \"警告\", {\n    confirmButtonText: \"确定\",\n    cancelButtonText: \"取消\",\n    type: \"warning\"\n  }).then(function () {\n    return delInfo(ids);\n  }).then(() => {\n    this.getList();\n    this.msgSuccess(\"删除成功\");\n  })\n},\n```\n\nJavaScript的`typeof`函数可以返回变量的类型（字符串表示），如果是`number`类型，说明这是`row.id`，长度为1；如果是`object`类型（数组即对象），说明这是`this.ids`，长度为数组的`length`。再判断ids的长度是否大于1，输出对应的结果。\n\n![删除企业](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-10.png)\n\n#### 2.1.4 解决手机端消息框显示不全的问题\n\n在做响应式布局时遇到的bug，像上面删除时弹出的警告框，如果屏幕宽度过窄，可能显示不全，连确定按钮都点不到：\n\n![在屏幕宽度过窄时，消息框显示不全](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-19.png)\n\n所以我在代码的最后都加了一个样式：\n\n```css\n<style>\n@media screen and (max-width: 750px) {\n  .el-message-box {\n    width: 80% !important;\n  }\n}\n</style>\n```\n\n使消息框在屏幕尺寸小于750px时，宽度调整为相对尺寸（80%），避免显示不全。\n\n### 2.2 组织管理\n\n【组织管理】模块是一个树表。客户的要求是，对于某一个企业，可以给它加下级组织（下级部门），这个组织可以继续添加下级组织，企业也是一个组织，所有的企业应平级，即企业的上级组织汇聚到一个顶级组织（顶点）。加了组织后，机床就可以绑定到这个组织。\n\n![组织管理页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-11.png)\n\n#### 2.2.1 树表的逻辑\n\n数据库是没法放树表的，只可以放单表。每个组织在数据库中是单独的一项，表面上是同级的，但是可以给它加一个字段，表示该组织的上级组织。由于上下级组织是一对多的关系，所以我们只关注某个组织的上级组织，并一层层关联起来。\n\n数据库里，`org_id`是主键，`enterprise_id`跟踪这个组织的最顶层（指企业层）是什么，`higher_org`跟踪这个组织的上层组织是什么。\n\n![数据库里的组织表](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-12.png)\n\n![该表表示的逻辑关系](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-13.png)\n\n前端页面的显示方式见上上上图。\n\n#### 2.2.2 后端对于树表的处理\n\n由于**一个企业同时也是一个组织**，所以凡是在【企业管理】模块做的**增删改**操作都要关联到【组织管理】模块：\n\n- 增：【企业管理】增加一个企业，【组织管理】就要增加这个企业组织\n- 删：【企业管理】删除一个企业，【组织管理】就要删除这个企业组织及其所有下级组织（所有`enterprise_id`符合企业id的组织）\n- 改：【企业管理】更改了企业的名称，【组织管理】就要对对应的企业组织（在所有`enterprise_id`符合企业id的组织里找`higher_org`为0的组织）改名\n\n这个工作前端后端都可以做，经过权衡，我们决定让后端完成这个工作，更改`xml`文件就可以了。\n\n#### 2.2.3 前端对于树表的处理\n\n若依展示树表的方式是使用一个`Treeselect`组件。之后的代码里，如果要使用树表下拉框，也需要注册这个组件。\n\n```javascript\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nexport default {\n  name: \"Org\",\n  components: {\n    Treeselect\n  },\n  ...\n};\n```\n\n树表在下拉框的使用：\n\n```html\n<el-col :span=\"24\" v-if=\"form.higherOrg !== 0\">\n  <el-form-item label=\"上级组织\" prop=\"higherOrg\">\n    <treeselect\n      v-model=\"form.higherOrg\"\n      :options=\"orgOptions\"\n      :normalizer=\"normalizer\"\n      placeholder=\"请选择或搜索上级组织\" />\n  </el-form-item>\n</el-col>\n```\n\n![添加组织页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-14.png)\n\n我对若依自动生成的树表进行了一些修改，以便更满足我们的逻辑要求：\n\n1. 若依默认的下拉树结构有顶级节点，并设置id为0：\n\n   ```javascript\n   /** 查询部门下拉树结构 */\n   getTreeselect() {\n     listOrg().then(response => {\n       this.orgOptions = [];\n       const data = { orgId: 0, deptName: '顶级节点', children: [] };\n       data.children = this.handleTree(response.data, \"orgId\", \"higherOrg\");\n       this.orgOptions.push(data);\n     });\n   },\n   ```\n\n   我们需要有顶级节点的存在，但是不希望它出现在下拉树里，就把它去掉，直接设置`orgOptions`：\n\n   ```javascript\n   /** 查询部门下拉树结构 */\n   getTreeselect() {\n     listOrg().then(response => {\n       this.orgOptions = this.handleTree(response.data, \"orgId\", \"higherOrg\");\n     });\n   },\n   ```\n\n2. 用户点击表格上方的新增时，页面如下：\n\n   ![添加组织页面（普通）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-16 - 副本.png)\n\n   用户点击表格右侧的新增时，可以填充对应的所属企业与上级组织（表示新增该组织的下级组织），符合操作逻辑：\n\n   ```javascript\n   /** 新增按钮操作 */\n   handleAdd(row) {\n     this.reset();\n     if (row !== undefined) {\n       this.form.higherOrg = row.orgId;\n       this.form.enterpriseId = row.enterpriseId;\n     }\n     this.getTreeselect();\n     this.open = true;\n     this.title = \"添加组织\";\n   },\n   ```\n\n   ![添加组织页面（特定组织）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-17.png)\n\n3. 对于企业组织，我们不希望用户在【组织管理】对其做过多的改动（因为改动可以在【企业管理】完成），就做如下修改：\n\n   - 企业组织不需要删除按钮，给它加一个`v-if`：\n\n     ```html\n     <el-button\n       v-if=\"scope.row.higherOrg !== 0\"\n       size=\"mini\"\n       type=\"text\"\n       icon=\"el-icon-delete\"\n       @click=\"handleDelete(scope.row)\"\n       v-hasPermi=\"['enterpriseCenter:org:remove']\"\n     >删除</el-button>\n     ```\n\n     ![隐藏企业组织的删除](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-15.png)\n\n   - 企业组织本身不需要展现上级组织，加`v-if`将其隐藏；企业组织的所属企业与部门名称不希望用户在此修改，加`v-if`和`disabled`属性：\n\n     ```html\n     <!-- 添加或修改组织管理对话框 -->\n     <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" append-to-body>\n       <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n         <el-row>\n           <el-col :span=\"24\">\n             <el-form-item label=\"所属企业\" prop=\"enterpriseId\">\n               <el-select\n                 v-model=\"form.enterpriseId\"\n                 filterable\n                 v-if=\"form.higherOrg !== 0\"\n                 placeholder=\"请选择或搜索所属企业\"\n                 style=\"width: 100%\">\n                 <el-option\n                   v-for=\"enter in enterOptions\"\n                   :key=\"enter.value\"\n                   :label=\"enter.label\"\n                   :value=\"enter.value\">\n                 </el-option>\n               </el-select>\n               <el-select\n                 v-model=\"form.enterpriseId\"\n                 filterable\n                 v-else\n                 disabled\n                 placeholder=\"请选择或搜索所属企业\"\n                 style=\"width: 100%\">\n                 <el-option\n                   ...\n                 </el-option>\n               </el-select>\n             </el-form-item>\n           </el-col>\n           <el-col :span=\"24\"  v-if=\"form.higherOrg !== 0\">\n             <el-form-item label=\"上级组织\" prop=\"higherOrg\">\n               <treeselect\n                 v-model=\"form.higherOrg\"\n                 :options=\"orgOptions\"\n                 :normalizer=\"normalizer\"\n                 placeholder=\"请选择或搜索上级组织\" />\n             </el-form-item>\n           </el-col>\n           <el-col :span=\"24\">\n             <el-form-item label=\"部门名称\" prop=\"deptName\">\n               <el-input v-model=\"form.deptName\" v-if=\"form.higherOrg !== 0\" placeholder=\"请输入部门名称\" />\n               <el-input v-model=\"form.deptName\" v-else :disabled=\"true\" placeholder=\"请输入部门名称\" />\n             </el-form-item>\n           </el-col>\n           ...\n         </el-row>\n       </el-form>\n     </el-dialog>\n     ```\n\n     ![修改组织页面（企业组织）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-18.png)\n\n     这样就只允许修改企业组织的地址、联系人、电话等信息。\n\n## 3 设备中心\n\n【设备中心】用于管理该公司的机床设备，以便实时监控。\n\n### 3.1 变量信息\n\n【变量信息】模块是个很简单的单表，用来存储用户的自定义变量。\n\n![变量信息页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-20.png)\n\n#### 3.1.1 变量绑定功能的逻辑\n\n1. 后端用Node-RED采集加入网络的机床的数据，采用**饱和采集**，即采集所有机床的所有数据\n2. 用户在【设备信息】模块加入设备，并设置数控系统id\n3. 用户在【变量信息】模块里自定义一个变量，并将该变量与MongoDB数据库采集到的变量名关联起来\n4. 用户在【设备类型】模块里对该设备的类型绑定需要的变量\n5. 系统根据该机床的数控系统id，拿到MongoDB里该机床的所有数据\n6. 前端再判断哪些变量绑定了，绑定的展示给用户，未绑定的不予展示\n\n事实上，我们还做不到远程控制（绑定的采集，不绑定的不采集），只能饱和采集、饱和获取数据，再按需展示。\n\n#### 3.1.2 变量关联\n\n自定义变量的目的，是前端展示变量数据时，可以自定义显示的变量名、变量单位等。它本身不具有任何意义，除非与MongoDB的变量关联。\n\nMongoDB采集到的数据有特殊的变量字段名，用户自定义变量后，与该变量字段关联，就可以使用这个数据。\n\n如MongoDB的`poweronTime`采集到了数据220，前端显示：`当前运行时间：220 分钟`。如果用户更改这个变量的名称与单位，则前端显示随之改变，但数值不变。（不支持单位转换，如果单位设置为秒，则还是显示`220 秒`）\n\n![添加变量信息页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-21.png)\n\n```html\n<!-- 添加或修改变量信息对话框 -->\n<el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" append-to-body>\n  <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\n    <el-form-item label=\"变量名称\" prop=\"paramName\">\n      <el-input v-model=\"form.paramName\" placeholder=\"请输入变量名称\" />\n    </el-form-item>\n    <el-form-item label=\"变量关联\" prop=\"mongoId\">\n      <el-select\n        v-model=\"form.mongoId\"\n        style=\"width: 100%\"\n        filterable\n        clearable\n        placeholder=\"请选择或搜索系统变量\">\n        <el-option\n          v-for=\"mv in mongoVariableOptions\"\n          :key=\"mv.value\"\n          :label=\"mv.label\"\n          :value=\"mv.value\">\n          <span style=\"float:left\">{{ mv.label }}</span>\n          <span style=\"float:right; color: #8492a6; font-size: 13px\">{{ mv.description }}</span>\n        </el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"数据类型\" prop=\"paramType\">\n      <el-select v-model=\"form.paramType\" placeholder=\"请选择数据类型\" style=\"width: 100%;\">\n        <el-option\n          v-for=\"dict in paramTypeOptions\"\n          :key=\"dict.dictValue\"\n          :label=\"dict.dictLabel\"\n          :value=\"dict.dictValue\">\n        </el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"变量单位\" prop=\"paramUnit\">\n      <el-input v-model=\"form.paramUnit\" placeholder=\"请输入变量单位\" v-if=\"form.paramType === 'numerical'\"/>\n      <el-input v-model=\"form.paramUnit\" disabled placeholder=\"仅数值型变量可输入单位\" v-else/>\n    </el-form-item>\n    ...\n  </el-form>\n  ...\n</el-dialog>\n```\n\n`mongoVariableOptions`是从数据库里拿的，因为它一般不会变化，所以没有做前端入口，但是保留了前端api调用。如果要修改，需要直接操作数据库。同时，由于自定义变量数据库存放的是mongoDB变量的id，因此表格里需要做格式化，不能显示id，要显示`label`。\n\n```javascript\n// mongo变量列表获取\ngetMongoVariables() {\n  listMongoVariable().then(response => {\n    this.mongoVariableOptions = [];\n    for (let row of response.rows) {\n      let item = {\n        value: row.id,\n        label: row.mongoName,\n        description: row.mongoDescription\n      };\n      this.mongoVariableOptions.push(item);\n    }\n  });\n},\n// 变量关联翻译\nmongoIdFormat(row, column) {\n  return this.mongoVariableOptions.find(mongo => mongo.value === row.mongoId)? this.mongoVariableOptions.find(mongo => mongo.value === row.mongoId).label : '';\n},\n```\n\n这里用到了[`find`函数](https://www.runoob.com/jsref/jsref-find.html)，用来代替复杂的`for-if`来寻找数组中符合条件的元素。否则以上代码就会写成：\n\n```javascript\n// 变量关联翻译\nmongoIdFormat(row, column) {\n  for (let mongo of this.mongoVariableOptions) {\n    if (mongo.value === row.mongoId) {\n      return mongo.label;\n    } else {\n      return '';\n    }\n  }\n},\n```\n\n显然太麻烦了，尤其是在类似的操作很多的情况下。\n\n### 3.2 设备类型\n\n【设备类型】模块也是个简单单表，用来定义机床的类型，但我们在上面加了绑定变量的功能。\n\n![设备类型页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-22.png)\n\n#### 3.2.1 图片上传与显示\n\n图片上传功能是若依自带的`ImageUpload`组件，不需要额外设置。\n\n![添加设备类型页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-23.png)\n\n图片传到数据库的是图片路径字符串，为了显示在表格里，我写了如下的代码：\n\n```html\n<el-table v-loading=\"loading\" :data=\"typeList\" @selection-change=\"handleSelectionChange\">\n  ...\n  <el-table-column label=\"类型图片\" align=\"center\" prop=\"devicetypeImage\">\n    <template slot-scope=\"scope\">\n      <el-image\n        v-if=\"scope.row.devicetypeImage !== null\"\n        style=\"width: 100px; height: 100px;\"\n        :src=\"scope.row.devicetypeImage\"\n        :preview-src-list=\"[scope.row.devicetypeImage]\">\n      </el-image>\n    </template>\n  </el-table-column>\n  ...\n</el-table>\n```\n\n图片有则显示，没有则不显示，如果不加`v-if`，没有图片时会出现一个读取图片失败的方框占位，影响美观。\n\n#### 3.2.2 单选/多选按钮的逻辑\n\n表格内有两类按钮，一类是表格上方带颜色的按钮，一类是表格右边每个数据项的蓝色文字按钮。这两类按钮功能基本一致。\n\n表格右边的按钮与每个数据项关联，因此只对某个数据项起作用；表格上方的按钮与表格左边的多选框关联，因此不一定只对一个数据项起作用。像修改按钮，不允许多选操作，只允许单选操作，删除按钮则同时支持单选/多选操作。我们设计的绑定变量功能应与修改按钮类似。\n\n若依则是通过如下方式设置这两种按钮的逻辑的：\n\n- 表格数据项按钮传参，为当前参数；上方的按钮不传参，此时函数的参数就为`undefined`，通过一个数组`ids`去处理。再通过逻辑或选择，见2.1.3节。\n- 上方的按钮设置`disabled`属性为布尔值`single`或`multiple`，在勾选时改变其布尔值，以达到按钮启用效果。\n\n```html\n<el-row :gutter=\"10\" class=\"mb8\">\n  ...\n  <el-col :span=\"1.5\">\n    <el-button\n      type=\"success\"\n      plain\n      icon=\"el-icon-edit\"\n      size=\"mini\"\n      :disabled=\"single\"\n      @click=\"handleUpdate\"\n      v-hasPermi=\"['deviceCenter:type:edit']\"\n    >修改</el-button>\n  </el-col>\n  <el-col :span=\"1.5\">\n    <el-button\n      type=\"danger\"\n      plain\n      icon=\"el-icon-delete\"\n      size=\"mini\"\n      :disabled=\"multiple\"\n      @click=\"handleDelete\"\n      v-hasPermi=\"['deviceCenter:type:remove']\"\n    >删除</el-button>\n  </el-col>\n  ...\n  <el-col :span=\"1.5\">\n    <el-button\n      type=\"info\"\n      plain\n      icon=\"el-icon-key\"\n      size=\"mini\"\n      :disabled=\"single\"\n      @click=\"handleBind\"\n      v-hasPermi=\"['deviceCenter:type:bind']\"\n    >绑定变量</el-button>\n  </el-col>\n  ...\n</el-row>\n\n<el-table v-loading=\"loading\" :data=\"typeList\" @selection-change=\"handleSelectionChange\">\n  <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n  ...\n  <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n    <template slot-scope=\"scope\">\n      <el-button\n        size=\"mini\"\n        type=\"text\"\n        icon=\"el-icon-edit\"\n        @click=\"handleUpdate(scope.row)\"\n        v-hasPermi=\"['deviceCenter:type:edit']\"\n      >修改</el-button>\n      <el-button\n        size=\"mini\"\n        type=\"text\"\n        icon=\"el-icon-key\"\n        @click=\"handleBind(scope.row)\"\n        v-hasPermi=\"['deviceCenter:type:edit']\"\n      >绑定</el-button>\n      <el-button\n        size=\"mini\"\n        type=\"text\"\n        icon=\"el-icon-delete\"\n        @click=\"handleDelete(scope.row)\"\n        v-hasPermi=\"['deviceCenter:type:remove']\"\n      >删除</el-button>\n    </template>\n  </el-table-column>\n</el-table>\n```\n\n```javascript\ndata() {\n  return {\n    ...\n    // 选中数组\n    ids: [],\n    // 非单个禁用\n    single: true,\n    // 非多个禁用\n    multiple: true,\n    ...\n  };\n},\nmethods: {\n  ...\n  // 多选框选中数据\n  handleSelectionChange(selection) {\n    this.ids = selection.map(item => item.id)\n    this.single = selection.length!==1\n    this.multiple = !selection.length\n  },\n  ...\n}\n```\n\n#### 3.2.3 绑定变量\n\n绑定变量用的是一个穿梭框，基于[ElementUI的穿梭框](https://element.eleme.cn/#/zh-CN/component/transfer)设计。左边是变量列表，右边是已与该类型绑定的变量。\n\n![对设备类型绑定变量页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-24.png)\n\n**Vue部分**，将穿梭框放在一个对话框里即可。\n\n```html\n<!-- 绑定变量对话框 -->\n<el-dialog :title=\"bindingparamTitle\" :visible.sync=\"bindingparamOpen\" width=\"800px\" append-to-body>\n  <div style=\"text-align: center\">\n    <el-transfer\n      v-model=\"deviceBindingParamValue\"\n      style=\"text-align: left; display: inline-block\"\n      :titles=\"['全部变量','已选择的变量']\"\n      filterable\n      filter-placeholder=\"请输入变量名称\"\n      :data=\"paramOptions\" />\n  </div>\n  <div slot=\"footer\" class=\"dialog-footer\">\n    <el-button type=\"primary\" @click=\"bindingparamSubmitForm\">确 定</el-button>\n    <el-button @click=\"bindingparamCancel\">取 消</el-button>\n  </div>\n</el-dialog>\n```\n\n**`script`部分**，当用户点击某个设备类型的绑定按钮时，调用`handleBind`函数：\n\n```javascript\n/** 绑定变量按钮操作 */\nhandleBind(row) {\n  this.deviceBindingParamValue = [];\n  this.deviceBindingParamValueOrigin =[];\n  this.bindingTypeId = row.id || this.ids[0];\n  listDevicetypeparam().then(response => {\n    for(let row of response.rows) {\n      if (row.devicetypeId === this.bindingTypeId) {\n        this.deviceBindingParamValue.push(row.paramId);\n        this.deviceBindingParamValueOrigin.push(row.paramId);\n      }\n    }\n  });\n  getType(this.bindingTypeId).then(response => {\n    this.bindingparamOpen = true;\n    this.bindingparamTitle = \"对设备类型绑定变量\";\n  });\n},\n```\n\n提前准备一个类型与变量的关联表，存储两者id。上面第6行查询该表，并把属于该类型的已绑定的变量id拿出来放在数组中备用。\n\n用户在穿梭框内操作完毕，准备点击确定按钮时，调用`bindingparamSubmitForm`函数：\n\n```javascript\n/** 绑定变量提交按钮 */\nbindingparamSubmitForm() {\n  let needToDelete = [];\n  let needToAdd = [];\n  const difference = this.deviceBindingParamValueOrigin.concat(this.deviceBindingParamValue).filter(function(v, i, arr) {\n    return arr.indexOf(v) === arr.lastIndexOf(v);\n  });\n  for (let dif of difference) {\n    if (this.deviceBindingParamValue.indexOf(dif) >= 0) {\n      needToAdd.push(dif);\n    }\n    else if (this.deviceBindingParamValueOrigin.indexOf(dif) >= 0) {\n      needToDelete.push(dif);\n    }\n  }\n  for (let add of needToAdd) {\n    addDevicetypeparam({\n      devicetypeId: this.bindingTypeId,\n      paramId: add,\n      enterpriseId: null\n    });\n    listDevice().then(response => {\n      for (let device of response.rows) {\n        if (device.devicetypeId === this.bindingTypeId) {\n          addDeviceParamType({\n            deviceId: device.id,\n            paramId: add,\n            devicetypeId: this.bindingTypeId,\n            ncsId: device.ncsId,\n            enterpriseId: device.enterpriseId\n          })\n        }\n      }\n    });\n  }\n  for (let del of needToDelete) {\n    listDevicetypeparam().then(response => {\n      for (let row of response.rows) {\n        if (row.devicetypeId === this.bindingTypeId && row.paramId === del) {\n          delDevicetypeparam(row.id);\n          break;\n        }\n      }\n    });\n    listDeviceParamType().then(response => {\n      for (let row of response.rows) {\n        if (row.devicetypeId === this.bindingTypeId && row.paramId === del) {\n          delDeviceParamType(row.id);\n        }\n      }\n    });\n  }\n  if (needToAdd.length !== 0 || needToDelete.length !== 0) {\n    this.msgSuccess(\"成功\");\n  }\n  this.bindingparamOpen = false;\n  this.getList();\n},\n```\n\n上述代码的逻辑是，判断一下现在的`deviceBindingParamValue`数组与穿梭框修改后的有哪些变化，有加的就加`needToAdd`，有删除的就加`needToDelete`，再逐一修改。其中5-15行这里：\n\n```javascript\nconst difference = this.deviceBindingParamValueOrigin.concat(this.deviceBindingParamValue).filter(function(v, i, arr) {\n  return arr.indexOf(v) === arr.lastIndexOf(v);\n});\nfor (let dif of difference) {\n  if (this.deviceBindingParamValue.indexOf(dif) >= 0) {\n    needToAdd.push(dif);\n  }\n  else if (this.deviceBindingParamValueOrigin.indexOf(dif) >= 0) {\n    needToDelete.push(dif);\n  }\n}\n```\n\n`concat`连接改变前和改变后的两个数组，`filter`筛选出其中元素前后索引值相等的数组（即只出现一次的数字，就是被改变的），再通过判断这个数组中每个元素出现在改变前还是改变后的数组，确定要加还是要删。\n\n如`deviceBindingParamValueOrigin`数组（改变前）为`[1, 2, 4]`，`deviceBindingParamValue`数组（改变后）为`[1, 4, 5]`，则[`concat`](https://www.runoob.com/jsref/jsref-concat-string.html)后为`[1, 2, 4, 1, 4, 5]`，[`filter`](https://www.runoob.com/jsref/jsref-filter.html)后为`[2, 5]`，判断后，`needToAdd`为`[5]`，`needToDelete`为`[2]`，再拿这两个数组去做真正地增删操作。\n\n用户准备点击取消按钮时，调用`bindingparamCancel`函数：\n\n```javascript\n// 绑定变量取消按钮\nbindingparamCancel() {\n  this.bindingparamOpen = false;\n  this.deviceBindingParamValue = [];\n  this.deviceBindingParamValueOrigin =[];\n  this.bindingTypeId = 0;\n}\n```\n\n### 3.3 设备信息\n\n【设备信息】模块也是个单表，用来存储每台具体的设备。\n\n![设备信息页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-25.png)\n\n这个单表没有更多的技术难点。每个数据项的操作加了一个更多信息按钮，这个按钮可以跳转到该机床的监控页面，跳转是通过路由进行的，这一部分放到后面再讲。\n\n```html\n<router-link :to=\"`/status/device/` + scope.row.id\">\n  <el-button\n    size=\"mini\"\n    type=\"text\"\n    icon=\"el-icon-more\"\n  >更多信息\n  </el-button>\n</router-link>\n```\n\n\n\n---\n\n以上【企业中心】和【设备中心】两个模块，如果不算后期不断地调整美化，只算页面和功能的大体成型，我大概做了**3个星期**左右。这3个星期也是边学边做的一个过程，巩固了很多Vue和JavaScript的知识，对于我的代码和debug能力有很大的提升。昆山团队退出后，我们开始忙于【工作台】与【统计报表】的制作，这花了我**整整2个月**。这两个模块的技术难度也不亚于这篇文章所提到的，下次有空再补充！\n\n![企业中心和设备中心的commit过程](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-26.png)\n","slug":"frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-1","published":1,"updated":"2022-02-24T14:23:28.108Z","layout":"post","photos":[],"link":"","_id":"cl06nlvur004af4vi0401g2tl","content":"<p>今年3月到7月，我参与了课题组负责的<strong>某机床厂远程运维平台开发</strong>的项目，并主要承担前端开发工作。这个项目马上（10月底）就要结题了，因此总结一下在这半年的开发过程中遇到的一些技术问题或难题，以给之后的学习或开发作参考。</p>\n<span id=\"more\"></span>\n<h2 id=\"1-项目简介\"><a href=\"#1-项目简介\" class=\"headerlink\" title=\"1 项目简介\"></a>1 项目简介</h2><p>这个项目是导师接的一个工业互联网项目，用于某机床厂的远程运营维护。从3月开始，我们就着手参与这个项目。</p>\n<blockquote>\n<p>本平台主要适用于工业互联网远程运维场景，采集机床运行数据，及时、准确地为机床厂提供机床的各项运行数据可视化、设备故障的报警等相关信息，高效地为用户提供机床的远程运维服务。</p>\n<p>——《智能运维云平台用户操作手册》</p>\n</blockquote>\n<p>这个平台由3个团队共同参与开发，分别是杭州团队（浙大）、苏州团队（苏州研究院）和昆山团队（昆山某公司），后来昆山团队退出了，项目就完全由杭州和苏州负责了。</p>\n<p>这个项目里我们杭州团队负责了【企业中心】、【设备中心】的开发，在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。杭州团队是包括我在内的3个研究生，我负责前端，另外2个同学负责后端，其中1个还负责数据库管理。</p>\n<p>4月初，我们经过了多次讨论，研究了若干技术选型，如人人开源、JeecgBoot等，最终决定以<a href=\"http://ruoyi.vip/\">若依管理系统</a>为基础，搭建我们的平台。从以下我们做好的首页中，也可以见到一丝端倪。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-01 - 副本2.png\" alt=\"首页\"></p>\n<p>（首页除了下面的<strong>合作伙伴</strong>是我设计的外，其他全部是苏州团队设计的）</p>\n<p>从4月开始，我着手学习前端三件套、<a href=\"https://v3.cn.vuejs.org/\">Vue</a>与<a href=\"https://element.eleme.cn/#/zh-CN\">ElementUI</a>，并到后期边做边学，积累了很多技术经验。并且由于前端需要后端支持，因此我也在自己的电脑上搭配了完整的后端环境。</p>\n<h2 id=\"2-企业中心\"><a href=\"#2-企业中心\" class=\"headerlink\" title=\"2 企业中心\"></a>2 企业中心</h2><p>【企业中心】用于管理该公司对接的所有企业，也就是它的销售方。</p>\n<h3 id=\"2-1-企业管理\"><a href=\"#2-1-企业管理\" class=\"headerlink\" title=\"2.1 企业管理\"></a>2.1 企业管理</h3><p>我们第一个着手做的就是【企业中心】的【企业管理】模块。这是一个单表，即这个模块只需要<strong>增删改查</strong>的功能，能实现数据项的罗列与变更功能。由于若依系统自带<strong>代码生成器</strong>，可以根据数据库的某个表自动生成后端代码（domain、mapper、service、controller四个层）以及前端代码（api接口和vue页面），所以这很大程度减轻了我们的工作量，我们只需要生成表再改一改就好了。下文中与表有关的模块大多数都是这么做的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-02.png\" alt=\"企业管理页面\"></p>\n<h4 id=\"2-1-1-企业地区\"><a href=\"#2-1-1-企业地区\" class=\"headerlink\" title=\"2.1.1 企业地区\"></a>2.1.1 企业地区</h4><p>这是后来加的一个功能，客户要求在【企业管理】模块，每个企业可以有一个对应的地区，并且可以根据地区筛选企业。</p>\n<p>要导入全国的省市区数据就是一个很麻烦的过程，这个是很难做到写死在代码里的。我找到了ElementUI提供的一个npm包，包含所有中国省市区级联数据，即<a href=\"https://www.npmjs.com/package/element-china-area-data\">element-china-area-data</a>，并根据<a href=\"https://plortinus.github.io/element-china-area-data/index.html\">这个页面的示例</a>做了这个功能。这个包是ElementUI提供的，所以可以直接使用<a href=\"https://element.eleme.cn/#/zh-CN/component/cascader\">ElementUI的级联选择器</a>。</p>\n<ol>\n<li><p>导入这个包里所用到的几个数组和对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;provinceAndCityData, regionData, provinceAndCityDataPlus, regionDataPlus, CodeToText, TextToCode&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;element-china-area-data&#x27;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据库里，每一条企业数据省、市、区是三个字段，在前端表格的显示上，要稍微修改一下格式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;infoList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地区&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;province&quot;</span> <span class=\"attr\">:formatter</span>=<span class=\"string\">&quot;provinceFormat&quot;</span>/&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 地区处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">provinceFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> region = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row.province) &#123;</span><br><span class=\"line\">    region += row.province;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> [row.city, row.country]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item) &#123;</span><br><span class=\"line\">      region += <span class=\"string\">&#x27;/&#x27;</span> + item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> region;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-03.png\" alt=\"表格里显示的地区\"></p>\n<p>因为数据库里有单独的“省”字段，因此搜索时可以只筛选省。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;queryParams&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;queryForm&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;showSearch&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;75px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业地区&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;province&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.province&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索企业地区&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;province in provinceOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:key</span>=<span class=\"string\">&quot;province.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:label</span>=<span class=\"string\">&quot;province.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:value</span>=<span class=\"string\">&quot;province.value&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">provinceOptions</span>: regionData.map(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> (&#123;<span class=\"attr\">value</span>: province.label, <span class=\"attr\">label</span>: province.label&#125;)),</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-04.png\" alt=\"搜索功能的企业地区\"></p>\n</li>\n<li><p>新增企业功能，客户要求省份信息必填，市区信息选填，所以这个级联菜单与element-china-area-data的展示页面做得有所不同。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;700px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;12&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业地区&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;province&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.province&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">display</span>=<span class=\"string\">&quot;inline-block&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索企业地区&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleRegionInfo&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;province in provinceOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:key</span>=<span class=\"string\">&quot;province.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:label</span>=<span class=\"string\">&quot;province.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:value</span>=<span class=\"string\">&quot;province.value&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;12&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;具体市区&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;selectedRegionOptions&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-cascader</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.province&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:options</span>=<span class=\"string\">&quot;regionOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.selectedRegionOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:key</span>=<span class=\"string\">&quot;provinceRefresh&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索具体市区&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-cascader</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-cascader</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-else</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">disabled</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请先选择企业地区&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-cascader</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>下拉列表和级联列表要联动，什么省就要给什么市，所以要给级联表加个<code>key</code>（否则级联表不会根据所选省份变化），并且绑定到一个<code>provinceRefresh</code>的变量上，并在其他相关部分将其设置为省份的<code>code</code>，然后在某个函数处理省份的变化，见如下的<code>script</code>部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">regionOptions</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">provinceRefresh</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"attr\">province</span>: [</span><br><span class=\"line\">        &#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;企业地区不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;change&quot;</span>&#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">/** 新增按钮操作 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleAdd</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.regionOptions = <span class=\"built_in\">this</span>.form.province ? regionData.find(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> province.label === <span class=\"built_in\">this</span>.form.province).children : [];</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceRefresh = <span class=\"built_in\">this</span>.form.province ? TextToCode[<span class=\"built_in\">this</span>.form.province].code : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;添加企业&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 修改按钮操作 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleUpdate</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> id = row.id || <span class=\"built_in\">this</span>.ids</span><br><span class=\"line\">    getInfo(id).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form = response.data;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.province) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.regionOptions =  regionData.find(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> province.label === <span class=\"built_in\">this</span>.form.province).children;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.city &amp;&amp; <span class=\"built_in\">this</span>.form.country) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.form.selectedRegionOptions = [TextToCode[<span class=\"built_in\">this</span>.form.province][<span class=\"built_in\">this</span>.form.city].code, TextToCode[<span class=\"built_in\">this</span>.form.province][<span class=\"built_in\">this</span>.form.city][<span class=\"built_in\">this</span>.form.country].code];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.provinceRefresh = TextToCode[<span class=\"built_in\">this</span>.form.province].code;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;修改企业&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/** 提交按钮 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.selectedRegionOptions.length) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.city = CodeToText[<span class=\"built_in\">this</span>.form.selectedRegionOptions[<span class=\"number\">0</span>]];</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.country = CodeToText[<span class=\"built_in\">this</span>.form.selectedRegionOptions[<span class=\"number\">1</span>]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.city = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.country = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceRefresh = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$refs[<span class=\"string\">&quot;form&quot;</span>].validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          updateInfo(<span class=\"built_in\">this</span>.form).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;修改成功&quot;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          addInfo(<span class=\"built_in\">this</span>.form).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;新增成功&quot;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 企业地区修改</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleRegionInfo</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.province) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.regionOptions = regionData.find(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> province.label === <span class=\"built_in\">this</span>.form.province).children;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.provinceRefresh = TextToCode[<span class=\"built_in\">this</span>.form.province].code</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-05.png\" alt=\"添加企业界面\"></p>\n</li>\n</ol>\n<h4 id=\"2-1-2-字典的使用\"><a href=\"#2-1-2-字典的使用\" class=\"headerlink\" title=\"2.1.2 字典的使用\"></a>2.1.2 字典的使用</h4><p>字典是若依系统自带的功能，对于一些常用的选项，若依可以将他们存在同一个数据库中，并设置键、值，以便可以随时调用。</p>\n<p>通常使用字典的步骤如下：</p>\n<ol>\n<li><p>在【字典管理】里新增一个字典，设置字典名称（即字典释义）和字典类型（即变量名）：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-07.png\" alt=\"字典管理页面\"></p>\n</li>\n<li><p>点开这个字典页面，向里面添加数据，分别输入标签和键值：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-08.png\" alt=\"字典数据页面\"></p>\n</li>\n<li><p>在前端的Vue代码里，使用下拉菜单时，绑定键值：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;数据类型&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramType&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.paramType&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择数据类型&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;dict in paramTypeOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:key</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:label</span>=<span class=\"string\">&quot;dict.dictLabel&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:value</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在前端的<code>script</code>部分，定义这个数组，并且使用若依自带的函数去获取它：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">paramTypeOptions</span>: [],</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">created</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDicts(<span class=\"string\">&quot;device_param_type&quot;</span>).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramTypeOptions = response.data;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在表格里使用时，需要定义一个格式函数，因为数据库里存的是字典键值，表格里展示的是字典标签：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;数据类型&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramType&quot;</span> <span class=\"attr\">:formatter</span>=<span class=\"string\">&quot;paramTypeFormat&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数据类型字典翻译</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">paramTypeFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.selectDictLabel(<span class=\"built_in\">this</span>.paramTypeOptions, row.paramType);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在【企业管理】模块里，用到了许多类似于字典的选项，如经营状态、企业行业、公司类型，但我在代码中没用使用字典，而是写死在代码的数组里的。这样做的好处是节省函数调用，坏处是当我需要调整选项的时候，无法从前端或数据库去更改它，而是需要修改源代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;经营状态&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;operationState&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.operationState&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择经营状态&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;os in operationStateOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:key</span>=<span class=\"string\">&quot;os.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:label</span>=<span class=\"string\">&quot;os.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:value</span>=<span class=\"string\">&quot;os.value&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">operationStateOptions</span>: [],</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attr\">created</span>: &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getOperationStateOptions();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getOperationStateOptions</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.operationStateOptions = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> [<span class=\"string\">&quot;存续&quot;</span>, <span class=\"string\">&quot;在业&quot;</span>, <span class=\"string\">&quot;吊销&quot;</span>, <span class=\"string\">&quot;注销&quot;</span>, <span class=\"string\">&quot;迁入&quot;</span>, <span class=\"string\">&quot;迁出&quot;</span>, <span class=\"string\">&quot;停业&quot;</span>, <span class=\"string\">&quot;清算&quot;</span>]) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.operationStateOptions.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">value</span>: item,</span><br><span class=\"line\">        <span class=\"attr\">label</span>: item</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然可能有更好的写法，但是只要让这个数组成为一个对象数组，并且有键值对（即<code>value</code>和<code>label</code>）就好了。</p>\n<p>如果需要前面出现编号，就改一下<code>label</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getCompanyTypeOptions</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.companyTypeOptions = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> types = [<span class=\"string\">&quot;有限责任公司（自然人独资）&quot;</span>, <span class=\"string\">&quot;有限责任公司（自然人投资或控股）&quot;</span>, <span class=\"string\">&quot;股份有限公司&quot;</span>, <span class=\"string\">&quot;有限合伙企业&quot;</span>, <span class=\"string\">&quot;外商独资公司&quot;</span>, <span class=\"string\">&quot;个人独资企业&quot;</span>, <span class=\"string\">&quot;国有独资公司&quot;</span>, <span class=\"string\">&quot;外资企业&quot;</span>, <span class=\"string\">&quot;非公司企业&quot;</span>, <span class=\"string\">&quot;其他&quot;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> types) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.companyTypeOptions.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">value</span>: types[index],</span><br><span class=\"line\">      <span class=\"attr\">label</span>: (<span class=\"built_in\">parseInt</span>(index) + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;、&#x27;</span> + types[index]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-09.png\" alt=\"公司类型\"></p>\n<p>（对于JavaScript的<code>for-each</code>循环，<code>in</code>循环的是数组的索引或对象的键，即<code>let index in array</code>、<code>let key in object</code>，<code>of</code>循环的是数组的元素，即<code>let item of array</code>；知道了索引或键，可以通过方括号或小数点去访问对应的元素或值；更详细可以看这篇文章：《<a href=\"/2021/12/14/several-ways-of-traversing-arrays-and-objects-in-javascript/\" title=\"JavaScript中遍历数组、对象的几种方式\">JavaScript中遍历数组、对象的几种方式</a>》）</p>\n<h4 id=\"2-1-3-删除按钮的提示修改\"><a href=\"#2-1-3-删除按钮的提示修改\" class=\"headerlink\" title=\"2.1.3 删除按钮的提示修改\"></a>2.1.3 删除按钮的提示修改</h4><p>若依自带的删除提示是这样的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 删除按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ids = row.id || <span class=\"built_in\">this</span>.ids;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除企业中心编号为&quot;&#x27;</span> + ids + <span class=\"string\">&#x27;&quot;的数据项?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> delInfo(ids);</span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;删除成功&quot;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>第3行这个获取id，实际上是判断删除按钮的入口，是单个数据项，还是勾选后点击的删除，前者是一个对象（即参数<code>row</code>）的id，后者是一个id数组，通过逻辑或选择一个值。但是第4行会暴露主键id，因此我对这部分代码（以及我们做的所有模块的删除功能）做了如下修改：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 删除按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ids = row.id || <span class=\"built_in\">this</span>.ids;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> idsLength;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (<span class=\"keyword\">typeof</span>(ids)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;number&#x27;</span> : idsLength = <span class=\"number\">1</span>; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;object&#x27;</span> : idsLength = ids.length; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除&#x27;</span> + (idsLength&gt;<span class=\"number\">1</span> ? <span class=\"string\">&#x27;这&#x27;</span>+idsLength+<span class=\"string\">&#x27;个&#x27;</span> : <span class=\"string\">&#x27;该&#x27;</span>) + <span class=\"string\">&#x27;企业?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> delInfo(ids);</span><br><span class=\"line\">  &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;删除成功&quot;</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>JavaScript的<code>typeof</code>函数可以返回变量的类型（字符串表示），如果是<code>number</code>类型，说明这是<code>row.id</code>，长度为1；如果是<code>object</code>类型（数组即对象），说明这是<code>this.ids</code>，长度为数组的<code>length</code>。再判断ids的长度是否大于1，输出对应的结果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-10.png\" alt=\"删除企业\"></p>\n<h4 id=\"2-1-4-解决手机端消息框显示不全的问题\"><a href=\"#2-1-4-解决手机端消息框显示不全的问题\" class=\"headerlink\" title=\"2.1.4 解决手机端消息框显示不全的问题\"></a>2.1.4 解决手机端消息框显示不全的问题</h4><p>在做响应式布局时遇到的bug，像上面删除时弹出的警告框，如果屏幕宽度过窄，可能显示不全，连确定按钮都点不到：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-19.png\" alt=\"在屏幕宽度过窄时，消息框显示不全\"></p>\n<p>所以我在代码的最后都加了一个样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">750px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.el-message-box</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">80%</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>使消息框在屏幕尺寸小于750px时，宽度调整为相对尺寸（80%），避免显示不全。</p>\n<h3 id=\"2-2-组织管理\"><a href=\"#2-2-组织管理\" class=\"headerlink\" title=\"2.2 组织管理\"></a>2.2 组织管理</h3><p>【组织管理】模块是一个树表。客户的要求是，对于某一个企业，可以给它加下级组织（下级部门），这个组织可以继续添加下级组织，企业也是一个组织，所有的企业应平级，即企业的上级组织汇聚到一个顶级组织（顶点）。加了组织后，机床就可以绑定到这个组织。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-11.png\" alt=\"组织管理页面\"></p>\n<h4 id=\"2-2-1-树表的逻辑\"><a href=\"#2-2-1-树表的逻辑\" class=\"headerlink\" title=\"2.2.1 树表的逻辑\"></a>2.2.1 树表的逻辑</h4><p>数据库是没法放树表的，只可以放单表。每个组织在数据库中是单独的一项，表面上是同级的，但是可以给它加一个字段，表示该组织的上级组织。由于上下级组织是一对多的关系，所以我们只关注某个组织的上级组织，并一层层关联起来。</p>\n<p>数据库里，<code>org_id</code>是主键，<code>enterprise_id</code>跟踪这个组织的最顶层（指企业层）是什么，<code>higher_org</code>跟踪这个组织的上层组织是什么。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-12.png\" alt=\"数据库里的组织表\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-13.png\" alt=\"该表表示的逻辑关系\"></p>\n<p>前端页面的显示方式见上上上图。</p>\n<h4 id=\"2-2-2-后端对于树表的处理\"><a href=\"#2-2-2-后端对于树表的处理\" class=\"headerlink\" title=\"2.2.2 后端对于树表的处理\"></a>2.2.2 后端对于树表的处理</h4><p>由于<strong>一个企业同时也是一个组织</strong>，所以凡是在【企业管理】模块做的<strong>增删改</strong>操作都要关联到【组织管理】模块：</p>\n<ul>\n<li>增：【企业管理】增加一个企业，【组织管理】就要增加这个企业组织</li>\n<li>删：【企业管理】删除一个企业，【组织管理】就要删除这个企业组织及其所有下级组织（所有<code>enterprise_id</code>符合企业id的组织）</li>\n<li>改：【企业管理】更改了企业的名称，【组织管理】就要对对应的企业组织（在所有<code>enterprise_id</code>符合企业id的组织里找<code>higher_org</code>为0的组织）改名</li>\n</ul>\n<p>这个工作前端后端都可以做，经过权衡，我们决定让后端完成这个工作，更改<code>xml</code>文件就可以了。</p>\n<h4 id=\"2-2-3-前端对于树表的处理\"><a href=\"#2-2-3-前端对于树表的处理\" class=\"headerlink\" title=\"2.2.3 前端对于树表的处理\"></a>2.2.3 前端对于树表的处理</h4><p>若依展示树表的方式是使用一个<code>Treeselect</code>组件。之后的代码里，如果要使用树表下拉框，也需要注册这个组件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Treeselect <span class=\"keyword\">from</span> <span class=\"string\">&quot;@riophae/vue-treeselect&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;@riophae/vue-treeselect/dist/vue-treeselect.css&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;Org&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    Treeselect</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>树表在下拉框的使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;上级组织&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;higherOrg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">treeselect</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.higherOrg&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:options</span>=<span class=\"string\">&quot;orgOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:normalizer</span>=<span class=\"string\">&quot;normalizer&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索上级组织&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-14.png\" alt=\"添加组织页面\"></p>\n<p>我对若依自动生成的树表进行了一些修改，以便更满足我们的逻辑要求：</p>\n<ol>\n<li><p>若依默认的下拉树结构有顶级节点，并设置id为0：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 查询部门下拉树结构 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getTreeselect</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listOrg().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.orgOptions = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = &#123; <span class=\"attr\">orgId</span>: <span class=\"number\">0</span>, <span class=\"attr\">deptName</span>: <span class=\"string\">&#x27;顶级节点&#x27;</span>, <span class=\"attr\">children</span>: [] &#125;;</span><br><span class=\"line\">    data.children = <span class=\"built_in\">this</span>.handleTree(response.data, <span class=\"string\">&quot;orgId&quot;</span>, <span class=\"string\">&quot;higherOrg&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.orgOptions.push(data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>我们需要有顶级节点的存在，但是不希望它出现在下拉树里，就把它去掉，直接设置<code>orgOptions</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 查询部门下拉树结构 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getTreeselect</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listOrg().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.orgOptions = <span class=\"built_in\">this</span>.handleTree(response.data, <span class=\"string\">&quot;orgId&quot;</span>, <span class=\"string\">&quot;higherOrg&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用户点击表格上方的新增时，页面如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-16 - 副本.png\" alt=\"添加组织页面（普通）\"></p>\n<p>用户点击表格右侧的新增时，可以填充对应的所属企业与上级组织（表示新增该组织的下级组织），符合操作逻辑：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 新增按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleAdd</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.form.higherOrg = row.orgId;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.form.enterpriseId = row.enterpriseId;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getTreeselect();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;添加组织&quot;</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-17.png\" alt=\"添加组织页面（特定组织）\"></p>\n</li>\n<li><p>对于企业组织，我们不希望用户在【组织管理】对其做过多的改动（因为改动可以在【企业管理】完成），就做如下修改：</p>\n<ul>\n<li><p>企业组织不需要删除按钮，给它加一个<code>v-if</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;scope.row.higherOrg !== 0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;enterpriseCenter:org:remove&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-15.png\" alt=\"隐藏企业组织的删除\"></p>\n</li>\n<li><p>企业组织本身不需要展现上级组织，加<code>v-if</code>将其隐藏；企业组织的所属企业与部门名称不希望用户在此修改，加<code>v-if</code>和<code>disabled</code>属性：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 添加或修改组织管理对话框 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;所属企业&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;enterpriseId&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.enterpriseId&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索所属企业&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;enter in enterOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:key</span>=<span class=\"string\">&quot;enter.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:label</span>=<span class=\"string\">&quot;enter.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:value</span>=<span class=\"string\">&quot;enter.value&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.enterpriseId&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-else</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">disabled</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索所属企业&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">            &lt;/<span class=\"attr\">el-option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>  <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;上级组织&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;higherOrg&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">treeselect</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.higherOrg&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:options</span>=<span class=\"string\">&quot;orgOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:normalizer</span>=<span class=\"string\">&quot;normalizer&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索上级组织&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;部门名称&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;deptName&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.deptName&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入部门名称&quot;</span> /&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.deptName&quot;</span> <span class=\"attr\">v-else</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入部门名称&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-18.png\" alt=\"修改组织页面（企业组织）\"></p>\n<p>这样就只允许修改企业组织的地址、联系人、电话等信息。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"3-设备中心\"><a href=\"#3-设备中心\" class=\"headerlink\" title=\"3 设备中心\"></a>3 设备中心</h2><p>【设备中心】用于管理该公司的机床设备，以便实时监控。</p>\n<h3 id=\"3-1-变量信息\"><a href=\"#3-1-变量信息\" class=\"headerlink\" title=\"3.1 变量信息\"></a>3.1 变量信息</h3><p>【变量信息】模块是个很简单的单表，用来存储用户的自定义变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-20.png\" alt=\"变量信息页面\"></p>\n<h4 id=\"3-1-1-变量绑定功能的逻辑\"><a href=\"#3-1-1-变量绑定功能的逻辑\" class=\"headerlink\" title=\"3.1.1 变量绑定功能的逻辑\"></a>3.1.1 变量绑定功能的逻辑</h4><ol>\n<li>后端用Node-RED采集加入网络的机床的数据，采用<strong>饱和采集</strong>，即采集所有机床的所有数据</li>\n<li>用户在【设备信息】模块加入设备，并设置数控系统id</li>\n<li>用户在【变量信息】模块里自定义一个变量，并将该变量与MongoDB数据库采集到的变量名关联起来</li>\n<li>用户在【设备类型】模块里对该设备的类型绑定需要的变量</li>\n<li>系统根据该机床的数控系统id，拿到MongoDB里该机床的所有数据</li>\n<li>前端再判断哪些变量绑定了，绑定的展示给用户，未绑定的不予展示</li>\n</ol>\n<p>事实上，我们还做不到远程控制（绑定的采集，不绑定的不采集），只能饱和采集、饱和获取数据，再按需展示。</p>\n<h4 id=\"3-1-2-变量关联\"><a href=\"#3-1-2-变量关联\" class=\"headerlink\" title=\"3.1.2 变量关联\"></a>3.1.2 变量关联</h4><p>自定义变量的目的，是前端展示变量数据时，可以自定义显示的变量名、变量单位等。它本身不具有任何意义，除非与MongoDB的变量关联。</p>\n<p>MongoDB采集到的数据有特殊的变量字段名，用户自定义变量后，与该变量字段关联，就可以使用这个数据。</p>\n<p>如MongoDB的<code>poweronTime</code>采集到了数据220，前端显示：<code>当前运行时间：220 分钟</code>。如果用户更改这个变量的名称与单位，则前端显示随之改变，但数值不变。（不支持单位转换，如果单位设置为秒，则还是显示<code>220 秒</code>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-21.png\" alt=\"添加变量信息页面\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 添加或修改变量信息对话框 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;120px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;变量名称&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramName&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramName&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入变量名称&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;变量关联&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;mongoId&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.mongoId&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索系统变量&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;mv in mongoVariableOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:key</span>=<span class=\"string\">&quot;mv.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:label</span>=<span class=\"string\">&quot;mv.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:value</span>=<span class=\"string\">&quot;mv.value&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float:left&quot;</span>&gt;</span>&#123;&#123; mv.label &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float:right; color: #8492a6; font-size: 13px&quot;</span>&gt;</span>&#123;&#123; mv.description &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;数据类型&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramType&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramType&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择数据类型&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;dict in paramTypeOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:key</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:label</span>=<span class=\"string\">&quot;dict.dictLabel&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:value</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;变量单位&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramUnit&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramUnit&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入变量单位&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.paramType === &#x27;numerical&#x27;&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramUnit&quot;</span> <span class=\"attr\">disabled</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;仅数值型变量可输入单位&quot;</span> <span class=\"attr\">v-else</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>mongoVariableOptions</code>是从数据库里拿的，因为它一般不会变化，所以没有做前端入口，但是保留了前端api调用。如果要修改，需要直接操作数据库。同时，由于自定义变量数据库存放的是mongoDB变量的id，因此表格里需要做格式化，不能显示id，要显示<code>label</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mongo变量列表获取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getMongoVariables</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listMongoVariable().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongoVariableOptions = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> item = &#123;</span><br><span class=\"line\">        <span class=\"attr\">value</span>: row.id,</span><br><span class=\"line\">        <span class=\"attr\">label</span>: row.mongoName,</span><br><span class=\"line\">        <span class=\"attr\">description</span>: row.mongoDescription</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.mongoVariableOptions.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 变量关联翻译</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mongoIdFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.mongoVariableOptions.find(<span class=\"function\"><span class=\"params\">mongo</span> =&gt;</span> mongo.value === row.mongoId)? <span class=\"built_in\">this</span>.mongoVariableOptions.find(<span class=\"function\"><span class=\"params\">mongo</span> =&gt;</span> mongo.value === row.mongoId).label : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这里用到了<a href=\"https://www.runoob.com/jsref/jsref-find.html\"><code>find</code>函数</a>，用来代替复杂的<code>for-if</code>来寻找数组中符合条件的元素。否则以上代码就会写成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 变量关联翻译</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mongoIdFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> mongo <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.mongoVariableOptions) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mongo.value === row.mongoId) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> mongo.label;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>显然太麻烦了，尤其是在类似的操作很多的情况下。</p>\n<h3 id=\"3-2-设备类型\"><a href=\"#3-2-设备类型\" class=\"headerlink\" title=\"3.2 设备类型\"></a>3.2 设备类型</h3><p>【设备类型】模块也是个简单单表，用来定义机床的类型，但我们在上面加了绑定变量的功能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-22.png\" alt=\"设备类型页面\"></p>\n<h4 id=\"3-2-1-图片上传与显示\"><a href=\"#3-2-1-图片上传与显示\" class=\"headerlink\" title=\"3.2.1 图片上传与显示\"></a>3.2.1 图片上传与显示</h4><p>图片上传功能是若依自带的<code>ImageUpload</code>组件，不需要额外设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-23.png\" alt=\"添加设备类型页面\"></p>\n<p>图片传到数据库的是图片路径字符串，为了显示在表格里，我写了如下的代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;typeList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;类型图片&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;devicetypeImage&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-image</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;scope.row.devicetypeImage !== null&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100px; height: 100px;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:src</span>=<span class=\"string\">&quot;scope.row.devicetypeImage&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:preview-src-list</span>=<span class=\"string\">&quot;[scope.row.devicetypeImage]&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-image</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>图片有则显示，没有则不显示，如果不加<code>v-if</code>，没有图片时会出现一个读取图片失败的方框占位，影响美观。</p>\n<h4 id=\"3-2-2-单选-多选按钮的逻辑\"><a href=\"#3-2-2-单选-多选按钮的逻辑\" class=\"headerlink\" title=\"3.2.2 单选/多选按钮的逻辑\"></a>3.2.2 单选/多选按钮的逻辑</h4><p>表格内有两类按钮，一类是表格上方带颜色的按钮，一类是表格右边每个数据项的蓝色文字按钮。这两类按钮功能基本一致。</p>\n<p>表格右边的按钮与每个数据项关联，因此只对某个数据项起作用；表格上方的按钮与表格左边的多选框关联，因此不一定只对一个数据项起作用。像修改按钮，不允许多选操作，只允许单选操作，删除按钮则同时支持单选/多选操作。我们设计的绑定变量功能应与修改按钮类似。</p>\n<p>若依则是通过如下方式设置这两种按钮的逻辑的：</p>\n<ul>\n<li>表格数据项按钮传参，为当前参数；上方的按钮不传参，此时函数的参数就为<code>undefined</code>，通过一个数组<code>ids</code>去处理。再通过逻辑或选择，见2.1.3节。</li>\n<li>上方的按钮设置<code>disabled</code>属性为布尔值<code>single</code>或<code>multiple</code>，在勾选时改变其布尔值，以达到按钮启用效果。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb8&quot;</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">plain</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;single&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:edit&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">plain</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;multiple&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:remove&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;info&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">plain</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-key&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;single&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleBind&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:bind&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>绑定变量<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;typeList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> /&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class-name</span>=<span class=\"string\">&quot;small-padding fixed-width&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:edit&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-key&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleBind(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:edit&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>绑定<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:remove&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"comment\">// 选中数组</span></span><br><span class=\"line\">    <span class=\"attr\">ids</span>: [],</span><br><span class=\"line\">    <span class=\"comment\">// 非单个禁用</span></span><br><span class=\"line\">    <span class=\"attr\">single</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 非多个禁用</span></span><br><span class=\"line\">    <span class=\"attr\">multiple</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 多选框选中数据</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleSelectionChange</span>(<span class=\"params\">selection</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.ids = selection.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.id)</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.single = selection.length!==<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.multiple = !selection.length</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-3-绑定变量\"><a href=\"#3-2-3-绑定变量\" class=\"headerlink\" title=\"3.2.3 绑定变量\"></a>3.2.3 绑定变量</h4><p>绑定变量用的是一个穿梭框，基于<a href=\"https://element.eleme.cn/#/zh-CN/component/transfer\">ElementUI的穿梭框</a>设计。左边是变量列表，右边是已与该类型绑定的变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-24.png\" alt=\"对设备类型绑定变量页面\"></p>\n<p><strong>Vue部分</strong>，将穿梭框放在一个对话框里即可。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 绑定变量对话框 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;bindingparamTitle&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;bindingparamOpen&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;800px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-transfer</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;deviceBindingParamValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: left; display: inline-block&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:titles</span>=<span class=\"string\">&quot;[&#x27;全部变量&#x27;,&#x27;已选择的变量&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">filter-placeholder</span>=<span class=\"string\">&quot;请输入变量名称&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:data</span>=<span class=\"string\">&quot;paramOptions&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;bindingparamSubmitForm&quot;</span>&gt;</span>确 定<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;bindingparamCancel&quot;</span>&gt;</span>取 消<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong><code>script</code>部分</strong>，当用户点击某个设备类型的绑定按钮时，调用<code>handleBind</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 绑定变量按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleBind</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValue = [];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin =[];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingTypeId = row.id || <span class=\"built_in\">this</span>.ids[<span class=\"number\">0</span>];</span><br><span class=\"line\">  listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (row.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceBindingParamValue.push(row.paramId);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.push(row.paramId);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  getType(<span class=\"built_in\">this</span>.bindingTypeId).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bindingparamOpen = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bindingparamTitle = <span class=\"string\">&quot;对设备类型绑定变量&quot;</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>提前准备一个类型与变量的关联表，存储两者id。上面第6行查询该表，并把属于该类型的已绑定的变量id拿出来放在数组中备用。</p>\n<p>用户在穿梭框内操作完毕，准备点击确定按钮时，调用<code>bindingparamSubmitForm</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 绑定变量提交按钮 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">bindingparamSubmitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> needToDelete = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> needToAdd = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> difference = <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.concat(<span class=\"built_in\">this</span>.deviceBindingParamValue).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v, i, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.indexOf(v) === arr.lastIndexOf(v);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> dif <span class=\"keyword\">of</span> difference) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValue.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      needToAdd.push(dif);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      needToDelete.push(dif);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> add <span class=\"keyword\">of</span> needToAdd) &#123;</span><br><span class=\"line\">    addDevicetypeparam(&#123;</span><br><span class=\"line\">      <span class=\"attr\">devicetypeId</span>: <span class=\"built_in\">this</span>.bindingTypeId,</span><br><span class=\"line\">      <span class=\"attr\">paramId</span>: add,</span><br><span class=\"line\">      <span class=\"attr\">enterpriseId</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    listDevice().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> device <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (device.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId) &#123;</span><br><span class=\"line\">          addDeviceParamType(&#123;</span><br><span class=\"line\">            <span class=\"attr\">deviceId</span>: device.id,</span><br><span class=\"line\">            <span class=\"attr\">paramId</span>: add,</span><br><span class=\"line\">            <span class=\"attr\">devicetypeId</span>: <span class=\"built_in\">this</span>.bindingTypeId,</span><br><span class=\"line\">            <span class=\"attr\">ncsId</span>: device.ncsId,</span><br><span class=\"line\">            <span class=\"attr\">enterpriseId</span>: device.enterpriseId</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> del <span class=\"keyword\">of</span> needToDelete) &#123;</span><br><span class=\"line\">    listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId &amp;&amp; row.paramId === del) &#123;</span><br><span class=\"line\">          delDevicetypeparam(row.id);</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    listDeviceParamType().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId &amp;&amp; row.paramId === del) &#123;</span><br><span class=\"line\">          delDeviceParamType(row.id);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (needToAdd.length !== <span class=\"number\">0</span> || needToDelete.length !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;成功&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingparamOpen = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>上述代码的逻辑是，判断一下现在的<code>deviceBindingParamValue</code>数组与穿梭框修改后的有哪些变化，有加的就加<code>needToAdd</code>，有删除的就加<code>needToDelete</code>，再逐一修改。其中5-15行这里：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> difference = <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.concat(<span class=\"built_in\">this</span>.deviceBindingParamValue).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v, i, arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.indexOf(v) === arr.lastIndexOf(v);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> dif <span class=\"keyword\">of</span> difference) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValue.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    needToAdd.push(dif);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    needToDelete.push(dif);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>concat</code>连接改变前和改变后的两个数组，<code>filter</code>筛选出其中元素前后索引值相等的数组（即只出现一次的数字，就是被改变的），再通过判断这个数组中每个元素出现在改变前还是改变后的数组，确定要加还是要删。</p>\n<p>如<code>deviceBindingParamValueOrigin</code>数组（改变前）为<code>[1, 2, 4]</code>，<code>deviceBindingParamValue</code>数组（改变后）为<code>[1, 4, 5]</code>，则<a href=\"https://www.runoob.com/jsref/jsref-concat-string.html\"><code>concat</code></a>后为<code>[1, 2, 4, 1, 4, 5]</code>，<a href=\"https://www.runoob.com/jsref/jsref-filter.html\"><code>filter</code></a>后为<code>[2, 5]</code>，判断后，<code>needToAdd</code>为<code>[5]</code>，<code>needToDelete</code>为<code>[2]</code>，再拿这两个数组去做真正地增删操作。</p>\n<p>用户准备点击取消按钮时，调用<code>bindingparamCancel</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 绑定变量取消按钮</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">bindingparamCancel</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingparamOpen = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValue = [];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin =[];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingTypeId = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-设备信息\"><a href=\"#3-3-设备信息\" class=\"headerlink\" title=\"3.3 设备信息\"></a>3.3 设备信息</h3><p>【设备信息】模块也是个单表，用来存储每台具体的设备。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-25.png\" alt=\"设备信息页面\"></p>\n<p>这个单表没有更多的技术难点。每个数据项的操作加了一个更多信息按钮，这个按钮可以跳转到该机床的监控页面，跳转是通过路由进行的，这一部分放到后面再讲。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/status/device/` + scope.row.id&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-more&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>更多信息</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>以上【企业中心】和【设备中心】两个模块，如果不算后期不断地调整美化，只算页面和功能的大体成型，我大概做了<strong>3个星期</strong>左右。这3个星期也是边学边做的一个过程，巩固了很多Vue和JavaScript的知识，对于我的代码和debug能力有很大的提升。昆山团队退出后，我们开始忙于【工作台】与【统计报表】的制作，这花了我<strong>整整2个月</strong>。这两个模块的技术难度也不亚于这篇文章所提到的，下次有空再补充！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-26.png\" alt=\"企业中心和设备中心的commit过程\"></p>\n","site":{"data":{}},"excerpt":"<p>今年3月到7月，我参与了课题组负责的<strong>某机床厂远程运维平台开发</strong>的项目，并主要承担前端开发工作。这个项目马上（10月底）就要结题了，因此总结一下在这半年的开发过程中遇到的一些技术问题或难题，以给之后的学习或开发作参考。</p>","more":"<h2 id=\"1-项目简介\"><a href=\"#1-项目简介\" class=\"headerlink\" title=\"1 项目简介\"></a>1 项目简介</h2><p>这个项目是导师接的一个工业互联网项目，用于某机床厂的远程运营维护。从3月开始，我们就着手参与这个项目。</p>\n<blockquote>\n<p>本平台主要适用于工业互联网远程运维场景，采集机床运行数据，及时、准确地为机床厂提供机床的各项运行数据可视化、设备故障的报警等相关信息，高效地为用户提供机床的远程运维服务。</p>\n<p>——《智能运维云平台用户操作手册》</p>\n</blockquote>\n<p>这个平台由3个团队共同参与开发，分别是杭州团队（浙大）、苏州团队（苏州研究院）和昆山团队（昆山某公司），后来昆山团队退出了，项目就完全由杭州和苏州负责了。</p>\n<p>这个项目里我们杭州团队负责了【企业中心】、【设备中心】的开发，在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。杭州团队是包括我在内的3个研究生，我负责前端，另外2个同学负责后端，其中1个还负责数据库管理。</p>\n<p>4月初，我们经过了多次讨论，研究了若干技术选型，如人人开源、JeecgBoot等，最终决定以<a href=\"http://ruoyi.vip/\">若依管理系统</a>为基础，搭建我们的平台。从以下我们做好的首页中，也可以见到一丝端倪。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-01 - 副本2.png\" alt=\"首页\"></p>\n<p>（首页除了下面的<strong>合作伙伴</strong>是我设计的外，其他全部是苏州团队设计的）</p>\n<p>从4月开始，我着手学习前端三件套、<a href=\"https://v3.cn.vuejs.org/\">Vue</a>与<a href=\"https://element.eleme.cn/#/zh-CN\">ElementUI</a>，并到后期边做边学，积累了很多技术经验。并且由于前端需要后端支持，因此我也在自己的电脑上搭配了完整的后端环境。</p>\n<h2 id=\"2-企业中心\"><a href=\"#2-企业中心\" class=\"headerlink\" title=\"2 企业中心\"></a>2 企业中心</h2><p>【企业中心】用于管理该公司对接的所有企业，也就是它的销售方。</p>\n<h3 id=\"2-1-企业管理\"><a href=\"#2-1-企业管理\" class=\"headerlink\" title=\"2.1 企业管理\"></a>2.1 企业管理</h3><p>我们第一个着手做的就是【企业中心】的【企业管理】模块。这是一个单表，即这个模块只需要<strong>增删改查</strong>的功能，能实现数据项的罗列与变更功能。由于若依系统自带<strong>代码生成器</strong>，可以根据数据库的某个表自动生成后端代码（domain、mapper、service、controller四个层）以及前端代码（api接口和vue页面），所以这很大程度减轻了我们的工作量，我们只需要生成表再改一改就好了。下文中与表有关的模块大多数都是这么做的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-02.png\" alt=\"企业管理页面\"></p>\n<h4 id=\"2-1-1-企业地区\"><a href=\"#2-1-1-企业地区\" class=\"headerlink\" title=\"2.1.1 企业地区\"></a>2.1.1 企业地区</h4><p>这是后来加的一个功能，客户要求在【企业管理】模块，每个企业可以有一个对应的地区，并且可以根据地区筛选企业。</p>\n<p>要导入全国的省市区数据就是一个很麻烦的过程，这个是很难做到写死在代码里的。我找到了ElementUI提供的一个npm包，包含所有中国省市区级联数据，即<a href=\"https://www.npmjs.com/package/element-china-area-data\">element-china-area-data</a>，并根据<a href=\"https://plortinus.github.io/element-china-area-data/index.html\">这个页面的示例</a>做了这个功能。这个包是ElementUI提供的，所以可以直接使用<a href=\"https://element.eleme.cn/#/zh-CN/component/cascader\">ElementUI的级联选择器</a>。</p>\n<ol>\n<li><p>导入这个包里所用到的几个数组和对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;provinceAndCityData, regionData, provinceAndCityDataPlus, regionDataPlus, CodeToText, TextToCode&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;element-china-area-data&#x27;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据库里，每一条企业数据省、市、区是三个字段，在前端表格的显示上，要稍微修改一下格式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;infoList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地区&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;province&quot;</span> <span class=\"attr\">:formatter</span>=<span class=\"string\">&quot;provinceFormat&quot;</span>/&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 地区处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">provinceFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> region = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row.province) &#123;</span><br><span class=\"line\">    region += row.province;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> [row.city, row.country]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item) &#123;</span><br><span class=\"line\">      region += <span class=\"string\">&#x27;/&#x27;</span> + item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> region;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-03.png\" alt=\"表格里显示的地区\"></p>\n<p>因为数据库里有单独的“省”字段，因此搜索时可以只筛选省。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;queryParams&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;queryForm&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;showSearch&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;75px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业地区&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;province&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.province&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索企业地区&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;province in provinceOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:key</span>=<span class=\"string\">&quot;province.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:label</span>=<span class=\"string\">&quot;province.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:value</span>=<span class=\"string\">&quot;province.value&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">provinceOptions</span>: regionData.map(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> (&#123;<span class=\"attr\">value</span>: province.label, <span class=\"attr\">label</span>: province.label&#125;)),</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-04.png\" alt=\"搜索功能的企业地区\"></p>\n</li>\n<li><p>新增企业功能，客户要求省份信息必填，市区信息选填，所以这个级联菜单与element-china-area-data的展示页面做得有所不同。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;700px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;12&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业地区&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;province&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.province&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">display</span>=<span class=\"string\">&quot;inline-block&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索企业地区&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleRegionInfo&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;province in provinceOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:key</span>=<span class=\"string\">&quot;province.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:label</span>=<span class=\"string\">&quot;province.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:value</span>=<span class=\"string\">&quot;province.value&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;12&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;具体市区&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;selectedRegionOptions&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-cascader</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.province&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:options</span>=<span class=\"string\">&quot;regionOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.selectedRegionOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:key</span>=<span class=\"string\">&quot;provinceRefresh&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索具体市区&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-cascader</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-cascader</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-else</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">disabled</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请先选择企业地区&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-cascader</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>下拉列表和级联列表要联动，什么省就要给什么市，所以要给级联表加个<code>key</code>（否则级联表不会根据所选省份变化），并且绑定到一个<code>provinceRefresh</code>的变量上，并在其他相关部分将其设置为省份的<code>code</code>，然后在某个函数处理省份的变化，见如下的<code>script</code>部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">regionOptions</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">provinceRefresh</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"attr\">province</span>: [</span><br><span class=\"line\">        &#123;<span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&quot;企业地区不能为空&quot;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&quot;change&quot;</span>&#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">/** 新增按钮操作 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleAdd</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.regionOptions = <span class=\"built_in\">this</span>.form.province ? regionData.find(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> province.label === <span class=\"built_in\">this</span>.form.province).children : [];</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceRefresh = <span class=\"built_in\">this</span>.form.province ? TextToCode[<span class=\"built_in\">this</span>.form.province].code : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;添加企业&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">/** 修改按钮操作 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleUpdate</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> id = row.id || <span class=\"built_in\">this</span>.ids</span><br><span class=\"line\">    getInfo(id).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form = response.data;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.province) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.regionOptions =  regionData.find(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> province.label === <span class=\"built_in\">this</span>.form.province).children;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.city &amp;&amp; <span class=\"built_in\">this</span>.form.country) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.form.selectedRegionOptions = [TextToCode[<span class=\"built_in\">this</span>.form.province][<span class=\"built_in\">this</span>.form.city].code, TextToCode[<span class=\"built_in\">this</span>.form.province][<span class=\"built_in\">this</span>.form.city][<span class=\"built_in\">this</span>.form.country].code];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.provinceRefresh = TextToCode[<span class=\"built_in\">this</span>.form.province].code;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;修改企业&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/** 提交按钮 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.selectedRegionOptions.length) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.city = CodeToText[<span class=\"built_in\">this</span>.form.selectedRegionOptions[<span class=\"number\">0</span>]];</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.country = CodeToText[<span class=\"built_in\">this</span>.form.selectedRegionOptions[<span class=\"number\">1</span>]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.city = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.form.country = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceRefresh = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$refs[<span class=\"string\">&quot;form&quot;</span>].validate(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.id != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          updateInfo(<span class=\"built_in\">this</span>.form).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;修改成功&quot;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          addInfo(<span class=\"built_in\">this</span>.form).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;新增成功&quot;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.open = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 企业地区修改</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleRegionInfo</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.form.province) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.regionOptions = regionData.find(<span class=\"function\"><span class=\"params\">province</span> =&gt;</span> province.label === <span class=\"built_in\">this</span>.form.province).children;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.provinceRefresh = TextToCode[<span class=\"built_in\">this</span>.form.province].code</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-05.png\" alt=\"添加企业界面\"></p>\n</li>\n</ol>\n<h4 id=\"2-1-2-字典的使用\"><a href=\"#2-1-2-字典的使用\" class=\"headerlink\" title=\"2.1.2 字典的使用\"></a>2.1.2 字典的使用</h4><p>字典是若依系统自带的功能，对于一些常用的选项，若依可以将他们存在同一个数据库中，并设置键、值，以便可以随时调用。</p>\n<p>通常使用字典的步骤如下：</p>\n<ol>\n<li><p>在【字典管理】里新增一个字典，设置字典名称（即字典释义）和字典类型（即变量名）：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-07.png\" alt=\"字典管理页面\"></p>\n</li>\n<li><p>点开这个字典页面，向里面添加数据，分别输入标签和键值：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-08.png\" alt=\"字典数据页面\"></p>\n</li>\n<li><p>在前端的Vue代码里，使用下拉菜单时，绑定键值：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;数据类型&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramType&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.paramType&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择数据类型&quot;</span> <span class=\"attr\">clearable</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;dict in paramTypeOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:key</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:label</span>=<span class=\"string\">&quot;dict.dictLabel&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:value</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在前端的<code>script</code>部分，定义这个数组，并且使用若依自带的函数去获取它：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">paramTypeOptions</span>: [],</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">created</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDicts(<span class=\"string\">&quot;device_param_type&quot;</span>).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramTypeOptions = response.data;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在表格里使用时，需要定义一个格式函数，因为数据库里存的是字典键值，表格里展示的是字典标签：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;数据类型&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramType&quot;</span> <span class=\"attr\">:formatter</span>=<span class=\"string\">&quot;paramTypeFormat&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数据类型字典翻译</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">paramTypeFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.selectDictLabel(<span class=\"built_in\">this</span>.paramTypeOptions, row.paramType);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在【企业管理】模块里，用到了许多类似于字典的选项，如经营状态、企业行业、公司类型，但我在代码中没用使用字典，而是写死在代码的数组里的。这样做的好处是节省函数调用，坏处是当我需要调整选项的时候，无法从前端或数据库去更改它，而是需要修改源代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;经营状态&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;operationState&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;queryParams.operationState&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择经营状态&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;os in operationStateOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:key</span>=<span class=\"string\">&quot;os.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:label</span>=<span class=\"string\">&quot;os.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:value</span>=<span class=\"string\">&quot;os.value&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">operationStateOptions</span>: [],</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attr\">created</span>: &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getOperationStateOptions();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getOperationStateOptions</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.operationStateOptions = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> [<span class=\"string\">&quot;存续&quot;</span>, <span class=\"string\">&quot;在业&quot;</span>, <span class=\"string\">&quot;吊销&quot;</span>, <span class=\"string\">&quot;注销&quot;</span>, <span class=\"string\">&quot;迁入&quot;</span>, <span class=\"string\">&quot;迁出&quot;</span>, <span class=\"string\">&quot;停业&quot;</span>, <span class=\"string\">&quot;清算&quot;</span>]) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.operationStateOptions.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">value</span>: item,</span><br><span class=\"line\">        <span class=\"attr\">label</span>: item</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然可能有更好的写法，但是只要让这个数组成为一个对象数组，并且有键值对（即<code>value</code>和<code>label</code>）就好了。</p>\n<p>如果需要前面出现编号，就改一下<code>label</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getCompanyTypeOptions</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.companyTypeOptions = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> types = [<span class=\"string\">&quot;有限责任公司（自然人独资）&quot;</span>, <span class=\"string\">&quot;有限责任公司（自然人投资或控股）&quot;</span>, <span class=\"string\">&quot;股份有限公司&quot;</span>, <span class=\"string\">&quot;有限合伙企业&quot;</span>, <span class=\"string\">&quot;外商独资公司&quot;</span>, <span class=\"string\">&quot;个人独资企业&quot;</span>, <span class=\"string\">&quot;国有独资公司&quot;</span>, <span class=\"string\">&quot;外资企业&quot;</span>, <span class=\"string\">&quot;非公司企业&quot;</span>, <span class=\"string\">&quot;其他&quot;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> types) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.companyTypeOptions.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">value</span>: types[index],</span><br><span class=\"line\">      <span class=\"attr\">label</span>: (<span class=\"built_in\">parseInt</span>(index) + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;、&#x27;</span> + types[index]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-09.png\" alt=\"公司类型\"></p>\n<p>（对于JavaScript的<code>for-each</code>循环，<code>in</code>循环的是数组的索引或对象的键，即<code>let index in array</code>、<code>let key in object</code>，<code>of</code>循环的是数组的元素，即<code>let item of array</code>；知道了索引或键，可以通过方括号或小数点去访问对应的元素或值；更详细可以看这篇文章：《<a href=\"/2021/12/14/several-ways-of-traversing-arrays-and-objects-in-javascript/\" title=\"JavaScript中遍历数组、对象的几种方式\">JavaScript中遍历数组、对象的几种方式</a>》）</p>\n<h4 id=\"2-1-3-删除按钮的提示修改\"><a href=\"#2-1-3-删除按钮的提示修改\" class=\"headerlink\" title=\"2.1.3 删除按钮的提示修改\"></a>2.1.3 删除按钮的提示修改</h4><p>若依自带的删除提示是这样的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 删除按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ids = row.id || <span class=\"built_in\">this</span>.ids;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除企业中心编号为&quot;&#x27;</span> + ids + <span class=\"string\">&#x27;&quot;的数据项?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">    &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> delInfo(ids);</span><br><span class=\"line\">    &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;删除成功&quot;</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>第3行这个获取id，实际上是判断删除按钮的入口，是单个数据项，还是勾选后点击的删除，前者是一个对象（即参数<code>row</code>）的id，后者是一个id数组，通过逻辑或选择一个值。但是第4行会暴露主键id，因此我对这部分代码（以及我们做的所有模块的删除功能）做了如下修改：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 删除按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDelete</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ids = row.id || <span class=\"built_in\">this</span>.ids;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> idsLength;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (<span class=\"keyword\">typeof</span>(ids)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;number&#x27;</span> : idsLength = <span class=\"number\">1</span>; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;object&#x27;</span> : idsLength = ids.length; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$confirm(<span class=\"string\">&#x27;是否确认删除&#x27;</span> + (idsLength&gt;<span class=\"number\">1</span> ? <span class=\"string\">&#x27;这&#x27;</span>+idsLength+<span class=\"string\">&#x27;个&#x27;</span> : <span class=\"string\">&#x27;该&#x27;</span>) + <span class=\"string\">&#x27;企业?&#x27;</span>, <span class=\"string\">&quot;警告&quot;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&quot;确定&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&quot;取消&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span></span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> delInfo(ids);</span><br><span class=\"line\">  &#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;删除成功&quot;</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>JavaScript的<code>typeof</code>函数可以返回变量的类型（字符串表示），如果是<code>number</code>类型，说明这是<code>row.id</code>，长度为1；如果是<code>object</code>类型（数组即对象），说明这是<code>this.ids</code>，长度为数组的<code>length</code>。再判断ids的长度是否大于1，输出对应的结果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-10.png\" alt=\"删除企业\"></p>\n<h4 id=\"2-1-4-解决手机端消息框显示不全的问题\"><a href=\"#2-1-4-解决手机端消息框显示不全的问题\" class=\"headerlink\" title=\"2.1.4 解决手机端消息框显示不全的问题\"></a>2.1.4 解决手机端消息框显示不全的问题</h4><p>在做响应式布局时遇到的bug，像上面删除时弹出的警告框，如果屏幕宽度过窄，可能显示不全，连确定按钮都点不到：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-19.png\" alt=\"在屏幕宽度过窄时，消息框显示不全\"></p>\n<p>所以我在代码的最后都加了一个样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">750px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.el-message-box</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">80%</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>使消息框在屏幕尺寸小于750px时，宽度调整为相对尺寸（80%），避免显示不全。</p>\n<h3 id=\"2-2-组织管理\"><a href=\"#2-2-组织管理\" class=\"headerlink\" title=\"2.2 组织管理\"></a>2.2 组织管理</h3><p>【组织管理】模块是一个树表。客户的要求是，对于某一个企业，可以给它加下级组织（下级部门），这个组织可以继续添加下级组织，企业也是一个组织，所有的企业应平级，即企业的上级组织汇聚到一个顶级组织（顶点）。加了组织后，机床就可以绑定到这个组织。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-11.png\" alt=\"组织管理页面\"></p>\n<h4 id=\"2-2-1-树表的逻辑\"><a href=\"#2-2-1-树表的逻辑\" class=\"headerlink\" title=\"2.2.1 树表的逻辑\"></a>2.2.1 树表的逻辑</h4><p>数据库是没法放树表的，只可以放单表。每个组织在数据库中是单独的一项，表面上是同级的，但是可以给它加一个字段，表示该组织的上级组织。由于上下级组织是一对多的关系，所以我们只关注某个组织的上级组织，并一层层关联起来。</p>\n<p>数据库里，<code>org_id</code>是主键，<code>enterprise_id</code>跟踪这个组织的最顶层（指企业层）是什么，<code>higher_org</code>跟踪这个组织的上层组织是什么。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-12.png\" alt=\"数据库里的组织表\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-13.png\" alt=\"该表表示的逻辑关系\"></p>\n<p>前端页面的显示方式见上上上图。</p>\n<h4 id=\"2-2-2-后端对于树表的处理\"><a href=\"#2-2-2-后端对于树表的处理\" class=\"headerlink\" title=\"2.2.2 后端对于树表的处理\"></a>2.2.2 后端对于树表的处理</h4><p>由于<strong>一个企业同时也是一个组织</strong>，所以凡是在【企业管理】模块做的<strong>增删改</strong>操作都要关联到【组织管理】模块：</p>\n<ul>\n<li>增：【企业管理】增加一个企业，【组织管理】就要增加这个企业组织</li>\n<li>删：【企业管理】删除一个企业，【组织管理】就要删除这个企业组织及其所有下级组织（所有<code>enterprise_id</code>符合企业id的组织）</li>\n<li>改：【企业管理】更改了企业的名称，【组织管理】就要对对应的企业组织（在所有<code>enterprise_id</code>符合企业id的组织里找<code>higher_org</code>为0的组织）改名</li>\n</ul>\n<p>这个工作前端后端都可以做，经过权衡，我们决定让后端完成这个工作，更改<code>xml</code>文件就可以了。</p>\n<h4 id=\"2-2-3-前端对于树表的处理\"><a href=\"#2-2-3-前端对于树表的处理\" class=\"headerlink\" title=\"2.2.3 前端对于树表的处理\"></a>2.2.3 前端对于树表的处理</h4><p>若依展示树表的方式是使用一个<code>Treeselect</code>组件。之后的代码里，如果要使用树表下拉框，也需要注册这个组件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Treeselect <span class=\"keyword\">from</span> <span class=\"string\">&quot;@riophae/vue-treeselect&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;@riophae/vue-treeselect/dist/vue-treeselect.css&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;Org&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    Treeselect</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>树表在下拉框的使用：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;上级组织&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;higherOrg&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">treeselect</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.higherOrg&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:options</span>=<span class=\"string\">&quot;orgOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:normalizer</span>=<span class=\"string\">&quot;normalizer&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索上级组织&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-14.png\" alt=\"添加组织页面\"></p>\n<p>我对若依自动生成的树表进行了一些修改，以便更满足我们的逻辑要求：</p>\n<ol>\n<li><p>若依默认的下拉树结构有顶级节点，并设置id为0：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 查询部门下拉树结构 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getTreeselect</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listOrg().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.orgOptions = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = &#123; <span class=\"attr\">orgId</span>: <span class=\"number\">0</span>, <span class=\"attr\">deptName</span>: <span class=\"string\">&#x27;顶级节点&#x27;</span>, <span class=\"attr\">children</span>: [] &#125;;</span><br><span class=\"line\">    data.children = <span class=\"built_in\">this</span>.handleTree(response.data, <span class=\"string\">&quot;orgId&quot;</span>, <span class=\"string\">&quot;higherOrg&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.orgOptions.push(data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>我们需要有顶级节点的存在，但是不希望它出现在下拉树里，就把它去掉，直接设置<code>orgOptions</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 查询部门下拉树结构 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getTreeselect</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listOrg().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.orgOptions = <span class=\"built_in\">this</span>.handleTree(response.data, <span class=\"string\">&quot;orgId&quot;</span>, <span class=\"string\">&quot;higherOrg&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用户点击表格上方的新增时，页面如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-16 - 副本.png\" alt=\"添加组织页面（普通）\"></p>\n<p>用户点击表格右侧的新增时，可以填充对应的所属企业与上级组织（表示新增该组织的下级组织），符合操作逻辑：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 新增按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleAdd</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.reset();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (row !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.form.higherOrg = row.orgId;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.form.enterpriseId = row.enterpriseId;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getTreeselect();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.open = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.title = <span class=\"string\">&quot;添加组织&quot;</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-17.png\" alt=\"添加组织页面（特定组织）\"></p>\n</li>\n<li><p>对于企业组织，我们不希望用户在【组织管理】对其做过多的改动（因为改动可以在【企业管理】完成），就做如下修改：</p>\n<ul>\n<li><p>企业组织不需要删除按钮，给它加一个<code>v-if</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;scope.row.higherOrg !== 0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;enterpriseCenter:org:remove&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-15.png\" alt=\"隐藏企业组织的删除\"></p>\n</li>\n<li><p>企业组织本身不需要展现上级组织，加<code>v-if</code>将其隐藏；企业组织的所属企业与部门名称不希望用户在此修改，加<code>v-if</code>和<code>disabled</code>属性：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 添加或修改组织管理对话框 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;所属企业&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;enterpriseId&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.enterpriseId&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索所属企业&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;enter in enterOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:key</span>=<span class=\"string\">&quot;enter.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:label</span>=<span class=\"string\">&quot;enter.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">:value</span>=<span class=\"string\">&quot;enter.value&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.enterpriseId&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-else</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">disabled</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索所属企业&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">...</span></span></span><br><span class=\"line\"><span class=\"tag\">            &lt;/<span class=\"attr\">el-option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>  <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;上级组织&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;higherOrg&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">treeselect</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.higherOrg&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:options</span>=<span class=\"string\">&quot;orgOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:normalizer</span>=<span class=\"string\">&quot;normalizer&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索上级组织&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;部门名称&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;deptName&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.deptName&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.higherOrg !== 0&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入部门名称&quot;</span> /&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.deptName&quot;</span> <span class=\"attr\">v-else</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入部门名称&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-18.png\" alt=\"修改组织页面（企业组织）\"></p>\n<p>这样就只允许修改企业组织的地址、联系人、电话等信息。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"3-设备中心\"><a href=\"#3-设备中心\" class=\"headerlink\" title=\"3 设备中心\"></a>3 设备中心</h2><p>【设备中心】用于管理该公司的机床设备，以便实时监控。</p>\n<h3 id=\"3-1-变量信息\"><a href=\"#3-1-变量信息\" class=\"headerlink\" title=\"3.1 变量信息\"></a>3.1 变量信息</h3><p>【变量信息】模块是个很简单的单表，用来存储用户的自定义变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-20.png\" alt=\"变量信息页面\"></p>\n<h4 id=\"3-1-1-变量绑定功能的逻辑\"><a href=\"#3-1-1-变量绑定功能的逻辑\" class=\"headerlink\" title=\"3.1.1 变量绑定功能的逻辑\"></a>3.1.1 变量绑定功能的逻辑</h4><ol>\n<li>后端用Node-RED采集加入网络的机床的数据，采用<strong>饱和采集</strong>，即采集所有机床的所有数据</li>\n<li>用户在【设备信息】模块加入设备，并设置数控系统id</li>\n<li>用户在【变量信息】模块里自定义一个变量，并将该变量与MongoDB数据库采集到的变量名关联起来</li>\n<li>用户在【设备类型】模块里对该设备的类型绑定需要的变量</li>\n<li>系统根据该机床的数控系统id，拿到MongoDB里该机床的所有数据</li>\n<li>前端再判断哪些变量绑定了，绑定的展示给用户，未绑定的不予展示</li>\n</ol>\n<p>事实上，我们还做不到远程控制（绑定的采集，不绑定的不采集），只能饱和采集、饱和获取数据，再按需展示。</p>\n<h4 id=\"3-1-2-变量关联\"><a href=\"#3-1-2-变量关联\" class=\"headerlink\" title=\"3.1.2 变量关联\"></a>3.1.2 变量关联</h4><p>自定义变量的目的，是前端展示变量数据时，可以自定义显示的变量名、变量单位等。它本身不具有任何意义，除非与MongoDB的变量关联。</p>\n<p>MongoDB采集到的数据有特殊的变量字段名，用户自定义变量后，与该变量字段关联，就可以使用这个数据。</p>\n<p>如MongoDB的<code>poweronTime</code>采集到了数据220，前端显示：<code>当前运行时间：220 分钟</code>。如果用户更改这个变量的名称与单位，则前端显示随之改变，但数值不变。（不支持单位转换，如果单位设置为秒，则还是显示<code>220 秒</code>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-21.png\" alt=\"添加变量信息页面\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 添加或修改变量信息对话框 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;open&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:rules</span>=<span class=\"string\">&quot;rules&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;120px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;变量名称&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramName&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramName&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入变量名称&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;变量关联&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;mongoId&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-select</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.mongoId&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">clearable</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择或搜索系统变量&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;mv in mongoVariableOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:key</span>=<span class=\"string\">&quot;mv.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:label</span>=<span class=\"string\">&quot;mv.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:value</span>=<span class=\"string\">&quot;mv.value&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float:left&quot;</span>&gt;</span>&#123;&#123; mv.label &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float:right; color: #8492a6; font-size: 13px&quot;</span>&gt;</span>&#123;&#123; mv.description &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;数据类型&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramType&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramType&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择数据类型&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;dict in paramTypeOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:key</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:label</span>=<span class=\"string\">&quot;dict.dictLabel&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:value</span>=<span class=\"string\">&quot;dict.dictValue&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;变量单位&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;paramUnit&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramUnit&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入变量单位&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;form.paramType === &#x27;numerical&#x27;&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.paramUnit&quot;</span> <span class=\"attr\">disabled</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;仅数值型变量可输入单位&quot;</span> <span class=\"attr\">v-else</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>mongoVariableOptions</code>是从数据库里拿的，因为它一般不会变化，所以没有做前端入口，但是保留了前端api调用。如果要修改，需要直接操作数据库。同时，由于自定义变量数据库存放的是mongoDB变量的id，因此表格里需要做格式化，不能显示id，要显示<code>label</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mongo变量列表获取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getMongoVariables</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listMongoVariable().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongoVariableOptions = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> item = &#123;</span><br><span class=\"line\">        <span class=\"attr\">value</span>: row.id,</span><br><span class=\"line\">        <span class=\"attr\">label</span>: row.mongoName,</span><br><span class=\"line\">        <span class=\"attr\">description</span>: row.mongoDescription</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.mongoVariableOptions.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 变量关联翻译</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mongoIdFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.mongoVariableOptions.find(<span class=\"function\"><span class=\"params\">mongo</span> =&gt;</span> mongo.value === row.mongoId)? <span class=\"built_in\">this</span>.mongoVariableOptions.find(<span class=\"function\"><span class=\"params\">mongo</span> =&gt;</span> mongo.value === row.mongoId).label : <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这里用到了<a href=\"https://www.runoob.com/jsref/jsref-find.html\"><code>find</code>函数</a>，用来代替复杂的<code>for-if</code>来寻找数组中符合条件的元素。否则以上代码就会写成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 变量关联翻译</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mongoIdFormat</span>(<span class=\"params\">row, column</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> mongo <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.mongoVariableOptions) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mongo.value === row.mongoId) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> mongo.label;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>显然太麻烦了，尤其是在类似的操作很多的情况下。</p>\n<h3 id=\"3-2-设备类型\"><a href=\"#3-2-设备类型\" class=\"headerlink\" title=\"3.2 设备类型\"></a>3.2 设备类型</h3><p>【设备类型】模块也是个简单单表，用来定义机床的类型，但我们在上面加了绑定变量的功能。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-22.png\" alt=\"设备类型页面\"></p>\n<h4 id=\"3-2-1-图片上传与显示\"><a href=\"#3-2-1-图片上传与显示\" class=\"headerlink\" title=\"3.2.1 图片上传与显示\"></a>3.2.1 图片上传与显示</h4><p>图片上传功能是若依自带的<code>ImageUpload</code>组件，不需要额外设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-23.png\" alt=\"添加设备类型页面\"></p>\n<p>图片传到数据库的是图片路径字符串，为了显示在表格里，我写了如下的代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;typeList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;类型图片&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;devicetypeImage&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-image</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;scope.row.devicetypeImage !== null&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100px; height: 100px;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:src</span>=<span class=\"string\">&quot;scope.row.devicetypeImage&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:preview-src-list</span>=<span class=\"string\">&quot;[scope.row.devicetypeImage]&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-image</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>图片有则显示，没有则不显示，如果不加<code>v-if</code>，没有图片时会出现一个读取图片失败的方框占位，影响美观。</p>\n<h4 id=\"3-2-2-单选-多选按钮的逻辑\"><a href=\"#3-2-2-单选-多选按钮的逻辑\" class=\"headerlink\" title=\"3.2.2 单选/多选按钮的逻辑\"></a>3.2.2 单选/多选按钮的逻辑</h4><p>表格内有两类按钮，一类是表格上方带颜色的按钮，一类是表格右边每个数据项的蓝色文字按钮。这两类按钮功能基本一致。</p>\n<p>表格右边的按钮与每个数据项关联，因此只对某个数据项起作用；表格上方的按钮与表格左边的多选框关联，因此不一定只对一个数据项起作用。像修改按钮，不允许多选操作，只允许单选操作，删除按钮则同时支持单选/多选操作。我们设计的绑定变量功能应与修改按钮类似。</p>\n<p>若依则是通过如下方式设置这两种按钮的逻辑的：</p>\n<ul>\n<li>表格数据项按钮传参，为当前参数；上方的按钮不传参，此时函数的参数就为<code>undefined</code>，通过一个数组<code>ids</code>去处理。再通过逻辑或选择，见2.1.3节。</li>\n<li>上方的按钮设置<code>disabled</code>属性为布尔值<code>single</code>或<code>multiple</code>，在勾选时改变其布尔值，以达到按钮启用效果。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb8&quot;</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">plain</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;single&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:edit&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">plain</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;multiple&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:remove&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;1.5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;info&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">plain</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-key&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;single&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleBind&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:bind&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>绑定变量<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;typeList&quot;</span> @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> /&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">class-name</span>=<span class=\"string\">&quot;small-padding fixed-width&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleUpdate(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:edit&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-key&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleBind(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:edit&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>绑定<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-hasPermi</span>=<span class=\"string\">&quot;[&#x27;deviceCenter:type:remove&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"comment\">// 选中数组</span></span><br><span class=\"line\">    <span class=\"attr\">ids</span>: [],</span><br><span class=\"line\">    <span class=\"comment\">// 非单个禁用</span></span><br><span class=\"line\">    <span class=\"attr\">single</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 非多个禁用</span></span><br><span class=\"line\">    <span class=\"attr\">multiple</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 多选框选中数据</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleSelectionChange</span>(<span class=\"params\">selection</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.ids = selection.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.id)</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.single = selection.length!==<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.multiple = !selection.length</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-3-绑定变量\"><a href=\"#3-2-3-绑定变量\" class=\"headerlink\" title=\"3.2.3 绑定变量\"></a>3.2.3 绑定变量</h4><p>绑定变量用的是一个穿梭框，基于<a href=\"https://element.eleme.cn/#/zh-CN/component/transfer\">ElementUI的穿梭框</a>设计。左边是变量列表，右边是已与该类型绑定的变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-24.png\" alt=\"对设备类型绑定变量页面\"></p>\n<p><strong>Vue部分</strong>，将穿梭框放在一个对话框里即可。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 绑定变量对话框 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-dialog</span> <span class=\"attr\">:title</span>=<span class=\"string\">&quot;bindingparamTitle&quot;</span> <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;bindingparamOpen&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;800px&quot;</span> <span class=\"attr\">append-to-body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-transfer</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;deviceBindingParamValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: left; display: inline-block&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:titles</span>=<span class=\"string\">&quot;[&#x27;全部变量&#x27;,&#x27;已选择的变量&#x27;]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">filterable</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">filter-placeholder</span>=<span class=\"string\">&quot;请输入变量名称&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:data</span>=<span class=\"string\">&quot;paramOptions&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;bindingparamSubmitForm&quot;</span>&gt;</span>确 定<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;bindingparamCancel&quot;</span>&gt;</span>取 消<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong><code>script</code>部分</strong>，当用户点击某个设备类型的绑定按钮时，调用<code>handleBind</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 绑定变量按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleBind</span>(<span class=\"params\">row</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValue = [];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin =[];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingTypeId = row.id || <span class=\"built_in\">this</span>.ids[<span class=\"number\">0</span>];</span><br><span class=\"line\">  listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (row.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceBindingParamValue.push(row.paramId);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.push(row.paramId);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  getType(<span class=\"built_in\">this</span>.bindingTypeId).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bindingparamOpen = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bindingparamTitle = <span class=\"string\">&quot;对设备类型绑定变量&quot;</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>提前准备一个类型与变量的关联表，存储两者id。上面第6行查询该表，并把属于该类型的已绑定的变量id拿出来放在数组中备用。</p>\n<p>用户在穿梭框内操作完毕，准备点击确定按钮时，调用<code>bindingparamSubmitForm</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 绑定变量提交按钮 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">bindingparamSubmitForm</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> needToDelete = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> needToAdd = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> difference = <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.concat(<span class=\"built_in\">this</span>.deviceBindingParamValue).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v, i, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.indexOf(v) === arr.lastIndexOf(v);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> dif <span class=\"keyword\">of</span> difference) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValue.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      needToAdd.push(dif);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      needToDelete.push(dif);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> add <span class=\"keyword\">of</span> needToAdd) &#123;</span><br><span class=\"line\">    addDevicetypeparam(&#123;</span><br><span class=\"line\">      <span class=\"attr\">devicetypeId</span>: <span class=\"built_in\">this</span>.bindingTypeId,</span><br><span class=\"line\">      <span class=\"attr\">paramId</span>: add,</span><br><span class=\"line\">      <span class=\"attr\">enterpriseId</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    listDevice().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> device <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (device.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId) &#123;</span><br><span class=\"line\">          addDeviceParamType(&#123;</span><br><span class=\"line\">            <span class=\"attr\">deviceId</span>: device.id,</span><br><span class=\"line\">            <span class=\"attr\">paramId</span>: add,</span><br><span class=\"line\">            <span class=\"attr\">devicetypeId</span>: <span class=\"built_in\">this</span>.bindingTypeId,</span><br><span class=\"line\">            <span class=\"attr\">ncsId</span>: device.ncsId,</span><br><span class=\"line\">            <span class=\"attr\">enterpriseId</span>: device.enterpriseId</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> del <span class=\"keyword\">of</span> needToDelete) &#123;</span><br><span class=\"line\">    listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId &amp;&amp; row.paramId === del) &#123;</span><br><span class=\"line\">          delDevicetypeparam(row.id);</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    listDeviceParamType().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> row <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (row.devicetypeId === <span class=\"built_in\">this</span>.bindingTypeId &amp;&amp; row.paramId === del) &#123;</span><br><span class=\"line\">          delDeviceParamType(row.id);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (needToAdd.length !== <span class=\"number\">0</span> || needToDelete.length !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.msgSuccess(<span class=\"string\">&quot;成功&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingparamOpen = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>上述代码的逻辑是，判断一下现在的<code>deviceBindingParamValue</code>数组与穿梭框修改后的有哪些变化，有加的就加<code>needToAdd</code>，有删除的就加<code>needToDelete</code>，再逐一修改。其中5-15行这里：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> difference = <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.concat(<span class=\"built_in\">this</span>.deviceBindingParamValue).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v, i, arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.indexOf(v) === arr.lastIndexOf(v);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> dif <span class=\"keyword\">of</span> difference) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValue.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    needToAdd.push(dif);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceBindingParamValueOrigin.indexOf(dif) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    needToDelete.push(dif);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>concat</code>连接改变前和改变后的两个数组，<code>filter</code>筛选出其中元素前后索引值相等的数组（即只出现一次的数字，就是被改变的），再通过判断这个数组中每个元素出现在改变前还是改变后的数组，确定要加还是要删。</p>\n<p>如<code>deviceBindingParamValueOrigin</code>数组（改变前）为<code>[1, 2, 4]</code>，<code>deviceBindingParamValue</code>数组（改变后）为<code>[1, 4, 5]</code>，则<a href=\"https://www.runoob.com/jsref/jsref-concat-string.html\"><code>concat</code></a>后为<code>[1, 2, 4, 1, 4, 5]</code>，<a href=\"https://www.runoob.com/jsref/jsref-filter.html\"><code>filter</code></a>后为<code>[2, 5]</code>，判断后，<code>needToAdd</code>为<code>[5]</code>，<code>needToDelete</code>为<code>[2]</code>，再拿这两个数组去做真正地增删操作。</p>\n<p>用户准备点击取消按钮时，调用<code>bindingparamCancel</code>函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 绑定变量取消按钮</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">bindingparamCancel</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingparamOpen = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValue = [];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceBindingParamValueOrigin =[];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingTypeId = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-设备信息\"><a href=\"#3-3-设备信息\" class=\"headerlink\" title=\"3.3 设备信息\"></a>3.3 设备信息</h3><p>【设备信息】模块也是个单表，用来存储每台具体的设备。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-25.png\" alt=\"设备信息页面\"></p>\n<p>这个单表没有更多的技术难点。每个数据项的操作加了一个更多信息按钮，这个按钮可以跳转到该机床的监控页面，跳转是通过路由进行的，这一部分放到后面再讲。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/status/device/` + scope.row.id&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-more&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>更多信息</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>以上【企业中心】和【设备中心】两个模块，如果不算后期不断地调整美化，只算页面和功能的大体成型，我大概做了<strong>3个星期</strong>左右。这3个星期也是边学边做的一个过程，巩固了很多Vue和JavaScript的知识，对于我的代码和debug能力有很大的提升。昆山团队退出后，我们开始忙于【工作台】与【统计报表】的制作，这花了我<strong>整整2个月</strong>。这两个模块的技术难度也不亚于这篇文章所提到的，下次有空再补充！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-26.png\" alt=\"企业中心和设备中心的commit过程\"></p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-01 - 副本2.png","popularPost_tmp_gaData":{"updated":"Thu Feb 24 2022 22:23:28 GMT+0800 (中国标准时间)","title":"开发某机床厂远程运维平台的前端技术总结（1）","path":"2021/10/27/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-1/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211024/20211024-01 - 副本2.png","excerpt":"<p>今年3月到7月，我参与了课题组负责的<strong>某机床厂远程运维平台开发</strong>的项目，并主要承担前端开发工作。这个项目马上（10月底）就要结题了，因此总结一下在这半年的开发过程中遇到的一些技术问题或难题，以给之后的学习或开发作参考。</p>","date":{"_isAMomentObject":true,"_i":"2021-10-27T14:33:05.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-10-27T14:33:05.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Development","tags":["工业互联网平台","编程","前端","技术","Vue","ElementUI","开发","远程运维"],"internalLinks":["2021/12/14/several-ways-of-traversing-arrays-and-objects-in-javascript/"],"keywords":[],"keywordsLength":0},"length":26558},{"title":"开发某机床厂远程运维平台的前端技术总结（2）","date":"2021-10-29T08:28:54.000Z","comments":1,"_content":"\n在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。本文的代码在他们的基础上开发，大部分我做了一定幅度的改动。\n\n<!--more-->\n\n## 4 统计报表\n\n【统计报表】模块用于展示该公司的设备销售数据或故障数据。从这里开始，其实已经是纯前端工作，之后用到了大量的图表，我都是使用[Apache ECharts](https://echarts.apache.org/zh/index.html)进行开发的。\n\n我负责【统计报表】-【统计分析】的【设备分析】部分，即分析公司在每个省份、每种设备类型各卖了多少。这个页面有两个图，分别是【各地区设备统计】和【设备销售类型销量分析】。由于没有从后端拿数据，数据在客户提供的Excel里，所以我这里将数据写死在前端。\n\n![各地区设备统计](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-01.png)\n\n![设备销售类型销量分析](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-02.png)\n\n### 4.1 各地区设备统计\n\n这其实是一个图表，只是分成了左右两个图，左边是一个柱状堆积图，右边是一个饼图。\n\n#### 4.1.1 图表组件\n\n为了更好地管理图表，我将所有的图表都写成了Vue组件（Component）的形式，而非写在当前页面。在当前页面导入组件，并注册组件使用它。\n\n```html\n<div>\n  <region_echart ref=\"region\"></region_echart>\n</div>\n```\n\n```javascript\nimport region_echart from \"@/components/statisticalReport/echarts/region_echart\";\n...\n\nexport default {\n  components: {region_echart, ...},\n  ...\n}\n```\n\n当父组件（页面）要使用子组件（图表）的数据时，例如父组件要调用子组件的函数，可以在子组件添加`ref`属性寻找它。\n\n```javascript\n/** 搜索按钮操作 */\nhandleQuery() {\n  this.$refs.region.getProvinceData();\n},\n```\n\n当子组件（图表）要使用父组件（页面）的数据时，例如子组件想知道父组件的搜索框是什么条件，可以使用`this.$parent`向上寻找父组件。**注意：由于Vue实际上可能套了好几层`div`，所以要寻找好几层才能到目标父组件，可以在控制台`console.log`一下`this`及其父元素。**\n\n```javascript\ngetProvinceData() {\n  if (this.$parent.$parent.queryParams.provinces.length > 0) {\n    this.provinceData = this.$parent.$parent.queryParams.provinces;\n  } else {\n    this.provinceData = [];\n    for (let province of regionData) {\n      this.provinceData.push(province.label);\n    }\n  }\n  ...\n},\n```\n\n#### 4.1.2 数据添加\n\n这个表需要每个省份每种机床卖出了多少，因此我写在前端里的数据是一个大对象，属性是每个省份，每个省份的值又是一个对象，对应机床类型和销量。\n\n```javascript\ndata: {\n  '北京市': {'YGS3A...型': 3, 'YGS3B...型': 1, 'YGS3C...型': 2},\n  '上海市': {'YGS3A...型': 3, 'YGS3B...型': 10, 'YGS3C...型': 2, ...},\n  ...\n},\n```\n\n首先我们拿到这些数据后，要处理成Echarts支持的数据形式。这里我们使用数组的形式。先添加数据：\n\n```javascript\ngetProvinceData() {\n  if (this.$parent.$parent.queryParams.provinces.length > 0) {\n    this.provinceData = this.$parent.$parent.queryParams.provinces;\n  } else {\n    this.provinceData = [];\n    for (let province of regionData) {\n      this.provinceData.push(province.label);\n    }\n  }\n  ...\n},\ngetTypeData() {\n  listType().then(response => {\n    if (this.$parent.$parent.queryParams.deviceTypes.length > 0) {\n      this.typeData = this.$parent.$parent.queryParams.deviceTypes;\n    } else {\n      this.typeData = [];\n      for (let type of response.rows) {\n        this.typeData.push(type.devicetypeName);\n      }\n    }\n    ...\n  });\n},\ngetDeviceNumber() {\n  this.deviceNumber = {};\n  this.deviceNumber.total = [];\n  for (let type of this.typeData) {\n    this.deviceNumber[type] = [];\n    for (let province in this.provinceData) {\n      this.deviceNumber[type].push(0);\n    }\n  }\n  for (let province in this.provinceData) {\n    this.deviceNumber.total.push(0);\n  }\n  for (let province in this.data) {\n    for (let type in this.data[province]) {\n      if (this.provinceData.indexOf(province) > -1 && this.typeData.indexOf(type) > -1) {\n        this.deviceNumber[type][this.provinceData.indexOf(province)] = this.data[province][type];\n        this.deviceNumber.total[this.provinceData.indexOf(province)] += this.data[province][type];\n      }\n    }\n  }\n  console.log(this.deviceNumber)\n  ...\n},\n```\n\n由于排序和饼图需要计算每个省份的设备总数，所以我们给`deviceNumber`对象加一个属性`total`，其值为数组。`provinceData`的顺序是确定的，它的索引对应`total`数组里和每个`type`数组里的索引。再根据已有数据，给对应类型的省份索引位置加数据，总数也要加数据，最终得到：\n\n![console.log(this.deviceNumber)](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-03.png)\n\n每个数组34个元素对应34个省级行政区，其中每个位置是哪个省由`provinceData`数组确定。\n\n#### 4.1.3 数据处理\n\n以上数据还不能被图表使用，需要做进一步处理。\n\n首先对于柱形图，我们需要让它按总数数量排序。Echarts是不能做到这个功能的，所以我们需要处理数据源。\n\n```javascript\ntransformData() {\n  let flag = 0;\n  let flagData = [];\n  for (let x = 0; x < this.deviceNumber.total.length; x++) {\n    flag = 0;\n    for (let i = 0; i < this.deviceNumber.total.length; i++) {\n      if (this.deviceNumber.total[x] > this.deviceNumber.total[i]) {\n        flag++;\n      }\n    }\n    flagData.push(flag);\n  }\n  for (let x = 0; x < flagData.length; x++) {\n    flag = 0;\n    for (let i = x + 1; i < flagData.length; i++) {\n      if (flagData[x] === flagData[i]) {\n        flagData[i] += 1;\n      }\n    }\n  }\n  this.sortedDeviceNumber = {\n    total: []\n  };\n  for (let type of this.typeData) {\n    this.sortedDeviceNumber[type] = []\n  }\n  this.sortedProvinceData = [];\n  for (let i in flagData) {\n    for (let key in this.deviceNumber) {\n      this.sortedDeviceNumber[key][flagData[i]] = this.deviceNumber[key][i];\n    }\n    this.sortedProvinceData[flagData[i]] = this.provinceData[i];\n  }\n  ...\n},\n```\n\n以上代码4-12行，我们得到的`flagData`是由34个数字组成的数组，代表了每个省份的数量排序，即对于某个省份数量，有多少个省份数量比它小，那它就排多少位。13-20行处理并列的省份，这样就得到了从小到大的省份新顺序。再根据这个新顺序，将数量与省份赋值到`sortedDeviceNumber`和`sortedProvinceData`里。柱形图就可以用这个数据了。\n\n对于饼图，我们只需要省份和总数，注意总数为0时，将总数设置为`null`，这样它就会被视为无效数据，不会出现在饼图上。\n\n```javascript\ngetPieData() {\n  this.pieData = [];\n  for (let i = this.sortedProvinceData.length - 1; i >= 0; i--) {\n    this.pieData.push({\n      name: this.sortedProvinceData[i],\n      value: this.sortedDeviceNumber.total[i] === 0 ? null : this.sortedDeviceNumber.total[i],\n    })\n  }\n  ...\n},\n```\n\n#### 4.1.4 柱形图和饼形图数据传入\n\n这两个图属于一个图表，因此Echarts的`series`数量为n+1，n是设备类型数（表示柱形图），1表示饼图。\n\n```javascript\ngetSeries() {\n  this.series = [];\n  for (let type of this.typeData) {\n    this.series.push({\n      name: type,\n      type: 'bar',\t// 表示柱形图\n      stack: 'total',\t// 表示堆积图\n      label: {\n        show: true,\n        position: 'insideRight',\t// 标签数值放在柱形右方\n        formatter: function (params) {\n          if (params.value < 10) {\n            return '';\n          } else {\n            return params.value;\n          }\n        }\n      },\n      barCategoryGap: '30%',\t// 柱形之间间隔\n      data: this.sortedDeviceNumber[type],\t// 数据使用数组\n    });\n  }\n  this.series.push({\n    type: 'pie',\t// 表示饼图\n    radius: [30, '60%'],\t// 内半径30像素，外半径为容器的60%\n    center: ['75%', '45%'],\t// 圆心位置\n    data: this.pieData,\n    label: {\n      fontSize: 16,\n      formatter: function (params) {\n        if (params.percent >= 1) {\n          return params.name + ':\\n' + params.value + '（' + Math.round(params.percent) + '%）';\n        }\n        else {\n          return params.name + ':\\n' + params.value + '（<1%）';\n        }\n      }\n    },\n    labelLine: {\n      smooth: true,\t// 平滑标签线\n      lineStyle: {\n        width: 2\n      }\n    },\n    tooltip: {\t// 悬浮提示框\n      trigger: 'item',\t// 触发类型为饼图项目\n      formatter: function (params) {\n        return params.name + '<br>' + params.marker + params.value + '（' + params.percent + '%）';\n      }\n    },\n    itemStyle: {\n      shadowBlur: 30,\n      shadowColor: 'rgba(0, 0, 0, 0.4)'\n    },\n    animationType: 'scale',\n    animationEasing: 'elasticOut',\n    animationDelay: function (idx) {\n      return Math.random() * 200;\n    }\n  })\n  ...\n},\n```\n\n以上代码11-16行，当柱形图某个数据小于10时，则不显示标签数值，以免影响美观，或出现多个0重叠的情况。\n\n![柱形图标签用函数格式化](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-05.png)\n\n以上代码30-36行，当饼图某个数据项占比小于1%时，就显示`<1%`，以免被圆整为`0%`。47-49行，处理了饼图悬浮提示框的显示形式，用到了`params`即每个数据项的几个参数。\n\n![饼图标签与悬浮提示框用函数格式化](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-06.png)\n\n#### 4.1.5 生成图表\n\n生成图表用典型的`init`方法。\n\n```html\n<template>\n  <div style=\"width: 100%; height: 900px\" ref=\"dev_chart\">\n  </div>\n</template>\n```\n\n```javascript\ninitEcharts() {\n  this.chart = echarts.init(this.$refs.dev_chart, 'macarons');\n  this.chart.setOption({\n    tooltip: {\t// 设置柱形图标签，见上上图\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    },\n    legend: {\t// 图例，使用设备类型，可以同时操作柱形图和饼图\n      data: this.typeData,\n      textStyle: {\n        color: '#fff',\n        fontSize: 14\n      },\n      left: '0%',\n      top: '0%',\n      width: '60%'\n    },\n    grid: {\t// 柱形图范围\n      left: '5%',\n      right: '60%',\n      top: '8%',\n      bottom: '10%',\n      containLabel: true,\n    },\n    xAxis: {\n      name: '设备数量/台',\n      type: 'value',\n      position: 'top',\t// x轴位置\n      splitLine: {show: false},\n      boundaryGap: [0, 0.01],\n      axisTick: {\t// 坐标轴刻度\n        show: false\n      },\n      axisLabel: {\t// 坐标轴标签\n        textStyle: {\n          color: 'white',\n          fontSize: 14\n        }\n      },\n      axisLine: {\t// 坐标轴线\n        show: true,\n        lineStyle: {\n          color: '#fff'\n        }\n      },\n    },\n    yAxis: {\n      name: '省级行政区',\n      nameLocation: 'start',\t// 名称显示位置\n      type: 'category',\t// 类目轴\n      data: this.sortedProvinceData,\n      axisTick: {\t// 坐标轴分隔线\n        show: false\n      },\n      splitLine: {\n        show: false\n      },\n      axisLabel: {\n        textStyle: {\n          color: '#fff',\n          fontSize: 14\n        }\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#fff'\n        }\n      },\n    },\n    series: this.series\n  }, true);\n}\n```\n\n注意以上代码第2行，如果要使用`macarons`主题，需要找到它的位置并导入。\n\n```javascript\nimport echarts from 'echarts'\nimport \"../../../../node_modules/echarts/theme/macarons\";\n```\n\n#### 4.1.6 解决获取不到属性的报错\n\n之后的代码前端经常会报获取不到属性的错误，这甚至可能导致图表无法显示，为此有以下解决办法：\n\n- 如果是在Vue部分直接使用对象的属性，可以先用`v-if`判断其是否存在。如以下代码，`staticInfo`本来是个空对象，是在调用函数后才赋值，如果没有`v-if`，函数调用延迟时，Vue尝试填充此处的文本插值，就会报找不到`ncsId`属性的错。\n\n  ```html\n  <div class=\"cell\" v-if=\"staticInfo.ncsId\">{{ staticInfo.ncsId }}</div>\n  ```\n\n- 使用函数内部调用下一个函数，以强行控制函数执行流程，确保获取数据，再操作数据，如：\n\n  ```javascript\n  created() {\n    this.getList;\n  },\n  methods: {\n    getList() {\n      ListInfo().then(response => {\n        ...\n        this.handleData();\n      });\n    },\n    handleData() {\n      ...\n    },\n    ...\n  }\n  ```\n\n- 将生成图表的函数放在`mounted`的`nextTick`里，或直接设置整个函数体位于`nextTick`里，如：\n\n  ```javascript\n  mounted() {\n    this.$nextTick(() => {\n      this.initEchart();\n    });\n  },\n  methods: {\n    initEchart() {\n      this.$nextTick(() => {\n        let chart = echarts.init(this.$refs.dev_chart);\n        chart.setOption(this.options);\n      });\n    },\n  }\n  ```\n\n### 4.2 设备销售类型销量分析\n\n这个图表是左右两张图，分别是柱形图和饼图，基本操作方法与之前类似。\n\n#### 4.2.1 让柱形图同一系列显示不同的颜色\n\n柱形图其实只有一个系列，即设备数量。但为了让每一个柱形显示不同颜色，就要加单独的`itemStyle`。\n\n```javascript\ngetDeviceNumber() {\n  let color= [\n    \"#4C98FB\",\n    \"#83CCE7\",\n    \"#26C7C8\",\n    \"#73DEBD\",\n    \"#26C978\",\n    \"#8CDF6C\",\n    \"#FBD657\",\n    \"#F56679\",\n    \"#E07BCE\",\n    \"#9D50E0\",\n    \"#634FDA\"\n  ];\n  this.deviceNumber = [];\n  for (let index in this.typeData) {\n    this.deviceNumber.push({\n      value: this.data[index],\n      itemStyle: {\n        color: color[index]\n      }\n    })\n  }\n  ...\n},\n```\n\n#### 4.2.2 让柱形图横坐标标签旋转45度\n\n横坐标标签过长，需要斜向放置，才能完整显示且更美观。\n\n```javascript\nxAxis: {\n  name: '设备类型',\n  type: \"category\",\n  axisLabel: {\n    color: \"#96A4F4\",\n    rotate: 45,\t// 旋转角度\n  },\n  ...\n}\n```\n\n![柱状图坐标标签旋转](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-07.png)\n\n饼图不用这么做，直接将`color`写在`option`里就好了，它会自动把不同颜色赋给不同的数据项。\n\n## 5 工作台\n\n【工作台】是个类似于“大屏看板”的功能区，分为【产品全地图】和【设备状态看板】两个模块。\n\n### 5.1 产品全地图\n\n【产品全地图】其实就是把【统计报表】里的设备分析图换了个累加方式，按省份累加并且展示到全国地图里。这边的代码是昆山写的，我只是改了其中的数据，就不展开讲了。\n\n![产品全地图页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-08.png)\n\n### 5.2 设备状态看板\n\n【设备状态看板】展示了所有添加在【设备信息】里的设备，并根据采集到的数据展示它们的开关机状态，还可以点击每台设备右上角的按钮查看详细的监控数据。开关机状态所用的颜色来自[ElementUI的调色板颜色](https://element.eleme.cn/#/zh-CN/component/color)。\n\n![设备状态看板页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-09.png)\n\n#### 5.2.1 右上角的时间\n\n看板右上角的时间可以通过js的定时器完成。先在Vue中为其占位，并设置好css样式。\n\n```html\n<div class=\"header_timer\">\n  {{ nowDate }} {{ nowWeek }}<br>\n  <span style=\"font-size: 26px; font-weight: bold\">{{ nowTime }}</span>\n</div>\n```\n\n```css\n.header_timer {\n  color: rgb(255, 172, 80);\n  font-size: 20px;\n  font-weight: normal;\n  position: absolute;\n  top: 0%;\n  right: 3%;\n}\n```\n\n定义一个函数，将当前时间写入变量：\n\n```javascript\nsetNowTimes() {\n  let myDate = new Date();\n  let wk = myDate.getDay();\n  let yy = String(myDate.getFullYear());\n  let mm = myDate.getMonth() + 1;\n  let dd = String(myDate.getDate());\n  let hou = String(\n    myDate.getHours() < 10 ? \"0\" + myDate.getHours() : myDate.getHours()\n  );\n  let min = String(\n    myDate.getMinutes() < 10\n      ? \"0\" + myDate.getMinutes()\n      : myDate.getMinutes()\n  );\n  let sec = String(\n    myDate.getSeconds() < 10\n      ? \"0\" + myDate.getSeconds()\n      : myDate.getSeconds()\n  );\n  let weeks = [\n    \"星期日\",\n    \"星期一\",\n    \"星期二\",\n    \"星期三\",\n    \"星期四\",\n    \"星期五\",\n    \"星期六\",\n  ];\n  let week = weeks[wk];\n  this.nowDate = yy + \"年\" + mm + \"月\" + dd + \"日\"\n  this.nowTime = hou + \":\" + min + \":\" + sec;\n  this.nowWeek = week;\n}\n```\n\n再在`mounted`里设置一个定时器，设置为1000毫秒（即1秒）刷新一次就好，这样就实现了一个不断变化的时间。\n\n```javascript\nmounted() {\n  this.timer = setInterval(() => {\n    this.setNowTimes();\n  }, 1000);\n},\n```\n\n![时间](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-10.png)\n\n#### 5.2.2 搜索提示信息\n\n客户要求，在上方搜索时，页面会提示它搜索的是什么企业或设备类型。这看起来是个很简单的工作，但着实费了我一阵功夫。\n\n![搜索信息](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-12.png)\n\n这个搜索功能和其他单表的搜索没有什么区别，都是获取`queryParams`然后调用`getList`函数。首先在页面的相关位置加上这三个提示的内容：\n\n```html\n<el-row :gutter=\"10\" v-show=\"isSearched\" class=\"white-text medium-text\" style=\"margin-bottom: 15px\">\n  <el-col :lg=\"5\" :xs=\"24\" :sm=\"8\">\n    <span style=\"font-weight: bold\" v-show=\"focusEnter !== null\">当前企业：</span>{{ focusEnter }}\n  </el-col>\n  <el-col :lg=\"5\" :xs=\"24\" :sm=\"8\">\n    <span style=\"font-weight: bold\" v-show=\"focusOrg !== null\">当前部门：</span>{{ focusOrg }}\n  </el-col>\n  <el-col :lg=\"5\" :xs=\"24\" :sm=\"8\">\n    <span style=\"font-weight: bold\" v-show=\"focusType !== null\">当前类型：</span>{{ focusType }}\n  </el-col>\n</el-row>\n```\n\n定义布尔变量`isSearched`，判断是否在进行搜索，以及三个变量放搜索值。在搜索和重置搜索函数上，也要对这些变量进行处理：\n\n```javascript\n/** 搜索按钮操作 */\nhandleQuery() {\n  this.queryParams.pageNum = 1;\n  this.getList();\n  this.getFocus();\n  if (this.focusEnter !== null || this.focusOrg !== null || this.focusType !== null) {\n    this.isSearched = true;\n  } else {\n    this.isSearched = false;\n  }\n},\n/** 重置按钮操作 */\nresetQuery() {\n  this.resetForm(\"queryForm\");\n  this.handleQuery();\n  this.isSearched = false;\n  this.focusEnter = null;\n  this.focusOrg = null;\n  this.focusType = null;\n},\n```\n\n定义一个`getFocus`函数，用来把搜索值传给三个变量：\n\n```javascript\ngetFocus() {\n  if (this.queryParams.enterpriseId !== null) {\n    for (let enter of this.enterOptions) {\n      if (enter.value === this.queryParams.enterpriseId) {\n        this.focusEnter = enter.label;\n        break;\n      }\n    }\n  }\n  if (this.queryParams.orgId !== null) {\n    for (let org of this.orgOptionsList) {\n      if (org.value === this.queryParams.orgId) {\n        this.focusOrg = org.label;\n        break;\n      }\n    }\n  }\n  if (this.queryParams.devicetypeId !== null) {\n    for (let type of this.typeOptions) {\n      if (type.value === this.queryParams.devicetypeId) {\n        this.focusType = type.label;\n        break;\n      }\n    }\n  }\n},\n```\n\n这个当时写的代码明显可以用`find`函数替代啊，大意了。\n\n当设备总数为0时，其实也要设计一个整体的页面，返回按钮与重置按钮功能一致，调用同一个函数。\n\n```html\n<div class=\"device_container\" style=\"margin-top: 15px\">\n  <div v-if=\"total === 0\" style=\"margin: 50px auto; height: 200px; text-align: center\">\n    <p style=\"font-size: 20px; color: white\">暂无数据</p>\n    <el-button size=\"medium\" icon=\"el-icon-back\" @click=\"resetQuery\">返回</el-button>\n  </div>\n\n  <el-row :gutter=\"15\" v-else>\n    ...\n  </el-row>\n</div>\n```\n\n![设备总数为0](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-13.png)\n\n#### 5.2.3 纯前端功底：图例和设备框的设计\n\n这我是完全用HTML+CSS写的，真正考验前端功底。上代码：\n\n```html\n<el-row :gutter=\"20\" class=\"white-text medium-text\">\n<el-col :sm=\"5\" :xs=\"24\">\n  <div class=\"legend-total\">\n    <span style=\"font-weight: bold\">设备总数：</span>{{ total }}\n  </div>\n</el-col>\n<el-col :lg=\"3\" :xs=\"24\" :sm=\"6\" :md=\"4\">\n  <div class=\"legend-box\" style=\"border-bottom-color: #67C23A\">\n    <div class=\"legend-icon el-icon-set-up\" style=\"background-color: #67C23A\">\n    </div>\n    <div class=\"legend-text\">开机</div>\n  </div>\n</el-col>\n<el-col :lg=\"3\" :xs=\"24\" :sm=\"6\" :md=\"4\">\n  <div class=\"legend-box\" style=\"border-bottom-color: #F56C6C\">\n    <div class=\"legend-icon el-icon-switch-button\" style=\"background-color: #F56C6C\">\n    </div>\n    <div class=\"legend-text\">关机</div>\n  </div>\n</el-col>\n</el-row>\n\n<div class=\"device_container\" style=\"margin-top: 15px\">\n<div v-if=\"total === 0\" ...>\n  ...\t<!-- 这一部分就是上面的设备总数为0的界面 -->\n</div>\n\n<el-row :gutter=\"15\" v-else>\n  <el-col :xl=\"4\" :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" v-for=\"item in deviceList\" :key=\"item.id\"\n          style=\"margin-bottom: 15px\">\n\n    <div class=\"box-card\" v-loading=\"loading\">\n      <div class=\"card-header\"\n           :style=\"{'background-color': dynamicCheckStatusList[item.ncsId] ? '#67C23A' : '#F56C6C'}\">\n        <span class=\"title\">{{ item.deviceName }}</span>\n        <router-link :to=\"`/status/device/` + item.id\">\n          <el-link icon=\"el-icon-monitor\" :underline=\"false\">\n            详细数据\n          </el-link>\n        </router-link>\n      </div>\n      <div class=\"card-main\"\n           :style=\"{'border-color': dynamicCheckStatusList[item.ncsId] ? '#67C23A' : '#F56C6C'}\">\n        <div class=\"el-table el-table--enable-row-hover el-table--medium\">\n          <table cellspacing=\"0\" style=\"width: 100%\">\n            <tbody>\n            <tr>\n              <td>\n                <div class=\"label\">地区</div>\n              </td>\n              <td>\n                <div v-if=\"item.enterpriseId\">{{\n                    enterOptions.find(enter => enter.value === item.enterpriseId) ? enterOptions.find(enter => enter.value === item.enterpriseId).province : ''\n                  }}\n                </div>\n              </td>\n            </tr>\n            ...\t<!-- 省略表格中的企业、类型代码 -->\n            <tr>\n              <td>\n                <div class=\"label\">状态</div>\n              </td>\n              <td>\n                <div v-if=\"dynamicCheckStatusList\">\n                  {{ dynamicCheckStatusList[item.ncsId] ? \"开机\" : \"关机\" }}\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </el-col>\n</el-row>\n```\n\n以上代码第29行，使用`v-for`要绑定`key`。\n\n```css\n.white-text {\n  color: white\n}\n\n.medium-text {\n  font-size: 18px;\n}\n\n.legend-total {\n  border-left: 5px red solid;\t/* 设备总数左边的小红条 */\n  padding-left: 10px;\n  margin: 5px;\n}\n\n.legend-box {\n  border-bottom: 3px solid;\n  height: 35px;\n  width: 130px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0 0 0 10px;\n  margin: 5px;\n}\n\n.legend-icon {\n  height: 32px;\n  width: 40px;\n  font-size: 25px;\n  text-align: center;\n  line-height: 35px;\n  border-radius: 5px 5px 0 5px;\n}\n\n.legend-text {\n  height: 32px;\n  width: 100px;\n  text-align: center;\n  line-height: 35px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 15px;\n  border-radius: 10px 10px 0 0;\n  height: 50px;\n}\n\n.title {\n  position: relative;\n  font-size: 20px;\n  color: #303133;\n  font-weight: bold;\n}\n\n.card-main {\n  background-color: #F2F6FC;\n  border: 3px solid;\n  border-radius: 0 0 10px 10px;\n  height: 180px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ntd {\n  background-color: #F2F6FC;\n}\n\ntd div {\n  text-align: center;\n}\n\n.label {\n  font-weight: bold;\n}\n```\n\n虽然现有的框架、组件非常好用，但要做出自己的效果还是需要靠HTML+CSS完成，这也让我体会到几十年前前端工程师的艰辛。\n\n#### 5.2.4 路由跳转\n\n我们想让每台机床展现详细的监控数据，就做了一个按钮入口，这个实现方式有很多，比如ElementUI的[对话框](https://element.eleme.cn/#/zh-CN/component/dialog)、[弹出框](https://element.eleme.cn/#/zh-CN/component/popover)或[抽屉](https://element.eleme.cn/#/zh-CN/component/drawer)等。最终我们决定做一个单独的页面展示机床数据。\n\n每个机床应该共用一个页面模板，但数据需要有所不同，可以根据机床的id进行区分。这用的是若依的[路由跳转](http://doc.ruoyi.vip/ruoyi-vue/other/faq.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E8%8F%9C%E5%8D%95%E9%A1%B5%E7%AD%BE)。\n\n在`router`的`index.js`里面，新配置一个路由：\n\n```javascript\n{\n  path: '/status',\n  component: Layout,\n  hidden: true,\n  children: [\n    {\n      path: 'device/:id(\\\\d+)',\n      component: (resolve) => require(['@/views/staging/status/device'], resolve),\n      name: 'Device',\n      meta: { title: '设备详细数据', icon: '' }\n    }\n  ]\n}\n```\n\n同时设置路由跳转：\n\n```html\n<router-link :to=\"`/status/device/` + item.id\">\n  <el-link icon=\"el-icon-monitor\" :underline=\"false\">\n    详细数据\n  </el-link>\n</router-link>\n```\n\n就可以跳转到指定的这个链接，链接所展示的页面是路由里`require`的页面，接下来编辑这个页面即可。\n\n### 5.3 设备详细数据\n\n这里展示每个机床的详细数据，不同的机床路径不同，数据不同。下图路径后的数字就是这台机床的id。\n\n![设备详细数据页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-15.png)\n\n#### 5.3.1 机床id\n\n机床id是最核心的数据，不仅这个页面的路径需要机床id，页面所有的数据也通过机床id拿到。所以在Vue的`data`里，就定义好机床id。\n\n```javascript\ndeviceId: this.$route.params && this.$route.params.id,\n```\n\n利用逻辑与的短路特性，如果获取到了`this.$route.param`，就返回id。\n\n#### 5.3.2 表格信息与变量绑定\n\n所有的信息都是根据拿到的机床id，然后使用后端的函数与前端的api查到的，包含静态数据（如设备归属信息）和动态数据（如设备运行状态）。特别要注意拿到的动态数据要看是否绑定，绑定的话还要显示用户自定义的名称和单位。\n\n例如以下是设备基本信息的Vue代码：\n\n```html\n<el-col :lg=\"8\" :md=\"12\" class=\"card-box\">\n  <el-card shadow=\"hover\" style=\"margin-bottom: 15px; height: 315px\">\n    <div slot=\"header\" class=\"card-header\">\n      <span style=\"font-weight: bold\">设备基本信息</span>\n    </div>\n    <div class=\"el-table el-table--enable-row-hover el-table--medium\">\n      <table cellspacing=\"0\" style=\"width: 100%\">\n        <tbody>\n        <tr v-if=\"this.showParam.hwProductSerialNrL\">\n          <td>\n            <div class=\"cell\">{{\n                bindingParamInfo.find(item => item.mongoName === 'hwProductSerialNrL').paramName\n              }}\n            </div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"staticInfo.ncsId\">{{ staticInfo.ncsId }}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"cell\">设备名称</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"staticInfo.deviceName\">{{ staticInfo.deviceName }}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"cell\">设备启用状态</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"staticInfo.isStart !== null\">{{\n                staticInfo.isStart === 0 ? \"正常\" : \"停用\"\n              }}\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.nckType\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'nckType').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"!isEmptyObject(dynamicTimeInfo)\">{{\n                dynamicTimeInfo.timePayLoad.nckType\n              }}\n            </div>\n            <div class=\"cell\" v-else>（未找到）</div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.nckVersion\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'nckVersion').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"!isEmptyObject(dynamicTimeInfo)\">\n              {{ dynamicTimeInfo.timePayLoad.nckVersion }}\n            </div>\n            <div class=\"cell\" v-else>（未找到）</div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </el-card>\n</el-col>\n```\n\n再例如以下是设备运行状态的Vue代码：\n\n```html\n<el-col :lg=\"8\" :md=\"24\" class=\"card-box\">\n  <el-card shadow=\"hover\" style=\"margin-bottom: 15px; height: 315px\">\n    <div slot=\"header\" class=\"card-header\">\n      <span style=\"font-weight: bold\">设备运行状态</span>\n      <el-link type=\"primary\" :underline=\"false\" @click=\"handleDynamicRefresh\">\n        刷新\n      </el-link>\n    </div>\n    <div class=\"el-table el-table--enable-row-hover el-table--medium\">\n      <table cellspacing=\"0\" style=\"width: 100%\" v-loading=\"tableLoading\">\n        <tbody v-if=\"!isEmptyObject(dynamicTimeInfo) || !isEmptyObject(dynamicProgStatus)\">\n        <tr>\n          <td>\n            <div class=\"cell\">本次开机时刻</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicTimeInfo\">{{ dynamicTimeInfo.todayStartTime }}</div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.poweronTime\">\n          <td>\n            <div class=\"cell\">{{\n                bindingParamInfo.find(item => item.mongoName === 'poweronTime').paramName\n              }}\n            </div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicTimeInfo\">\n              {{ dynamicTimeInfo.timePayLoad.poweronTime }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'poweronTime').paramUnit }}\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.setupTime\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'setupTime').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicTimeInfo\">\n              {{ dynamicTimeInfo.timePayLoad.setupTime }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'setupTime').paramUnit }}\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.progStatus\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'progStatus').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicCheckStatus && dynamicProgStatus.progStatus\">\n              <el-button circle type=\"danger\" size=\"small\" style=\"vertical-align: middle\"\n                         v-if=\"[1,2,5].indexOf(dynamicProgStatus.progStatus) > -1\"></el-button>\n              <el-button circle type=\"success\" size=\"small\" style=\"vertical-align: middle\"\n                         v-else-if=\"dynamicProgStatus.progStatus === 3\"></el-button>\n              <el-button circle type=\"warning\" size=\"small\" style=\"vertical-align: middle\"\n                         v-else-if=\"dynamicProgStatus.progStatus === 4\"></el-button>\n              {{ dynamicProgStatus.string }}\n            </div>\n            <div class=\"cell\" v-else-if=\"!dynamicCheckStatus\" style=\"color: red\">\n              设备关机\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.progStatus\">\n          <td>\n            <div class=\"cell\">更新时刻</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicProgStatus.time\">{{ dynamicProgStatus.time }}</div>\n          </td>\n        </tr>\n        </tbody>\n        <tbody v-else>\n        <tr>\n          <td>\n            <div class=\"cell\">未找到设备运行状态，请<router-link :to=\"`../../deviceCenter/device`\">\n              <el-link type=\"primary\" :underline=\"false\">检查数控系统id</el-link>\n            </router-link>\n              或联系技术人员\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </el-card>\n</el-col>\n```\n\n这里首先拿到对象时要判断其是否为空对象，因为**空对象在JavaScript中被视为`true`**。这里我用的是自定义函数：\n\n```javascript\n// 空对象\nisEmptyObject(obj) {\n  for (let key in obj) {\n    return false;\n  }\n  return true;\n},\n```\n\n（JavaScript中，`undefined`、`null`、`-0`、`0`（`+0`）、`NaN`、`''`（空字符串）都被视为`false`，其他都被视为`true`，如空数组`[]`和空对象`{}`也被视为`true`）\n\n然后，我们会拿到一些机床数据，例如`dynamicTimeInfo`、`dynamicProgStatus`对象。为了实现变量绑定，我们还需要拿到：用户自定义的所有变量（从【变量信息】里拿），用户绑定到这台机床类型的变量（从绑定表里拿）。我用以下方式获取与处理变量：\n\n```javascript\n// 变量绑定\ngetParams() {\n  listParam().then(response => {\n    this.params = response.rows;\n    this.getMongos();\n  })\n},\ngetMongos() {\n  listMongoVariable().then(response => {\n    this.mongos = response.rows;\n    this.getBindings();\n  })\n},\ngetBindings() {\n  listDevicetypeparam().then(response => {\n    this.bindings = response.rows;\n    this.getBindingParamInfo();\n  })\n},\ngetBindingParamInfo() {\n  this.bindingParamInfo = [];\n  for (let item of this.bindings) {\n    if (this.devicetypeId === item.devicetypeId) {\n      this.bindingParamInfo.push({\n        paramId: item.paramId\n      })\n    }\n  }\n  for (let bindingParam of this.bindingParamInfo) {\n    bindingParam.paramName = this.params.find(param => param.id === bindingParam.paramId).paramName;\n    bindingParam.paramUnit = this.params.find(param => param.id === bindingParam.paramId).paramUnit;\n    bindingParam.mongoId = this.params.find(param => param.id === bindingParam.paramId).mongoId;\n    bindingParam.mongoName = this.mongos.find(mongo => mongo.id === bindingParam.mongoId).mongoName;\n  }\n  this.showParam = {};\n  for (let mongo of this.mongos) {\n    this.showParam[mongo.mongoName] = false;\n    if (this.bindingParamInfo.find(item => item.mongoName === mongo.mongoName)) {\n      this.showParam[mongo.mongoName] = true;\n    }\n  }\n  this.loading.close();\n},\n```\n\n`getParams`函数拿所有的自定义变量，`getMongos`函数拿所有的MongoDB变量，`getBindings`函数拿所有的绑定关系，`getBindingParamInfo`函数先把为当前类型绑定的变量放进数组里，再通过之前拿的信息为这些变量一一补充信息（如名称、单位等），最后在一个`showParam`数组里，为每个MongoDB变量设置布尔值，方便Vue里的`v-if`使用。\n\n#### 5.3.3 主轴信息图表：日期信息通信\n\n下面两个图表结构基本一致，所要实现的功能和要处理的数据也基本一致。这两个图表我也是写在组件里的。\n\n首先是这个日期搜索功能，其实也属于父组件和子组件的通信。以下是父组件的前端部分：\n\n```html\n<el-form :model=\"speedDate\" label-width=\"45px\" :inline=\"true\">\n  <el-form-item label=\"日期\">\n    <el-date-picker\n      v-model=\"speedDate.date\"\n      type=\"date\"\n      placeholder=\"请选择日期\"\n      format=\"yyyy 年 MM 月 dd 日\"\n      value-format=\"timestamp\"\n      :clearable=\"false\"\n      :picker-options=\"pickerOptions\">\n    </el-date-picker>\n  </el-form-item>\n  <el-form-item>\n    <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleSpeedQuery\">\n      搜索\n    </el-button>\n  </el-form-item>\n  <el-form-item v-if=\"$refs.speed && isEmptyObject($refs.speed.dynamicSpindleInfoList)\">\n    <!-- 如果子组件存在，但子组件的主轴信息列表为空对象 -->\n    <div>系统当日无数据</div>\n  </el-form-item>\n</el-form>\n```\n\n```javascript\n// 日期\nspeedDate: {date: new Date(new Date().toLocaleDateString()).getTime()},\t// 以获取当前的时间\n...\npickerOptions: {\n  disabledDate(time) {\n    return time.getTime() > Date.now() - 8.64e6\t// 不允许选择今日之后的时间\n  }\n},\n...\n// 选择日期处理\nhandleSpeedQuery() {\n  this.speedLoading = true;\n  this.getDynamicSpindleInfo();\n  this.$refs.speed.getNcsId();\t// 调子组件函数\n},\n```\n\n![日期选择](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-20.png)\n\n子组件要拿这个日期去查询信息：\n\n```javascript\n// 获取数控系统id\ngetNcsId() {\n  getDevice(this.deviceId).then(response => {\n    this.deviceNcsId = response.data.ncsId;\n    this.devicetypeId = response.data.devicetypeId;\n    this.getDynamicSpindleInfoList();\n  })\n},\n// 动态主轴信息列表获取\ngetDynamicSpindleInfoList() {\n  listSpindleDocByTime(this.deviceNcsId, this.$parent.$parent.$parent.$parent.speedDate.date).then(response => {\n    this.dynamicSpindleInfoList = [];\n    for (let doc of response) {\n      this.dynamicSpindleInfoList.push(doc);\n    }\n    ...\n  });\n},\n```\n\n这样子组件就拿到了某个日期的主轴信息列表，并拿此去画图。\n\n#### 5.3.4 主轴信息图表：父组件的信息展示与变量绑定\n\n图表的下方有一个表格，这个表格位于父组件，展示读取到的最新的主轴动态数据。这个表格的处理很复杂，不仅要考虑到变量绑定，也要考虑到适配。\n\n```html\n<el-card shadow=\"hover\" style=\"margin-bottom: 15px; height: 630px\">\n  <div slot=\"header\" class=\"card-header\">\n    <span style=\"font-weight: bold\">设备主轴速度图</span>\n    <el-button class=\"button\" type=\"text\"\n               @click=\"handleSpeedRefresh\">\n      刷新\n    </el-button>\n  </div>\n  <div>\n    <el-form :model=\"speedDate\" label-width=\"45px\" :inline=\"true\">\n      ...\t<!-- 省略的是日期搜索框部分 -->\n    </el-form>\n    <div v-loading=\"speedLoading\">\n      <spindle_speed ref=\"speed\"></spindle_speed>\t<!-- 图表主体 -->\n    </div>\n    <div class=\"el-table el-table--enable-row-hover el-table--medium\" style=\"margin-top: 15px\">\n      <table cellspacing=\"0\" style=\"width: 100%\">\n        <tbody v-if=\"!isEmptyObject(dynamicSpindleInfo) && screenWidth >= 992\">\n        <!-- 这里的tbody是屏幕宽度为350-991的情况，表格为1行6列 -->\n        <tr v-if=\"this.showParam.cmdSpeed || this.showParam.actSpeed\">\n          <td v-if=\"this.showParam.cmdSpeed\">\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'cmdSpeed').paramName }}</div>\n          </td>\n          <td v-if=\"this.showParam.cmdSpeed\">\n            <div class=\"cell\" v-if=\"this.dynamicSpindleInfo.spindlePayLoad.cmdSpeed !== null\">\n              {{ dynamicSpindleInfo.spindlePayLoad.cmdSpeed }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'cmdSpeed').paramUnit }}\n            </div>\n          </td>\n          <td v-if=\"this.showParam.actSpeed\">\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'actSpeed').paramName }}</div>\n          </td>\n          <td v-if=\"this.showParam.actSpeed\">\n            <div class=\"cell\" v-if=\"this.dynamicSpindleInfo.spindlePayLoad.actSpeed !== null\">\n              {{ dynamicSpindleInfo.spindlePayLoad.actSpeed }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'actSpeed').paramUnit }}\n            </div>\n          </td>\n          <td>\n            <div class=\"cell\">更新时刻</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"this.dynamicSpindleInfo.time\">{{ dynamicSpindleInfo.time }}</div>\n          </td>\n        </tr>\n        <tr v-else>\n          <div class=\"cell\">您可能未绑定速度相关变量，\n            <router-link :to=\"`../../deviceCenter/type`\">\n              <el-link type=\"primary\" :underline=\"false\">点击绑定</el-link>\n            </router-link>\n          </div>\n        </tr>\n        </tbody>\n        <tbody v-else-if=\"screenWidth >= 350\">\n          ...\t<!-- 这里的tbody是屏幕宽度为350-991的情况，表格调整为3行2列，代码与上面基本一致 -->\n        </tbody>\n        <tbody v-else-if=\"screenWidth < 350\">\n          ...\t<!-- 这里的tbody是屏幕宽度小于350的情况，表格调整为6行1列，代码与上面基本一致 -->\n        </tbody>\n        <tbody v-if=\"isEmptyObject(dynamicSpindleInfo)\">\n        <tr>\n          <div class=\"cell\">未找到最新主轴速度信息。\n          </div>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</el-card>\n```\n\n屏幕的宽度提前写在`data`里：\n\n```javascript\nscreenWidth: document.body.clientWidth\n```\n\n#### 5.3.5 主轴信息图表：子组件的图表展示与变量绑定\n\n变量绑定关系到图表的数据源，绑定就给图表数据，不绑定就不给，所以子组件最好也提前判断好是否绑定要画的变量。\n\n```javascript\n// 是否绑定？\nfindMongoId() {\n  listMongoVariable().then(response => {\n    this.mongoId.cmdSpeed = response.rows.find(row => row.mongoName === 'cmdSpeed').id;\n    this.mongoId.actSpeed = response.rows.find(row => row.mongoName === 'actSpeed').id;\n    this.findParamId();\n  })\n},\nfindParamId() {\n  listParam().then(response => {\n    this.paramId.cmdSpeed = response.rows.find(row => row.mongoId === this.mongoId.cmdSpeed).id;\n    this.paramId.actSpeed = response.rows.find(row => row.mongoId === this.mongoId.actSpeed).id;\n    this.paramName.cmdSpeed = response.rows.find(row => row.mongoId === this.mongoId.cmdSpeed).paramName;\n    this.paramName.actSpeed = response.rows.find(row => row.mongoId === this.mongoId.actSpeed).paramName;\n    this.findWhetherBound();\n  })\n},\nfindWhetherBound() {\n  listDevicetypeparam().then(response => {\n    this.isBound.cmdSpeed = !!response.rows.find(row => row.devicetypeId === this.devicetypeId && row.paramId === this.paramId.cmdSpeed);\n    this.isBound.actSpeed = !!response.rows.find(row => row.devicetypeId === this.devicetypeId && row.paramId === this.paramId.actSpeed);\n    ...\n  })\n},\n```\n\n这样通过`isBound`这个对象，就知道`cmdSpeed`和`actSpeed`绑定与否。\n\n再将数据处理为Echarts接受的形式（拿了所有数据）：\n\n```javascript\ngetSpeedDatasetSource() {\n  this.speedDatasetSource = [];\n  for (let info of this.dynamicSpindleInfoList) {\n    this.speedDatasetSource.push({\n      time: info.time,\n      cmdSpeed: info.spindlePayLoad.cmdSpeed,\n      actSpeed: info.spindlePayLoad.actSpeed\n    });\n  }\n  ...\n},\n```\n\n最后初始化图表。客户要求默认只显示主轴指定转速（`cmdSpeed`），不显示主轴实际转速（`actSpeed`），这在Echarts中可以用`selected`属性设置。\n\n```javascript\n// 初始化图表\ngetSpeedGraph() {\n  let selected = {};\n  if (this.isBound.cmdSpeed) {\t// 如果主轴指定转速被绑定了，就只显示它\n    selected[this.paramName.cmdSpeed] = true;\n    selected[this.paramName.actSpeed] = false;\n  } else {\n    selected[this.paramName.actSpeed] = true;\n  }\n  this.speedGraph = echarts.init(this.$refs.speed_chart, \"macarons\");\n  this.speedGraph.setOption({\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\t// 坐标轴指示器\n        type: 'line',\t// 形式为一条线\n        snap: true\t// 自动吸附（时间轴的点比较小）\n      }\n    },\n    legend: {\t// 图例\n      data: [this.paramName.cmdSpeed, this.paramName.actSpeed],\n      selected: selected\t// 默认选择项\n    },\n    grid: {\n      left: '3%',\n      right: '12%',\n      bottom: '10%',\n      containLabel: true,\n    },\n    dataset: {\n      dimensions: [{name: 'time', type: 'time'}, 'cmdSpeed', 'actSpeed'],\n      source: this.speedDatasetSource\n    },\n    xAxis: {\n      name: '时间',\n      nameTextStyle: {\n        padding: [0, 0, 0, 10]\n      },\n      type: 'time'\n    },\n    yAxis: {\n      name: '转速/(r/min)',\n      type: 'value',\n      nameTextStyle: {\n        padding: [0, 0, 0, 50]\n      }\n    },\n    dataZoom: [{\t// 图表区域缩放\n      type: 'slider',\t// 滑动条缩放（图表下方）\n      start: 0,\n      end: 100,\n      xAxisIndex: 0,\t// 缩放x轴\n      filterMode: 'none'\t// 不过滤数据\n    },\n      {\n        type: 'inside',\t// 内置缩放（滚轮）\n        start: 0,\n        end: 100,\n        xAxisIndex: 0,\t// 缩放x轴\n        filterMode: 'none'\t// 不过滤数据\n      }],\n    series: [\n      this.isBound.cmdSpeed ? {\t// 绑定cmdSpeed的情况下\n        name: this.paramName.cmdSpeed,\n        type: 'line',\n        encode: {\n          x: 0,\n          y: 1\n        },\n        smooth: false\n      } : null,\n      this.isBound.actSpeed ? {\t// 绑定actSpeed的情况下\n        name: this.paramName.actSpeed,\n        type: 'line',\n        encode: {\n          x: 0,\n          y: 2\n        },\n        smooth: false\n      } : null\n    ]\n  }, true);\n  this.$parent.$parent.$parent.$parent.speedLoading = false;\t// 停止父组件的加载动画\n}\n```\n\n最终效果如下：\n\n![坐标轴指示器的自动吸附](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-16.png)\n\n![两个图例都点上并进行缩放的情况](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-17.png)\n\n#### 5.3.6 普通刷新\n\n整个设备详细数据一共有4个普通刷新，分别是最上面的白色按钮“刷新状态”，以及3个动态数据卡片右上角的蓝色“刷新”文字。\n\n刷新操作只要将按钮绑定到一个刷新函数就好了，函数内再调用重置相关信息或获得相关信息的函数，以实现数据刷新。这里我还写了几个`loading`变量，并将它们`v-loading`绑定到相关标签上，并在刷新时设置为`true`，获取完毕数据后设置为`false`，这样就可以实现加载功能。\n\n```javascript\n// 刷新处理\nhandleGlobalRefresh() {\n  this.openLoading();\n  this.speedLoading = true;\n  this.tableLoading = true;\n  this.driveLoading = true;\n  this.getBasicInfo();\n  this.$refs.speed.getNcsId();\n  this.$refs.drive.getNcsId();\n},\nhandleDynamicRefresh() {\n  this.tableLoading = true;\n  this.getDynamicTimeInfo();\n},\nhandleSpeedRefresh() {\n  this.speedLoading = true;\n  this.speedDate.date = new Date(new Date().toLocaleDateString()).getTime();\n  this.getDynamicSpindleInfo();\n  this.$refs.speed.getNcsId();\n},\nhandleDriveRefresh() {\n  this.driveLoading = true;\n  this.driveDate.date = new Date(new Date().toLocaleDateString()).getTime();\n  this.getDynamicSpindleInfo();\n  this.$refs.drive.getNcsId();\n},\n```\n\n![全局刷新加载（左下角）和卡片刷新加载（右边中部）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-18.png)\n\n#### 5.3.7 自动刷新\n\n这是个比较复杂的功能，需要综合运用Vue和JavaScript知识，写出来和debug都花了我一段时间。\n\n实际上这个自动刷新用的还是上面的`handleGlobalRefresh`函数，只是要定时执行，并且还能调整开关与刷新频率。\n\n先在页面的合适位置放上这两个按钮：\n\n```html\n<el-form\n  class=\"searchForm\"\n  :model=\"refreshParams\"\n  ref=\"refreshForm\"\n  :inline=\"true\"\n  label-width=\"75px\"\n  style=\"display: inline; margin: 5px 0 5px 15px;\"\n>\n  <el-form-item label=\"自动刷新\" prop=\"autoRefresh\" style=\"margin-top:5px;\">\n    <el-switch v-model=\"refreshParams.autoRefresh\">\n    </el-switch>\n  </el-form-item>\n  <el-form-item label=\"刷新频率\" prop=\"refreshFrequency\" style=\"margin-top:5px;\">\n    <el-select v-model=\"refreshParams.refreshFrequency\" placeholder=\"请选择\" @change=\"handleRefreshSetting\" style=\"width: 85px;\">\n      <el-option\n        v-for=\"item in refreshOptions\"\n        :key=\"item.value\"\n        :label=\"item.label\"\n        :value=\"item.value\">\n      </el-option>\n    </el-select>\n  </el-form-item>\n</el-form>\n```\n\n![自动刷新功能](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-19.png)\n\n定义变量，默认情况下开启刷新开关，并设置频率为10 s：\n\n```javascript\n// 刷新频率\nrefreshParams: {\n  autoRefresh: true,\n  refreshFrequency: 10000\n},\nrefreshOptions: [\n  {value: 5000, label: '5 s'},\n  {value: 10000, label: '10 s'},\n  {value: 20000, label: '20 s'},\n  {value: 30000, label: '30 s'},\n  {value: 60000, label: '60 s'},\n],\nrefreshTimer: null,\n```\n\n当刷新频率发生变化时，即上面的`el-select`选中别的选项时，触发`handleRefreshSetting`函数，处理这个变化：\n\n```javascript\nhandleRefreshSetting() {\n  if (this.refreshTimer) {\n    clearInterval(this.refreshTimer);\t// 清除定时器\n    this.refreshTimer = null;\n  }\n  this.refreshTimer = setInterval(() => {\t// 设置新的定时器\n    if (this.refreshParams.autoRefresh) {\t// 如果自动刷新开关打开，执行刷新\n      this.handleGlobalRefresh();\n    }\n  }, this.refreshParams.refreshFrequency);\t// 频率设置为新的频率\n},\n```\n\n**重点来了**，由于这是个路由页面，所以可以利用[Vue路由的导航守卫](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html)（导航表示路由发生改变）和Vue的生命周期destroyed（现已改名为[unmounted](https://v3.cn.vuejs.org/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA)），来处理可能发生的变化，并按不同的变化执行刷新操作。\n\n```javascript\nexport default {\n  ...\n  // 以下的to表示进入的路由对象，from表示离开的路由对象，next表示进入路由的钩子函数\n  beforeRouteEnter(to, from, next) {\t// 进入路由前\n    next(vm => {\t// 由于此时获取this，因此需要通过vm访问\n      vm.refreshTimer = setInterval(() => {\t// 新建一个定时器\n        if (vm.refreshParams.autoRefresh) {\n          vm.handleGlobalRefresh();\n        }\n      }, vm.refreshParams.refreshFrequency);\n    });\n  },\n  beforeRouteUpdate(to, from, next) {\t// 路由更新前（从一个机床的详细数据跳到另一个的时候）\n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\t// 清除定时器\n      this.refreshTimer = null;\n    }\n    next();\n  },\n  beforeRouteLeave(to, from, next) {\t// 离开路由前\n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\t// 清除定时器\n      this.refreshTimer = null;\n    }\n    next();\n  },\n  destroyed() {\t// Vue对象销毁时\n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\t// 清除定时器\n    }\n    this.refreshTimer = null;\t// 无论如何要设置定时器为null\n  },\n  ...\n}\n```\n\n**凡是在路由内设置定时器，一定要通过导航守卫去处理它**，否则会出现离开了详细数据页面，别的页面还在每隔10 s自动刷新的bug。\n\n## 6 首页的合作伙伴\n\n首页的其他部分是苏州团队做的，下面的合作伙伴是我做的。合作伙伴只要放进公司的logo和名称就行了。\n\n```html\n<el-row :gutter=\"20\" style=\"margin-bottom:0.5rem\">\n  <el-col :xs=\"24\" :sm=\"24\">\n    <el-card class=\"update-log\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>合作伙伴</span>\n      </div>\n      <div class=\"block\">\n        <el-row :gutter=\"20\">\n          <el-col :xl=\"2\" :lg=\"3\" :md=\"6\" :sm=\"8\" :xs=\"12\"\n                  v-for=\"(i, index) in 20\" :key=\"i\"\n                  style=\"margin-bottom: 0.5rem; height: 70px\">\n            <div style=\"text-align: center\">\n              <el-image\n                style=\"width: auto; height: 30px; margin: 0 auto\"\n                :src=\"partnerLogos[index]\"\n                fit=\"scale-down\"\n              ></el-image>\n              <div style=\"padding: 10px; text-align: center\">\n                <span> {{ partnerNames[index].abbr }}</span>\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-card>\n  </el-col>\n</el-row>\n```\n\n每一个企业都是一个`el-col`，分为logo的`div`和名称的`div`。每一个`el-col`使用了`v-for`，所以要绑定`key`。\n\n企业的名称写死在`data`中：\n\n```javascript\npartnerNames: [\n  {full: \"德国西门子\", abbr: \"德国西门子\"},\n  {full: \"江阴塞特精密工具有限公司\", abbr: \"江阴塞特\"},\n  {full: \"杭州新剑机器人技术股份有限公司\", abbr: \"杭州新剑\"},\n  ...\n]\n```\n\n企业的logo由于位置一致，只是名称不同，因此写个函数去获取它：\n\n```javascript\ndata() {\n  return {\n    ...\n    partnerLogos: [],\n    ...\n  };\n},\ncreated() {\n    this.getLogos();\n  },\nmethods: {\n  ...\n  getLogos() {\n    for (let i = 1; i <= 20; i++) {\n      this.partnerLogos.push(require(\"../assets/partners/\" + (i < 10 ? '0' + i : i) + '.png'));\n    }\n  }\n}\n```\n\n\n\n---\n\n从5月到7月，我就在做这些模块的前端开发。与我们之前做的模块不同，这些模块大部分是纯前端工作，比如统计图、设备看板等，除此之外，前端还要构思从后端拿到数据后怎么处理数据的逻辑。拿到变量绑定数据，怎么让它以用户自定义的情况显示？拿到机床主轴数据，怎么让它画成既直观又美观、还让客户满意的图表？都需要我去想想。\n\n因此，**越是傻瓜式的页面与操作方式，肯定是程序在背后为你做了越多的事情，这些程序也是程序员的思想结晶。**\n\n这个项目已经验收完毕了，通过开发这个项目，我也学会了很多前端的知识，和一些后端、数据库知识。这些知识希望在将来都能用得上。接下来的任务，就是聚焦一个研究方向，好好做科研了。\n\n![统计报表、工作台等剩余模块的commit过程](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-23.png)\n","source":"_posts/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-2.md","raw":"---\ntitle: 开发某机床厂远程运维平台的前端技术总结（2）\ndate: 2021-10-29 16:28:54\ncategories: Development\ntags:\n  - Vue\n  - ElementUI\n  - Echarts\n  - 技术\n  - 前端\n  - 编程\n  - 开发\n  - 远程运维\n  - 工业互联网平台\ncomments: true\n---\n\n在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。本文的代码在他们的基础上开发，大部分我做了一定幅度的改动。\n\n<!--more-->\n\n## 4 统计报表\n\n【统计报表】模块用于展示该公司的设备销售数据或故障数据。从这里开始，其实已经是纯前端工作，之后用到了大量的图表，我都是使用[Apache ECharts](https://echarts.apache.org/zh/index.html)进行开发的。\n\n我负责【统计报表】-【统计分析】的【设备分析】部分，即分析公司在每个省份、每种设备类型各卖了多少。这个页面有两个图，分别是【各地区设备统计】和【设备销售类型销量分析】。由于没有从后端拿数据，数据在客户提供的Excel里，所以我这里将数据写死在前端。\n\n![各地区设备统计](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-01.png)\n\n![设备销售类型销量分析](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-02.png)\n\n### 4.1 各地区设备统计\n\n这其实是一个图表，只是分成了左右两个图，左边是一个柱状堆积图，右边是一个饼图。\n\n#### 4.1.1 图表组件\n\n为了更好地管理图表，我将所有的图表都写成了Vue组件（Component）的形式，而非写在当前页面。在当前页面导入组件，并注册组件使用它。\n\n```html\n<div>\n  <region_echart ref=\"region\"></region_echart>\n</div>\n```\n\n```javascript\nimport region_echart from \"@/components/statisticalReport/echarts/region_echart\";\n...\n\nexport default {\n  components: {region_echart, ...},\n  ...\n}\n```\n\n当父组件（页面）要使用子组件（图表）的数据时，例如父组件要调用子组件的函数，可以在子组件添加`ref`属性寻找它。\n\n```javascript\n/** 搜索按钮操作 */\nhandleQuery() {\n  this.$refs.region.getProvinceData();\n},\n```\n\n当子组件（图表）要使用父组件（页面）的数据时，例如子组件想知道父组件的搜索框是什么条件，可以使用`this.$parent`向上寻找父组件。**注意：由于Vue实际上可能套了好几层`div`，所以要寻找好几层才能到目标父组件，可以在控制台`console.log`一下`this`及其父元素。**\n\n```javascript\ngetProvinceData() {\n  if (this.$parent.$parent.queryParams.provinces.length > 0) {\n    this.provinceData = this.$parent.$parent.queryParams.provinces;\n  } else {\n    this.provinceData = [];\n    for (let province of regionData) {\n      this.provinceData.push(province.label);\n    }\n  }\n  ...\n},\n```\n\n#### 4.1.2 数据添加\n\n这个表需要每个省份每种机床卖出了多少，因此我写在前端里的数据是一个大对象，属性是每个省份，每个省份的值又是一个对象，对应机床类型和销量。\n\n```javascript\ndata: {\n  '北京市': {'YGS3A...型': 3, 'YGS3B...型': 1, 'YGS3C...型': 2},\n  '上海市': {'YGS3A...型': 3, 'YGS3B...型': 10, 'YGS3C...型': 2, ...},\n  ...\n},\n```\n\n首先我们拿到这些数据后，要处理成Echarts支持的数据形式。这里我们使用数组的形式。先添加数据：\n\n```javascript\ngetProvinceData() {\n  if (this.$parent.$parent.queryParams.provinces.length > 0) {\n    this.provinceData = this.$parent.$parent.queryParams.provinces;\n  } else {\n    this.provinceData = [];\n    for (let province of regionData) {\n      this.provinceData.push(province.label);\n    }\n  }\n  ...\n},\ngetTypeData() {\n  listType().then(response => {\n    if (this.$parent.$parent.queryParams.deviceTypes.length > 0) {\n      this.typeData = this.$parent.$parent.queryParams.deviceTypes;\n    } else {\n      this.typeData = [];\n      for (let type of response.rows) {\n        this.typeData.push(type.devicetypeName);\n      }\n    }\n    ...\n  });\n},\ngetDeviceNumber() {\n  this.deviceNumber = {};\n  this.deviceNumber.total = [];\n  for (let type of this.typeData) {\n    this.deviceNumber[type] = [];\n    for (let province in this.provinceData) {\n      this.deviceNumber[type].push(0);\n    }\n  }\n  for (let province in this.provinceData) {\n    this.deviceNumber.total.push(0);\n  }\n  for (let province in this.data) {\n    for (let type in this.data[province]) {\n      if (this.provinceData.indexOf(province) > -1 && this.typeData.indexOf(type) > -1) {\n        this.deviceNumber[type][this.provinceData.indexOf(province)] = this.data[province][type];\n        this.deviceNumber.total[this.provinceData.indexOf(province)] += this.data[province][type];\n      }\n    }\n  }\n  console.log(this.deviceNumber)\n  ...\n},\n```\n\n由于排序和饼图需要计算每个省份的设备总数，所以我们给`deviceNumber`对象加一个属性`total`，其值为数组。`provinceData`的顺序是确定的，它的索引对应`total`数组里和每个`type`数组里的索引。再根据已有数据，给对应类型的省份索引位置加数据，总数也要加数据，最终得到：\n\n![console.log(this.deviceNumber)](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-03.png)\n\n每个数组34个元素对应34个省级行政区，其中每个位置是哪个省由`provinceData`数组确定。\n\n#### 4.1.3 数据处理\n\n以上数据还不能被图表使用，需要做进一步处理。\n\n首先对于柱形图，我们需要让它按总数数量排序。Echarts是不能做到这个功能的，所以我们需要处理数据源。\n\n```javascript\ntransformData() {\n  let flag = 0;\n  let flagData = [];\n  for (let x = 0; x < this.deviceNumber.total.length; x++) {\n    flag = 0;\n    for (let i = 0; i < this.deviceNumber.total.length; i++) {\n      if (this.deviceNumber.total[x] > this.deviceNumber.total[i]) {\n        flag++;\n      }\n    }\n    flagData.push(flag);\n  }\n  for (let x = 0; x < flagData.length; x++) {\n    flag = 0;\n    for (let i = x + 1; i < flagData.length; i++) {\n      if (flagData[x] === flagData[i]) {\n        flagData[i] += 1;\n      }\n    }\n  }\n  this.sortedDeviceNumber = {\n    total: []\n  };\n  for (let type of this.typeData) {\n    this.sortedDeviceNumber[type] = []\n  }\n  this.sortedProvinceData = [];\n  for (let i in flagData) {\n    for (let key in this.deviceNumber) {\n      this.sortedDeviceNumber[key][flagData[i]] = this.deviceNumber[key][i];\n    }\n    this.sortedProvinceData[flagData[i]] = this.provinceData[i];\n  }\n  ...\n},\n```\n\n以上代码4-12行，我们得到的`flagData`是由34个数字组成的数组，代表了每个省份的数量排序，即对于某个省份数量，有多少个省份数量比它小，那它就排多少位。13-20行处理并列的省份，这样就得到了从小到大的省份新顺序。再根据这个新顺序，将数量与省份赋值到`sortedDeviceNumber`和`sortedProvinceData`里。柱形图就可以用这个数据了。\n\n对于饼图，我们只需要省份和总数，注意总数为0时，将总数设置为`null`，这样它就会被视为无效数据，不会出现在饼图上。\n\n```javascript\ngetPieData() {\n  this.pieData = [];\n  for (let i = this.sortedProvinceData.length - 1; i >= 0; i--) {\n    this.pieData.push({\n      name: this.sortedProvinceData[i],\n      value: this.sortedDeviceNumber.total[i] === 0 ? null : this.sortedDeviceNumber.total[i],\n    })\n  }\n  ...\n},\n```\n\n#### 4.1.4 柱形图和饼形图数据传入\n\n这两个图属于一个图表，因此Echarts的`series`数量为n+1，n是设备类型数（表示柱形图），1表示饼图。\n\n```javascript\ngetSeries() {\n  this.series = [];\n  for (let type of this.typeData) {\n    this.series.push({\n      name: type,\n      type: 'bar',\t// 表示柱形图\n      stack: 'total',\t// 表示堆积图\n      label: {\n        show: true,\n        position: 'insideRight',\t// 标签数值放在柱形右方\n        formatter: function (params) {\n          if (params.value < 10) {\n            return '';\n          } else {\n            return params.value;\n          }\n        }\n      },\n      barCategoryGap: '30%',\t// 柱形之间间隔\n      data: this.sortedDeviceNumber[type],\t// 数据使用数组\n    });\n  }\n  this.series.push({\n    type: 'pie',\t// 表示饼图\n    radius: [30, '60%'],\t// 内半径30像素，外半径为容器的60%\n    center: ['75%', '45%'],\t// 圆心位置\n    data: this.pieData,\n    label: {\n      fontSize: 16,\n      formatter: function (params) {\n        if (params.percent >= 1) {\n          return params.name + ':\\n' + params.value + '（' + Math.round(params.percent) + '%）';\n        }\n        else {\n          return params.name + ':\\n' + params.value + '（<1%）';\n        }\n      }\n    },\n    labelLine: {\n      smooth: true,\t// 平滑标签线\n      lineStyle: {\n        width: 2\n      }\n    },\n    tooltip: {\t// 悬浮提示框\n      trigger: 'item',\t// 触发类型为饼图项目\n      formatter: function (params) {\n        return params.name + '<br>' + params.marker + params.value + '（' + params.percent + '%）';\n      }\n    },\n    itemStyle: {\n      shadowBlur: 30,\n      shadowColor: 'rgba(0, 0, 0, 0.4)'\n    },\n    animationType: 'scale',\n    animationEasing: 'elasticOut',\n    animationDelay: function (idx) {\n      return Math.random() * 200;\n    }\n  })\n  ...\n},\n```\n\n以上代码11-16行，当柱形图某个数据小于10时，则不显示标签数值，以免影响美观，或出现多个0重叠的情况。\n\n![柱形图标签用函数格式化](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-05.png)\n\n以上代码30-36行，当饼图某个数据项占比小于1%时，就显示`<1%`，以免被圆整为`0%`。47-49行，处理了饼图悬浮提示框的显示形式，用到了`params`即每个数据项的几个参数。\n\n![饼图标签与悬浮提示框用函数格式化](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-06.png)\n\n#### 4.1.5 生成图表\n\n生成图表用典型的`init`方法。\n\n```html\n<template>\n  <div style=\"width: 100%; height: 900px\" ref=\"dev_chart\">\n  </div>\n</template>\n```\n\n```javascript\ninitEcharts() {\n  this.chart = echarts.init(this.$refs.dev_chart, 'macarons');\n  this.chart.setOption({\n    tooltip: {\t// 设置柱形图标签，见上上图\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    },\n    legend: {\t// 图例，使用设备类型，可以同时操作柱形图和饼图\n      data: this.typeData,\n      textStyle: {\n        color: '#fff',\n        fontSize: 14\n      },\n      left: '0%',\n      top: '0%',\n      width: '60%'\n    },\n    grid: {\t// 柱形图范围\n      left: '5%',\n      right: '60%',\n      top: '8%',\n      bottom: '10%',\n      containLabel: true,\n    },\n    xAxis: {\n      name: '设备数量/台',\n      type: 'value',\n      position: 'top',\t// x轴位置\n      splitLine: {show: false},\n      boundaryGap: [0, 0.01],\n      axisTick: {\t// 坐标轴刻度\n        show: false\n      },\n      axisLabel: {\t// 坐标轴标签\n        textStyle: {\n          color: 'white',\n          fontSize: 14\n        }\n      },\n      axisLine: {\t// 坐标轴线\n        show: true,\n        lineStyle: {\n          color: '#fff'\n        }\n      },\n    },\n    yAxis: {\n      name: '省级行政区',\n      nameLocation: 'start',\t// 名称显示位置\n      type: 'category',\t// 类目轴\n      data: this.sortedProvinceData,\n      axisTick: {\t// 坐标轴分隔线\n        show: false\n      },\n      splitLine: {\n        show: false\n      },\n      axisLabel: {\n        textStyle: {\n          color: '#fff',\n          fontSize: 14\n        }\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#fff'\n        }\n      },\n    },\n    series: this.series\n  }, true);\n}\n```\n\n注意以上代码第2行，如果要使用`macarons`主题，需要找到它的位置并导入。\n\n```javascript\nimport echarts from 'echarts'\nimport \"../../../../node_modules/echarts/theme/macarons\";\n```\n\n#### 4.1.6 解决获取不到属性的报错\n\n之后的代码前端经常会报获取不到属性的错误，这甚至可能导致图表无法显示，为此有以下解决办法：\n\n- 如果是在Vue部分直接使用对象的属性，可以先用`v-if`判断其是否存在。如以下代码，`staticInfo`本来是个空对象，是在调用函数后才赋值，如果没有`v-if`，函数调用延迟时，Vue尝试填充此处的文本插值，就会报找不到`ncsId`属性的错。\n\n  ```html\n  <div class=\"cell\" v-if=\"staticInfo.ncsId\">{{ staticInfo.ncsId }}</div>\n  ```\n\n- 使用函数内部调用下一个函数，以强行控制函数执行流程，确保获取数据，再操作数据，如：\n\n  ```javascript\n  created() {\n    this.getList;\n  },\n  methods: {\n    getList() {\n      ListInfo().then(response => {\n        ...\n        this.handleData();\n      });\n    },\n    handleData() {\n      ...\n    },\n    ...\n  }\n  ```\n\n- 将生成图表的函数放在`mounted`的`nextTick`里，或直接设置整个函数体位于`nextTick`里，如：\n\n  ```javascript\n  mounted() {\n    this.$nextTick(() => {\n      this.initEchart();\n    });\n  },\n  methods: {\n    initEchart() {\n      this.$nextTick(() => {\n        let chart = echarts.init(this.$refs.dev_chart);\n        chart.setOption(this.options);\n      });\n    },\n  }\n  ```\n\n### 4.2 设备销售类型销量分析\n\n这个图表是左右两张图，分别是柱形图和饼图，基本操作方法与之前类似。\n\n#### 4.2.1 让柱形图同一系列显示不同的颜色\n\n柱形图其实只有一个系列，即设备数量。但为了让每一个柱形显示不同颜色，就要加单独的`itemStyle`。\n\n```javascript\ngetDeviceNumber() {\n  let color= [\n    \"#4C98FB\",\n    \"#83CCE7\",\n    \"#26C7C8\",\n    \"#73DEBD\",\n    \"#26C978\",\n    \"#8CDF6C\",\n    \"#FBD657\",\n    \"#F56679\",\n    \"#E07BCE\",\n    \"#9D50E0\",\n    \"#634FDA\"\n  ];\n  this.deviceNumber = [];\n  for (let index in this.typeData) {\n    this.deviceNumber.push({\n      value: this.data[index],\n      itemStyle: {\n        color: color[index]\n      }\n    })\n  }\n  ...\n},\n```\n\n#### 4.2.2 让柱形图横坐标标签旋转45度\n\n横坐标标签过长，需要斜向放置，才能完整显示且更美观。\n\n```javascript\nxAxis: {\n  name: '设备类型',\n  type: \"category\",\n  axisLabel: {\n    color: \"#96A4F4\",\n    rotate: 45,\t// 旋转角度\n  },\n  ...\n}\n```\n\n![柱状图坐标标签旋转](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-07.png)\n\n饼图不用这么做，直接将`color`写在`option`里就好了，它会自动把不同颜色赋给不同的数据项。\n\n## 5 工作台\n\n【工作台】是个类似于“大屏看板”的功能区，分为【产品全地图】和【设备状态看板】两个模块。\n\n### 5.1 产品全地图\n\n【产品全地图】其实就是把【统计报表】里的设备分析图换了个累加方式，按省份累加并且展示到全国地图里。这边的代码是昆山写的，我只是改了其中的数据，就不展开讲了。\n\n![产品全地图页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-08.png)\n\n### 5.2 设备状态看板\n\n【设备状态看板】展示了所有添加在【设备信息】里的设备，并根据采集到的数据展示它们的开关机状态，还可以点击每台设备右上角的按钮查看详细的监控数据。开关机状态所用的颜色来自[ElementUI的调色板颜色](https://element.eleme.cn/#/zh-CN/component/color)。\n\n![设备状态看板页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-09.png)\n\n#### 5.2.1 右上角的时间\n\n看板右上角的时间可以通过js的定时器完成。先在Vue中为其占位，并设置好css样式。\n\n```html\n<div class=\"header_timer\">\n  {{ nowDate }} {{ nowWeek }}<br>\n  <span style=\"font-size: 26px; font-weight: bold\">{{ nowTime }}</span>\n</div>\n```\n\n```css\n.header_timer {\n  color: rgb(255, 172, 80);\n  font-size: 20px;\n  font-weight: normal;\n  position: absolute;\n  top: 0%;\n  right: 3%;\n}\n```\n\n定义一个函数，将当前时间写入变量：\n\n```javascript\nsetNowTimes() {\n  let myDate = new Date();\n  let wk = myDate.getDay();\n  let yy = String(myDate.getFullYear());\n  let mm = myDate.getMonth() + 1;\n  let dd = String(myDate.getDate());\n  let hou = String(\n    myDate.getHours() < 10 ? \"0\" + myDate.getHours() : myDate.getHours()\n  );\n  let min = String(\n    myDate.getMinutes() < 10\n      ? \"0\" + myDate.getMinutes()\n      : myDate.getMinutes()\n  );\n  let sec = String(\n    myDate.getSeconds() < 10\n      ? \"0\" + myDate.getSeconds()\n      : myDate.getSeconds()\n  );\n  let weeks = [\n    \"星期日\",\n    \"星期一\",\n    \"星期二\",\n    \"星期三\",\n    \"星期四\",\n    \"星期五\",\n    \"星期六\",\n  ];\n  let week = weeks[wk];\n  this.nowDate = yy + \"年\" + mm + \"月\" + dd + \"日\"\n  this.nowTime = hou + \":\" + min + \":\" + sec;\n  this.nowWeek = week;\n}\n```\n\n再在`mounted`里设置一个定时器，设置为1000毫秒（即1秒）刷新一次就好，这样就实现了一个不断变化的时间。\n\n```javascript\nmounted() {\n  this.timer = setInterval(() => {\n    this.setNowTimes();\n  }, 1000);\n},\n```\n\n![时间](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-10.png)\n\n#### 5.2.2 搜索提示信息\n\n客户要求，在上方搜索时，页面会提示它搜索的是什么企业或设备类型。这看起来是个很简单的工作，但着实费了我一阵功夫。\n\n![搜索信息](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-12.png)\n\n这个搜索功能和其他单表的搜索没有什么区别，都是获取`queryParams`然后调用`getList`函数。首先在页面的相关位置加上这三个提示的内容：\n\n```html\n<el-row :gutter=\"10\" v-show=\"isSearched\" class=\"white-text medium-text\" style=\"margin-bottom: 15px\">\n  <el-col :lg=\"5\" :xs=\"24\" :sm=\"8\">\n    <span style=\"font-weight: bold\" v-show=\"focusEnter !== null\">当前企业：</span>{{ focusEnter }}\n  </el-col>\n  <el-col :lg=\"5\" :xs=\"24\" :sm=\"8\">\n    <span style=\"font-weight: bold\" v-show=\"focusOrg !== null\">当前部门：</span>{{ focusOrg }}\n  </el-col>\n  <el-col :lg=\"5\" :xs=\"24\" :sm=\"8\">\n    <span style=\"font-weight: bold\" v-show=\"focusType !== null\">当前类型：</span>{{ focusType }}\n  </el-col>\n</el-row>\n```\n\n定义布尔变量`isSearched`，判断是否在进行搜索，以及三个变量放搜索值。在搜索和重置搜索函数上，也要对这些变量进行处理：\n\n```javascript\n/** 搜索按钮操作 */\nhandleQuery() {\n  this.queryParams.pageNum = 1;\n  this.getList();\n  this.getFocus();\n  if (this.focusEnter !== null || this.focusOrg !== null || this.focusType !== null) {\n    this.isSearched = true;\n  } else {\n    this.isSearched = false;\n  }\n},\n/** 重置按钮操作 */\nresetQuery() {\n  this.resetForm(\"queryForm\");\n  this.handleQuery();\n  this.isSearched = false;\n  this.focusEnter = null;\n  this.focusOrg = null;\n  this.focusType = null;\n},\n```\n\n定义一个`getFocus`函数，用来把搜索值传给三个变量：\n\n```javascript\ngetFocus() {\n  if (this.queryParams.enterpriseId !== null) {\n    for (let enter of this.enterOptions) {\n      if (enter.value === this.queryParams.enterpriseId) {\n        this.focusEnter = enter.label;\n        break;\n      }\n    }\n  }\n  if (this.queryParams.orgId !== null) {\n    for (let org of this.orgOptionsList) {\n      if (org.value === this.queryParams.orgId) {\n        this.focusOrg = org.label;\n        break;\n      }\n    }\n  }\n  if (this.queryParams.devicetypeId !== null) {\n    for (let type of this.typeOptions) {\n      if (type.value === this.queryParams.devicetypeId) {\n        this.focusType = type.label;\n        break;\n      }\n    }\n  }\n},\n```\n\n这个当时写的代码明显可以用`find`函数替代啊，大意了。\n\n当设备总数为0时，其实也要设计一个整体的页面，返回按钮与重置按钮功能一致，调用同一个函数。\n\n```html\n<div class=\"device_container\" style=\"margin-top: 15px\">\n  <div v-if=\"total === 0\" style=\"margin: 50px auto; height: 200px; text-align: center\">\n    <p style=\"font-size: 20px; color: white\">暂无数据</p>\n    <el-button size=\"medium\" icon=\"el-icon-back\" @click=\"resetQuery\">返回</el-button>\n  </div>\n\n  <el-row :gutter=\"15\" v-else>\n    ...\n  </el-row>\n</div>\n```\n\n![设备总数为0](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-13.png)\n\n#### 5.2.3 纯前端功底：图例和设备框的设计\n\n这我是完全用HTML+CSS写的，真正考验前端功底。上代码：\n\n```html\n<el-row :gutter=\"20\" class=\"white-text medium-text\">\n<el-col :sm=\"5\" :xs=\"24\">\n  <div class=\"legend-total\">\n    <span style=\"font-weight: bold\">设备总数：</span>{{ total }}\n  </div>\n</el-col>\n<el-col :lg=\"3\" :xs=\"24\" :sm=\"6\" :md=\"4\">\n  <div class=\"legend-box\" style=\"border-bottom-color: #67C23A\">\n    <div class=\"legend-icon el-icon-set-up\" style=\"background-color: #67C23A\">\n    </div>\n    <div class=\"legend-text\">开机</div>\n  </div>\n</el-col>\n<el-col :lg=\"3\" :xs=\"24\" :sm=\"6\" :md=\"4\">\n  <div class=\"legend-box\" style=\"border-bottom-color: #F56C6C\">\n    <div class=\"legend-icon el-icon-switch-button\" style=\"background-color: #F56C6C\">\n    </div>\n    <div class=\"legend-text\">关机</div>\n  </div>\n</el-col>\n</el-row>\n\n<div class=\"device_container\" style=\"margin-top: 15px\">\n<div v-if=\"total === 0\" ...>\n  ...\t<!-- 这一部分就是上面的设备总数为0的界面 -->\n</div>\n\n<el-row :gutter=\"15\" v-else>\n  <el-col :xl=\"4\" :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" v-for=\"item in deviceList\" :key=\"item.id\"\n          style=\"margin-bottom: 15px\">\n\n    <div class=\"box-card\" v-loading=\"loading\">\n      <div class=\"card-header\"\n           :style=\"{'background-color': dynamicCheckStatusList[item.ncsId] ? '#67C23A' : '#F56C6C'}\">\n        <span class=\"title\">{{ item.deviceName }}</span>\n        <router-link :to=\"`/status/device/` + item.id\">\n          <el-link icon=\"el-icon-monitor\" :underline=\"false\">\n            详细数据\n          </el-link>\n        </router-link>\n      </div>\n      <div class=\"card-main\"\n           :style=\"{'border-color': dynamicCheckStatusList[item.ncsId] ? '#67C23A' : '#F56C6C'}\">\n        <div class=\"el-table el-table--enable-row-hover el-table--medium\">\n          <table cellspacing=\"0\" style=\"width: 100%\">\n            <tbody>\n            <tr>\n              <td>\n                <div class=\"label\">地区</div>\n              </td>\n              <td>\n                <div v-if=\"item.enterpriseId\">{{\n                    enterOptions.find(enter => enter.value === item.enterpriseId) ? enterOptions.find(enter => enter.value === item.enterpriseId).province : ''\n                  }}\n                </div>\n              </td>\n            </tr>\n            ...\t<!-- 省略表格中的企业、类型代码 -->\n            <tr>\n              <td>\n                <div class=\"label\">状态</div>\n              </td>\n              <td>\n                <div v-if=\"dynamicCheckStatusList\">\n                  {{ dynamicCheckStatusList[item.ncsId] ? \"开机\" : \"关机\" }}\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </el-col>\n</el-row>\n```\n\n以上代码第29行，使用`v-for`要绑定`key`。\n\n```css\n.white-text {\n  color: white\n}\n\n.medium-text {\n  font-size: 18px;\n}\n\n.legend-total {\n  border-left: 5px red solid;\t/* 设备总数左边的小红条 */\n  padding-left: 10px;\n  margin: 5px;\n}\n\n.legend-box {\n  border-bottom: 3px solid;\n  height: 35px;\n  width: 130px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0 0 0 10px;\n  margin: 5px;\n}\n\n.legend-icon {\n  height: 32px;\n  width: 40px;\n  font-size: 25px;\n  text-align: center;\n  line-height: 35px;\n  border-radius: 5px 5px 0 5px;\n}\n\n.legend-text {\n  height: 32px;\n  width: 100px;\n  text-align: center;\n  line-height: 35px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 15px;\n  border-radius: 10px 10px 0 0;\n  height: 50px;\n}\n\n.title {\n  position: relative;\n  font-size: 20px;\n  color: #303133;\n  font-weight: bold;\n}\n\n.card-main {\n  background-color: #F2F6FC;\n  border: 3px solid;\n  border-radius: 0 0 10px 10px;\n  height: 180px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\ntd {\n  background-color: #F2F6FC;\n}\n\ntd div {\n  text-align: center;\n}\n\n.label {\n  font-weight: bold;\n}\n```\n\n虽然现有的框架、组件非常好用，但要做出自己的效果还是需要靠HTML+CSS完成，这也让我体会到几十年前前端工程师的艰辛。\n\n#### 5.2.4 路由跳转\n\n我们想让每台机床展现详细的监控数据，就做了一个按钮入口，这个实现方式有很多，比如ElementUI的[对话框](https://element.eleme.cn/#/zh-CN/component/dialog)、[弹出框](https://element.eleme.cn/#/zh-CN/component/popover)或[抽屉](https://element.eleme.cn/#/zh-CN/component/drawer)等。最终我们决定做一个单独的页面展示机床数据。\n\n每个机床应该共用一个页面模板，但数据需要有所不同，可以根据机床的id进行区分。这用的是若依的[路由跳转](http://doc.ruoyi.vip/ruoyi-vue/other/faq.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E8%8F%9C%E5%8D%95%E9%A1%B5%E7%AD%BE)。\n\n在`router`的`index.js`里面，新配置一个路由：\n\n```javascript\n{\n  path: '/status',\n  component: Layout,\n  hidden: true,\n  children: [\n    {\n      path: 'device/:id(\\\\d+)',\n      component: (resolve) => require(['@/views/staging/status/device'], resolve),\n      name: 'Device',\n      meta: { title: '设备详细数据', icon: '' }\n    }\n  ]\n}\n```\n\n同时设置路由跳转：\n\n```html\n<router-link :to=\"`/status/device/` + item.id\">\n  <el-link icon=\"el-icon-monitor\" :underline=\"false\">\n    详细数据\n  </el-link>\n</router-link>\n```\n\n就可以跳转到指定的这个链接，链接所展示的页面是路由里`require`的页面，接下来编辑这个页面即可。\n\n### 5.3 设备详细数据\n\n这里展示每个机床的详细数据，不同的机床路径不同，数据不同。下图路径后的数字就是这台机床的id。\n\n![设备详细数据页面](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-15.png)\n\n#### 5.3.1 机床id\n\n机床id是最核心的数据，不仅这个页面的路径需要机床id，页面所有的数据也通过机床id拿到。所以在Vue的`data`里，就定义好机床id。\n\n```javascript\ndeviceId: this.$route.params && this.$route.params.id,\n```\n\n利用逻辑与的短路特性，如果获取到了`this.$route.param`，就返回id。\n\n#### 5.3.2 表格信息与变量绑定\n\n所有的信息都是根据拿到的机床id，然后使用后端的函数与前端的api查到的，包含静态数据（如设备归属信息）和动态数据（如设备运行状态）。特别要注意拿到的动态数据要看是否绑定，绑定的话还要显示用户自定义的名称和单位。\n\n例如以下是设备基本信息的Vue代码：\n\n```html\n<el-col :lg=\"8\" :md=\"12\" class=\"card-box\">\n  <el-card shadow=\"hover\" style=\"margin-bottom: 15px; height: 315px\">\n    <div slot=\"header\" class=\"card-header\">\n      <span style=\"font-weight: bold\">设备基本信息</span>\n    </div>\n    <div class=\"el-table el-table--enable-row-hover el-table--medium\">\n      <table cellspacing=\"0\" style=\"width: 100%\">\n        <tbody>\n        <tr v-if=\"this.showParam.hwProductSerialNrL\">\n          <td>\n            <div class=\"cell\">{{\n                bindingParamInfo.find(item => item.mongoName === 'hwProductSerialNrL').paramName\n              }}\n            </div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"staticInfo.ncsId\">{{ staticInfo.ncsId }}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"cell\">设备名称</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"staticInfo.deviceName\">{{ staticInfo.deviceName }}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div class=\"cell\">设备启用状态</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"staticInfo.isStart !== null\">{{\n                staticInfo.isStart === 0 ? \"正常\" : \"停用\"\n              }}\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.nckType\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'nckType').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"!isEmptyObject(dynamicTimeInfo)\">{{\n                dynamicTimeInfo.timePayLoad.nckType\n              }}\n            </div>\n            <div class=\"cell\" v-else>（未找到）</div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.nckVersion\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'nckVersion').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"!isEmptyObject(dynamicTimeInfo)\">\n              {{ dynamicTimeInfo.timePayLoad.nckVersion }}\n            </div>\n            <div class=\"cell\" v-else>（未找到）</div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </el-card>\n</el-col>\n```\n\n再例如以下是设备运行状态的Vue代码：\n\n```html\n<el-col :lg=\"8\" :md=\"24\" class=\"card-box\">\n  <el-card shadow=\"hover\" style=\"margin-bottom: 15px; height: 315px\">\n    <div slot=\"header\" class=\"card-header\">\n      <span style=\"font-weight: bold\">设备运行状态</span>\n      <el-link type=\"primary\" :underline=\"false\" @click=\"handleDynamicRefresh\">\n        刷新\n      </el-link>\n    </div>\n    <div class=\"el-table el-table--enable-row-hover el-table--medium\">\n      <table cellspacing=\"0\" style=\"width: 100%\" v-loading=\"tableLoading\">\n        <tbody v-if=\"!isEmptyObject(dynamicTimeInfo) || !isEmptyObject(dynamicProgStatus)\">\n        <tr>\n          <td>\n            <div class=\"cell\">本次开机时刻</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicTimeInfo\">{{ dynamicTimeInfo.todayStartTime }}</div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.poweronTime\">\n          <td>\n            <div class=\"cell\">{{\n                bindingParamInfo.find(item => item.mongoName === 'poweronTime').paramName\n              }}\n            </div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicTimeInfo\">\n              {{ dynamicTimeInfo.timePayLoad.poweronTime }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'poweronTime').paramUnit }}\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.setupTime\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'setupTime').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicTimeInfo\">\n              {{ dynamicTimeInfo.timePayLoad.setupTime }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'setupTime').paramUnit }}\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.progStatus\">\n          <td>\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'progStatus').paramName }}</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicCheckStatus && dynamicProgStatus.progStatus\">\n              <el-button circle type=\"danger\" size=\"small\" style=\"vertical-align: middle\"\n                         v-if=\"[1,2,5].indexOf(dynamicProgStatus.progStatus) > -1\"></el-button>\n              <el-button circle type=\"success\" size=\"small\" style=\"vertical-align: middle\"\n                         v-else-if=\"dynamicProgStatus.progStatus === 3\"></el-button>\n              <el-button circle type=\"warning\" size=\"small\" style=\"vertical-align: middle\"\n                         v-else-if=\"dynamicProgStatus.progStatus === 4\"></el-button>\n              {{ dynamicProgStatus.string }}\n            </div>\n            <div class=\"cell\" v-else-if=\"!dynamicCheckStatus\" style=\"color: red\">\n              设备关机\n            </div>\n          </td>\n        </tr>\n        <tr v-if=\"this.showParam.progStatus\">\n          <td>\n            <div class=\"cell\">更新时刻</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"dynamicProgStatus.time\">{{ dynamicProgStatus.time }}</div>\n          </td>\n        </tr>\n        </tbody>\n        <tbody v-else>\n        <tr>\n          <td>\n            <div class=\"cell\">未找到设备运行状态，请<router-link :to=\"`../../deviceCenter/device`\">\n              <el-link type=\"primary\" :underline=\"false\">检查数控系统id</el-link>\n            </router-link>\n              或联系技术人员\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </el-card>\n</el-col>\n```\n\n这里首先拿到对象时要判断其是否为空对象，因为**空对象在JavaScript中被视为`true`**。这里我用的是自定义函数：\n\n```javascript\n// 空对象\nisEmptyObject(obj) {\n  for (let key in obj) {\n    return false;\n  }\n  return true;\n},\n```\n\n（JavaScript中，`undefined`、`null`、`-0`、`0`（`+0`）、`NaN`、`''`（空字符串）都被视为`false`，其他都被视为`true`，如空数组`[]`和空对象`{}`也被视为`true`）\n\n然后，我们会拿到一些机床数据，例如`dynamicTimeInfo`、`dynamicProgStatus`对象。为了实现变量绑定，我们还需要拿到：用户自定义的所有变量（从【变量信息】里拿），用户绑定到这台机床类型的变量（从绑定表里拿）。我用以下方式获取与处理变量：\n\n```javascript\n// 变量绑定\ngetParams() {\n  listParam().then(response => {\n    this.params = response.rows;\n    this.getMongos();\n  })\n},\ngetMongos() {\n  listMongoVariable().then(response => {\n    this.mongos = response.rows;\n    this.getBindings();\n  })\n},\ngetBindings() {\n  listDevicetypeparam().then(response => {\n    this.bindings = response.rows;\n    this.getBindingParamInfo();\n  })\n},\ngetBindingParamInfo() {\n  this.bindingParamInfo = [];\n  for (let item of this.bindings) {\n    if (this.devicetypeId === item.devicetypeId) {\n      this.bindingParamInfo.push({\n        paramId: item.paramId\n      })\n    }\n  }\n  for (let bindingParam of this.bindingParamInfo) {\n    bindingParam.paramName = this.params.find(param => param.id === bindingParam.paramId).paramName;\n    bindingParam.paramUnit = this.params.find(param => param.id === bindingParam.paramId).paramUnit;\n    bindingParam.mongoId = this.params.find(param => param.id === bindingParam.paramId).mongoId;\n    bindingParam.mongoName = this.mongos.find(mongo => mongo.id === bindingParam.mongoId).mongoName;\n  }\n  this.showParam = {};\n  for (let mongo of this.mongos) {\n    this.showParam[mongo.mongoName] = false;\n    if (this.bindingParamInfo.find(item => item.mongoName === mongo.mongoName)) {\n      this.showParam[mongo.mongoName] = true;\n    }\n  }\n  this.loading.close();\n},\n```\n\n`getParams`函数拿所有的自定义变量，`getMongos`函数拿所有的MongoDB变量，`getBindings`函数拿所有的绑定关系，`getBindingParamInfo`函数先把为当前类型绑定的变量放进数组里，再通过之前拿的信息为这些变量一一补充信息（如名称、单位等），最后在一个`showParam`数组里，为每个MongoDB变量设置布尔值，方便Vue里的`v-if`使用。\n\n#### 5.3.3 主轴信息图表：日期信息通信\n\n下面两个图表结构基本一致，所要实现的功能和要处理的数据也基本一致。这两个图表我也是写在组件里的。\n\n首先是这个日期搜索功能，其实也属于父组件和子组件的通信。以下是父组件的前端部分：\n\n```html\n<el-form :model=\"speedDate\" label-width=\"45px\" :inline=\"true\">\n  <el-form-item label=\"日期\">\n    <el-date-picker\n      v-model=\"speedDate.date\"\n      type=\"date\"\n      placeholder=\"请选择日期\"\n      format=\"yyyy 年 MM 月 dd 日\"\n      value-format=\"timestamp\"\n      :clearable=\"false\"\n      :picker-options=\"pickerOptions\">\n    </el-date-picker>\n  </el-form-item>\n  <el-form-item>\n    <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleSpeedQuery\">\n      搜索\n    </el-button>\n  </el-form-item>\n  <el-form-item v-if=\"$refs.speed && isEmptyObject($refs.speed.dynamicSpindleInfoList)\">\n    <!-- 如果子组件存在，但子组件的主轴信息列表为空对象 -->\n    <div>系统当日无数据</div>\n  </el-form-item>\n</el-form>\n```\n\n```javascript\n// 日期\nspeedDate: {date: new Date(new Date().toLocaleDateString()).getTime()},\t// 以获取当前的时间\n...\npickerOptions: {\n  disabledDate(time) {\n    return time.getTime() > Date.now() - 8.64e6\t// 不允许选择今日之后的时间\n  }\n},\n...\n// 选择日期处理\nhandleSpeedQuery() {\n  this.speedLoading = true;\n  this.getDynamicSpindleInfo();\n  this.$refs.speed.getNcsId();\t// 调子组件函数\n},\n```\n\n![日期选择](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-20.png)\n\n子组件要拿这个日期去查询信息：\n\n```javascript\n// 获取数控系统id\ngetNcsId() {\n  getDevice(this.deviceId).then(response => {\n    this.deviceNcsId = response.data.ncsId;\n    this.devicetypeId = response.data.devicetypeId;\n    this.getDynamicSpindleInfoList();\n  })\n},\n// 动态主轴信息列表获取\ngetDynamicSpindleInfoList() {\n  listSpindleDocByTime(this.deviceNcsId, this.$parent.$parent.$parent.$parent.speedDate.date).then(response => {\n    this.dynamicSpindleInfoList = [];\n    for (let doc of response) {\n      this.dynamicSpindleInfoList.push(doc);\n    }\n    ...\n  });\n},\n```\n\n这样子组件就拿到了某个日期的主轴信息列表，并拿此去画图。\n\n#### 5.3.4 主轴信息图表：父组件的信息展示与变量绑定\n\n图表的下方有一个表格，这个表格位于父组件，展示读取到的最新的主轴动态数据。这个表格的处理很复杂，不仅要考虑到变量绑定，也要考虑到适配。\n\n```html\n<el-card shadow=\"hover\" style=\"margin-bottom: 15px; height: 630px\">\n  <div slot=\"header\" class=\"card-header\">\n    <span style=\"font-weight: bold\">设备主轴速度图</span>\n    <el-button class=\"button\" type=\"text\"\n               @click=\"handleSpeedRefresh\">\n      刷新\n    </el-button>\n  </div>\n  <div>\n    <el-form :model=\"speedDate\" label-width=\"45px\" :inline=\"true\">\n      ...\t<!-- 省略的是日期搜索框部分 -->\n    </el-form>\n    <div v-loading=\"speedLoading\">\n      <spindle_speed ref=\"speed\"></spindle_speed>\t<!-- 图表主体 -->\n    </div>\n    <div class=\"el-table el-table--enable-row-hover el-table--medium\" style=\"margin-top: 15px\">\n      <table cellspacing=\"0\" style=\"width: 100%\">\n        <tbody v-if=\"!isEmptyObject(dynamicSpindleInfo) && screenWidth >= 992\">\n        <!-- 这里的tbody是屏幕宽度为350-991的情况，表格为1行6列 -->\n        <tr v-if=\"this.showParam.cmdSpeed || this.showParam.actSpeed\">\n          <td v-if=\"this.showParam.cmdSpeed\">\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'cmdSpeed').paramName }}</div>\n          </td>\n          <td v-if=\"this.showParam.cmdSpeed\">\n            <div class=\"cell\" v-if=\"this.dynamicSpindleInfo.spindlePayLoad.cmdSpeed !== null\">\n              {{ dynamicSpindleInfo.spindlePayLoad.cmdSpeed }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'cmdSpeed').paramUnit }}\n            </div>\n          </td>\n          <td v-if=\"this.showParam.actSpeed\">\n            <div class=\"cell\">{{ bindingParamInfo.find(item => item.mongoName === 'actSpeed').paramName }}</div>\n          </td>\n          <td v-if=\"this.showParam.actSpeed\">\n            <div class=\"cell\" v-if=\"this.dynamicSpindleInfo.spindlePayLoad.actSpeed !== null\">\n              {{ dynamicSpindleInfo.spindlePayLoad.actSpeed }}\n              {{ bindingParamInfo.find(item => item.mongoName === 'actSpeed').paramUnit }}\n            </div>\n          </td>\n          <td>\n            <div class=\"cell\">更新时刻</div>\n          </td>\n          <td>\n            <div class=\"cell\" v-if=\"this.dynamicSpindleInfo.time\">{{ dynamicSpindleInfo.time }}</div>\n          </td>\n        </tr>\n        <tr v-else>\n          <div class=\"cell\">您可能未绑定速度相关变量，\n            <router-link :to=\"`../../deviceCenter/type`\">\n              <el-link type=\"primary\" :underline=\"false\">点击绑定</el-link>\n            </router-link>\n          </div>\n        </tr>\n        </tbody>\n        <tbody v-else-if=\"screenWidth >= 350\">\n          ...\t<!-- 这里的tbody是屏幕宽度为350-991的情况，表格调整为3行2列，代码与上面基本一致 -->\n        </tbody>\n        <tbody v-else-if=\"screenWidth < 350\">\n          ...\t<!-- 这里的tbody是屏幕宽度小于350的情况，表格调整为6行1列，代码与上面基本一致 -->\n        </tbody>\n        <tbody v-if=\"isEmptyObject(dynamicSpindleInfo)\">\n        <tr>\n          <div class=\"cell\">未找到最新主轴速度信息。\n          </div>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</el-card>\n```\n\n屏幕的宽度提前写在`data`里：\n\n```javascript\nscreenWidth: document.body.clientWidth\n```\n\n#### 5.3.5 主轴信息图表：子组件的图表展示与变量绑定\n\n变量绑定关系到图表的数据源，绑定就给图表数据，不绑定就不给，所以子组件最好也提前判断好是否绑定要画的变量。\n\n```javascript\n// 是否绑定？\nfindMongoId() {\n  listMongoVariable().then(response => {\n    this.mongoId.cmdSpeed = response.rows.find(row => row.mongoName === 'cmdSpeed').id;\n    this.mongoId.actSpeed = response.rows.find(row => row.mongoName === 'actSpeed').id;\n    this.findParamId();\n  })\n},\nfindParamId() {\n  listParam().then(response => {\n    this.paramId.cmdSpeed = response.rows.find(row => row.mongoId === this.mongoId.cmdSpeed).id;\n    this.paramId.actSpeed = response.rows.find(row => row.mongoId === this.mongoId.actSpeed).id;\n    this.paramName.cmdSpeed = response.rows.find(row => row.mongoId === this.mongoId.cmdSpeed).paramName;\n    this.paramName.actSpeed = response.rows.find(row => row.mongoId === this.mongoId.actSpeed).paramName;\n    this.findWhetherBound();\n  })\n},\nfindWhetherBound() {\n  listDevicetypeparam().then(response => {\n    this.isBound.cmdSpeed = !!response.rows.find(row => row.devicetypeId === this.devicetypeId && row.paramId === this.paramId.cmdSpeed);\n    this.isBound.actSpeed = !!response.rows.find(row => row.devicetypeId === this.devicetypeId && row.paramId === this.paramId.actSpeed);\n    ...\n  })\n},\n```\n\n这样通过`isBound`这个对象，就知道`cmdSpeed`和`actSpeed`绑定与否。\n\n再将数据处理为Echarts接受的形式（拿了所有数据）：\n\n```javascript\ngetSpeedDatasetSource() {\n  this.speedDatasetSource = [];\n  for (let info of this.dynamicSpindleInfoList) {\n    this.speedDatasetSource.push({\n      time: info.time,\n      cmdSpeed: info.spindlePayLoad.cmdSpeed,\n      actSpeed: info.spindlePayLoad.actSpeed\n    });\n  }\n  ...\n},\n```\n\n最后初始化图表。客户要求默认只显示主轴指定转速（`cmdSpeed`），不显示主轴实际转速（`actSpeed`），这在Echarts中可以用`selected`属性设置。\n\n```javascript\n// 初始化图表\ngetSpeedGraph() {\n  let selected = {};\n  if (this.isBound.cmdSpeed) {\t// 如果主轴指定转速被绑定了，就只显示它\n    selected[this.paramName.cmdSpeed] = true;\n    selected[this.paramName.actSpeed] = false;\n  } else {\n    selected[this.paramName.actSpeed] = true;\n  }\n  this.speedGraph = echarts.init(this.$refs.speed_chart, \"macarons\");\n  this.speedGraph.setOption({\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\t// 坐标轴指示器\n        type: 'line',\t// 形式为一条线\n        snap: true\t// 自动吸附（时间轴的点比较小）\n      }\n    },\n    legend: {\t// 图例\n      data: [this.paramName.cmdSpeed, this.paramName.actSpeed],\n      selected: selected\t// 默认选择项\n    },\n    grid: {\n      left: '3%',\n      right: '12%',\n      bottom: '10%',\n      containLabel: true,\n    },\n    dataset: {\n      dimensions: [{name: 'time', type: 'time'}, 'cmdSpeed', 'actSpeed'],\n      source: this.speedDatasetSource\n    },\n    xAxis: {\n      name: '时间',\n      nameTextStyle: {\n        padding: [0, 0, 0, 10]\n      },\n      type: 'time'\n    },\n    yAxis: {\n      name: '转速/(r/min)',\n      type: 'value',\n      nameTextStyle: {\n        padding: [0, 0, 0, 50]\n      }\n    },\n    dataZoom: [{\t// 图表区域缩放\n      type: 'slider',\t// 滑动条缩放（图表下方）\n      start: 0,\n      end: 100,\n      xAxisIndex: 0,\t// 缩放x轴\n      filterMode: 'none'\t// 不过滤数据\n    },\n      {\n        type: 'inside',\t// 内置缩放（滚轮）\n        start: 0,\n        end: 100,\n        xAxisIndex: 0,\t// 缩放x轴\n        filterMode: 'none'\t// 不过滤数据\n      }],\n    series: [\n      this.isBound.cmdSpeed ? {\t// 绑定cmdSpeed的情况下\n        name: this.paramName.cmdSpeed,\n        type: 'line',\n        encode: {\n          x: 0,\n          y: 1\n        },\n        smooth: false\n      } : null,\n      this.isBound.actSpeed ? {\t// 绑定actSpeed的情况下\n        name: this.paramName.actSpeed,\n        type: 'line',\n        encode: {\n          x: 0,\n          y: 2\n        },\n        smooth: false\n      } : null\n    ]\n  }, true);\n  this.$parent.$parent.$parent.$parent.speedLoading = false;\t// 停止父组件的加载动画\n}\n```\n\n最终效果如下：\n\n![坐标轴指示器的自动吸附](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-16.png)\n\n![两个图例都点上并进行缩放的情况](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-17.png)\n\n#### 5.3.6 普通刷新\n\n整个设备详细数据一共有4个普通刷新，分别是最上面的白色按钮“刷新状态”，以及3个动态数据卡片右上角的蓝色“刷新”文字。\n\n刷新操作只要将按钮绑定到一个刷新函数就好了，函数内再调用重置相关信息或获得相关信息的函数，以实现数据刷新。这里我还写了几个`loading`变量，并将它们`v-loading`绑定到相关标签上，并在刷新时设置为`true`，获取完毕数据后设置为`false`，这样就可以实现加载功能。\n\n```javascript\n// 刷新处理\nhandleGlobalRefresh() {\n  this.openLoading();\n  this.speedLoading = true;\n  this.tableLoading = true;\n  this.driveLoading = true;\n  this.getBasicInfo();\n  this.$refs.speed.getNcsId();\n  this.$refs.drive.getNcsId();\n},\nhandleDynamicRefresh() {\n  this.tableLoading = true;\n  this.getDynamicTimeInfo();\n},\nhandleSpeedRefresh() {\n  this.speedLoading = true;\n  this.speedDate.date = new Date(new Date().toLocaleDateString()).getTime();\n  this.getDynamicSpindleInfo();\n  this.$refs.speed.getNcsId();\n},\nhandleDriveRefresh() {\n  this.driveLoading = true;\n  this.driveDate.date = new Date(new Date().toLocaleDateString()).getTime();\n  this.getDynamicSpindleInfo();\n  this.$refs.drive.getNcsId();\n},\n```\n\n![全局刷新加载（左下角）和卡片刷新加载（右边中部）](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-18.png)\n\n#### 5.3.7 自动刷新\n\n这是个比较复杂的功能，需要综合运用Vue和JavaScript知识，写出来和debug都花了我一段时间。\n\n实际上这个自动刷新用的还是上面的`handleGlobalRefresh`函数，只是要定时执行，并且还能调整开关与刷新频率。\n\n先在页面的合适位置放上这两个按钮：\n\n```html\n<el-form\n  class=\"searchForm\"\n  :model=\"refreshParams\"\n  ref=\"refreshForm\"\n  :inline=\"true\"\n  label-width=\"75px\"\n  style=\"display: inline; margin: 5px 0 5px 15px;\"\n>\n  <el-form-item label=\"自动刷新\" prop=\"autoRefresh\" style=\"margin-top:5px;\">\n    <el-switch v-model=\"refreshParams.autoRefresh\">\n    </el-switch>\n  </el-form-item>\n  <el-form-item label=\"刷新频率\" prop=\"refreshFrequency\" style=\"margin-top:5px;\">\n    <el-select v-model=\"refreshParams.refreshFrequency\" placeholder=\"请选择\" @change=\"handleRefreshSetting\" style=\"width: 85px;\">\n      <el-option\n        v-for=\"item in refreshOptions\"\n        :key=\"item.value\"\n        :label=\"item.label\"\n        :value=\"item.value\">\n      </el-option>\n    </el-select>\n  </el-form-item>\n</el-form>\n```\n\n![自动刷新功能](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-19.png)\n\n定义变量，默认情况下开启刷新开关，并设置频率为10 s：\n\n```javascript\n// 刷新频率\nrefreshParams: {\n  autoRefresh: true,\n  refreshFrequency: 10000\n},\nrefreshOptions: [\n  {value: 5000, label: '5 s'},\n  {value: 10000, label: '10 s'},\n  {value: 20000, label: '20 s'},\n  {value: 30000, label: '30 s'},\n  {value: 60000, label: '60 s'},\n],\nrefreshTimer: null,\n```\n\n当刷新频率发生变化时，即上面的`el-select`选中别的选项时，触发`handleRefreshSetting`函数，处理这个变化：\n\n```javascript\nhandleRefreshSetting() {\n  if (this.refreshTimer) {\n    clearInterval(this.refreshTimer);\t// 清除定时器\n    this.refreshTimer = null;\n  }\n  this.refreshTimer = setInterval(() => {\t// 设置新的定时器\n    if (this.refreshParams.autoRefresh) {\t// 如果自动刷新开关打开，执行刷新\n      this.handleGlobalRefresh();\n    }\n  }, this.refreshParams.refreshFrequency);\t// 频率设置为新的频率\n},\n```\n\n**重点来了**，由于这是个路由页面，所以可以利用[Vue路由的导航守卫](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html)（导航表示路由发生改变）和Vue的生命周期destroyed（现已改名为[unmounted](https://v3.cn.vuejs.org/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA)），来处理可能发生的变化，并按不同的变化执行刷新操作。\n\n```javascript\nexport default {\n  ...\n  // 以下的to表示进入的路由对象，from表示离开的路由对象，next表示进入路由的钩子函数\n  beforeRouteEnter(to, from, next) {\t// 进入路由前\n    next(vm => {\t// 由于此时获取this，因此需要通过vm访问\n      vm.refreshTimer = setInterval(() => {\t// 新建一个定时器\n        if (vm.refreshParams.autoRefresh) {\n          vm.handleGlobalRefresh();\n        }\n      }, vm.refreshParams.refreshFrequency);\n    });\n  },\n  beforeRouteUpdate(to, from, next) {\t// 路由更新前（从一个机床的详细数据跳到另一个的时候）\n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\t// 清除定时器\n      this.refreshTimer = null;\n    }\n    next();\n  },\n  beforeRouteLeave(to, from, next) {\t// 离开路由前\n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\t// 清除定时器\n      this.refreshTimer = null;\n    }\n    next();\n  },\n  destroyed() {\t// Vue对象销毁时\n    if (this.refreshTimer) {\n      clearInterval(this.refreshTimer);\t// 清除定时器\n    }\n    this.refreshTimer = null;\t// 无论如何要设置定时器为null\n  },\n  ...\n}\n```\n\n**凡是在路由内设置定时器，一定要通过导航守卫去处理它**，否则会出现离开了详细数据页面，别的页面还在每隔10 s自动刷新的bug。\n\n## 6 首页的合作伙伴\n\n首页的其他部分是苏州团队做的，下面的合作伙伴是我做的。合作伙伴只要放进公司的logo和名称就行了。\n\n```html\n<el-row :gutter=\"20\" style=\"margin-bottom:0.5rem\">\n  <el-col :xs=\"24\" :sm=\"24\">\n    <el-card class=\"update-log\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>合作伙伴</span>\n      </div>\n      <div class=\"block\">\n        <el-row :gutter=\"20\">\n          <el-col :xl=\"2\" :lg=\"3\" :md=\"6\" :sm=\"8\" :xs=\"12\"\n                  v-for=\"(i, index) in 20\" :key=\"i\"\n                  style=\"margin-bottom: 0.5rem; height: 70px\">\n            <div style=\"text-align: center\">\n              <el-image\n                style=\"width: auto; height: 30px; margin: 0 auto\"\n                :src=\"partnerLogos[index]\"\n                fit=\"scale-down\"\n              ></el-image>\n              <div style=\"padding: 10px; text-align: center\">\n                <span> {{ partnerNames[index].abbr }}</span>\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-card>\n  </el-col>\n</el-row>\n```\n\n每一个企业都是一个`el-col`，分为logo的`div`和名称的`div`。每一个`el-col`使用了`v-for`，所以要绑定`key`。\n\n企业的名称写死在`data`中：\n\n```javascript\npartnerNames: [\n  {full: \"德国西门子\", abbr: \"德国西门子\"},\n  {full: \"江阴塞特精密工具有限公司\", abbr: \"江阴塞特\"},\n  {full: \"杭州新剑机器人技术股份有限公司\", abbr: \"杭州新剑\"},\n  ...\n]\n```\n\n企业的logo由于位置一致，只是名称不同，因此写个函数去获取它：\n\n```javascript\ndata() {\n  return {\n    ...\n    partnerLogos: [],\n    ...\n  };\n},\ncreated() {\n    this.getLogos();\n  },\nmethods: {\n  ...\n  getLogos() {\n    for (let i = 1; i <= 20; i++) {\n      this.partnerLogos.push(require(\"../assets/partners/\" + (i < 10 ? '0' + i : i) + '.png'));\n    }\n  }\n}\n```\n\n\n\n---\n\n从5月到7月，我就在做这些模块的前端开发。与我们之前做的模块不同，这些模块大部分是纯前端工作，比如统计图、设备看板等，除此之外，前端还要构思从后端拿到数据后怎么处理数据的逻辑。拿到变量绑定数据，怎么让它以用户自定义的情况显示？拿到机床主轴数据，怎么让它画成既直观又美观、还让客户满意的图表？都需要我去想想。\n\n因此，**越是傻瓜式的页面与操作方式，肯定是程序在背后为你做了越多的事情，这些程序也是程序员的思想结晶。**\n\n这个项目已经验收完毕了，通过开发这个项目，我也学会了很多前端的知识，和一些后端、数据库知识。这些知识希望在将来都能用得上。接下来的任务，就是聚焦一个研究方向，好好做科研了。\n\n![统计报表、工作台等剩余模块的commit过程](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-23.png)\n","slug":"frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-2","published":1,"updated":"2021-10-29T08:46:45.944Z","layout":"post","photos":[],"link":"","_id":"cl06nlvuw004lf4vi693kcqzq","content":"<p>在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。本文的代码在他们的基础上开发，大部分我做了一定幅度的改动。</p>\n<span id=\"more\"></span>\n<h2 id=\"4-统计报表\"><a href=\"#4-统计报表\" class=\"headerlink\" title=\"4 统计报表\"></a>4 统计报表</h2><p>【统计报表】模块用于展示该公司的设备销售数据或故障数据。从这里开始，其实已经是纯前端工作，之后用到了大量的图表，我都是使用<a href=\"https://echarts.apache.org/zh/index.html\">Apache ECharts</a>进行开发的。</p>\n<p>我负责【统计报表】-【统计分析】的【设备分析】部分，即分析公司在每个省份、每种设备类型各卖了多少。这个页面有两个图，分别是【各地区设备统计】和【设备销售类型销量分析】。由于没有从后端拿数据，数据在客户提供的Excel里，所以我这里将数据写死在前端。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-01.png\" alt=\"各地区设备统计\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-02.png\" alt=\"设备销售类型销量分析\"></p>\n<h3 id=\"4-1-各地区设备统计\"><a href=\"#4-1-各地区设备统计\" class=\"headerlink\" title=\"4.1 各地区设备统计\"></a>4.1 各地区设备统计</h3><p>这其实是一个图表，只是分成了左右两个图，左边是一个柱状堆积图，右边是一个饼图。</p>\n<h4 id=\"4-1-1-图表组件\"><a href=\"#4-1-1-图表组件\" class=\"headerlink\" title=\"4.1.1 图表组件\"></a>4.1.1 图表组件</h4><p>为了更好地管理图表，我将所有的图表都写成了Vue组件（Component）的形式，而非写在当前页面。在当前页面导入组件，并注册组件使用它。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">region_echart</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;region&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">region_echart</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> region_echart <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/statisticalReport/echarts/region_echart&quot;</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;region_echart, ...&#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当父组件（页面）要使用子组件（图表）的数据时，例如父组件要调用子组件的函数，可以在子组件添加<code>ref</code>属性寻找它。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 搜索按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.region.getProvinceData();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>当子组件（图表）要使用父组件（页面）的数据时，例如子组件想知道父组件的搜索框是什么条件，可以使用<code>this.$parent</code>向上寻找父组件。<strong>注意：由于Vue实际上可能套了好几层<code>div</code>，所以要寻找好几层才能到目标父组件，可以在控制台<code>console.log</code>一下<code>this</code>及其父元素。</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getProvinceData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = <span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">of</span> regionData) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.provinceData.push(province.label);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-1-2-数据添加\"><a href=\"#4-1-2-数据添加\" class=\"headerlink\" title=\"4.1.2 数据添加\"></a>4.1.2 数据添加</h4><p>这个表需要每个省份每种机床卖出了多少，因此我写在前端里的数据是一个大对象，属性是每个省份，每个省份的值又是一个对象，对应机床类型和销量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;北京市&#x27;</span>: &#123;<span class=\"string\">&#x27;YGS3A...型&#x27;</span>: <span class=\"number\">3</span>, <span class=\"string\">&#x27;YGS3B...型&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;YGS3C...型&#x27;</span>: <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;上海市&#x27;</span>: &#123;<span class=\"string\">&#x27;YGS3A...型&#x27;</span>: <span class=\"number\">3</span>, <span class=\"string\">&#x27;YGS3B...型&#x27;</span>: <span class=\"number\">10</span>, <span class=\"string\">&#x27;YGS3C...型&#x27;</span>: <span class=\"number\">2</span>, ...&#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>首先我们拿到这些数据后，要处理成Echarts支持的数据形式。这里我们使用数组的形式。先添加数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getProvinceData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = <span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">of</span> regionData) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.provinceData.push(province.label);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getTypeData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listType().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$parent.$parent.queryParams.deviceTypes.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.typeData = <span class=\"built_in\">this</span>.$parent.$parent.queryParams.deviceTypes;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.typeData = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.typeData.push(type.devicetypeName);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getDeviceNumber</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceNumber = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceNumber.total = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNumber[type] = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.provinceData) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.deviceNumber[type].push(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.provinceData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNumber.total.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.data[province]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.provinceData.indexOf(province) &gt; -<span class=\"number\">1</span> &amp;&amp; <span class=\"built_in\">this</span>.typeData.indexOf(type) &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceNumber[type][<span class=\"built_in\">this</span>.provinceData.indexOf(province)] = <span class=\"built_in\">this</span>.data[province][type];</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceNumber.total[<span class=\"built_in\">this</span>.provinceData.indexOf(province)] += <span class=\"built_in\">this</span>.data[province][type];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.deviceNumber)</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>由于排序和饼图需要计算每个省份的设备总数，所以我们给<code>deviceNumber</code>对象加一个属性<code>total</code>，其值为数组。<code>provinceData</code>的顺序是确定的，它的索引对应<code>total</code>数组里和每个<code>type</code>数组里的索引。再根据已有数据，给对应类型的省份索引位置加数据，总数也要加数据，最终得到：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-03.png\" alt=\"console.log(this.deviceNumber)\"></p>\n<p>每个数组34个元素对应34个省级行政区，其中每个位置是哪个省由<code>provinceData</code>数组确定。</p>\n<h4 id=\"4-1-3-数据处理\"><a href=\"#4-1-3-数据处理\" class=\"headerlink\" title=\"4.1.3 数据处理\"></a>4.1.3 数据处理</h4><p>以上数据还不能被图表使用，需要做进一步处理。</p>\n<p>首先对于柱形图，我们需要让它按总数数量排序。Echarts是不能做到这个功能的，所以我们需要处理数据源。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">transformData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flagData = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span>; x &lt; <span class=\"built_in\">this</span>.deviceNumber.total.length; x++) &#123;</span><br><span class=\"line\">    flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">this</span>.deviceNumber.total.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceNumber.total[x] &gt; <span class=\"built_in\">this</span>.deviceNumber.total[i]) &#123;</span><br><span class=\"line\">        flag++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flagData.push(flag);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span>; x &lt; flagData.length; x++) &#123;</span><br><span class=\"line\">    flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = x + <span class=\"number\">1</span>; i &lt; flagData.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (flagData[x] === flagData[i]) &#123;</span><br><span class=\"line\">        flagData[i] += <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.sortedDeviceNumber = &#123;</span><br><span class=\"line\">    <span class=\"attr\">total</span>: []</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.sortedDeviceNumber[type] = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.sortedProvinceData = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> flagData) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.deviceNumber) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.sortedDeviceNumber[key][flagData[i]] = <span class=\"built_in\">this</span>.deviceNumber[key][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.sortedProvinceData[flagData[i]] = <span class=\"built_in\">this</span>.provinceData[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>以上代码4-12行，我们得到的<code>flagData</code>是由34个数字组成的数组，代表了每个省份的数量排序，即对于某个省份数量，有多少个省份数量比它小，那它就排多少位。13-20行处理并列的省份，这样就得到了从小到大的省份新顺序。再根据这个新顺序，将数量与省份赋值到<code>sortedDeviceNumber</code>和<code>sortedProvinceData</code>里。柱形图就可以用这个数据了。</p>\n<p>对于饼图，我们只需要省份和总数，注意总数为0时，将总数设置为<code>null</code>，这样它就会被视为无效数据，不会出现在饼图上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getPieData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.pieData = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"built_in\">this</span>.sortedProvinceData.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.pieData.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"built_in\">this</span>.sortedProvinceData[i],</span><br><span class=\"line\">      <span class=\"attr\">value</span>: <span class=\"built_in\">this</span>.sortedDeviceNumber.total[i] === <span class=\"number\">0</span> ? <span class=\"literal\">null</span> : <span class=\"built_in\">this</span>.sortedDeviceNumber.total[i],</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-1-4-柱形图和饼形图数据传入\"><a href=\"#4-1-4-柱形图和饼形图数据传入\" class=\"headerlink\" title=\"4.1.4 柱形图和饼形图数据传入\"></a>4.1.4 柱形图和饼形图数据传入</h4><p>这两个图属于一个图表，因此Echarts的<code>series</code>数量为n+1，n是设备类型数（表示柱形图），1表示饼图。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getSeries</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.series = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.series.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: type,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;bar&#x27;</span>,\t<span class=\"comment\">// 表示柱形图</span></span><br><span class=\"line\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;total&#x27;</span>,\t<span class=\"comment\">// 表示堆积图</span></span><br><span class=\"line\">      <span class=\"attr\">label</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">position</span>: <span class=\"string\">&#x27;insideRight&#x27;</span>,\t<span class=\"comment\">// 标签数值放在柱形右方</span></span><br><span class=\"line\">        <span class=\"attr\">formatter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (params.value &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> params.value;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">barCategoryGap</span>: <span class=\"string\">&#x27;30%&#x27;</span>,\t<span class=\"comment\">// 柱形之间间隔</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.sortedDeviceNumber[type],\t<span class=\"comment\">// 数据使用数组</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.series.push(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;pie&#x27;</span>,\t<span class=\"comment\">// 表示饼图</span></span><br><span class=\"line\">    <span class=\"attr\">radius</span>: [<span class=\"number\">30</span>, <span class=\"string\">&#x27;60%&#x27;</span>],\t<span class=\"comment\">// 内半径30像素，外半径为容器的60%</span></span><br><span class=\"line\">    <span class=\"attr\">center</span>: [<span class=\"string\">&#x27;75%&#x27;</span>, <span class=\"string\">&#x27;45%&#x27;</span>],\t<span class=\"comment\">// 圆心位置</span></span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.pieData,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">fontSize</span>: <span class=\"number\">16</span>,</span><br><span class=\"line\">      <span class=\"attr\">formatter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (params.percent &gt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> params.name + <span class=\"string\">&#x27;:\\n&#x27;</span> + params.value + <span class=\"string\">&#x27;（&#x27;</span> + <span class=\"built_in\">Math</span>.round(params.percent) + <span class=\"string\">&#x27;%）&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> params.name + <span class=\"string\">&#x27;:\\n&#x27;</span> + params.value + <span class=\"string\">&#x27;（&lt;1%）&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">labelLine</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,\t<span class=\"comment\">// 平滑标签线</span></span><br><span class=\"line\">      <span class=\"attr\">lineStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">tooltip</span>: &#123;\t<span class=\"comment\">// 悬浮提示框</span></span><br><span class=\"line\">      <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;item&#x27;</span>,\t<span class=\"comment\">// 触发类型为饼图项目</span></span><br><span class=\"line\">      <span class=\"attr\">formatter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> params.name + <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span> + params.marker + params.value + <span class=\"string\">&#x27;（&#x27;</span> + params.percent + <span class=\"string\">&#x27;%）&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">itemStyle</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">shadowBlur</span>: <span class=\"number\">30</span>,</span><br><span class=\"line\">      <span class=\"attr\">shadowColor</span>: <span class=\"string\">&#x27;rgba(0, 0, 0, 0.4)&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">animationType</span>: <span class=\"string\">&#x27;scale&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">animationEasing</span>: <span class=\"string\">&#x27;elasticOut&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">animationDelay</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">idx</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random() * <span class=\"number\">200</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>以上代码11-16行，当柱形图某个数据小于10时，则不显示标签数值，以免影响美观，或出现多个0重叠的情况。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-05.png\" alt=\"柱形图标签用函数格式化\"></p>\n<p>以上代码30-36行，当饼图某个数据项占比小于1%时，就显示<code>&lt;1%</code>，以免被圆整为<code>0%</code>。47-49行，处理了饼图悬浮提示框的显示形式，用到了<code>params</code>即每个数据项的几个参数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-06.png\" alt=\"饼图标签与悬浮提示框用函数格式化\"></p>\n<h4 id=\"4-1-5-生成图表\"><a href=\"#4-1-5-生成图表\" class=\"headerlink\" title=\"4.1.5 生成图表\"></a>4.1.5 生成图表</h4><p>生成图表用典型的<code>init</code>方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%; height: 900px&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dev_chart&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">initEcharts</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.chart = echarts.init(<span class=\"built_in\">this</span>.$refs.dev_chart, <span class=\"string\">&#x27;macarons&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.chart.setOption(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tooltip</span>: &#123;\t<span class=\"comment\">// 设置柱形图标签，见上上图</span></span><br><span class=\"line\">      <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;axis&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">axisPointer</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;shadow&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">legend</span>: &#123;\t<span class=\"comment\">// 图例，使用设备类型，可以同时操作柱形图和饼图</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.typeData,</span><br><span class=\"line\">      <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fontSize</span>: <span class=\"number\">14</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">top</span>: <span class=\"string\">&#x27;0%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"string\">&#x27;60%&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">grid</span>: &#123;\t<span class=\"comment\">// 柱形图范围</span></span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&#x27;5%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">right</span>: <span class=\"string\">&#x27;60%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">top</span>: <span class=\"string\">&#x27;8%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">bottom</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">containLabel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">xAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;设备数量/台&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">position</span>: <span class=\"string\">&#x27;top&#x27;</span>,\t<span class=\"comment\">// x轴位置</span></span><br><span class=\"line\">      <span class=\"attr\">splitLine</span>: &#123;<span class=\"attr\">show</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">      <span class=\"attr\">boundaryGap</span>: [<span class=\"number\">0</span>, <span class=\"number\">0.01</span>],</span><br><span class=\"line\">      <span class=\"attr\">axisTick</span>: &#123;\t<span class=\"comment\">// 坐标轴刻度</span></span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLabel</span>: &#123;\t<span class=\"comment\">// 坐标轴标签</span></span><br><span class=\"line\">        <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;white&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">fontSize</span>: <span class=\"number\">14</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLine</span>: &#123;\t<span class=\"comment\">// 坐标轴线</span></span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">lineStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">yAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;省级行政区&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">nameLocation</span>: <span class=\"string\">&#x27;start&#x27;</span>,\t<span class=\"comment\">// 名称显示位置</span></span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;category&#x27;</span>,\t<span class=\"comment\">// 类目轴</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.sortedProvinceData,</span><br><span class=\"line\">      <span class=\"attr\">axisTick</span>: &#123;\t<span class=\"comment\">// 坐标轴分隔线</span></span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">splitLine</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLabel</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">fontSize</span>: <span class=\"number\">14</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLine</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">lineStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">series</span>: <span class=\"built_in\">this</span>.series</span><br><span class=\"line\">  &#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意以上代码第2行，如果要使用<code>macarons</code>主题，需要找到它的位置并导入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> echarts <span class=\"keyword\">from</span> <span class=\"string\">&#x27;echarts&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;../../../../node_modules/echarts/theme/macarons&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-1-6-解决获取不到属性的报错\"><a href=\"#4-1-6-解决获取不到属性的报错\" class=\"headerlink\" title=\"4.1.6 解决获取不到属性的报错\"></a>4.1.6 解决获取不到属性的报错</h4><p>之后的代码前端经常会报获取不到属性的错误，这甚至可能导致图表无法显示，为此有以下解决办法：</p>\n<ul>\n<li><p>如果是在Vue部分直接使用对象的属性，可以先用<code>v-if</code>判断其是否存在。如以下代码，<code>staticInfo</code>本来是个空对象，是在调用函数后才赋值，如果没有<code>v-if</code>，函数调用延迟时，Vue尝试填充此处的文本插值，就会报找不到<code>ncsId</code>属性的错。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.ncsId&quot;</span>&gt;</span>&#123;&#123; staticInfo.ncsId &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用函数内部调用下一个函数，以强行控制函数执行流程，确保获取数据，再操作数据，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getList;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    ListInfo().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.handleData();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将生成图表的函数放在<code>mounted</code>的<code>nextTick</code>里，或直接设置整个函数体位于<code>nextTick</code>里，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.initEchart();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">initEchart</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> chart = echarts.init(<span class=\"built_in\">this</span>.$refs.dev_chart);</span><br><span class=\"line\">      chart.setOption(<span class=\"built_in\">this</span>.options);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4-2-设备销售类型销量分析\"><a href=\"#4-2-设备销售类型销量分析\" class=\"headerlink\" title=\"4.2 设备销售类型销量分析\"></a>4.2 设备销售类型销量分析</h3><p>这个图表是左右两张图，分别是柱形图和饼图，基本操作方法与之前类似。</p>\n<h4 id=\"4-2-1-让柱形图同一系列显示不同的颜色\"><a href=\"#4-2-1-让柱形图同一系列显示不同的颜色\" class=\"headerlink\" title=\"4.2.1 让柱形图同一系列显示不同的颜色\"></a>4.2.1 让柱形图同一系列显示不同的颜色</h4><p>柱形图其实只有一个系列，即设备数量。但为了让每一个柱形显示不同颜色，就要加单独的<code>itemStyle</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getDeviceNumber</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> color= [</span><br><span class=\"line\">    <span class=\"string\">&quot;#4C98FB&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#83CCE7&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#26C7C8&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#73DEBD&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#26C978&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#8CDF6C&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#FBD657&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#F56679&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#E07BCE&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#9D50E0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#634FDA&quot;</span></span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceNumber = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNumber.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">value</span>: <span class=\"built_in\">this</span>.data[index],</span><br><span class=\"line\">      <span class=\"attr\">itemStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: color[index]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-2-2-让柱形图横坐标标签旋转45度\"><a href=\"#4-2-2-让柱形图横坐标标签旋转45度\" class=\"headerlink\" title=\"4.2.2 让柱形图横坐标标签旋转45度\"></a>4.2.2 让柱形图横坐标标签旋转45度</h4><p>横坐标标签过长，需要斜向放置，才能完整显示且更美观。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xAxis: &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;设备类型&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&quot;category&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">axisLabel</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;#96A4F4&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">rotate</span>: <span class=\"number\">45</span>,\t<span class=\"comment\">// 旋转角度</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-07.png\" alt=\"柱状图坐标标签旋转\"></p>\n<p>饼图不用这么做，直接将<code>color</code>写在<code>option</code>里就好了，它会自动把不同颜色赋给不同的数据项。</p>\n<h2 id=\"5-工作台\"><a href=\"#5-工作台\" class=\"headerlink\" title=\"5 工作台\"></a>5 工作台</h2><p>【工作台】是个类似于“大屏看板”的功能区，分为【产品全地图】和【设备状态看板】两个模块。</p>\n<h3 id=\"5-1-产品全地图\"><a href=\"#5-1-产品全地图\" class=\"headerlink\" title=\"5.1 产品全地图\"></a>5.1 产品全地图</h3><p>【产品全地图】其实就是把【统计报表】里的设备分析图换了个累加方式，按省份累加并且展示到全国地图里。这边的代码是昆山写的，我只是改了其中的数据，就不展开讲了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-08.png\" alt=\"产品全地图页面\"></p>\n<h3 id=\"5-2-设备状态看板\"><a href=\"#5-2-设备状态看板\" class=\"headerlink\" title=\"5.2 设备状态看板\"></a>5.2 设备状态看板</h3><p>【设备状态看板】展示了所有添加在【设备信息】里的设备，并根据采集到的数据展示它们的开关机状态，还可以点击每台设备右上角的按钮查看详细的监控数据。开关机状态所用的颜色来自<a href=\"https://element.eleme.cn/#/zh-CN/component/color\">ElementUI的调色板颜色</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-09.png\" alt=\"设备状态看板页面\"></p>\n<h4 id=\"5-2-1-右上角的时间\"><a href=\"#5-2-1-右上角的时间\" class=\"headerlink\" title=\"5.2.1 右上角的时间\"></a>5.2.1 右上角的时间</h4><p>看板右上角的时间可以通过js的定时器完成。先在Vue中为其占位，并设置好css样式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;header_timer&quot;</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123; nowDate &#125;&#125; &#123;&#123; nowWeek &#125;&#125;<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 26px; font-weight: bold&quot;</span>&gt;</span>&#123;&#123; nowTime &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.header_timer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">172</span>, <span class=\"number\">80</span>);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: normal;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>定义一个函数，将当前时间写入变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">setNowTimes</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> myDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> wk = myDate.getDay();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> yy = <span class=\"built_in\">String</span>(myDate.getFullYear());</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mm = myDate.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dd = <span class=\"built_in\">String</span>(myDate.getDate());</span><br><span class=\"line\">  <span class=\"keyword\">let</span> hou = <span class=\"built_in\">String</span>(</span><br><span class=\"line\">    myDate.getHours() &lt; <span class=\"number\">10</span> ? <span class=\"string\">&quot;0&quot;</span> + myDate.getHours() : myDate.getHours()</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = <span class=\"built_in\">String</span>(</span><br><span class=\"line\">    myDate.getMinutes() &lt; <span class=\"number\">10</span></span><br><span class=\"line\">      ? <span class=\"string\">&quot;0&quot;</span> + myDate.getMinutes()</span><br><span class=\"line\">      : myDate.getMinutes()</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sec = <span class=\"built_in\">String</span>(</span><br><span class=\"line\">    myDate.getSeconds() &lt; <span class=\"number\">10</span></span><br><span class=\"line\">      ? <span class=\"string\">&quot;0&quot;</span> + myDate.getSeconds()</span><br><span class=\"line\">      : myDate.getSeconds()</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">let</span> weeks = [</span><br><span class=\"line\">    <span class=\"string\">&quot;星期日&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期一&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期二&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期三&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期四&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期五&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期六&quot;</span>,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> week = weeks[wk];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.nowDate = yy + <span class=\"string\">&quot;年&quot;</span> + mm + <span class=\"string\">&quot;月&quot;</span> + dd + <span class=\"string\">&quot;日&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">this</span>.nowTime = hou + <span class=\"string\">&quot;:&quot;</span> + min + <span class=\"string\">&quot;:&quot;</span> + sec;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.nowWeek = week;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再在<code>mounted</code>里设置一个定时器，设置为1000毫秒（即1秒）刷新一次就好，这样就实现了一个不断变化的时间。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setNowTimes();</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-10.png\" alt=\"时间\"></p>\n<h4 id=\"5-2-2-搜索提示信息\"><a href=\"#5-2-2-搜索提示信息\" class=\"headerlink\" title=\"5.2.2 搜索提示信息\"></a>5.2.2 搜索提示信息</h4><p>客户要求，在上方搜索时，页面会提示它搜索的是什么企业或设备类型。这看起来是个很简单的工作，但着实费了我一阵功夫。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-12.png\" alt=\"搜索信息\"></p>\n<p>这个搜索功能和其他单表的搜索没有什么区别，都是获取<code>queryParams</code>然后调用<code>getList</code>函数。首先在页面的相关位置加上这三个提示的内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isSearched&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;white-text medium-text&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;focusEnter !== null&quot;</span>&gt;</span>当前企业：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; focusEnter &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;focusOrg !== null&quot;</span>&gt;</span>当前部门：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; focusOrg &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;focusType !== null&quot;</span>&gt;</span>当前类型：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; focusType &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>定义布尔变量<code>isSearched</code>，判断是否在进行搜索，以及三个变量放搜索值。在搜索和重置搜索函数上，也要对这些变量进行处理：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 搜索按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.queryParams.pageNum = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getFocus();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.focusEnter !== <span class=\"literal\">null</span> || <span class=\"built_in\">this</span>.focusOrg !== <span class=\"literal\">null</span> || <span class=\"built_in\">this</span>.focusType !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isSearched = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isSearched = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">/** 重置按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">resetQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.resetForm(<span class=\"string\">&quot;queryForm&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.handleQuery();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.isSearched = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.focusEnter = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.focusOrg = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.focusType = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>定义一个<code>getFocus</code>函数，用来把搜索值传给三个变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getFocus</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.enterpriseId !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> enter <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.enterOptions) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (enter.value === <span class=\"built_in\">this</span>.queryParams.enterpriseId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.focusEnter = enter.label;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.orgId !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> org <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.orgOptionsList) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (org.value === <span class=\"built_in\">this</span>.queryParams.orgId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.focusOrg = org.label;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.devicetypeId !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeOptions) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (type.value === <span class=\"built_in\">this</span>.queryParams.devicetypeId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.focusType = type.label;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这个当时写的代码明显可以用<code>find</code>函数替代啊，大意了。</p>\n<p>当设备总数为0时，其实也要设计一个整体的页面，返回按钮与重置按钮功能一致，调用同一个函数。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;device_container&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 15px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;total === 0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 50px auto; height: 200px; text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 20px; color: white&quot;</span>&gt;</span>暂无数据<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;medium&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-back&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;resetQuery&quot;</span>&gt;</span>返回<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-13.png\" alt=\"设备总数为0\"></p>\n<h4 id=\"5-2-3-纯前端功底：图例和设备框的设计\"><a href=\"#5-2-3-纯前端功底：图例和设备框的设计\" class=\"headerlink\" title=\"5.2.3 纯前端功底：图例和设备框的设计\"></a>5.2.3 纯前端功底：图例和设备框的设计</h4><p>这我是完全用HTML+CSS写的，真正考验前端功底。上代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;white-text medium-text&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-total&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备总数：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; total &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-box&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom-color: #67C23A&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-icon el-icon-set-up&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #67C23A&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-text&quot;</span>&gt;</span>开机<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-box&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom-color: #F56C6C&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-icon el-icon-switch-button&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #F56C6C&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-text&quot;</span>&gt;</span>关机<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;device_container&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 15px&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;total === 0&quot;</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">  ...\t<span class=\"comment\">&lt;!-- 这一部分就是上面的设备总数为0的界面 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:xl</span>=<span class=\"string\">&quot;4&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;12&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in deviceList&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-card&quot;</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;&#x27;background-color&#x27;: dynamicCheckStatusList[item.ncsId] ? &#x27;#67C23A&#x27; : &#x27;#F56C6C&#x27;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>&#123;&#123; item.deviceName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/status/device/` + item.id&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-monitor&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">            详细数据</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-main&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;&#x27;border-color&#x27;: dynamicCheckStatusList[item.ncsId] ? &#x27;#67C23A&#x27; : &#x27;#F56C6C&#x27;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;label&quot;</span>&gt;</span>地区<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.enterpriseId&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                    enterOptions.find(enter =&gt; enter.value === item.enterpriseId) ? enterOptions.find(enter =&gt; enter.value === item.enterpriseId).province : &#x27;&#x27;</span><br><span class=\"line\">                  &#125;&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            ...\t<span class=\"comment\">&lt;!-- 省略表格中的企业、类型代码 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;label&quot;</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicCheckStatusList&quot;</span>&gt;</span></span><br><span class=\"line\">                  &#123;&#123; dynamicCheckStatusList[item.ncsId] ? &quot;开机&quot; : &quot;关机&quot; &#125;&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上代码第29行，使用<code>v-for</code>要绑定<code>key</code>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.white-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.medium-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-total</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> red solid;\t<span class=\"comment\">/* 设备总数左边的小红条 */</span></span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">35px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">35px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">35px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card-header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#303133</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card-main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F2F6FC</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">180px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F2F6FC</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">td</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>虽然现有的框架、组件非常好用，但要做出自己的效果还是需要靠HTML+CSS完成，这也让我体会到几十年前前端工程师的艰辛。</p>\n<h4 id=\"5-2-4-路由跳转\"><a href=\"#5-2-4-路由跳转\" class=\"headerlink\" title=\"5.2.4 路由跳转\"></a>5.2.4 路由跳转</h4><p>我们想让每台机床展现详细的监控数据，就做了一个按钮入口，这个实现方式有很多，比如ElementUI的<a href=\"https://element.eleme.cn/#/zh-CN/component/dialog\">对话框</a>、<a href=\"https://element.eleme.cn/#/zh-CN/component/popover\">弹出框</a>或<a href=\"https://element.eleme.cn/#/zh-CN/component/drawer\">抽屉</a>等。最终我们决定做一个单独的页面展示机床数据。</p>\n<p>每个机床应该共用一个页面模板，但数据需要有所不同，可以根据机床的id进行区分。这用的是若依的<a href=\"http://doc.ruoyi.vip/ruoyi-vue/other/faq.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E8%8F%9C%E5%8D%95%E9%A1%B5%E7%AD%BE\">路由跳转</a>。</p>\n<p>在<code>router</code>的<code>index.js</code>里面，新配置一个路由：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/status&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: Layout,</span><br><span class=\"line\">  <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">children</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&#x27;device/:id(\\\\d+)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> <span class=\"built_in\">require</span>([<span class=\"string\">&#x27;@/views/staging/status/device&#x27;</span>], resolve),</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Device&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">meta</span>: &#123; <span class=\"attr\">title</span>: <span class=\"string\">&#x27;设备详细数据&#x27;</span>, <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同时设置路由跳转：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/status/device/` + item.id&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-monitor&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">    详细数据</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>就可以跳转到指定的这个链接，链接所展示的页面是路由里<code>require</code>的页面，接下来编辑这个页面即可。</p>\n<h3 id=\"5-3-设备详细数据\"><a href=\"#5-3-设备详细数据\" class=\"headerlink\" title=\"5.3 设备详细数据\"></a>5.3 设备详细数据</h3><p>这里展示每个机床的详细数据，不同的机床路径不同，数据不同。下图路径后的数字就是这台机床的id。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-15.png\" alt=\"设备详细数据页面\"></p>\n<h4 id=\"5-3-1-机床id\"><a href=\"#5-3-1-机床id\" class=\"headerlink\" title=\"5.3.1 机床id\"></a>5.3.1 机床id</h4><p>机床id是最核心的数据，不仅这个页面的路径需要机床id，页面所有的数据也通过机床id拿到。所以在Vue的<code>data</code>里，就定义好机床id。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deviceId: <span class=\"built_in\">this</span>.$route.params &amp;&amp; <span class=\"built_in\">this</span>.$route.params.id,</span><br></pre></td></tr></table></figure>\n<p>利用逻辑与的短路特性，如果获取到了<code>this.$route.param</code>，就返回id。</p>\n<h4 id=\"5-3-2-表格信息与变量绑定\"><a href=\"#5-3-2-表格信息与变量绑定\" class=\"headerlink\" title=\"5.3.2 表格信息与变量绑定\"></a>5.3.2 表格信息与变量绑定</h4><p>所有的信息都是根据拿到的机床id，然后使用后端的函数与前端的api查到的，包含静态数据（如设备归属信息）和动态数据（如设备运行状态）。特别要注意拿到的动态数据要看是否绑定，绑定的话还要显示用户自定义的名称和单位。</p>\n<p>例如以下是设备基本信息的Vue代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;12&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-box&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">shadow</span>=<span class=\"string\">&quot;hover&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px; height: 315px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备基本信息<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.hwProductSerialNrL&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                bindingParamInfo.find(item =&gt; item.mongoName === &#x27;hwProductSerialNrL&#x27;).paramName</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.ncsId&quot;</span>&gt;</span>&#123;&#123; staticInfo.ncsId &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>设备名称<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.deviceName&quot;</span>&gt;</span>&#123;&#123; staticInfo.deviceName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>设备启用状态<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.isStart !== null&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                staticInfo.isStart === 0 ? &quot;正常&quot; : &quot;停用&quot;</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.nckType&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;nckType&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicTimeInfo)&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                dynamicTimeInfo.timePayLoad.nckType</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-else</span>&gt;</span>（未找到）<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.nckVersion&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;nckVersion&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicTimeInfo)&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicTimeInfo.timePayLoad.nckVersion &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-else</span>&gt;</span>（未找到）<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再例如以下是设备运行状态的Vue代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-box&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">shadow</span>=<span class=\"string\">&quot;hover&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px; height: 315px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备运行状态<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDynamicRefresh&quot;</span>&gt;</span></span><br><span class=\"line\">        刷新</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;tableLoading&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicTimeInfo) || !isEmptyObject(dynamicProgStatus)&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>本次开机时刻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicTimeInfo&quot;</span>&gt;</span>&#123;&#123; dynamicTimeInfo.todayStartTime &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.poweronTime&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                bindingParamInfo.find(item =&gt; item.mongoName === &#x27;poweronTime&#x27;).paramName</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicTimeInfo&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicTimeInfo.timePayLoad.poweronTime &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;poweronTime&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.setupTime&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;setupTime&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicTimeInfo&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicTimeInfo.timePayLoad.setupTime &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;setupTime&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.progStatus&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;progStatus&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicCheckStatus &amp;&amp; dynamicProgStatus.progStatus&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">circle</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;vertical-align: middle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;[1,2,5].indexOf(dynamicProgStatus.progStatus) &gt; -1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">circle</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;vertical-align: middle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;dynamicProgStatus.progStatus === 3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">circle</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;vertical-align: middle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;dynamicProgStatus.progStatus === 4&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicProgStatus.string &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;!dynamicCheckStatus&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">              设备关机</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.progStatus&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>更新时刻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicProgStatus.time&quot;</span>&gt;</span>&#123;&#123; dynamicProgStatus.time &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>未找到设备运行状态，请<span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`../../deviceCenter/device`&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span>检查数控系统id<span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">              或联系技术人员</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这里首先拿到对象时要判断其是否为空对象，因为<strong>空对象在JavaScript中被视为<code>true</code></strong>。这里我用的是自定义函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 空对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">isEmptyObject</span>(<span class=\"params\">obj</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>（JavaScript中，<code>undefined</code>、<code>null</code>、<code>-0</code>、<code>0</code>（<code>+0</code>）、<code>NaN</code>、<code>&#39;&#39;</code>（空字符串）都被视为<code>false</code>，其他都被视为<code>true</code>，如空数组<code>[]</code>和空对象<code>&#123;&#125;</code>也被视为<code>true</code>）</p>\n<p>然后，我们会拿到一些机床数据，例如<code>dynamicTimeInfo</code>、<code>dynamicProgStatus</code>对象。为了实现变量绑定，我们还需要拿到：用户自定义的所有变量（从【变量信息】里拿），用户绑定到这台机床类型的变量（从绑定表里拿）。我用以下方式获取与处理变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 变量绑定</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getParams</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listParam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.params = response.rows;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getMongos();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getMongos</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listMongoVariable().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongos = response.rows;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getBindings();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getBindings</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bindings = response.rows;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getBindingParamInfo();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getBindingParamInfo</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingParamInfo = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.bindings) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.devicetypeId === item.devicetypeId) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.bindingParamInfo.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">paramId</span>: item.paramId</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> bindingParam <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.bindingParamInfo) &#123;</span><br><span class=\"line\">    bindingParam.paramName = <span class=\"built_in\">this</span>.params.find(<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> param.id === bindingParam.paramId).paramName;</span><br><span class=\"line\">    bindingParam.paramUnit = <span class=\"built_in\">this</span>.params.find(<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> param.id === bindingParam.paramId).paramUnit;</span><br><span class=\"line\">    bindingParam.mongoId = <span class=\"built_in\">this</span>.params.find(<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> param.id === bindingParam.paramId).mongoId;</span><br><span class=\"line\">    bindingParam.mongoName = <span class=\"built_in\">this</span>.mongos.find(<span class=\"function\"><span class=\"params\">mongo</span> =&gt;</span> mongo.id === bindingParam.mongoId).mongoName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.showParam = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> mongo <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.mongos) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.showParam[mongo.mongoName] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.bindingParamInfo.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.mongoName === mongo.mongoName)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.showParam[mongo.mongoName] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.loading.close();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><code>getParams</code>函数拿所有的自定义变量，<code>getMongos</code>函数拿所有的MongoDB变量，<code>getBindings</code>函数拿所有的绑定关系，<code>getBindingParamInfo</code>函数先把为当前类型绑定的变量放进数组里，再通过之前拿的信息为这些变量一一补充信息（如名称、单位等），最后在一个<code>showParam</code>数组里，为每个MongoDB变量设置布尔值，方便Vue里的<code>v-if</code>使用。</p>\n<h4 id=\"5-3-3-主轴信息图表：日期信息通信\"><a href=\"#5-3-3-主轴信息图表：日期信息通信\" class=\"headerlink\" title=\"5.3.3 主轴信息图表：日期信息通信\"></a>5.3.3 主轴信息图表：日期信息通信</h4><p>下面两个图表结构基本一致，所要实现的功能和要处理的数据也基本一致。这两个图表我也是写在组件里的。</p>\n<p>首先是这个日期搜索功能，其实也属于父组件和子组件的通信。以下是父组件的前端部分：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;speedDate&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;45px&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-date-picker</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;speedDate.date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">format</span>=<span class=\"string\">&quot;yyyy 年 MM 月 dd 日&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">value-format</span>=<span class=\"string\">&quot;timestamp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:clearable</span>=<span class=\"string\">&quot;false&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:picker-options</span>=<span class=\"string\">&quot;pickerOptions&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-date-picker</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-search&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleSpeedQuery&quot;</span>&gt;</span></span><br><span class=\"line\">      搜索</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$refs.speed &amp;&amp; isEmptyObject($refs.speed.dynamicSpindleInfoList)&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 如果子组件存在，但子组件的主轴信息列表为空对象 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>系统当日无数据<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 日期</span></span><br><span class=\"line\"><span class=\"attr\">speedDate</span>: &#123;<span class=\"attr\">date</span>: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString()).getTime()&#125;,\t<span class=\"comment\">// 以获取当前的时间</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attr\">pickerOptions</span>: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">disabledDate</span>(<span class=\"params\">time</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> time.getTime() &gt; <span class=\"built_in\">Date</span>.now() - <span class=\"number\">8.64e6</span>\t<span class=\"comment\">// 不允许选择今日之后的时间</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\">// 选择日期处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleSpeedQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicSpindleInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.speed.getNcsId();\t<span class=\"comment\">// 调子组件函数</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-20.png\" alt=\"日期选择\"></p>\n<p>子组件要拿这个日期去查询信息：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取数控系统id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getNcsId</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  getDevice(<span class=\"built_in\">this</span>.deviceId).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNcsId = response.data.ncsId;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.devicetypeId = response.data.devicetypeId;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getDynamicSpindleInfoList();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 动态主轴信息列表获取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getDynamicSpindleInfoList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listSpindleDocByTime(<span class=\"built_in\">this</span>.deviceNcsId, <span class=\"built_in\">this</span>.$parent.$parent.$parent.$parent.speedDate.date).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.dynamicSpindleInfoList = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> doc <span class=\"keyword\">of</span> response) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.dynamicSpindleInfoList.push(doc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这样子组件就拿到了某个日期的主轴信息列表，并拿此去画图。</p>\n<h4 id=\"5-3-4-主轴信息图表：父组件的信息展示与变量绑定\"><a href=\"#5-3-4-主轴信息图表：父组件的信息展示与变量绑定\" class=\"headerlink\" title=\"5.3.4 主轴信息图表：父组件的信息展示与变量绑定\"></a>5.3.4 主轴信息图表：父组件的信息展示与变量绑定</h4><p>图表的下方有一个表格，这个表格位于父组件，展示读取到的最新的主轴动态数据。这个表格的处理很复杂，不仅要考虑到变量绑定，也要考虑到适配。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">shadow</span>=<span class=\"string\">&quot;hover&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px; height: 630px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备主轴速度图<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">               @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleSpeedRefresh&quot;</span>&gt;</span></span><br><span class=\"line\">      刷新</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;speedDate&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;45px&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">      ...\t<span class=\"comment\">&lt;!-- 省略的是日期搜索框部分 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;speedLoading&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">spindle_speed</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;speed&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">spindle_speed</span>&gt;</span>\t<span class=\"comment\">&lt;!-- 图表主体 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 15px&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicSpindleInfo) &amp;&amp; screenWidth &gt;= 992&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这里的tbody是屏幕宽度为350-991的情况，表格为1行6列 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.cmdSpeed || this.showParam.actSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.cmdSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;cmdSpeed&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.cmdSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.dynamicSpindleInfo.spindlePayLoad.cmdSpeed !== null&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicSpindleInfo.spindlePayLoad.cmdSpeed &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;cmdSpeed&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.actSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;actSpeed&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.actSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.dynamicSpindleInfo.spindlePayLoad.actSpeed !== null&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicSpindleInfo.spindlePayLoad.actSpeed &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;actSpeed&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>更新时刻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.dynamicSpindleInfo.time&quot;</span>&gt;</span>&#123;&#123; dynamicSpindleInfo.time &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>您可能未绑定速度相关变量，</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`../../deviceCenter/type`&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span>点击绑定<span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;screenWidth &gt;= 350&quot;</span>&gt;</span></span><br><span class=\"line\">          ...\t<span class=\"comment\">&lt;!-- 这里的tbody是屏幕宽度为350-991的情况，表格调整为3行2列，代码与上面基本一致 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;screenWidth &lt; 350&quot;</span>&gt;</span></span><br><span class=\"line\">          ...\t<span class=\"comment\">&lt;!-- 这里的tbody是屏幕宽度小于350的情况，表格调整为6行1列，代码与上面基本一致 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isEmptyObject(dynamicSpindleInfo)&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>未找到最新主轴速度信息。</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>屏幕的宽度提前写在<code>data</code>里：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">screenWidth: <span class=\"built_in\">document</span>.body.clientWidth</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-3-5-主轴信息图表：子组件的图表展示与变量绑定\"><a href=\"#5-3-5-主轴信息图表：子组件的图表展示与变量绑定\" class=\"headerlink\" title=\"5.3.5 主轴信息图表：子组件的图表展示与变量绑定\"></a>5.3.5 主轴信息图表：子组件的图表展示与变量绑定</h4><p>变量绑定关系到图表的数据源，绑定就给图表数据，不绑定就不给，所以子组件最好也提前判断好是否绑定要画的变量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否绑定？</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">findMongoId</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listMongoVariable().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongoId.cmdSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoName === <span class=\"string\">&#x27;cmdSpeed&#x27;</span>).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongoId.actSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoName === <span class=\"string\">&#x27;actSpeed&#x27;</span>).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.findParamId();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">findParamId</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listParam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramId.cmdSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.cmdSpeed).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramId.actSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.actSpeed).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramName.cmdSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.cmdSpeed).paramName;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramName.actSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.actSpeed).paramName;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.findWhetherBound();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">findWhetherBound</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isBound.cmdSpeed = !!response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.devicetypeId === <span class=\"built_in\">this</span>.devicetypeId &amp;&amp; row.paramId === <span class=\"built_in\">this</span>.paramId.cmdSpeed);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isBound.actSpeed = !!response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.devicetypeId === <span class=\"built_in\">this</span>.devicetypeId &amp;&amp; row.paramId === <span class=\"built_in\">this</span>.paramId.actSpeed);</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这样通过<code>isBound</code>这个对象，就知道<code>cmdSpeed</code>和<code>actSpeed</code>绑定与否。</p>\n<p>再将数据处理为Echarts接受的形式（拿了所有数据）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getSpeedDatasetSource</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedDatasetSource = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> info <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.dynamicSpindleInfoList) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.speedDatasetSource.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">time</span>: info.time,</span><br><span class=\"line\">      <span class=\"attr\">cmdSpeed</span>: info.spindlePayLoad.cmdSpeed,</span><br><span class=\"line\">      <span class=\"attr\">actSpeed</span>: info.spindlePayLoad.actSpeed</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>最后初始化图表。客户要求默认只显示主轴指定转速（<code>cmdSpeed</code>），不显示主轴实际转速（<code>actSpeed</code>），这在Echarts中可以用<code>selected</code>属性设置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化图表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getSpeedGraph</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> selected = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isBound.cmdSpeed) &#123;\t<span class=\"comment\">// 如果主轴指定转速被绑定了，就只显示它</span></span><br><span class=\"line\">    selected[<span class=\"built_in\">this</span>.paramName.cmdSpeed] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    selected[<span class=\"built_in\">this</span>.paramName.actSpeed] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    selected[<span class=\"built_in\">this</span>.paramName.actSpeed] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedGraph = echarts.init(<span class=\"built_in\">this</span>.$refs.speed_chart, <span class=\"string\">&quot;macarons&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedGraph.setOption(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tooltip</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;axis&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">axisPointer</span>: &#123;\t<span class=\"comment\">// 坐标轴指示器</span></span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,\t<span class=\"comment\">// 形式为一条线</span></span><br><span class=\"line\">        <span class=\"attr\">snap</span>: <span class=\"literal\">true</span>\t<span class=\"comment\">// 自动吸附（时间轴的点比较小）</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">legend</span>: &#123;\t<span class=\"comment\">// 图例</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: [<span class=\"built_in\">this</span>.paramName.cmdSpeed, <span class=\"built_in\">this</span>.paramName.actSpeed],</span><br><span class=\"line\">      <span class=\"attr\">selected</span>: selected\t<span class=\"comment\">// 默认选择项</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">grid</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&#x27;3%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">right</span>: <span class=\"string\">&#x27;12%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">bottom</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">containLabel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">dataset</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">dimensions</span>: [&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;time&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;time&#x27;</span>&#125;, <span class=\"string\">&#x27;cmdSpeed&#x27;</span>, <span class=\"string\">&#x27;actSpeed&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">source</span>: <span class=\"built_in\">this</span>.speedDatasetSource</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">xAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;时间&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">nameTextStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">padding</span>: [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;time&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">yAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;转速/(r/min)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">nameTextStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">padding</span>: [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">50</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">dataZoom</span>: [&#123;\t<span class=\"comment\">// 图表区域缩放</span></span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;slider&#x27;</span>,\t<span class=\"comment\">// 滑动条缩放（图表下方）</span></span><br><span class=\"line\">      <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">end</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">      <span class=\"attr\">xAxisIndex</span>: <span class=\"number\">0</span>,\t<span class=\"comment\">// 缩放x轴</span></span><br><span class=\"line\">      <span class=\"attr\">filterMode</span>: <span class=\"string\">&#x27;none&#x27;</span>\t<span class=\"comment\">// 不过滤数据</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;inside&#x27;</span>,\t<span class=\"comment\">// 内置缩放（滚轮）</span></span><br><span class=\"line\">        <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">end</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">        <span class=\"attr\">xAxisIndex</span>: <span class=\"number\">0</span>,\t<span class=\"comment\">// 缩放x轴</span></span><br><span class=\"line\">        <span class=\"attr\">filterMode</span>: <span class=\"string\">&#x27;none&#x27;</span>\t<span class=\"comment\">// 不过滤数据</span></span><br><span class=\"line\">      &#125;],</span><br><span class=\"line\">    <span class=\"attr\">series</span>: [</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.isBound.cmdSpeed ? &#123;\t<span class=\"comment\">// 绑定cmdSpeed的情况下</span></span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"built_in\">this</span>.paramName.cmdSpeed,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">encode</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"attr\">y</span>: <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">smooth</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125; : <span class=\"literal\">null</span>,</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.isBound.actSpeed ? &#123;\t<span class=\"comment\">// 绑定actSpeed的情况下</span></span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"built_in\">this</span>.paramName.actSpeed,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">encode</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"attr\">y</span>: <span class=\"number\">2</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">smooth</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125; : <span class=\"literal\">null</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$parent.$parent.$parent.$parent.speedLoading = <span class=\"literal\">false</span>;\t<span class=\"comment\">// 停止父组件的加载动画</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最终效果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-16.png\" alt=\"坐标轴指示器的自动吸附\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-17.png\" alt=\"两个图例都点上并进行缩放的情况\"></p>\n<h4 id=\"5-3-6-普通刷新\"><a href=\"#5-3-6-普通刷新\" class=\"headerlink\" title=\"5.3.6 普通刷新\"></a>5.3.6 普通刷新</h4><p>整个设备详细数据一共有4个普通刷新，分别是最上面的白色按钮“刷新状态”，以及3个动态数据卡片右上角的蓝色“刷新”文字。</p>\n<p>刷新操作只要将按钮绑定到一个刷新函数就好了，函数内再调用重置相关信息或获得相关信息的函数，以实现数据刷新。这里我还写了几个<code>loading</code>变量，并将它们<code>v-loading</code>绑定到相关标签上，并在刷新时设置为<code>true</code>，获取完毕数据后设置为<code>false</code>，这样就可以实现加载功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 刷新处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleGlobalRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.openLoading();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.driveLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getBasicInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.speed.getNcsId();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.drive.getNcsId();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDynamicRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicTimeInfo();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleSpeedRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedDate.date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString()).getTime();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicSpindleInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.speed.getNcsId();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDriveRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.driveLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.driveDate.date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString()).getTime();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicSpindleInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.drive.getNcsId();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-18.png\" alt=\"全局刷新加载（左下角）和卡片刷新加载（右边中部）\"></p>\n<h4 id=\"5-3-7-自动刷新\"><a href=\"#5-3-7-自动刷新\" class=\"headerlink\" title=\"5.3.7 自动刷新\"></a>5.3.7 自动刷新</h4><p>这是个比较复杂的功能，需要综合运用Vue和JavaScript知识，写出来和debug都花了我一段时间。</p>\n<p>实际上这个自动刷新用的还是上面的<code>handleGlobalRefresh</code>函数，只是要定时执行，并且还能调整开关与刷新频率。</p>\n<p>先在页面的合适位置放上这两个按钮：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;searchForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:model</span>=<span class=\"string\">&quot;refreshParams&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">ref</span>=<span class=\"string\">&quot;refreshForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;75px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: inline; margin: 5px 0 5px 15px;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;自动刷新&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;autoRefresh&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:5px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-switch</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;refreshParams.autoRefresh&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-switch</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;刷新频率&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;refreshFrequency&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:5px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;refreshParams.refreshFrequency&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择&quot;</span> @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleRefreshSetting&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 85px;&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in refreshOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item.value&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-19.png\" alt=\"自动刷新功能\"></p>\n<p>定义变量，默认情况下开启刷新开关，并设置频率为10 s：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 刷新频率</span></span><br><span class=\"line\"><span class=\"attr\">refreshParams</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">autoRefresh</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">refreshFrequency</span>: <span class=\"number\">10000</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">refreshOptions</span>: [</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">5000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;5 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">10000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;10 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">20000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;20 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">30000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;30 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">60000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;60 s&#x27;</span>&#125;,</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"attr\">refreshTimer</span>: <span class=\"literal\">null</span>,</span><br></pre></td></tr></table></figure>\n<p>当刷新频率发生变化时，即上面的<code>el-select</code>选中别的选项时，触发<code>handleRefreshSetting</code>函数，处理这个变化：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleRefreshSetting</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.refreshTimer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;\t<span class=\"comment\">// 设置新的定时器</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshParams.autoRefresh) &#123;\t<span class=\"comment\">// 如果自动刷新开关打开，执行刷新</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.handleGlobalRefresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"built_in\">this</span>.refreshParams.refreshFrequency);\t<span class=\"comment\">// 频率设置为新的频率</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><strong>重点来了</strong>，由于这是个路由页面，所以可以利用<a href=\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html\">Vue路由的导航守卫</a>（导航表示路由发生改变）和Vue的生命周期destroyed（现已改名为<a href=\"https://v3.cn.vuejs.org/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA\">unmounted</a>），来处理可能发生的变化，并按不同的变化执行刷新操作。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 以下的to表示进入的路由对象，from表示离开的路由对象，next表示进入路由的钩子函数</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">beforeRouteEnter</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;\t<span class=\"comment\">// 进入路由前</span></span><br><span class=\"line\">    next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;\t<span class=\"comment\">// 由于此时获取this，因此需要通过vm访问</span></span><br><span class=\"line\">      vm.refreshTimer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;\t<span class=\"comment\">// 新建一个定时器</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (vm.refreshParams.autoRefresh) &#123;</span><br><span class=\"line\">          vm.handleGlobalRefresh();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;, vm.refreshParams.refreshFrequency);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">beforeRouteUpdate</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;\t<span class=\"comment\">// 路由更新前（从一个机床的详细数据跳到另一个的时候）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">beforeRouteLeave</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;\t<span class=\"comment\">// 离开路由前</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">destroyed</span>(<span class=\"params\"></span>)</span> &#123;\t<span class=\"comment\">// Vue对象销毁时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;\t<span class=\"comment\">// 无论如何要设置定时器为null</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>凡是在路由内设置定时器，一定要通过导航守卫去处理它</strong>，否则会出现离开了详细数据页面，别的页面还在每隔10 s自动刷新的bug。</p>\n<h2 id=\"6-首页的合作伙伴\"><a href=\"#6-首页的合作伙伴\" class=\"headerlink\" title=\"6 首页的合作伙伴\"></a>6 首页的合作伙伴</h2><p>首页的其他部分是苏州团队做的，下面的合作伙伴是我做的。合作伙伴只要放进公司的logo和名称就行了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom:0.5rem&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;update-log&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>合作伙伴<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;20&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:xl</span>=<span class=\"string\">&quot;2&quot;</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;12&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                  <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(i, index) in 20&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;i&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                  <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 0.5rem; height: 70px&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-image</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: auto; height: 30px; margin: 0 auto&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">:src</span>=<span class=\"string\">&quot;partnerLogos[index]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">fit</span>=<span class=\"string\">&quot;scale-down&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-image</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding: 10px; text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> &#123;&#123; partnerNames[index].abbr &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每一个企业都是一个<code>el-col</code>，分为logo的<code>div</code>和名称的<code>div</code>。每一个<code>el-col</code>使用了<code>v-for</code>，所以要绑定<code>key</code>。</p>\n<p>企业的名称写死在<code>data</code>中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">partnerNames: [</span><br><span class=\"line\">  &#123;<span class=\"attr\">full</span>: <span class=\"string\">&quot;德国西门子&quot;</span>, <span class=\"attr\">abbr</span>: <span class=\"string\">&quot;德国西门子&quot;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">full</span>: <span class=\"string\">&quot;江阴塞特精密工具有限公司&quot;</span>, <span class=\"attr\">abbr</span>: <span class=\"string\">&quot;江阴塞特&quot;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">full</span>: <span class=\"string\">&quot;杭州新剑机器人技术股份有限公司&quot;</span>, <span class=\"attr\">abbr</span>: <span class=\"string\">&quot;杭州新剑&quot;</span>&#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>企业的logo由于位置一致，只是名称不同，因此写个函数去获取它：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">partnerLogos</span>: [],</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getLogos();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getLogos</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">20</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.partnerLogos.push(<span class=\"built_in\">require</span>(<span class=\"string\">&quot;../assets/partners/&quot;</span> + (i &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + i : i) + <span class=\"string\">&#x27;.png&#x27;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>从5月到7月，我就在做这些模块的前端开发。与我们之前做的模块不同，这些模块大部分是纯前端工作，比如统计图、设备看板等，除此之外，前端还要构思从后端拿到数据后怎么处理数据的逻辑。拿到变量绑定数据，怎么让它以用户自定义的情况显示？拿到机床主轴数据，怎么让它画成既直观又美观、还让客户满意的图表？都需要我去想想。</p>\n<p>因此，<strong>越是傻瓜式的页面与操作方式，肯定是程序在背后为你做了越多的事情，这些程序也是程序员的思想结晶。</strong></p>\n<p>这个项目已经验收完毕了，通过开发这个项目，我也学会了很多前端的知识，和一些后端、数据库知识。这些知识希望在将来都能用得上。接下来的任务，就是聚焦一个研究方向，好好做科研了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-23.png\" alt=\"统计报表、工作台等剩余模块的commit过程\"></p>\n","site":{"data":{}},"excerpt":"<p>在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。本文的代码在他们的基础上开发，大部分我做了一定幅度的改动。</p>","more":"<h2 id=\"4-统计报表\"><a href=\"#4-统计报表\" class=\"headerlink\" title=\"4 统计报表\"></a>4 统计报表</h2><p>【统计报表】模块用于展示该公司的设备销售数据或故障数据。从这里开始，其实已经是纯前端工作，之后用到了大量的图表，我都是使用<a href=\"https://echarts.apache.org/zh/index.html\">Apache ECharts</a>进行开发的。</p>\n<p>我负责【统计报表】-【统计分析】的【设备分析】部分，即分析公司在每个省份、每种设备类型各卖了多少。这个页面有两个图，分别是【各地区设备统计】和【设备销售类型销量分析】。由于没有从后端拿数据，数据在客户提供的Excel里，所以我这里将数据写死在前端。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-01.png\" alt=\"各地区设备统计\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-02.png\" alt=\"设备销售类型销量分析\"></p>\n<h3 id=\"4-1-各地区设备统计\"><a href=\"#4-1-各地区设备统计\" class=\"headerlink\" title=\"4.1 各地区设备统计\"></a>4.1 各地区设备统计</h3><p>这其实是一个图表，只是分成了左右两个图，左边是一个柱状堆积图，右边是一个饼图。</p>\n<h4 id=\"4-1-1-图表组件\"><a href=\"#4-1-1-图表组件\" class=\"headerlink\" title=\"4.1.1 图表组件\"></a>4.1.1 图表组件</h4><p>为了更好地管理图表，我将所有的图表都写成了Vue组件（Component）的形式，而非写在当前页面。在当前页面导入组件，并注册组件使用它。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">region_echart</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;region&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">region_echart</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> region_echart <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/statisticalReport/echarts/region_echart&quot;</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;region_echart, ...&#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当父组件（页面）要使用子组件（图表）的数据时，例如父组件要调用子组件的函数，可以在子组件添加<code>ref</code>属性寻找它。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 搜索按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.region.getProvinceData();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>当子组件（图表）要使用父组件（页面）的数据时，例如子组件想知道父组件的搜索框是什么条件，可以使用<code>this.$parent</code>向上寻找父组件。<strong>注意：由于Vue实际上可能套了好几层<code>div</code>，所以要寻找好几层才能到目标父组件，可以在控制台<code>console.log</code>一下<code>this</code>及其父元素。</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getProvinceData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = <span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">of</span> regionData) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.provinceData.push(province.label);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-1-2-数据添加\"><a href=\"#4-1-2-数据添加\" class=\"headerlink\" title=\"4.1.2 数据添加\"></a>4.1.2 数据添加</h4><p>这个表需要每个省份每种机床卖出了多少，因此我写在前端里的数据是一个大对象，属性是每个省份，每个省份的值又是一个对象，对应机床类型和销量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;北京市&#x27;</span>: &#123;<span class=\"string\">&#x27;YGS3A...型&#x27;</span>: <span class=\"number\">3</span>, <span class=\"string\">&#x27;YGS3B...型&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;YGS3C...型&#x27;</span>: <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;上海市&#x27;</span>: &#123;<span class=\"string\">&#x27;YGS3A...型&#x27;</span>: <span class=\"number\">3</span>, <span class=\"string\">&#x27;YGS3B...型&#x27;</span>: <span class=\"number\">10</span>, <span class=\"string\">&#x27;YGS3C...型&#x27;</span>: <span class=\"number\">2</span>, ...&#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>首先我们拿到这些数据后，要处理成Echarts支持的数据形式。这里我们使用数组的形式。先添加数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getProvinceData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = <span class=\"built_in\">this</span>.$parent.$parent.queryParams.provinces;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.provinceData = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">of</span> regionData) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.provinceData.push(province.label);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getTypeData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listType().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.$parent.$parent.queryParams.deviceTypes.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.typeData = <span class=\"built_in\">this</span>.$parent.$parent.queryParams.deviceTypes;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.typeData = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> response.rows) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.typeData.push(type.devicetypeName);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getDeviceNumber</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceNumber = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceNumber.total = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNumber[type] = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.provinceData) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.deviceNumber[type].push(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.provinceData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNumber.total.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> province <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.data[province]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.provinceData.indexOf(province) &gt; -<span class=\"number\">1</span> &amp;&amp; <span class=\"built_in\">this</span>.typeData.indexOf(type) &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceNumber[type][<span class=\"built_in\">this</span>.provinceData.indexOf(province)] = <span class=\"built_in\">this</span>.data[province][type];</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.deviceNumber.total[<span class=\"built_in\">this</span>.provinceData.indexOf(province)] += <span class=\"built_in\">this</span>.data[province][type];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.deviceNumber)</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>由于排序和饼图需要计算每个省份的设备总数，所以我们给<code>deviceNumber</code>对象加一个属性<code>total</code>，其值为数组。<code>provinceData</code>的顺序是确定的，它的索引对应<code>total</code>数组里和每个<code>type</code>数组里的索引。再根据已有数据，给对应类型的省份索引位置加数据，总数也要加数据，最终得到：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-03.png\" alt=\"console.log(this.deviceNumber)\"></p>\n<p>每个数组34个元素对应34个省级行政区，其中每个位置是哪个省由<code>provinceData</code>数组确定。</p>\n<h4 id=\"4-1-3-数据处理\"><a href=\"#4-1-3-数据处理\" class=\"headerlink\" title=\"4.1.3 数据处理\"></a>4.1.3 数据处理</h4><p>以上数据还不能被图表使用，需要做进一步处理。</p>\n<p>首先对于柱形图，我们需要让它按总数数量排序。Echarts是不能做到这个功能的，所以我们需要处理数据源。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">transformData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flagData = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span>; x &lt; <span class=\"built_in\">this</span>.deviceNumber.total.length; x++) &#123;</span><br><span class=\"line\">    flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">this</span>.deviceNumber.total.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.deviceNumber.total[x] &gt; <span class=\"built_in\">this</span>.deviceNumber.total[i]) &#123;</span><br><span class=\"line\">        flag++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flagData.push(flag);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span>; x &lt; flagData.length; x++) &#123;</span><br><span class=\"line\">    flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = x + <span class=\"number\">1</span>; i &lt; flagData.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (flagData[x] === flagData[i]) &#123;</span><br><span class=\"line\">        flagData[i] += <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.sortedDeviceNumber = &#123;</span><br><span class=\"line\">    <span class=\"attr\">total</span>: []</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.sortedDeviceNumber[type] = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.sortedProvinceData = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> flagData) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.deviceNumber) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.sortedDeviceNumber[key][flagData[i]] = <span class=\"built_in\">this</span>.deviceNumber[key][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.sortedProvinceData[flagData[i]] = <span class=\"built_in\">this</span>.provinceData[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>以上代码4-12行，我们得到的<code>flagData</code>是由34个数字组成的数组，代表了每个省份的数量排序，即对于某个省份数量，有多少个省份数量比它小，那它就排多少位。13-20行处理并列的省份，这样就得到了从小到大的省份新顺序。再根据这个新顺序，将数量与省份赋值到<code>sortedDeviceNumber</code>和<code>sortedProvinceData</code>里。柱形图就可以用这个数据了。</p>\n<p>对于饼图，我们只需要省份和总数，注意总数为0时，将总数设置为<code>null</code>，这样它就会被视为无效数据，不会出现在饼图上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getPieData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.pieData = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"built_in\">this</span>.sortedProvinceData.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.pieData.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"built_in\">this</span>.sortedProvinceData[i],</span><br><span class=\"line\">      <span class=\"attr\">value</span>: <span class=\"built_in\">this</span>.sortedDeviceNumber.total[i] === <span class=\"number\">0</span> ? <span class=\"literal\">null</span> : <span class=\"built_in\">this</span>.sortedDeviceNumber.total[i],</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-1-4-柱形图和饼形图数据传入\"><a href=\"#4-1-4-柱形图和饼形图数据传入\" class=\"headerlink\" title=\"4.1.4 柱形图和饼形图数据传入\"></a>4.1.4 柱形图和饼形图数据传入</h4><p>这两个图属于一个图表，因此Echarts的<code>series</code>数量为n+1，n是设备类型数（表示柱形图），1表示饼图。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getSeries</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.series = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.series.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: type,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;bar&#x27;</span>,\t<span class=\"comment\">// 表示柱形图</span></span><br><span class=\"line\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;total&#x27;</span>,\t<span class=\"comment\">// 表示堆积图</span></span><br><span class=\"line\">      <span class=\"attr\">label</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">position</span>: <span class=\"string\">&#x27;insideRight&#x27;</span>,\t<span class=\"comment\">// 标签数值放在柱形右方</span></span><br><span class=\"line\">        <span class=\"attr\">formatter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (params.value &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> params.value;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">barCategoryGap</span>: <span class=\"string\">&#x27;30%&#x27;</span>,\t<span class=\"comment\">// 柱形之间间隔</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.sortedDeviceNumber[type],\t<span class=\"comment\">// 数据使用数组</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.series.push(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;pie&#x27;</span>,\t<span class=\"comment\">// 表示饼图</span></span><br><span class=\"line\">    <span class=\"attr\">radius</span>: [<span class=\"number\">30</span>, <span class=\"string\">&#x27;60%&#x27;</span>],\t<span class=\"comment\">// 内半径30像素，外半径为容器的60%</span></span><br><span class=\"line\">    <span class=\"attr\">center</span>: [<span class=\"string\">&#x27;75%&#x27;</span>, <span class=\"string\">&#x27;45%&#x27;</span>],\t<span class=\"comment\">// 圆心位置</span></span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.pieData,</span><br><span class=\"line\">    <span class=\"attr\">label</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">fontSize</span>: <span class=\"number\">16</span>,</span><br><span class=\"line\">      <span class=\"attr\">formatter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (params.percent &gt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> params.name + <span class=\"string\">&#x27;:\\n&#x27;</span> + params.value + <span class=\"string\">&#x27;（&#x27;</span> + <span class=\"built_in\">Math</span>.round(params.percent) + <span class=\"string\">&#x27;%）&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> params.name + <span class=\"string\">&#x27;:\\n&#x27;</span> + params.value + <span class=\"string\">&#x27;（&lt;1%）&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">labelLine</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,\t<span class=\"comment\">// 平滑标签线</span></span><br><span class=\"line\">      <span class=\"attr\">lineStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">width</span>: <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">tooltip</span>: &#123;\t<span class=\"comment\">// 悬浮提示框</span></span><br><span class=\"line\">      <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;item&#x27;</span>,\t<span class=\"comment\">// 触发类型为饼图项目</span></span><br><span class=\"line\">      <span class=\"attr\">formatter</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> params.name + <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span> + params.marker + params.value + <span class=\"string\">&#x27;（&#x27;</span> + params.percent + <span class=\"string\">&#x27;%）&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">itemStyle</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">shadowBlur</span>: <span class=\"number\">30</span>,</span><br><span class=\"line\">      <span class=\"attr\">shadowColor</span>: <span class=\"string\">&#x27;rgba(0, 0, 0, 0.4)&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">animationType</span>: <span class=\"string\">&#x27;scale&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">animationEasing</span>: <span class=\"string\">&#x27;elasticOut&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">animationDelay</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">idx</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random() * <span class=\"number\">200</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>以上代码11-16行，当柱形图某个数据小于10时，则不显示标签数值，以免影响美观，或出现多个0重叠的情况。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-05.png\" alt=\"柱形图标签用函数格式化\"></p>\n<p>以上代码30-36行，当饼图某个数据项占比小于1%时，就显示<code>&lt;1%</code>，以免被圆整为<code>0%</code>。47-49行，处理了饼图悬浮提示框的显示形式，用到了<code>params</code>即每个数据项的几个参数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-06.png\" alt=\"饼图标签与悬浮提示框用函数格式化\"></p>\n<h4 id=\"4-1-5-生成图表\"><a href=\"#4-1-5-生成图表\" class=\"headerlink\" title=\"4.1.5 生成图表\"></a>4.1.5 生成图表</h4><p>生成图表用典型的<code>init</code>方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%; height: 900px&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dev_chart&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">initEcharts</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.chart = echarts.init(<span class=\"built_in\">this</span>.$refs.dev_chart, <span class=\"string\">&#x27;macarons&#x27;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.chart.setOption(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tooltip</span>: &#123;\t<span class=\"comment\">// 设置柱形图标签，见上上图</span></span><br><span class=\"line\">      <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;axis&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">axisPointer</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;shadow&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">legend</span>: &#123;\t<span class=\"comment\">// 图例，使用设备类型，可以同时操作柱形图和饼图</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.typeData,</span><br><span class=\"line\">      <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fontSize</span>: <span class=\"number\">14</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&#x27;0%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">top</span>: <span class=\"string\">&#x27;0%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"string\">&#x27;60%&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">grid</span>: &#123;\t<span class=\"comment\">// 柱形图范围</span></span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&#x27;5%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">right</span>: <span class=\"string\">&#x27;60%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">top</span>: <span class=\"string\">&#x27;8%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">bottom</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">containLabel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">xAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;设备数量/台&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">position</span>: <span class=\"string\">&#x27;top&#x27;</span>,\t<span class=\"comment\">// x轴位置</span></span><br><span class=\"line\">      <span class=\"attr\">splitLine</span>: &#123;<span class=\"attr\">show</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">      <span class=\"attr\">boundaryGap</span>: [<span class=\"number\">0</span>, <span class=\"number\">0.01</span>],</span><br><span class=\"line\">      <span class=\"attr\">axisTick</span>: &#123;\t<span class=\"comment\">// 坐标轴刻度</span></span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLabel</span>: &#123;\t<span class=\"comment\">// 坐标轴标签</span></span><br><span class=\"line\">        <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;white&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">fontSize</span>: <span class=\"number\">14</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLine</span>: &#123;\t<span class=\"comment\">// 坐标轴线</span></span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">lineStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">yAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;省级行政区&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">nameLocation</span>: <span class=\"string\">&#x27;start&#x27;</span>,\t<span class=\"comment\">// 名称显示位置</span></span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;category&#x27;</span>,\t<span class=\"comment\">// 类目轴</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: <span class=\"built_in\">this</span>.sortedProvinceData,</span><br><span class=\"line\">      <span class=\"attr\">axisTick</span>: &#123;\t<span class=\"comment\">// 坐标轴分隔线</span></span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">splitLine</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLabel</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">textStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">fontSize</span>: <span class=\"number\">14</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">axisLine</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">lineStyle</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#fff&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">series</span>: <span class=\"built_in\">this</span>.series</span><br><span class=\"line\">  &#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意以上代码第2行，如果要使用<code>macarons</code>主题，需要找到它的位置并导入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> echarts <span class=\"keyword\">from</span> <span class=\"string\">&#x27;echarts&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;../../../../node_modules/echarts/theme/macarons&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-1-6-解决获取不到属性的报错\"><a href=\"#4-1-6-解决获取不到属性的报错\" class=\"headerlink\" title=\"4.1.6 解决获取不到属性的报错\"></a>4.1.6 解决获取不到属性的报错</h4><p>之后的代码前端经常会报获取不到属性的错误，这甚至可能导致图表无法显示，为此有以下解决办法：</p>\n<ul>\n<li><p>如果是在Vue部分直接使用对象的属性，可以先用<code>v-if</code>判断其是否存在。如以下代码，<code>staticInfo</code>本来是个空对象，是在调用函数后才赋值，如果没有<code>v-if</code>，函数调用延迟时，Vue尝试填充此处的文本插值，就会报找不到<code>ncsId</code>属性的错。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.ncsId&quot;</span>&gt;</span>&#123;&#123; staticInfo.ncsId &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用函数内部调用下一个函数，以强行控制函数执行流程，确保获取数据，再操作数据，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getList;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    ListInfo().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.handleData();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handleData</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将生成图表的函数放在<code>mounted</code>的<code>nextTick</code>里，或直接设置整个函数体位于<code>nextTick</code>里，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.initEchart();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">initEchart</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> chart = echarts.init(<span class=\"built_in\">this</span>.$refs.dev_chart);</span><br><span class=\"line\">      chart.setOption(<span class=\"built_in\">this</span>.options);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4-2-设备销售类型销量分析\"><a href=\"#4-2-设备销售类型销量分析\" class=\"headerlink\" title=\"4.2 设备销售类型销量分析\"></a>4.2 设备销售类型销量分析</h3><p>这个图表是左右两张图，分别是柱形图和饼图，基本操作方法与之前类似。</p>\n<h4 id=\"4-2-1-让柱形图同一系列显示不同的颜色\"><a href=\"#4-2-1-让柱形图同一系列显示不同的颜色\" class=\"headerlink\" title=\"4.2.1 让柱形图同一系列显示不同的颜色\"></a>4.2.1 让柱形图同一系列显示不同的颜色</h4><p>柱形图其实只有一个系列，即设备数量。但为了让每一个柱形显示不同颜色，就要加单独的<code>itemStyle</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getDeviceNumber</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> color= [</span><br><span class=\"line\">    <span class=\"string\">&quot;#4C98FB&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#83CCE7&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#26C7C8&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#73DEBD&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#26C978&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#8CDF6C&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#FBD657&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#F56679&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#E07BCE&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#9D50E0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;#634FDA&quot;</span></span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.deviceNumber = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> <span class=\"built_in\">this</span>.typeData) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNumber.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">value</span>: <span class=\"built_in\">this</span>.data[index],</span><br><span class=\"line\">      <span class=\"attr\">itemStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: color[index]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-2-2-让柱形图横坐标标签旋转45度\"><a href=\"#4-2-2-让柱形图横坐标标签旋转45度\" class=\"headerlink\" title=\"4.2.2 让柱形图横坐标标签旋转45度\"></a>4.2.2 让柱形图横坐标标签旋转45度</h4><p>横坐标标签过长，需要斜向放置，才能完整显示且更美观。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xAxis: &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;设备类型&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&quot;category&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">axisLabel</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;#96A4F4&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">rotate</span>: <span class=\"number\">45</span>,\t<span class=\"comment\">// 旋转角度</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-07.png\" alt=\"柱状图坐标标签旋转\"></p>\n<p>饼图不用这么做，直接将<code>color</code>写在<code>option</code>里就好了，它会自动把不同颜色赋给不同的数据项。</p>\n<h2 id=\"5-工作台\"><a href=\"#5-工作台\" class=\"headerlink\" title=\"5 工作台\"></a>5 工作台</h2><p>【工作台】是个类似于“大屏看板”的功能区，分为【产品全地图】和【设备状态看板】两个模块。</p>\n<h3 id=\"5-1-产品全地图\"><a href=\"#5-1-产品全地图\" class=\"headerlink\" title=\"5.1 产品全地图\"></a>5.1 产品全地图</h3><p>【产品全地图】其实就是把【统计报表】里的设备分析图换了个累加方式，按省份累加并且展示到全国地图里。这边的代码是昆山写的，我只是改了其中的数据，就不展开讲了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-08.png\" alt=\"产品全地图页面\"></p>\n<h3 id=\"5-2-设备状态看板\"><a href=\"#5-2-设备状态看板\" class=\"headerlink\" title=\"5.2 设备状态看板\"></a>5.2 设备状态看板</h3><p>【设备状态看板】展示了所有添加在【设备信息】里的设备，并根据采集到的数据展示它们的开关机状态，还可以点击每台设备右上角的按钮查看详细的监控数据。开关机状态所用的颜色来自<a href=\"https://element.eleme.cn/#/zh-CN/component/color\">ElementUI的调色板颜色</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-09.png\" alt=\"设备状态看板页面\"></p>\n<h4 id=\"5-2-1-右上角的时间\"><a href=\"#5-2-1-右上角的时间\" class=\"headerlink\" title=\"5.2.1 右上角的时间\"></a>5.2.1 右上角的时间</h4><p>看板右上角的时间可以通过js的定时器完成。先在Vue中为其占位，并设置好css样式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;header_timer&quot;</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123; nowDate &#125;&#125; &#123;&#123; nowWeek &#125;&#125;<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 26px; font-weight: bold&quot;</span>&gt;</span>&#123;&#123; nowTime &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.header_timer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">172</span>, <span class=\"number\">80</span>);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: normal;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>定义一个函数，将当前时间写入变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">setNowTimes</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> myDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> wk = myDate.getDay();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> yy = <span class=\"built_in\">String</span>(myDate.getFullYear());</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mm = myDate.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dd = <span class=\"built_in\">String</span>(myDate.getDate());</span><br><span class=\"line\">  <span class=\"keyword\">let</span> hou = <span class=\"built_in\">String</span>(</span><br><span class=\"line\">    myDate.getHours() &lt; <span class=\"number\">10</span> ? <span class=\"string\">&quot;0&quot;</span> + myDate.getHours() : myDate.getHours()</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = <span class=\"built_in\">String</span>(</span><br><span class=\"line\">    myDate.getMinutes() &lt; <span class=\"number\">10</span></span><br><span class=\"line\">      ? <span class=\"string\">&quot;0&quot;</span> + myDate.getMinutes()</span><br><span class=\"line\">      : myDate.getMinutes()</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sec = <span class=\"built_in\">String</span>(</span><br><span class=\"line\">    myDate.getSeconds() &lt; <span class=\"number\">10</span></span><br><span class=\"line\">      ? <span class=\"string\">&quot;0&quot;</span> + myDate.getSeconds()</span><br><span class=\"line\">      : myDate.getSeconds()</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">let</span> weeks = [</span><br><span class=\"line\">    <span class=\"string\">&quot;星期日&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期一&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期二&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期三&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期四&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期五&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;星期六&quot;</span>,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> week = weeks[wk];</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.nowDate = yy + <span class=\"string\">&quot;年&quot;</span> + mm + <span class=\"string\">&quot;月&quot;</span> + dd + <span class=\"string\">&quot;日&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">this</span>.nowTime = hou + <span class=\"string\">&quot;:&quot;</span> + min + <span class=\"string\">&quot;:&quot;</span> + sec;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.nowWeek = week;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再在<code>mounted</code>里设置一个定时器，设置为1000毫秒（即1秒）刷新一次就好，这样就实现了一个不断变化的时间。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setNowTimes();</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-10.png\" alt=\"时间\"></p>\n<h4 id=\"5-2-2-搜索提示信息\"><a href=\"#5-2-2-搜索提示信息\" class=\"headerlink\" title=\"5.2.2 搜索提示信息\"></a>5.2.2 搜索提示信息</h4><p>客户要求，在上方搜索时，页面会提示它搜索的是什么企业或设备类型。这看起来是个很简单的工作，但着实费了我一阵功夫。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-12.png\" alt=\"搜索信息\"></p>\n<p>这个搜索功能和其他单表的搜索没有什么区别，都是获取<code>queryParams</code>然后调用<code>getList</code>函数。首先在页面的相关位置加上这三个提示的内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isSearched&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;white-text medium-text&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;focusEnter !== null&quot;</span>&gt;</span>当前企业：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; focusEnter &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;focusOrg !== null&quot;</span>&gt;</span>当前部门：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; focusOrg &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;focusType !== null&quot;</span>&gt;</span>当前类型：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; focusType &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>定义布尔变量<code>isSearched</code>，判断是否在进行搜索，以及三个变量放搜索值。在搜索和重置搜索函数上，也要对这些变量进行处理：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 搜索按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.queryParams.pageNum = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getList();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getFocus();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.focusEnter !== <span class=\"literal\">null</span> || <span class=\"built_in\">this</span>.focusOrg !== <span class=\"literal\">null</span> || <span class=\"built_in\">this</span>.focusType !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isSearched = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isSearched = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">/** 重置按钮操作 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">resetQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.resetForm(<span class=\"string\">&quot;queryForm&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.handleQuery();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.isSearched = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.focusEnter = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.focusOrg = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.focusType = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>定义一个<code>getFocus</code>函数，用来把搜索值传给三个变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getFocus</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.enterpriseId !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> enter <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.enterOptions) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (enter.value === <span class=\"built_in\">this</span>.queryParams.enterpriseId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.focusEnter = enter.label;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.orgId !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> org <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.orgOptionsList) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (org.value === <span class=\"built_in\">this</span>.queryParams.orgId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.focusOrg = org.label;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.queryParams.devicetypeId !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> type <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.typeOptions) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (type.value === <span class=\"built_in\">this</span>.queryParams.devicetypeId) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.focusType = type.label;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这个当时写的代码明显可以用<code>find</code>函数替代啊，大意了。</p>\n<p>当设备总数为0时，其实也要设计一个整体的页面，返回按钮与重置按钮功能一致，调用同一个函数。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;device_container&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 15px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;total === 0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 50px auto; height: 200px; text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 20px; color: white&quot;</span>&gt;</span>暂无数据<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;medium&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-back&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;resetQuery&quot;</span>&gt;</span>返回<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-13.png\" alt=\"设备总数为0\"></p>\n<h4 id=\"5-2-3-纯前端功底：图例和设备框的设计\"><a href=\"#5-2-3-纯前端功底：图例和设备框的设计\" class=\"headerlink\" title=\"5.2.3 纯前端功底：图例和设备框的设计\"></a>5.2.3 纯前端功底：图例和设备框的设计</h4><p>这我是完全用HTML+CSS写的，真正考验前端功底。上代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;white-text medium-text&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-total&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备总数：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123; total &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-box&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom-color: #67C23A&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-icon el-icon-set-up&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #67C23A&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-text&quot;</span>&gt;</span>开机<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-box&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;border-bottom-color: #F56C6C&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-icon el-icon-switch-button&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #F56C6C&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;legend-text&quot;</span>&gt;</span>关机<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;device_container&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 15px&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;total === 0&quot;</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">  ...\t<span class=\"comment\">&lt;!-- 这一部分就是上面的设备总数为0的界面 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;15&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:xl</span>=<span class=\"string\">&quot;4&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;12&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in deviceList&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.id&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box-card&quot;</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;&#x27;background-color&#x27;: dynamicCheckStatusList[item.ncsId] ? &#x27;#67C23A&#x27; : &#x27;#F56C6C&#x27;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>&#123;&#123; item.deviceName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/status/device/` + item.id&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-monitor&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">            详细数据</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-main&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;&#x27;border-color&#x27;: dynamicCheckStatusList[item.ncsId] ? &#x27;#67C23A&#x27; : &#x27;#F56C6C&#x27;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;label&quot;</span>&gt;</span>地区<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;item.enterpriseId&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                    enterOptions.find(enter =&gt; enter.value === item.enterpriseId) ? enterOptions.find(enter =&gt; enter.value === item.enterpriseId).province : &#x27;&#x27;</span><br><span class=\"line\">                  &#125;&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            ...\t<span class=\"comment\">&lt;!-- 省略表格中的企业、类型代码 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;label&quot;</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicCheckStatusList&quot;</span>&gt;</span></span><br><span class=\"line\">                  &#123;&#123; dynamicCheckStatusList[item.ncsId] ? &quot;开机&quot; : &quot;关机&quot; &#125;&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上代码第29行，使用<code>v-for</code>要绑定<code>key</code>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.white-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.medium-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-total</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> red solid;\t<span class=\"comment\">/* 设备总数左边的小红条 */</span></span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">35px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">35px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.legend-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">35px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card-header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#303133</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card-main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F2F6FC</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">180px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#F2F6FC</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">td</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>虽然现有的框架、组件非常好用，但要做出自己的效果还是需要靠HTML+CSS完成，这也让我体会到几十年前前端工程师的艰辛。</p>\n<h4 id=\"5-2-4-路由跳转\"><a href=\"#5-2-4-路由跳转\" class=\"headerlink\" title=\"5.2.4 路由跳转\"></a>5.2.4 路由跳转</h4><p>我们想让每台机床展现详细的监控数据，就做了一个按钮入口，这个实现方式有很多，比如ElementUI的<a href=\"https://element.eleme.cn/#/zh-CN/component/dialog\">对话框</a>、<a href=\"https://element.eleme.cn/#/zh-CN/component/popover\">弹出框</a>或<a href=\"https://element.eleme.cn/#/zh-CN/component/drawer\">抽屉</a>等。最终我们决定做一个单独的页面展示机床数据。</p>\n<p>每个机床应该共用一个页面模板，但数据需要有所不同，可以根据机床的id进行区分。这用的是若依的<a href=\"http://doc.ruoyi.vip/ruoyi-vue/other/faq.html#%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E8%8F%9C%E5%8D%95%E9%A1%B5%E7%AD%BE\">路由跳转</a>。</p>\n<p>在<code>router</code>的<code>index.js</code>里面，新配置一个路由：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/status&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">component</span>: Layout,</span><br><span class=\"line\">  <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">children</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&#x27;device/:id(\\\\d+)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> <span class=\"built_in\">require</span>([<span class=\"string\">&#x27;@/views/staging/status/device&#x27;</span>], resolve),</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Device&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">meta</span>: &#123; <span class=\"attr\">title</span>: <span class=\"string\">&#x27;设备详细数据&#x27;</span>, <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同时设置路由跳转：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/status/device/` + item.id&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-monitor&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">    详细数据</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>就可以跳转到指定的这个链接，链接所展示的页面是路由里<code>require</code>的页面，接下来编辑这个页面即可。</p>\n<h3 id=\"5-3-设备详细数据\"><a href=\"#5-3-设备详细数据\" class=\"headerlink\" title=\"5.3 设备详细数据\"></a>5.3 设备详细数据</h3><p>这里展示每个机床的详细数据，不同的机床路径不同，数据不同。下图路径后的数字就是这台机床的id。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-15.png\" alt=\"设备详细数据页面\"></p>\n<h4 id=\"5-3-1-机床id\"><a href=\"#5-3-1-机床id\" class=\"headerlink\" title=\"5.3.1 机床id\"></a>5.3.1 机床id</h4><p>机床id是最核心的数据，不仅这个页面的路径需要机床id，页面所有的数据也通过机床id拿到。所以在Vue的<code>data</code>里，就定义好机床id。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deviceId: <span class=\"built_in\">this</span>.$route.params &amp;&amp; <span class=\"built_in\">this</span>.$route.params.id,</span><br></pre></td></tr></table></figure>\n<p>利用逻辑与的短路特性，如果获取到了<code>this.$route.param</code>，就返回id。</p>\n<h4 id=\"5-3-2-表格信息与变量绑定\"><a href=\"#5-3-2-表格信息与变量绑定\" class=\"headerlink\" title=\"5.3.2 表格信息与变量绑定\"></a>5.3.2 表格信息与变量绑定</h4><p>所有的信息都是根据拿到的机床id，然后使用后端的函数与前端的api查到的，包含静态数据（如设备归属信息）和动态数据（如设备运行状态）。特别要注意拿到的动态数据要看是否绑定，绑定的话还要显示用户自定义的名称和单位。</p>\n<p>例如以下是设备基本信息的Vue代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;12&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-box&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">shadow</span>=<span class=\"string\">&quot;hover&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px; height: 315px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备基本信息<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.hwProductSerialNrL&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                bindingParamInfo.find(item =&gt; item.mongoName === &#x27;hwProductSerialNrL&#x27;).paramName</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.ncsId&quot;</span>&gt;</span>&#123;&#123; staticInfo.ncsId &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>设备名称<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.deviceName&quot;</span>&gt;</span>&#123;&#123; staticInfo.deviceName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>设备启用状态<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;staticInfo.isStart !== null&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                staticInfo.isStart === 0 ? &quot;正常&quot; : &quot;停用&quot;</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.nckType&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;nckType&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicTimeInfo)&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                dynamicTimeInfo.timePayLoad.nckType</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-else</span>&gt;</span>（未找到）<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.nckVersion&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;nckVersion&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicTimeInfo)&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicTimeInfo.timePayLoad.nckVersion &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-else</span>&gt;</span>（未找到）<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再例如以下是设备运行状态的Vue代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-box&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">shadow</span>=<span class=\"string\">&quot;hover&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px; height: 315px&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备运行状态<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDynamicRefresh&quot;</span>&gt;</span></span><br><span class=\"line\">        刷新</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;tableLoading&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicTimeInfo) || !isEmptyObject(dynamicProgStatus)&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>本次开机时刻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicTimeInfo&quot;</span>&gt;</span>&#123;&#123; dynamicTimeInfo.todayStartTime &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.poweronTime&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123;</span><br><span class=\"line\">                bindingParamInfo.find(item =&gt; item.mongoName === &#x27;poweronTime&#x27;).paramName</span><br><span class=\"line\">              &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicTimeInfo&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicTimeInfo.timePayLoad.poweronTime &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;poweronTime&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.setupTime&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;setupTime&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicTimeInfo&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicTimeInfo.timePayLoad.setupTime &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;setupTime&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.progStatus&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;progStatus&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicCheckStatus &amp;&amp; dynamicProgStatus.progStatus&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">circle</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;vertical-align: middle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;[1,2,5].indexOf(dynamicProgStatus.progStatus) &gt; -1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">circle</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;vertical-align: middle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;dynamicProgStatus.progStatus === 3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">circle</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;vertical-align: middle&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;dynamicProgStatus.progStatus === 4&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicProgStatus.string &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;!dynamicCheckStatus&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">              设备关机</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.progStatus&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>更新时刻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;dynamicProgStatus.time&quot;</span>&gt;</span>&#123;&#123; dynamicProgStatus.time &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>未找到设备运行状态，请<span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`../../deviceCenter/device`&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span>检查数控系统id<span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">              或联系技术人员</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这里首先拿到对象时要判断其是否为空对象，因为<strong>空对象在JavaScript中被视为<code>true</code></strong>。这里我用的是自定义函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 空对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">isEmptyObject</span>(<span class=\"params\">obj</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>（JavaScript中，<code>undefined</code>、<code>null</code>、<code>-0</code>、<code>0</code>（<code>+0</code>）、<code>NaN</code>、<code>&#39;&#39;</code>（空字符串）都被视为<code>false</code>，其他都被视为<code>true</code>，如空数组<code>[]</code>和空对象<code>&#123;&#125;</code>也被视为<code>true</code>）</p>\n<p>然后，我们会拿到一些机床数据，例如<code>dynamicTimeInfo</code>、<code>dynamicProgStatus</code>对象。为了实现变量绑定，我们还需要拿到：用户自定义的所有变量（从【变量信息】里拿），用户绑定到这台机床类型的变量（从绑定表里拿）。我用以下方式获取与处理变量：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 变量绑定</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getParams</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listParam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.params = response.rows;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getMongos();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getMongos</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listMongoVariable().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongos = response.rows;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getBindings();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getBindings</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.bindings = response.rows;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getBindingParamInfo();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getBindingParamInfo</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.bindingParamInfo = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.bindings) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.devicetypeId === item.devicetypeId) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.bindingParamInfo.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">paramId</span>: item.paramId</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> bindingParam <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.bindingParamInfo) &#123;</span><br><span class=\"line\">    bindingParam.paramName = <span class=\"built_in\">this</span>.params.find(<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> param.id === bindingParam.paramId).paramName;</span><br><span class=\"line\">    bindingParam.paramUnit = <span class=\"built_in\">this</span>.params.find(<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> param.id === bindingParam.paramId).paramUnit;</span><br><span class=\"line\">    bindingParam.mongoId = <span class=\"built_in\">this</span>.params.find(<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> param.id === bindingParam.paramId).mongoId;</span><br><span class=\"line\">    bindingParam.mongoName = <span class=\"built_in\">this</span>.mongos.find(<span class=\"function\"><span class=\"params\">mongo</span> =&gt;</span> mongo.id === bindingParam.mongoId).mongoName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.showParam = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> mongo <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.mongos) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.showParam[mongo.mongoName] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.bindingParamInfo.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.mongoName === mongo.mongoName)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.showParam[mongo.mongoName] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.loading.close();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><code>getParams</code>函数拿所有的自定义变量，<code>getMongos</code>函数拿所有的MongoDB变量，<code>getBindings</code>函数拿所有的绑定关系，<code>getBindingParamInfo</code>函数先把为当前类型绑定的变量放进数组里，再通过之前拿的信息为这些变量一一补充信息（如名称、单位等），最后在一个<code>showParam</code>数组里，为每个MongoDB变量设置布尔值，方便Vue里的<code>v-if</code>使用。</p>\n<h4 id=\"5-3-3-主轴信息图表：日期信息通信\"><a href=\"#5-3-3-主轴信息图表：日期信息通信\" class=\"headerlink\" title=\"5.3.3 主轴信息图表：日期信息通信\"></a>5.3.3 主轴信息图表：日期信息通信</h4><p>下面两个图表结构基本一致，所要实现的功能和要处理的数据也基本一致。这两个图表我也是写在组件里的。</p>\n<p>首先是这个日期搜索功能，其实也属于父组件和子组件的通信。以下是父组件的前端部分：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;speedDate&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;45px&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-date-picker</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;speedDate.date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">&quot;date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">format</span>=<span class=\"string\">&quot;yyyy 年 MM 月 dd 日&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">value-format</span>=<span class=\"string\">&quot;timestamp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:clearable</span>=<span class=\"string\">&quot;false&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:picker-options</span>=<span class=\"string\">&quot;pickerOptions&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-date-picker</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-search&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;mini&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleSpeedQuery&quot;</span>&gt;</span></span><br><span class=\"line\">      搜索</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$refs.speed &amp;&amp; isEmptyObject($refs.speed.dynamicSpindleInfoList)&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 如果子组件存在，但子组件的主轴信息列表为空对象 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>系统当日无数据<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 日期</span></span><br><span class=\"line\"><span class=\"attr\">speedDate</span>: &#123;<span class=\"attr\">date</span>: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString()).getTime()&#125;,\t<span class=\"comment\">// 以获取当前的时间</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attr\">pickerOptions</span>: &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">disabledDate</span>(<span class=\"params\">time</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> time.getTime() &gt; <span class=\"built_in\">Date</span>.now() - <span class=\"number\">8.64e6</span>\t<span class=\"comment\">// 不允许选择今日之后的时间</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\">// 选择日期处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleSpeedQuery</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicSpindleInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.speed.getNcsId();\t<span class=\"comment\">// 调子组件函数</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-20.png\" alt=\"日期选择\"></p>\n<p>子组件要拿这个日期去查询信息：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取数控系统id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getNcsId</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  getDevice(<span class=\"built_in\">this</span>.deviceId).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.deviceNcsId = response.data.ncsId;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.devicetypeId = response.data.devicetypeId;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getDynamicSpindleInfoList();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 动态主轴信息列表获取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getDynamicSpindleInfoList</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listSpindleDocByTime(<span class=\"built_in\">this</span>.deviceNcsId, <span class=\"built_in\">this</span>.$parent.$parent.$parent.$parent.speedDate.date).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.dynamicSpindleInfoList = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> doc <span class=\"keyword\">of</span> response) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.dynamicSpindleInfoList.push(doc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这样子组件就拿到了某个日期的主轴信息列表，并拿此去画图。</p>\n<h4 id=\"5-3-4-主轴信息图表：父组件的信息展示与变量绑定\"><a href=\"#5-3-4-主轴信息图表：父组件的信息展示与变量绑定\" class=\"headerlink\" title=\"5.3.4 主轴信息图表：父组件的信息展示与变量绑定\"></a>5.3.4 主轴信息图表：父组件的信息展示与变量绑定</h4><p>图表的下方有一个表格，这个表格位于父组件，展示读取到的最新的主轴动态数据。这个表格的处理很复杂，不仅要考虑到变量绑定，也要考虑到适配。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">shadow</span>=<span class=\"string\">&quot;hover&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 15px; height: 630px&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-weight: bold&quot;</span>&gt;</span>设备主轴速度图<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">               @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleSpeedRefresh&quot;</span>&gt;</span></span><br><span class=\"line\">      刷新</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;speedDate&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;45px&quot;</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">      ...\t<span class=\"comment\">&lt;!-- 省略的是日期搜索框部分 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;speedLoading&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">spindle_speed</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;speed&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">spindle_speed</span>&gt;</span>\t<span class=\"comment\">&lt;!-- 图表主体 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table el-table--enable-row-hover el-table--medium&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 15px&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEmptyObject(dynamicSpindleInfo) &amp;&amp; screenWidth &gt;= 992&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这里的tbody是屏幕宽度为350-991的情况，表格为1行6列 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.cmdSpeed || this.showParam.actSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.cmdSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;cmdSpeed&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.cmdSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.dynamicSpindleInfo.spindlePayLoad.cmdSpeed !== null&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicSpindleInfo.spindlePayLoad.cmdSpeed &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;cmdSpeed&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.actSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>&#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;actSpeed&#x27;).paramName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.showParam.actSpeed&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.dynamicSpindleInfo.spindlePayLoad.actSpeed !== null&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; dynamicSpindleInfo.spindlePayLoad.actSpeed &#125;&#125;</span><br><span class=\"line\">              &#123;&#123; bindingParamInfo.find(item =&gt; item.mongoName === &#x27;actSpeed&#x27;).paramUnit &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>更新时刻<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;this.dynamicSpindleInfo.time&quot;</span>&gt;</span>&#123;&#123; dynamicSpindleInfo.time &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>您可能未绑定速度相关变量，</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`../../deviceCenter/type`&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">:underline</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span>点击绑定<span class=\"tag\">&lt;/<span class=\"name\">el-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;screenWidth &gt;= 350&quot;</span>&gt;</span></span><br><span class=\"line\">          ...\t<span class=\"comment\">&lt;!-- 这里的tbody是屏幕宽度为350-991的情况，表格调整为3行2列，代码与上面基本一致 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;screenWidth &lt; 350&quot;</span>&gt;</span></span><br><span class=\"line\">          ...\t<span class=\"comment\">&lt;!-- 这里的tbody是屏幕宽度小于350的情况，表格调整为6行1列，代码与上面基本一致 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isEmptyObject(dynamicSpindleInfo)&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cell&quot;</span>&gt;</span>未找到最新主轴速度信息。</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>屏幕的宽度提前写在<code>data</code>里：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">screenWidth: <span class=\"built_in\">document</span>.body.clientWidth</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-3-5-主轴信息图表：子组件的图表展示与变量绑定\"><a href=\"#5-3-5-主轴信息图表：子组件的图表展示与变量绑定\" class=\"headerlink\" title=\"5.3.5 主轴信息图表：子组件的图表展示与变量绑定\"></a>5.3.5 主轴信息图表：子组件的图表展示与变量绑定</h4><p>变量绑定关系到图表的数据源，绑定就给图表数据，不绑定就不给，所以子组件最好也提前判断好是否绑定要画的变量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否绑定？</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">findMongoId</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listMongoVariable().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongoId.cmdSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoName === <span class=\"string\">&#x27;cmdSpeed&#x27;</span>).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.mongoId.actSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoName === <span class=\"string\">&#x27;actSpeed&#x27;</span>).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.findParamId();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">findParamId</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listParam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramId.cmdSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.cmdSpeed).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramId.actSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.actSpeed).id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramName.cmdSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.cmdSpeed).paramName;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.paramName.actSpeed = response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.mongoId === <span class=\"built_in\">this</span>.mongoId.actSpeed).paramName;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.findWhetherBound();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">findWhetherBound</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  listDevicetypeparam().then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isBound.cmdSpeed = !!response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.devicetypeId === <span class=\"built_in\">this</span>.devicetypeId &amp;&amp; row.paramId === <span class=\"built_in\">this</span>.paramId.cmdSpeed);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.isBound.actSpeed = !!response.rows.find(<span class=\"function\"><span class=\"params\">row</span> =&gt;</span> row.devicetypeId === <span class=\"built_in\">this</span>.devicetypeId &amp;&amp; row.paramId === <span class=\"built_in\">this</span>.paramId.actSpeed);</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这样通过<code>isBound</code>这个对象，就知道<code>cmdSpeed</code>和<code>actSpeed</code>绑定与否。</p>\n<p>再将数据处理为Echarts接受的形式（拿了所有数据）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getSpeedDatasetSource</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedDatasetSource = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> info <span class=\"keyword\">of</span> <span class=\"built_in\">this</span>.dynamicSpindleInfoList) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.speedDatasetSource.push(&#123;</span><br><span class=\"line\">      <span class=\"attr\">time</span>: info.time,</span><br><span class=\"line\">      <span class=\"attr\">cmdSpeed</span>: info.spindlePayLoad.cmdSpeed,</span><br><span class=\"line\">      <span class=\"attr\">actSpeed</span>: info.spindlePayLoad.actSpeed</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>最后初始化图表。客户要求默认只显示主轴指定转速（<code>cmdSpeed</code>），不显示主轴实际转速（<code>actSpeed</code>），这在Echarts中可以用<code>selected</code>属性设置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化图表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getSpeedGraph</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> selected = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isBound.cmdSpeed) &#123;\t<span class=\"comment\">// 如果主轴指定转速被绑定了，就只显示它</span></span><br><span class=\"line\">    selected[<span class=\"built_in\">this</span>.paramName.cmdSpeed] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    selected[<span class=\"built_in\">this</span>.paramName.actSpeed] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    selected[<span class=\"built_in\">this</span>.paramName.actSpeed] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedGraph = echarts.init(<span class=\"built_in\">this</span>.$refs.speed_chart, <span class=\"string\">&quot;macarons&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedGraph.setOption(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tooltip</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;axis&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">axisPointer</span>: &#123;\t<span class=\"comment\">// 坐标轴指示器</span></span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,\t<span class=\"comment\">// 形式为一条线</span></span><br><span class=\"line\">        <span class=\"attr\">snap</span>: <span class=\"literal\">true</span>\t<span class=\"comment\">// 自动吸附（时间轴的点比较小）</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">legend</span>: &#123;\t<span class=\"comment\">// 图例</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: [<span class=\"built_in\">this</span>.paramName.cmdSpeed, <span class=\"built_in\">this</span>.paramName.actSpeed],</span><br><span class=\"line\">      <span class=\"attr\">selected</span>: selected\t<span class=\"comment\">// 默认选择项</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">grid</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&#x27;3%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">right</span>: <span class=\"string\">&#x27;12%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">bottom</span>: <span class=\"string\">&#x27;10%&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">containLabel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">dataset</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">dimensions</span>: [&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;time&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;time&#x27;</span>&#125;, <span class=\"string\">&#x27;cmdSpeed&#x27;</span>, <span class=\"string\">&#x27;actSpeed&#x27;</span>],</span><br><span class=\"line\">      <span class=\"attr\">source</span>: <span class=\"built_in\">this</span>.speedDatasetSource</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">xAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;时间&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">nameTextStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">padding</span>: [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;time&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">yAxis</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;转速/(r/min)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">nameTextStyle</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">padding</span>: [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">50</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">dataZoom</span>: [&#123;\t<span class=\"comment\">// 图表区域缩放</span></span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;slider&#x27;</span>,\t<span class=\"comment\">// 滑动条缩放（图表下方）</span></span><br><span class=\"line\">      <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">end</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">      <span class=\"attr\">xAxisIndex</span>: <span class=\"number\">0</span>,\t<span class=\"comment\">// 缩放x轴</span></span><br><span class=\"line\">      <span class=\"attr\">filterMode</span>: <span class=\"string\">&#x27;none&#x27;</span>\t<span class=\"comment\">// 不过滤数据</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;inside&#x27;</span>,\t<span class=\"comment\">// 内置缩放（滚轮）</span></span><br><span class=\"line\">        <span class=\"attr\">start</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">end</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">        <span class=\"attr\">xAxisIndex</span>: <span class=\"number\">0</span>,\t<span class=\"comment\">// 缩放x轴</span></span><br><span class=\"line\">        <span class=\"attr\">filterMode</span>: <span class=\"string\">&#x27;none&#x27;</span>\t<span class=\"comment\">// 不过滤数据</span></span><br><span class=\"line\">      &#125;],</span><br><span class=\"line\">    <span class=\"attr\">series</span>: [</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.isBound.cmdSpeed ? &#123;\t<span class=\"comment\">// 绑定cmdSpeed的情况下</span></span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"built_in\">this</span>.paramName.cmdSpeed,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">encode</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"attr\">y</span>: <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">smooth</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125; : <span class=\"literal\">null</span>,</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.isBound.actSpeed ? &#123;\t<span class=\"comment\">// 绑定actSpeed的情况下</span></span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"built_in\">this</span>.paramName.actSpeed,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">encode</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">x</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"attr\">y</span>: <span class=\"number\">2</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">smooth</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125; : <span class=\"literal\">null</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$parent.$parent.$parent.$parent.speedLoading = <span class=\"literal\">false</span>;\t<span class=\"comment\">// 停止父组件的加载动画</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最终效果如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-16.png\" alt=\"坐标轴指示器的自动吸附\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-17.png\" alt=\"两个图例都点上并进行缩放的情况\"></p>\n<h4 id=\"5-3-6-普通刷新\"><a href=\"#5-3-6-普通刷新\" class=\"headerlink\" title=\"5.3.6 普通刷新\"></a>5.3.6 普通刷新</h4><p>整个设备详细数据一共有4个普通刷新，分别是最上面的白色按钮“刷新状态”，以及3个动态数据卡片右上角的蓝色“刷新”文字。</p>\n<p>刷新操作只要将按钮绑定到一个刷新函数就好了，函数内再调用重置相关信息或获得相关信息的函数，以实现数据刷新。这里我还写了几个<code>loading</code>变量，并将它们<code>v-loading</code>绑定到相关标签上，并在刷新时设置为<code>true</code>，获取完毕数据后设置为<code>false</code>，这样就可以实现加载功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 刷新处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleGlobalRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.openLoading();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.driveLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getBasicInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.speed.getNcsId();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.drive.getNcsId();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDynamicRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.tableLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicTimeInfo();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleSpeedRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.speedDate.date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString()).getTime();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicSpindleInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.speed.getNcsId();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">handleDriveRefresh</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.driveLoading = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.driveDate.date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString()).getTime();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.getDynamicSpindleInfo();</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.$refs.drive.getNcsId();</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-18.png\" alt=\"全局刷新加载（左下角）和卡片刷新加载（右边中部）\"></p>\n<h4 id=\"5-3-7-自动刷新\"><a href=\"#5-3-7-自动刷新\" class=\"headerlink\" title=\"5.3.7 自动刷新\"></a>5.3.7 自动刷新</h4><p>这是个比较复杂的功能，需要综合运用Vue和JavaScript知识，写出来和debug都花了我一段时间。</p>\n<p>实际上这个自动刷新用的还是上面的<code>handleGlobalRefresh</code>函数，只是要定时执行，并且还能调整开关与刷新频率。</p>\n<p>先在页面的合适位置放上这两个按钮：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;searchForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:model</span>=<span class=\"string\">&quot;refreshParams&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">ref</span>=<span class=\"string\">&quot;refreshForm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;75px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: inline; margin: 5px 0 5px 15px;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;自动刷新&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;autoRefresh&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:5px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-switch</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;refreshParams.autoRefresh&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-switch</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;刷新频率&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;refreshFrequency&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top:5px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;refreshParams.refreshFrequency&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请选择&quot;</span> @<span class=\"attr\">change</span>=<span class=\"string\">&quot;handleRefreshSetting&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 85px;&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-option</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in refreshOptions&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:key</span>=<span class=\"string\">&quot;item.value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:label</span>=<span class=\"string\">&quot;item.label&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item.value&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-19.png\" alt=\"自动刷新功能\"></p>\n<p>定义变量，默认情况下开启刷新开关，并设置频率为10 s：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 刷新频率</span></span><br><span class=\"line\"><span class=\"attr\">refreshParams</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">autoRefresh</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">refreshFrequency</span>: <span class=\"number\">10000</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">refreshOptions</span>: [</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">5000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;5 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">10000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;10 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">20000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;20 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">30000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;30 s&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">value</span>: <span class=\"number\">60000</span>, <span class=\"attr\">label</span>: <span class=\"string\">&#x27;60 s&#x27;</span>&#125;,</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"attr\">refreshTimer</span>: <span class=\"literal\">null</span>,</span><br></pre></td></tr></table></figure>\n<p>当刷新频率发生变化时，即上面的<code>el-select</code>选中别的选项时，触发<code>handleRefreshSetting</code>函数，处理这个变化：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">handleRefreshSetting</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.refreshTimer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;\t<span class=\"comment\">// 设置新的定时器</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshParams.autoRefresh) &#123;\t<span class=\"comment\">// 如果自动刷新开关打开，执行刷新</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.handleGlobalRefresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"built_in\">this</span>.refreshParams.refreshFrequency);\t<span class=\"comment\">// 频率设置为新的频率</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><strong>重点来了</strong>，由于这是个路由页面，所以可以利用<a href=\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html\">Vue路由的导航守卫</a>（导航表示路由发生改变）和Vue的生命周期destroyed（现已改名为<a href=\"https://v3.cn.vuejs.org/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA\">unmounted</a>），来处理可能发生的变化，并按不同的变化执行刷新操作。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">// 以下的to表示进入的路由对象，from表示离开的路由对象，next表示进入路由的钩子函数</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">beforeRouteEnter</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;\t<span class=\"comment\">// 进入路由前</span></span><br><span class=\"line\">    next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;\t<span class=\"comment\">// 由于此时获取this，因此需要通过vm访问</span></span><br><span class=\"line\">      vm.refreshTimer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;\t<span class=\"comment\">// 新建一个定时器</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (vm.refreshParams.autoRefresh) &#123;</span><br><span class=\"line\">          vm.handleGlobalRefresh();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;, vm.refreshParams.refreshFrequency);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">beforeRouteUpdate</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;\t<span class=\"comment\">// 路由更新前（从一个机床的详细数据跳到另一个的时候）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">beforeRouteLeave</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;\t<span class=\"comment\">// 离开路由前</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">destroyed</span>(<span class=\"params\"></span>)</span> &#123;\t<span class=\"comment\">// Vue对象销毁时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.refreshTimer) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.refreshTimer);\t<span class=\"comment\">// 清除定时器</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.refreshTimer = <span class=\"literal\">null</span>;\t<span class=\"comment\">// 无论如何要设置定时器为null</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>凡是在路由内设置定时器，一定要通过导航守卫去处理它</strong>，否则会出现离开了详细数据页面，别的页面还在每隔10 s自动刷新的bug。</p>\n<h2 id=\"6-首页的合作伙伴\"><a href=\"#6-首页的合作伙伴\" class=\"headerlink\" title=\"6 首页的合作伙伴\"></a>6 首页的合作伙伴</h2><p>首页的其他部分是苏州团队做的，下面的合作伙伴是我做的。合作伙伴只要放进公司的logo和名称就行了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom:0.5rem&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;24&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-card</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;update-log&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;header&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>合作伙伴<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;block&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">:gutter</span>=<span class=\"string\">&quot;20&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:xl</span>=<span class=\"string\">&quot;2&quot;</span> <span class=\"attr\">:lg</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">:md</span>=<span class=\"string\">&quot;6&quot;</span> <span class=\"attr\">:sm</span>=<span class=\"string\">&quot;8&quot;</span> <span class=\"attr\">:xs</span>=<span class=\"string\">&quot;12&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                  <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(i, index) in 20&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;i&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                  <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-bottom: 0.5rem; height: 70px&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">el-image</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: auto; height: 30px; margin: 0 auto&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">:src</span>=<span class=\"string\">&quot;partnerLogos[index]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">fit</span>=<span class=\"string\">&quot;scale-down&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-image</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding: 10px; text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> &#123;&#123; partnerNames[index].abbr &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-card</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每一个企业都是一个<code>el-col</code>，分为logo的<code>div</code>和名称的<code>div</code>。每一个<code>el-col</code>使用了<code>v-for</code>，所以要绑定<code>key</code>。</p>\n<p>企业的名称写死在<code>data</code>中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">partnerNames: [</span><br><span class=\"line\">  &#123;<span class=\"attr\">full</span>: <span class=\"string\">&quot;德国西门子&quot;</span>, <span class=\"attr\">abbr</span>: <span class=\"string\">&quot;德国西门子&quot;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">full</span>: <span class=\"string\">&quot;江阴塞特精密工具有限公司&quot;</span>, <span class=\"attr\">abbr</span>: <span class=\"string\">&quot;江阴塞特&quot;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">full</span>: <span class=\"string\">&quot;杭州新剑机器人技术股份有限公司&quot;</span>, <span class=\"attr\">abbr</span>: <span class=\"string\">&quot;杭州新剑&quot;</span>&#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>企业的logo由于位置一致，只是名称不同，因此写个函数去获取它：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">partnerLogos</span>: [],</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.getLogos();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getLogos</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">20</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.partnerLogos.push(<span class=\"built_in\">require</span>(<span class=\"string\">&quot;../assets/partners/&quot;</span> + (i &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + i : i) + <span class=\"string\">&#x27;.png&#x27;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>从5月到7月，我就在做这些模块的前端开发。与我们之前做的模块不同，这些模块大部分是纯前端工作，比如统计图、设备看板等，除此之外，前端还要构思从后端拿到数据后怎么处理数据的逻辑。拿到变量绑定数据，怎么让它以用户自定义的情况显示？拿到机床主轴数据，怎么让它画成既直观又美观、还让客户满意的图表？都需要我去想想。</p>\n<p>因此，<strong>越是傻瓜式的页面与操作方式，肯定是程序在背后为你做了越多的事情，这些程序也是程序员的思想结晶。</strong></p>\n<p>这个项目已经验收完毕了，通过开发这个项目，我也学会了很多前端的知识，和一些后端、数据库知识。这些知识希望在将来都能用得上。接下来的任务，就是聚焦一个研究方向，好好做科研了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-23.png\" alt=\"统计报表、工作台等剩余模块的commit过程\"></p>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-01.png","popularPost_tmp_gaData":{"updated":"Fri Oct 29 2021 16:46:45 GMT+0800 (中国标准时间)","title":"开发某机床厂远程运维平台的前端技术总结（2）","path":"2021/10/29/frontend-technical-summary-of-developing-remote-operation-and-maintenance-platform-of-a-machine-tool-factory-2/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20211028/20211028-01.png","excerpt":"<p>在昆山团队退出后，我们还额外负责了原来昆山做的【工作台】、【统计报表】部分。本文的代码在他们的基础上开发，大部分我做了一定幅度的改动。</p>","date":{"_isAMomentObject":true,"_i":"2021-10-29T08:28:54.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-10-29T08:28:54.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Development","tags":["工业互联网平台","编程","前端","技术","Vue","ElementUI","开发","远程运维","Echarts"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":42246},{"title":"LaTeX数学公式手册","date":"2021-08-11T12:07:35.000Z","comments":1,"mathjax":true,"_content":"\nLaTeX是一种基于TeX的排版系统。由于其对复杂的数学公式排版效果很好，所以常用于大型论文排版和数学公式输入。本文及本博客的文章均使用LaTeX输入数学公式。\n\n<!--more-->\n\n## 0 简单介绍\n\n**LaTeX**\n\n标准写法为$ L^AT_EX $​，读音为“拉泰赫”。它是一种基于TeX的排版系统，对于生成复杂表格和数学公式表现尤为突出，适用于论文写作、数学科研类PPT制作等。\n\n**MathJax**\n\n它是一个JavaScript引擎，用来显示网络上的数学公式。本博客的公式使用MathJax引擎渲染。本质上，Typora的公式也是用MathJax渲染的。\n\n**本文的公式显示环境**\n\n- Markdown\n- LaTeX\n- MathJax v3.0.0\n- hexo-renderer-kramed渲染器\n\n**注意**\n\n应特别注意Markdown渲染为HTML及其与LaTeX语法的冲突，这会影响文章效果。如应避免大括号重复出现，应加上空格。\n\n```latex\n}} % Bad\n} } % Good\n```\n\n## 1 公式插入\n\n公式分为行内公式和公式块，前者嵌入行内，后者单独成行。\n\n行内公式表示方法为：` $ 公式 $ `，公式块表示方法为：` $$ 公式 $$ `，公式中的空格会被忽略。公式块可通过`\\tag{n}`进行手动编号。\n\n**行内公式**\t\n\n```latex\n$ f(x) = a+b $\n```\n\n$ f(x) = a+b $​​​​​\n\n**公式块**\n\n注意Typora中建议写成以下形式，否则仍会显示为行内公式：\n\n```latex\n$$\nx+2 = 3*4\n$$\n```\n\n$$\nx+2 = 3*4\n$$\n\n除强调区分行内公式与公式块外，下文的公式示例均省略`$`符号。\n\n**手动编号**\n\n```latex\nx+2 = 3*4 \\tag{1.1}\n```\n\n$$\nx+2 = 3*4 \\tag{1.1}\n$$\n\n## 2 简单运算\n\n### 2.1 四则运算与基本括号\n\n拉丁字母、阿拉伯数字与`+-*/=`可以直接通过键盘输入。乘号可以用`\\times`表示，除号可以用`\\div`表示，点乘可以用`\\cdot`表示。\n\n```latex\na + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g\n```\n\n$$\na + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g\n$$\n\n小括号`()`、方括号`[]`表示其本身，花括号`{}`需要`\\`转义表示。\n\n```latex\n(1+2) \\quad [1+2] \\quad \\{1+2\\}\n```\n\n$$\n(1+2) \\quad [1+2] \\quad \\{1+2\\}\n$$\n\n由于LaTeX会忽略空格，因此用`\\quad`表示空格，见上例。\n\n### 2.2 基本上下标\n\n用`_`表示下标，用`^`表示上标，并只处理一个字符，多个字符用`{}`括起来。`'`表示求导，可使用多个。\n\n```latex\nx_1 + x_{1,2}^2 = y_0 + y' + y''\n```\n\n$$\nx_1 + x_{1,2}^2 = y_0 + y' + y''\n$$\n\n### 2.3 基本分式、根式\n\n用`\\frac{a}{b}`表示分式，用`\\sqrt`表示平方根，用`\\sqrt[n]`表示n次方根。\n\n```latex\n\\frac{x}{2} + \\sqrt x = \\sqrt[3] {x^2+y^2}\n```\n\n$$\n\\frac{x}{2} + \\sqrt x = \\sqrt[3] {x^2+y^2}\n$$\n\n## 3 符号、函数、特殊字符\n\n本章为符号、函数、特殊字符的输入方法，若关注语法可以直接跳过本章。\n\n### 3.1 声调/变音/标记符号\n\n```latex\n\\dot{a}, \\ddot{a}, \\dddot{a}, \\acute{a}, \\grave{a}\n```\n\n$ \\dot{a}, \\ddot{a}, \\dddot{a}, \\acute{a}, \\grave{a} $\n\n```latex\n\\check{a}, \\breve{a}, \\tilde{a}, \\widetilde{a}, \\bar{a}, \\mathring{a}\n```\n\n$ \\check{a}, \\breve{a}, \\tilde{a}, \\widetilde{a}, \\bar{a}, \\mathring{a} $\n\n```latex\n\\hat{a}, \\widehat{a}, \\vec{a}\n```\n\n$ \\hat{a}, \\widehat{a}, \\vec{a} $\n\n### 3.2 标准函数\n\n**指数**\n\n```latex\n\\exp_a b, \\exp b, x^2\n```\n\n$ \\exp_a b, \\exp b, x^2 $\n\n**对数**\n\n```latex\n\\log a, \\lg b, \\ln c, \\log_{2} d\n```\n\n$ \\log a, \\lg b, \\ln c, \\log_{2} d $\n\n**三角函数**\n\n```latex\n\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f\n```\n\n$ \\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f $\n\n**反三角函数**\n\n```latex\n\\arcsin a, \\arccos b, \\arctan c\n```\n\n$ \\arcsin a, \\arccos b, \\arctan c $​​\n\n注意`\\arccot, \\arcsec, \\arccsc`不被转义，需要用`\\operatorname`替代。\n\n**双曲函数**\n\n```latex\n\\sinh a, \\cosh b, \\tanh c, \\coth d\n```\n\n$ \\sinh a, \\cosh b, \\tanh c, \\coth d $​\n\n注意`\\sech, \\csch`不被转义，需要用`\\operatorname`替代。\n\n**绝对值**\n\n```latex\n\\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right|\n```\n\n$ \\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right| $\n\n**最大值，最小值**\n\n```latex\n\\max(x,y), \\min(x,y)\n```\n\n$ \\max(x,y), \\min(x,y) $​​\n\n**其他不能转义的标准函数**\n\n用`\\operatorname{function}`表示，如符号函数：\n\n```latex\n\\operatorname{sgn} x\n```\n\n$ \\operatorname{sgn} x $\n\n### 3.3 界限，极限\n\n```latex\n\\min x, \\max y, \\inf a, \\sup b\n```\n\n$ \\min x, \\max y, \\inf a, \\sup b $\n\n```latex\n\\lim x, \\liminf y, \\limsup z\n```\n\n$ \\lim x, \\liminf y, \\limsup z $\n\n```latex\n\\dim p, \\deg q, \\det m, \\ker\\phi\n```\n\n$ \\dim p, \\deg q, \\det m, \\ker\\phi $​\n\n更多极限见4.5节。\n\n### 3.4 投射\n\n```latex\n\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z\n```\n\n$ \\Pr j, \\hom l, \\lVert z \\rVert, \\arg z $\n\n### 3.5 微分，导数\n\n用`\\mathrm{x}`处理非斜体字符，如微分符号`d`。\n\n```latex\ndx, \\mathrm{d}x, \\partial t, \\nabla\\psi\n```\n\n$ dx, \\mathrm{d}x, \\partial t, \\nabla\\psi $​\n\n```latex\n\\mathrm{d}y/\\mathrm{d}x, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x \\partial y}z\n```\n\n$$\n\\mathrm{d}y/\\mathrm{d}x, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x \\partial y}z\n$$\n\n```latex\n', \\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y, \\dddot y\n```\n\n$ ', \\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y, \\dddot y $\n\n### 3.6 字母符号与常数\n\n```latex\n\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar\n```\n\n$ \\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar $\n\n```latex\n\\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS\n```\n\n$ \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS $​​​​\n\n### 3.7 模运算\n\n```latex\n\\pmod{m}, a \\bmod b\n```\n\n$ \\pmod{m}, a \\bmod b $\n\n```latex\n\\gcd(m,n), \\operatorname{lcm}(m,n)\n```\n\n$ \\gcd(m,n), \\operatorname{lcm}(m,n) $​\n\n```latex\n\\mid, \\nmid, \\shortmid, \\nshortmid\n```\n\n$ \\mid, \\nmid, \\shortmid, \\nshortmid $\n\n### 3.8 根号\n\n```latex\n\\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{x^2+y^2}\n```\n\n$ \\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{x^2+y^2} $\n\n### 3.9 运算符\n\n```latex\n+, -, \\pm, \\mp, \\dotplus\n```\n\n$ +, -, \\pm, \\mp, \\dotplus $\n\n```latex\n*, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash\n```\n\n$ *, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash $\n\n```latex\n\\star, \\circ, \\bullet\n```\n\n$ \\star, \\circ, \\bullet $\n\n```latex\n\\boxplus, \\boxminus, \\boxtimes, \\boxdot\n```\n\n$ \\boxplus, \\boxminus, \\boxtimes, \\boxdot $\n\n```latex\n\\oplus, \\ominus, \\otimes, \\oslash, \\odot\n```\n\n$ \\oplus, \\ominus, \\otimes, \\oslash, \\odot $\n\n```latex\n\\circleddash, \\circledcirc, \\circledast\n```\n\n$ \\circleddash, \\circledcirc, \\circledast $​\n\n```latex\n\\bigoplus, \\bigotimes, \\bigodot\n```\n\n$ \\bigoplus, \\bigotimes, \\bigodot $\n\n### 3.10 集合\n\n```latex\n\\{, \\}, \\emptyset, \\varnothing\n```\n\n$ \\{, \\}, \\emptyset, \\varnothing $​\n\n注意本环境下不支持用`\\O, \\empty`表示空集，需要用`\\emptyset`替代。​\n\n```latex\n\\in, \\notin, \\not\\in, \\ni, \\not\\ni\n```\n\n$ \\in, \\notin, \\not\\in, \\ni, \\not\\ni $​​\n\n```latex\n\\cap, \\Cap, \\sqcap, \\bigcap\n```\n\n$ \\cap, \\Cap, \\sqcap, \\bigcap $​\n\n```latex\n\\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus\n```\n\n$ \\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus $\n\n```latex\n\\setminus, \\smallsetminus\n```\n\n$ \\setminus, \\smallsetminus $\n\n```latex\n\\subset, \\Subset, \\sqsubset\n```\n\n$ \\subset, \\Subset, \\sqsubset $\n\n```latex\n\\supset, \\Supset, \\sqsupset\n```\n\n$ \\supset, \\Supset, \\sqsupset $\n\n```latex\n\\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq\n```\n\n$ \\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq $\n\n```latex\n\\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq\n```\n\n$ \\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq $\n\n```latex\n\\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq\n```\n\n$ \\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq $\n\n```latex\n\\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq\n```\n\n$ \\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq $\n\n### 3.11 关系符号\n\n```latex\n=, \\ne, \\neq, \\equiv, \\not\\equiv\n```\n\n$ =, \\ne, \\neq, \\equiv, \\not\\equiv $\n\n```latex\n\\doteq, \\doteqdot, :=, \\overset{\\underset{\\mathrm{def} } {} } {=}\n```\n\n$ \\doteq, \\doteqdot, :=, \\overset{\\underset{\\mathrm{def} } {} } {=} $\n\n```latex\n\\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong\n```\n\n$ \\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong $\n\n```latex\n\\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto\n```\n\n$ \\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto $\n\n```latex\n<, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot\n```\n\n$ <, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot $\n\n```latex\n>, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot\n```\n\n$ >, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot $\n\n```latex\n\\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq\n```\n\n$ \\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq $\n\n```latex\n\\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq\n```\n\n$ \\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq $\n\n```latex\n\\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless\n```\n\n$ \\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless $\n\n```latex\n\\leqslant, \\nleqslant, \\eqslantless\n```\n\n$ \\leqslant, \\nleqslant, \\eqslantless $\n\n```latex\n\\geqslant, \\ngeqslant, \\eqslantgtr\n```\n\n$ \\geqslant, \\ngeqslant, \\eqslantgtr $\n\n```latex\n\\lesssim, \\lnsim, \\lessapprox, \\lnapprox\n```\n\n$ \\lesssim, \\lnsim, \\lessapprox, \\lnapprox $\n\n```latex\n\\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox\n```\n\n$ \\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox $\n\n```latex\n\\prec, \\nprec, \\preceq, \\npreceq, \\precneqq\n```\n\n$ \\prec, \\nprec, \\preceq, \\npreceq, \\precneqq $​\n\n```latex\n\\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq\n```\n\n$ \\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq $\n\n```latex\n\\preccurlyeq, \\curlyeqprec\n```\n\n$ \\preccurlyeq, \\curlyeqprec $\n\n```latex\n\\succcurlyeq, \\curlyeqsucc\n```\n\n$ \\succcurlyeq, \\curlyeqsucc $\n\n```latex\n\\precsim, \\precnsim, \\precapprox, \\precnapprox\n```\n\n$ \\precsim, \\precnsim, \\precapprox, \\precnapprox $\n\n```latex\n\\succsim, \\succnsim, \\succapprox, \\succnapprox\n```\n\n$ \\succsim, \\succnsim, \\succapprox, \\succnapprox $\n\n### 3.12 几何符号\n\n```latex\n\\parallel, \\nparallel, \\shortparallel, \\nshortparallel\n```\n\n$ \\parallel, \\nparallel, \\shortparallel, \\nshortparallel $\n\n```latex\n\\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ\n```\n\n$ \\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ $\n\n```latex\n\\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc\n```\n\n$ \\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc $​\n\n```latex\n\\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle\n```\n\n$ \\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle $​\n\n```latex\n\\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright\n```\n\n$ \\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright $\n\n### 3.13 逻辑符号\n\n```latex\n\\forall, \\not\\forall, \\exists, \\nexists\n```\n\n$ \\forall, \\not\\forall, \\exists, \\nexists $​\n\n```latex\n\\because, \\therefore, \\And\n```\n\n$ \\because, \\therefore, \\And $\n\n```latex\n\\lor, \\vee, \\curlyvee, \\bigvee\n```\n\n$ \\lor, \\vee, \\curlyvee, \\bigvee $​\n\n```latex\n\\land, \\wedge, \\curlywedge, \\bigwedge\n```\n\n$ \\land, \\wedge, \\curlywedge, \\bigwedge $\n\n注意本环境下不支持用`\\or, \\and`表示或、且，需要用`\\lor, \\land`替代。\n\n```latex\n\\bar{x}, \\bar{abc}, \\overline{x}, \\overline{abc}\n```\n\n$ \\bar{x}, \\bar{abc}, \\overline{x}, \\overline{abc} $\n\n```latex\n\\lnot, \\neg, \\not\\operatorname{R}, \\bot, \\top\n```\n\n$ \\lnot, \\neg, \\not\\operatorname{R}, \\bot, \\top $\n\n```latex\n\\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models\n```\n\n$ \\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models $​​\n\n```latex\n\\nvdash, \\nVdash, \\nvDash, \\nVDash\n```\n\n$ \\nvdash, \\nVdash, \\nvDash, \\nVDash $\n\n```latex\n\\ulcorner, \\urcorner, \\llcorner, \\lrcorner\n```\n\n$ \\ulcorner, \\urcorner, \\llcorner, \\lrcorner $\n\n### 3.14 箭头\n\n```latex\n\\to, \\rightarrow, \\nrightarrow, \\longrightarrow\n```\n\n$ \\to, \\rightarrow, \\nrightarrow, \\longrightarrow $\n\n```latex\n\\gets, \\leftarrow, \\nleftarrow, \\longleftarrow\n```\n\n$ \\gets, \\leftarrow, \\nleftarrow, \\longleftarrow $\n\n```latex\n\\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow\n```\n\n$ \\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow $\n\n```latex\n\\uparrow, \\downarrow, \\updownarrow\n```\n\n$ \\uparrow, \\downarrow, \\updownarrow $\n\n```latex\n\\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies\n```\n\n$ \\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies $\n\n```latex\n\\Leftarrow, \\nLeftarrow, \\Longleftarrow\n```\n\n$ \\Leftarrow, \\nLeftarrow, \\Longleftarrow $\n\n```latex\n\\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff\n```\n\n$ \\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff $\n\n```latex\n\\Uparrow, \\Downarrow, \\Updownarrow\n```\n\n$ \\Uparrow, \\Downarrow, \\Updownarrow $\n\n```latex\n\\Rrightarrow, \\Lleftarrow\n```\n\n$ \\Rrightarrow, \\Lleftarrow $\n\n```latex\n\\nearrow, \\swarrow, \\nwarrow, \\searrow\n```\n\n$ \\nearrow, \\swarrow, \\nwarrow, \\searrow $\n\n```latex\n\\mapsto, \\longmapsto\n```\n\n$ \\mapsto, \\longmapsto $\n\n```latex\n\\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons\n```\n\n$ \\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons $\n\n```latex\n\\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright\n```\n\n$ \\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright $\n\n```latex\n\\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft\n```\n\n$ \\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft $\n\n```latex\n\\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow\n```\n\n$ \\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow $\n\n### 3.15 省略号\n\n用`\\cdots`表示居中的三个点，`\\ldots`表示居底线的三个点，`\\vdots`和`\\ddots`分别表示垂直和对角线。\n\n```latex\n\\cdots, \\ldots, \\vdots, \\ddots\n```\n\n$ \\cdots, \\ldots, \\vdots, \\ddots $\n\n### 3.16 其他\n\n```latex\n\\amalg, \\%, \\&, \\dagger, \\ddagger\n```\n\n$ \\amalg, \\%, \\&, \\dagger, \\ddagger $​​​\n\n```latex\n\\smile, \\frown, \\wr, \\triangleleft, \\triangleright\n```\n\n$ \\smile, \\frown, \\wr, \\triangleleft, \\triangleright $\n\n```latex\n\\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp\n```\n\n$ \\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp $\n\n```latex\n\\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes\n```\n\n$ \\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes $\n\n```latex\n\\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq\n```\n\n$ \\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq $\n\n```latex\n\\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork\n```\n\n$ \\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork $\n\n```latex\n\\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright\n```\n\n$ \\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright $\n\n```latex\n\\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq\n```\n\n$ \\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq $\n\n## 4 常用数学语法\n\n### 4.1 上下标\n\n用`_`表示下标，用`^`表示上标，并只处理一个字符，多个字符用`{}`括起来。上下标可嵌套或同时使用。\n\n```latex\na^2, a_2, a^{2+2}, a_{i,j}, x_2^3\n```\n\n$ a^2, a_2, a^{2+2}, a_{i,j}, x_2^3 $\n\n前置上下标可以用空花括号`{}`承载，也可以使用`\\sideset`命令。\n\n```latex\n{}_1^2X_3^4 \\quad \\sideset{_1^2}{_3^4} \\bigotimes\n```\n\n$ {}_1^2X_3^4 \\quad \\sideset{_1^2}{_3^4} \\bigotimes $\n\n### 4.2 导数\n\n撇导数用`'`或上标的`\\prime`表示，注意不要漏掉上标。\n\n```latex\nx', x'', x^\\prime\n```\n\n$ x', x'', x^\\prime $\n\n```latex\nx\\prime % Bad\n```\n\n$ x\\prime % Bad $​\n\n点导数用`\\dot`、`\\ddot`和`\\dddot`表示。\n\n```latex\n\\dot{y}, \\ddot{y}, \\dddot{y}\n```\n\n$ \\dot{y}, \\ddot{y}, \\dddot{y} $\n\n### 4.3 向量\n\n用`\\vec`、`\\boldsymbol`、`\\over--arrow`或`\\widehat`表示。\n\n```latex\n\\vec{a}, \\boldsymbol{b}, \\overleftarrow{ab}, \\overrightarrow{cd}, \\overleftrightarrow{ab}, \\widehat{abc}\n```\n\n$ \\vec{a}, \\boldsymbol{b}, \\overleftarrow{ab}, \\overrightarrow{cd}, \\overleftrightarrow{ab}, \\widehat{abc} $​​\n\n### 4.4 上下线\n\n**上弧、上划线、下划线**\n\n```latex\n\\overset{\\frown} {AB}, \\overline {abc}, \\underline{def}\n```\n\n$ \\overset{\\frown} {AB}, \\overline {abc}, \\underline{def} $\n\n**上括号**\n\n```latex\n\\overbrace{1+2+\\cdots+n} \\quad \\overbrace{1+2+\\cdots+n}^{n}\n```\n\n$ \\overbrace{1+2+\\cdots+n} \\quad \\overbrace{1+2+\\cdots+n}^{n} $\n\n可以写成矩阵形式，使得上面的字符变大：\n\n```latex\n\\begin{matrix} n \\\\ \\overbrace{1+2+\\cdots+n} \\end{matrix}\n```\n\n$ \\begin{matrix} n \\\\ \\overbrace{1+2+\\cdots+n} \\end{matrix} $\n\n**下括号**\n\n```latex\n\\underbrace{a+b+\\cdots+z} \\quad \\underbrace{a+b+\\cdots+z}_{26}\n```\n\n$ \\underbrace{a+b+\\cdots+z} \\quad \\underbrace{a+b+\\cdots+z}_{26} $\n\n```latex\n\\begin{matrix} \\underbrace{a+b+\\cdots+z} \\\\ 26 \\end{matrix}\n```\n\n$ \\begin{matrix} \\underbrace{a+b+\\cdots+z} \\\\ 26 \\end{matrix} $\n\n### 4.5 大型运算符（求和求积、极限、积分等）\n\n**注意**\n\n大型运算符通常含有上下部分，LaTeX用上下标表示。其中行内公式位于右上右下，公式块位于正上正下（积分除外）。\n\n```latex\n$ \\sum_{i=1}^{n} i^2 $\n$$\n\\sum_{i=1}^{n} i^2\n$$\n```\n\n$ \\sum_{i=1}^{n} i^2 $\n$$\n\\sum_{i=1}^{n} i^2\n$$\n若要在行内公式显示为正上正下，可以使用`\\limits`命令跟在运算符后：\n\n```latex\n$ \\sum\\limits_{i=1}^{n} i^2 $\n```\n\n$ \\sum\\limits_{i=1}^{n} i^2 $\n\n若要在公式块显示为右上右下，可以使用一阶无框矩阵形式或使用`\\nolimits`命令：\n\n```latex\n$$\n\\begin{matrix} \\sum_{i=1}^{n} i^2 \\end{matrix}\n$$\n```\n\n$$\n\\begin{matrix} \\sum_{i=1}^{n} i^2 \\end{matrix}\n$$\n\n```latex\n$$\n\\sum\\nolimits_{i=1}^{n} i^2\n$$\n```\n\n$$\n\\sum\\nolimits_{i=1}^{n} i^2\n$$\n\n下文的显示形式均为公式块。\n\n**求和（累加）、求积（累乘）**\n\n```latex\n\\sum_{i=1}^{n} i^2 \\quad \\prod_{i=1}^{n} x_i\n```\n\n$$\n\\sum_{i=1}^{n} i^2 \\quad \\prod_{i=1}^{n} x_i\n$$\n\n**极限**\n\n```latex\n\\lim_{x \\to \\infty} (1+\\frac{1}{x})^x = e\n```\n\n$$\n\\lim_{x \\to \\infty} (1+\\frac{1}{x})^x = e\n$$\n\n**普通积分**\n\n```latex\n\\int_{a}^{b} e^x \\, \\mathrm{d}x\n```\n\n$$\n\\int_{a}^{b} e^x \\, \\mathrm{d}x\n$$\n\n`\\,`可省略，但建议加入使式子更美观；`\\mathrm{d}`可替换为`{\\rm d}`。\n\n**二重积分、三重积分**\n\n```latex\n\\iint_{D} f(x,y) \\, \\mathrm{d}\\sigma \\quad \\iiint_{\\Omega} f(x,y,z) \\, \\mathrm{d}V\n```\n\n$$\n\\iint_{D} f(x,y) \\, \\mathrm{d}\\sigma \\quad \\iiint_{\\Omega} f(x,y,z) \\, \\mathrm{d}V\n$$\n\n**闭合曲线积分**\n\n```latex\n\\oint_{L} f(x,y) \\, \\mathrm{d}s\n```\n\n$$\n\\oint_{L} f(x,y) \\, \\mathrm{d}s\n$$\n\n**其他积分符号**\n\n```latex\n\\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint\n```\n\n$ \\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint $​​\n\n注意本环境下不支持用`\\oiint, \\oiiint`表示二重闭合积分、三重闭合积分。\n\n**交集、并集、余积**\n\n```latex\n\\bigcap_{i=1}^{n} A_i \\quad \\bigcup_{j=1}^{m} B_j\n```\n\n$$\n\\bigcap_{i=1}^{n} A_i \\quad \\bigcup_{j=1}^{m} B_j\n$$\n\n```latex\n\\coprod_{i \\in I} A_i\n```\n\n$$\n\\coprod_{i \\in I} A_i\n$$\n\n## 5 分式\n\n### 5.1 基本输入\n\n分式可以通过`\\over`命令，两侧标记分子分母，且整体需要用花括号括起来。\n\n```latex\nx = { {-b \\pm \\sqrt{b^2-4ac} } \\over {2a} }\n```\n\n$$\nx = { {-b \\pm \\sqrt{b^2-4ac} } \\over {2a} }\n$$\n常用的分式用`\\frac{分子}{分母}`命令，便捷时使用`\\frac ab`快速生成$ \\frac ab $​。\n\n```latex\n\\frac{-b \\pm \\sqrt{b^2-4ac} }{2a} \\quad \\frac ab\n```\n\n$$\n\\frac{-b \\pm \\sqrt{b^2-4ac} }{2a} \\quad \\frac ab\n$$\n### 5.2 分式排版\n\n普通分式在行内公式会自动缩小，在公式块会显示为完整大小。\n\n```latex\n$ \\frac{1}{2}=0.5 $\n$$\n\\frac{1}{2}=0.5\n$$\n```\n\n$ \\frac{1}{2}=0.5 $​\n$$\n\\frac{1}{2}=0.5\n$$\n`\\tfrac`命令用于使分式显示为*行内公式样式*。\n\n```latex\n$$\n\\tfrac{1}{2}=0.5\n$$\n```\n\n$$\n\\tfrac{1}{2}=0.5\n$$\n\n`\\dfrac`命令用于使分式显示为*公式块样式*。\n\n```latex\n$ \\dfrac{1}{2}=0.5 $\n```\n\n$ \\dfrac{1}{2}=0.5 $​\n\n**注意**\n\n在指数函数、极限、积分等场景下，尽量不使用`\\frac`命令，而使用`/`表示为横式分式。\n\n```latex\n$$\ne^{\\frac{i\\pi}{2} } \\quad \\int_{-\\frac{\\pi}{2} }^{\\frac{\\pi}{2} } \\sin x \\, \\mathrm{d}x\n% Bad\n$$\n```\n\n$$\ne^{\\frac{i\\pi}{2} } \\quad \\int_{-\\frac{\\pi}{2} }^{\\frac{\\pi}{2} } \\sin x \\, \\mathrm{d}x\n% Bad\n$$\n```latex\n$$\ne^{i\\pi/2} \\quad \\int_{-\\pi/2}^{\\pi/2} \\sin x \\, \\mathrm{d}x\n% Good\n$$\n```\n\n$$\ne^{i\\pi/2} \\quad \\int_{-\\pi/2}^{\\pi/2} \\sin x \\, \\mathrm{d}x\n% Good\n$$\n\n### 5.3 连分式\n\n用`\\cfrac`命令输入连分式，会自动处理分子分母的高度。\n\n```latex\n$$\n\\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cdots} } }\n$$\n```\n\n$$\n\\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cdots} } }\n$$\n###  5.4 二项式系数\n\n用`\\binom`命令输入，`\\tbinom`使二项式系数显示为行内公式样式，`\\dbinom`使二项式系数显示为公式块样式。\n\n```latex\n$$\n\\mathrm{C}_n^r = \\binom{n}{r}\n$$\n```\n\n$$\n\\mathrm{C}_n^r = \\binom{n}{r}\n$$\n\n```latex\n$$\n\\tbinom{n}{r} = \\tbinom{n}{n-r}\n$$\n```\n\n$$\n\\tbinom{n}{r} = \\tbinom{n}{n-r}\n$$\n\n```latex\n$ \\dbinom{n}{r} = \\dfrac{n!}{k!\\,(n-k)!} $\n```\n\n$ \\dbinom{n}{r} = \\dfrac{n!}{k!\\,(n-k)!} $​\n\n## 6 矩阵、条件表达式、方程组\n\n语法为：\n\n```latex\n\\begin{类型}\n内容\n\\end{类型}\n```\n\n类型可以是：矩阵`matrix`、`pmatrix`、`bmatrix`、`Bmatrix`、`vmatrix`、`Vmatrix`，条件表达式`cases`，多行对齐方程式`aligned`、`alignedat`。\n\n内容中，`&`符号表示每行的对齐内容，`\\\\`表示结尾处换行。\n\n### 6.1 无框矩阵\n\n用`&`分隔矩阵列，用`\\\\`分隔矩阵行。\n\n```latex\n\\begin{matrix}\na & b \\\\\nc & d\n\\end{matrix}\n```\n\n$$\n\\begin{matrix}\na & b \\\\\nc & d\n\\end{matrix}\n$$\n\n### 6.2 有框矩阵\n\n`pmatrix`为圆括号，`bmatrix`为方括号，`Bmatrix`为花括号，`vmatrix`为竖线（行列式），`Vmatrix`为双竖线。\n\n使用`\\cdots`$\\cdots$、`\\ddots`$\\ddots$、`\\vdots`$\\vdots$输入省略号。\n\n```latex\n\\begin{pmatrix}\n0 & \\cdots & 0 \\\\\n\\vdots & \\ddots & \\vdots \\\\\n0 & \\cdots & 0 \\\\\n\\end{pmatrix}\n```\n\n$$\n\\begin{pmatrix}\n0 & \\cdots & 0 \\\\\n\\vdots & \\ddots & \\vdots \\\\\n0 & \\cdots & 0 \\\\\n\\end{pmatrix}\n$$\n\n```latex\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\quad\n\\begin{Bmatrix}\na & b \\\\\nc & d\n\\end{Bmatrix}\n\\quad\n\\begin{vmatrix}\na & b \\\\\nc & d\n\\end{vmatrix}\n\\quad\n\\begin{Vmatrix}\na & b \\\\\nc & d\n\\end{Vmatrix}\n```\n\n$$\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\quad\n\\begin{Bmatrix}\na & b \\\\\nc & d\n\\end{Bmatrix}\n\\quad\n\\begin{vmatrix}\na & b \\\\\nc & d\n\\end{vmatrix}\n\\quad\n\\begin{Vmatrix}\na & b \\\\\nc & d\n\\end{Vmatrix}\n$$\n\n### 6.3 条件表达式\n\n用`&`分隔公式与条件。\n\n```latex\nf(n)=\n\\begin{cases}\nn/2, & \\text{if } n \\text{ is even} \\\\\n3n+1, & \\text{if } n \\text{ is odd}\n\\end{cases}\n```\n\n$$\nf(n)=\n\\begin{cases}\nn/2, & \\text{if } n \\text{ is even} \\\\\n3n+1, & \\text{if } n \\text{ is odd}\n\\end{cases}\n$$\n\n`\\text`表示字符为文本格式，而非数学格式，注意空格处理。\n\n### 6.4 多行等式、同余式\n\n```latex\n\\begin{aligned}\nf(x) & = (m+n)^2 \\\\\n& = m^2+2mn+n^2 \\\\\n\\end{aligned}\n```\n\n$$\n\\begin{aligned}\nf(x) & = (m+n)^2 \\\\\n& = m^2+2mn+n^2 \\\\\n\\end{aligned}\n$$\n\n```latex\n\\begin{aligned}\n3^{6n+3}+4^{6n+3}\n& \\equiv (3^3)^{2n+1}+(4^3)^{2n+1} \\\\\n& \\equiv 27^{2n+1}+64^{2n+1} \\\\\n& \\equiv 27^{2n+1}+(-27)^{2n+1} \\\\\n& \\equiv 27^{2n+1}-27^{2n+1} \\\\\n& \\equiv 0 \\pmod{91} \\\\\n\\end{aligned}\n```\n\n$$\n\\begin{aligned}\n3^{6n+3}+4^{6n+3}\n& \\equiv (3^3)^{2n+1}+(4^3)^{2n+1} \\\\\n& \\equiv 27^{2n+1}+64^{2n+1} \\\\\n& \\equiv 27^{2n+1}+(-27)^{2n+1} \\\\\n& \\equiv 27^{2n+1}-27^{2n+1} \\\\\n& \\equiv 0 \\pmod{91} \\\\\n\\end{aligned}\n$$\n\n`\\alignedat`用于确定行数的对齐。\n\n```latex\n\\begin{alignedat}{3}\nf(x) & = (m+n)^2 \\\\\ng(x) & = (m-n)^2 \\\\\n& = m^2-2mn+n^2 \\\\\n\\end{alignedat}\n```\n\n$$\n\\begin{alignedat}{3}\nf(x) & = (m+n)^2 \\\\\ng(x) & = (m-n)^2 \\\\\n& = m^2-2mn+n^2 \\\\\n\\end{alignedat}\n$$\n\n### 6.5 方程组\n\n**用`cases`表达**\n\n```latex\n\\begin{cases}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{cases}\n```\n\n$$\n\\begin{cases}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{cases}\n$$\n\n**用`aligned`表达**\n\n```latex\n\\left\\{ \\begin{aligned}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{aligned} \\right.\n```\n\n$$\n\\left\\{ \\begin{aligned}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{aligned} \\right.\n$$\n\n## 7 数组与表格\n\n### 7.1 基本数组与表格\n\n数组和表格以`\\begin{array}{定义式}`开头，以`\\end{array}`结尾。定义式中定义每列对齐方式，可用`l`、`c`、`r`分别代表居左、居中、居右。若插入水平分割线，在行内容间插入`\\hline`；若插入垂直分割线，在定义式中插入`|`。表格内容用`&`分隔列，用`\\\\`分隔行。\n\n```latex\n\\begin{array}{c|lcr}\nx & 1\\text{(left)} & 2\\text{(center)} & 3\\text{(right)} \\\\\n\\hline\nf(x) & 0 & 10 & 55.5 \\\\\ng(x) & -1 & 100 & 9 \\\\\nh(x) & 2i & 1000 & 1+10i\n\\end{array}\n```\n\n$$\n\\begin{array}{c|lcr}\nx & 1\\text{(left)} & 2\\text{(center)} & 3\\text{(right)} \\\\\n\\hline\nf(x) & 0 & 10 & 55.5 \\\\\ng(x) & -1 & 100 & 9 \\\\\nh(x) & 2i & 1000 & 1+10i\n\\end{array}\n$$\n\n### 7.2 用数组与表格排版\n\n可以用数组与表格实现类似`aligned`的功能。\n\n```latex\n\\begin{array}{lcr}\nz & = & a \\\\\nf(x,y,z) & = & x+y+z\n\\end{array}\n```\n\n$$\n\\begin{array}{lcr}\nz & = & a \\\\\nf(x,y,z) & = & x+y+z\n\\end{array}\n$$\n\n```latex\n\\begin{array}{cccc}\nx & y & x \\lor y & x \\land y \\\\\n\\hline\n0 & 0 & 0 & 0 \\\\\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1\n\\end{array}\n```\n\n$$\n\\begin{array}{cccc}\nx & y & x \\lor y & x \\land y \\\\\n\\hline\n0 & 0 & 0 & 0 \\\\\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1\n\\end{array}\n$$\n\n### 7.3 嵌套数组与表格\n\n```latex\n% outer\n\\begin{array}{c}\n\t% inner row 1\n\t\\begin{array}{cc}\n\t\t% inner row 1 column 1\n\t\t\\begin{array}{c|cccc}\n\t\t\\min & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 0 & 0 & 0 \\\\\n\t\t1 & 0 & 1 & 1 & 1 \\\\\n\t\t2 & 0 & 1 & 2 & 2 \\\\\n\t\t3 & 0 & 1 & 2 & 3\n\t\t\\end{array}\n\t&\n\t\t% inner row 1 column 2\n\t\t\\begin{array}{c|cccc}\n\t\t\\max & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 1 & 2 & 3 \\\\\n\t\t1 & 1 & 1 & 2 & 3 \\\\\n\t\t2 & 2 & 2 & 2 & 3 \\\\\n\t\t3 & 3 & 3 & 3 & 3\n\t\t\\end{array}\n\t\\end{array}\n\\\\\n\t% inner row 2\n\t\\begin{array}{c|cccc}\n\t\\Delta & 0 & 1 & 2 & 3 \\\\\n\t\\hline\n\t0 & 0 & 1 & 2 & 3 \\\\\n\t1 & 1 & 0 & 1 & 2 \\\\\n\t2 & 2 & 1 & 0 & 1 \\\\\n\t3 & 3 & 2 & 1 & 0\n\t\\end{array}\n\\end{array}\n```\n\n$$\n% outer\n\\begin{array}{c}\n\t% inner row 1\n\t\\begin{array}{cc}\n\t\t% inner row 1 column 1\n\t\t\\begin{array}{c|cccc}\n\t\t\\min & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 0 & 0 & 0 \\\\\n\t\t1 & 0 & 1 & 1 & 1 \\\\\n\t\t2 & 0 & 1 & 2 & 2 \\\\\n\t\t3 & 0 & 1 & 2 & 3\n\t\t\\end{array}\n\t&\n\t\t% inner row 1 column 2\n\t\t\\begin{array}{c|cccc}\n\t\t\\max & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 1 & 2 & 3 \\\\\n\t\t1 & 1 & 1 & 2 & 3 \\\\\n\t\t2 & 2 & 2 & 2 & 3 \\\\\n\t\t3 & 3 & 3 & 3 & 3\n\t\t\\end{array}\n\t\\end{array}\n\\\\\n\t% inner row 2\n\t\\begin{array}{c|cccc}\n\t\\Delta & 0 & 1 & 2 & 3 \\\\\n\t\\hline\n\t0 & 0 & 1 & 2 & 3 \\\\\n\t1 & 1 & 0 & 1 & 2 \\\\\n\t2 & 2 & 1 & 0 & 1 \\\\\n\t3 & 3 & 2 & 1 & 0\n\t\\end{array}\n\\end{array}\n$$\n\n### 7.4 分割矩阵\n\n在需要分割处的定义式加入`|`。\n\n```latex\n\\left[\n\\begin{array}{cc|c}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\n\\right]\n```\n\n$$\n\\left[\n\\begin{array}{cc|c}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\n\\right]\n$$\n\n## 8 字体\n\n普通字符可以通过`\\large`、`\\small`控制大小。\n\n```latex\nA, \\large{A}, \\small{A}\n```\n\n$ A, \\large{A}, \\small{A} $\n\n### 8.1 希腊字母\n\n输入`\\`加其字母名称即可，大写字母将名称首字母大写。注意本环境下部分大写希腊字母不支持转义，需要用相似的*拉丁字母*替代。\n\n```latex\n\\begin{array}{c|l|c|l}\nA \\alpha & \\verb|A \\alpha| & N \\nu & \\verb|N \\nu| \\\\\n\\hline\nB \\beta & \\verb|B \\beta| & \\Xi \\xi & \\verb|\\Xi \\xi| \\\\\n\\hline\n\\Gamma \\gamma & \\verb|\\Gamma \\gamma| & O \\omicron & \\verb|O \\omicron| \\\\\n\\hline\n\\Delta \\delta & \\verb|\\Delta \\delta| & \\Pi \\pi & \\verb|\\Pi \\pi| \\\\\n\\hline\nE \\epsilon & \\verb|E \\epsilon| & P \\rho & \\verb|P \\rho| \\\\\n\\hline\nZ \\zeta & \\verb|Z \\zeta| & \\Sigma \\sigma & \\verb|\\Sigma \\sigma| \\\\\n\\hline\nH \\eta & \\verb|H \\eta| & T \\tau & \\verb|T \\tau| \\\\\n\\hline\n\\Theta \\theta & \\verb|\\Theta \\theta| & \\Upsilon \\upsilon & \\verb|\\Upsilon \\upsilon| \\\\\n\\hline\nI \\iota & \\verb|I \\iota| & \\Phi \\phi & \\verb|\\Phi \\phi| \\\\\n\\hline\nK \\kappa & \\verb|K \\kappa| & X \\chi & \\verb|X \\chi| \\\\\n\\hline\n\\Lambda \\lambda & \\verb|\\Lambda \\lambda| & \\Psi \\psi & \\verb|\\Psi \\psi| \\\\\n\\hline\nM \\mu & \\verb|M \\mu| & \\Omega \\omega & \\verb|\\Omega \\omega| \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|l|c|l}\nA \\alpha & \\verb|A \\alpha| & N \\nu & \\verb|N \\nu| \\\\\n\\hline\nB \\beta & \\verb|B \\beta| & \\Xi \\xi & \\verb|\\Xi \\xi| \\\\\n\\hline\n\\Gamma \\gamma & \\verb|\\Gamma \\gamma| & O \\omicron & \\verb|O \\omicron| \\\\\n\\hline\n\\Delta \\delta & \\verb|\\Delta \\delta| & \\Pi \\pi & \\verb|\\Pi \\pi| \\\\\n\\hline\nE \\epsilon & \\verb|E \\epsilon| & P \\rho & \\verb|P \\rho| \\\\\n\\hline\nZ \\zeta & \\verb|Z \\zeta| & \\Sigma \\sigma & \\verb|\\Sigma \\sigma| \\\\\n\\hline\nH \\eta & \\verb|H \\eta| & T \\tau & \\verb|T \\tau| \\\\\n\\hline\n\\Theta \\theta & \\verb|\\Theta \\theta| & \\Upsilon \\upsilon & \\verb|\\Upsilon \\upsilon| \\\\\n\\hline\nI \\iota & \\verb|I \\iota| & \\Phi \\phi & \\verb|\\Phi \\phi| \\\\\n\\hline\nK \\kappa & \\verb|K \\kappa| & X \\chi & \\verb|X \\chi| \\\\\n\\hline\n\\Lambda \\lambda & \\verb|\\Lambda \\lambda| & \\Psi \\psi & \\verb|\\Psi \\psi| \\\\\n\\hline\nM \\mu & \\verb|M \\mu| & \\Omega \\omega & \\verb|\\Omega \\omega| \\\\\n\\end{array}\n$$\n\n伽玛函数可以用`digamma`表示，另外部分变量形式可以用`\\var-`开头。\n\n```latex\n\\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi\n```\n\n$ \\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi $\n\n### 8.2 希伯来符号\n\n```latex\n\\aleph, \\beth, \\gimel, \\daleth\n```\n\n$ \\aleph, \\beth, \\gimel, \\daleth $\n\n### 8.3 特殊字体形式\n\n#### 8.3.1 黑板报粗体\n\n用`\\mathbb{text}`或`\\Bbb{text}`表示。\n\n```latex\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbb} & \\mathbb{SAMPLE} & \\mathbb{sample} & \\mathbb{0123} \\\\\n\\hline\n\\text{Bbb} & \\Bbb{SAMPLE} & \\Bbb{sample} & \\Bbb{0123}\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbb} & \\mathbb{SAMPLE} & \\mathbb{sample} & \\mathbb{0123} \\\\\n\\hline\n\\text{Bbb} & \\Bbb{SAMPLE} & \\Bbb{sample} & \\Bbb{0123}\n\\end{array}\n$$\n\n#### 8.3.2 粗体\n\n用`\\mathbf{text}`或`{\\bf text}`表示，注意控制范围，对特殊符号无效。\n\n```latex\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbf} & \\mathbf{SAMPLE} & \\mathbf{sample} & \\mathbf{0123} \\\\\n\\hline\n\\text{bf} & {\\bf SAMPLE} & {\\bf sample} & {\\bf 0123}\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbf} & \\mathbf{SAMPLE} & \\mathbf{sample} & \\mathbf{0123} \\\\\n\\hline\n\\text{bf} & {\\bf SAMPLE} & {\\bf sample} & {\\bf 0123}\n\\end{array}\n$$\n\n#### 8.3.3 粗体符号\n\n用`\\boldsymbol{text}`表示，对特殊符号有效。\n\n```latex\n\\begin{array}{c|cccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega & \\sin\\in\\to \\\\\n\\hline\n\\text{blodsymbol} & \\boldsymbol{SAMPLE} & \\boldsymbol{sample} & \\boldsymbol{0123} & \\boldsymbol{\\delta\\theta\\sigma\\omega} & \\boldsymbol{\\Delta\\Theta\\Sigma\\Omega} & \\boldsymbol{\\sin\\in\\to} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|cccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega & \\sin\\in\\to \\\\\n\\hline\n\\text{blodsymbol} & \\boldsymbol{SAMPLE} & \\boldsymbol{sample} & \\boldsymbol{0123} & \\boldsymbol{\\delta\\theta\\sigma\\omega} & \\boldsymbol{\\Delta\\Theta\\Sigma\\Omega} & \\boldsymbol{\\sin\\in\\to} \\\\\n\\end{array}\n$$\n\n#### 8.3.4 斜体（意大利体）\n\n用`\\mathit{text}`或`{\\it text}`或`{\\mit text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathit} & \\mathit{SAMPLE} & \\mathit{sample} & \\mathit{0123} & \\mathit{\\delta\\theta\\sigma\\omega} & \\mathit{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{it} & {\\it SAMPLE} & {\\it sample} & {\\it 0123} & {\\it \\delta\\theta\\sigma\\omega} & {\\it \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{mit} & {\\mit SAMPLE} & {\\mit sample} & {\\mit 0123} & {\\mit \\delta\\theta\\sigma\\omega} & {\\mit \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathit} & \\mathit{SAMPLE} & \\mathit{sample} & \\mathit{0123} & \\mathit{\\delta\\theta\\sigma\\omega} & \\mathit{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{it} & {\\it SAMPLE} & {\\it sample} & {\\it 0123} & {\\it \\delta\\theta\\sigma\\omega} & {\\it \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{mit} & {\\mit SAMPLE} & {\\mit sample} & {\\mit 0123} & {\\mit \\delta\\theta\\sigma\\omega} & {\\mit \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到`\\mathit`与`\\it`等效；对于*拉丁字母、小写希腊字母*，默认字体即为`\\mit`。\n\n#### 8.3.5 罗马体\n\n用`\\mathrm{text}`或`{\\rm text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathrm} & \\mathrm{SAMPLE} & \\mathrm{sample} & \\mathrm{0123} & \\mathrm{\\delta\\theta\\sigma\\omega} & \\mathrm{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{rm} & {\\rm SAMPLE} & {\\rm sample} & {\\rm 0123} & {\\rm \\delta\\theta\\sigma\\omega} & {\\rm \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathrm} & \\mathrm{SAMPLE} & \\mathrm{sample} & \\mathrm{0123} & \\mathrm{\\delta\\theta\\sigma\\omega} & \\mathrm{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{rm} & {\\rm SAMPLE} & {\\rm sample} & {\\rm 0123} & {\\rm \\delta\\theta\\sigma\\omega} & {\\rm \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*小写希腊字母*不支持罗马体；对于*阿拉伯数字、大写希腊字母*，默认字体即为`\\rm`。\n\n#### 8.3.6 等线体/无衬线体\n\n用`\\mathsf{text}`或`{\\sf text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathsf} & \\mathsf{SAMPLE} & \\mathsf{sample} & \\mathsf{0123} & \\mathsf{\\delta\\theta\\sigma\\omega} & \\mathsf{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{sf} & {\\sf SAMPLE} & {\\sf sample} & {\\sf 0123} & {\\sf \\delta\\theta\\sigma\\omega} & {\\sf \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathsf} & \\mathsf{SAMPLE} & \\mathsf{sample} & \\mathsf{0123} & \\mathsf{\\delta\\theta\\sigma\\omega} & \\mathsf{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{sf} & {\\sf SAMPLE} & {\\sf sample} & {\\sf 0123} & {\\sf \\delta\\theta\\sigma\\omega} & {\\sf \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*小写希腊字母*不支持无衬线体。\n\n#### 8.3.7 手写体\n\n用`\\mathscr{text}`或`{\\scr text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathscr} & \\mathscr{SAMPLE} & \\mathscr{sample} & \\mathscr{0123} & \\mathscr{\\delta\\theta\\sigma\\omega} & \\mathscr{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{scr} & {\\scr SAMPLE} & {\\scr sample} & {\\scr 0123} & {\\scr \\delta\\theta\\sigma\\omega} & {\\scr \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathscr} & \\mathscr{SAMPLE} & \\mathscr{sample} & \\mathscr{0123} & \\mathscr{\\delta\\theta\\sigma\\omega} & \\mathscr{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{scr} & {\\scr SAMPLE} & {\\scr sample} & {\\scr 0123} & {\\scr \\delta\\theta\\sigma\\omega} & {\\scr \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*阿拉伯数字、大写希腊字母*显示结果与斜体等效；*小写希腊字母*不改变。\n\n#### 8.3.8 花体\n\n用`\\mathcal{text}`或`{\\cal text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathcal} & \\mathcal{SAMPLE} & \\mathcal{sample} & \\mathcal{0123} & \\mathcal{\\delta\\theta\\sigma\\omega} & \\mathcal{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{cal} & {\\cal SAMPLE} & {\\cal sample} & {\\cal 0123} & {\\cal \\delta\\theta\\sigma\\omega} & {\\cal \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathcal} & \\mathcal{SAMPLE} & \\mathcal{sample} & \\mathcal{0123} & \\mathcal{\\delta\\theta\\sigma\\omega} & \\mathcal{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{cal} & {\\cal SAMPLE} & {\\cal sample} & {\\cal 0123} & {\\cal \\delta\\theta\\sigma\\omega} & {\\cal \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*阿拉伯数字、大写希腊字母*显示结果与斜体等效；*小写拉丁字母、小写希腊字母*不改变。\n\n#### 8.3.9 打字机体\n\n用`\\mathtt{text}`或`{\\tt text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathtt} & \\mathtt{SAMPLE} & \\mathtt{sample} & \\mathtt{0123} & \\mathtt{\\delta\\theta\\sigma\\omega} & \\mathtt{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{tt} & {\\tt SAMPLE} & {\\tt sample} & {\\tt 0123} & {\\tt \\delta\\theta\\sigma\\omega} & {\\tt \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathtt} & \\mathtt{SAMPLE} & \\mathtt{sample} & \\mathtt{0123} & \\mathtt{\\delta\\theta\\sigma\\omega} & \\mathtt{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{tt} & {\\tt SAMPLE} & {\\tt sample} & {\\tt 0123} & {\\tt \\delta\\theta\\sigma\\omega} & {\\tt \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*小写希腊字母*不支持打字机体。\n\n#### 8.3.10 Fraktur体/德国哥特体\n\n用`\\mathfrak{text}`或`{\\frak text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathfrak} & \\mathfrak{SAMPLE} & \\mathfrak{sample} & \\mathfrak{0123} \\\\\n\\hline\n\\text{frak} & {\\frak SAMPLE} & {\\frak sample} & {\\frak 0123} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathfrak} & \\mathfrak{SAMPLE} & \\mathfrak{sample} & \\mathfrak{0123} \\\\\n\\hline\n\\text{frak} & {\\frak SAMPLE} & {\\frak sample} & {\\frak 0123} \\\\\n\\end{array}\n$$\n\n#### 8.3.11 小型手写体\n\n用`{\\scriptstyle text}`命令，同时可以嵌套其他字体。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{scriptstyle} & {\\scriptstyle SAMPLE} & {\\scriptstyle sample} & {\\scriptstyle 0123} \\\\\n\\hline\n\\text{scriptstyle+text} & {\\scriptstyle \\text{SAMPLE} } & {\\scriptstyle \\text{sample} } & {\\scriptstyle \\text{0123} } \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{scriptstyle} & {\\scriptstyle SAMPLE} & {\\scriptstyle sample} & {\\scriptstyle 0123} \\\\\n\\hline\n\\text{scriptstyle+text} & {\\scriptstyle \\text{SAMPLE} } & {\\scriptstyle \\text{sample} } & {\\scriptstyle \\text{0123} } \\\\\n\\end{array}\n$$\n\n### 8.4 混合字体\n\n正常情况下，拉丁字母会被当做变量斜体显示。若需要非斜体显示，可以用`\\text`命令。\n\n```latex\nabc \\quad \\text{abc}\n```\n\n$ abc \\quad \\text{abc} $​\n\n`\\text`中仍可以使用` $ 公式 $ `插入公式。\n\n```latex\nf(n)=\n\\begin{cases}\nn/2, & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n```\n\n$$\nf(n)=\n\\begin{cases}\nn/2, & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n$$\n\n混合输入时，注意空格显示。可以使用`~`或`\\`加空格强制显示空格。\n\n```latex\n\\begin{matrix}\n\\text{if} n \\text{is even} \\\\ % Bad\n\\text{if } n \\text{ is even} \\\\ % Good\n\\text{if}~n~\\text{is even} \\\\ % Good\n\\text{if}\\ n\\ \\text{is even} \\\\ % Good\n\\end{matrix}\n```\n\n$$\n\\begin{matrix}\n\\text{if} n \\text{is even} \\\\ % Bad\n\\text{if } n \\text{ is even} \\\\ % Good\n\\text{if}~n~\\text{is even} \\\\ % Good\n\\text{if}\\ n\\ \\text{is even} \\\\ % Good\n\\end{matrix}\n$$\n\n## 9 括号\n\n圆括号`()`、方括号`[]`表示其本身，花括号`{}`需要`\\`转义表示。\n\n`\\left`和`\\right`命令用来生成自动匹配高度括号或括号型字符。\n\n```latex\n(\\dfrac{1}{2})^2 \\quad \\left( \\dfrac{1}{2} \\right) ^2\n```\n\n$ (\\dfrac{1}{2})^2 \\quad \\left( \\dfrac{1}{2} \\right) ^2 $\n\n### 9.1 圆括号、方括号、花括号\n\n```latex\n\\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\{ \\dfrac ab \\right\\}\n```\n\n$ \\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\{ \\dfrac ab \\right\\} $\n\n### 9.2 角括号、单竖线（绝对值）、双竖线（范数）\n\n```latex\n\\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\|\n```\n\n$ \\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\| $\n\n### 9.3 取整函数\n\n```latex\n\\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil\n```\n\n$ \\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil $\n\n### 9.4 斜线与箭头\n\n```latex\n\\left/ \\dfrac ab \\right\\backslash\n```\n\n$ \\left/ \\dfrac ab \\right\\backslash $\n\n```latex\n\\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow\n```\n\n$ \\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow $\n\n### 9.5 混合括号\n\n```latex\n\\left[ \\dfrac{1}{2}, 1 \\right) \\quad \\left\\langle \\psi \\right|\n```\n\n$ \\left[ \\dfrac{1}{2}, 1 \\right) \\quad \\left\\langle \\psi \\right| $\n\n### 9.6 单边括号\n\n用`\\left.`或`\\right.`匹配另一边。\n\n```latex\n\\left\\{\n\\begin{array}{l}\nx+y=3, \\\\\n2x+3y=8\n\\end{array}\n\\right.\n```\n\n$ \\left\\{\n\\begin{array}{l}\nx+y=3, \\\\\n2x+3y=8\n\\end{array}\n\\right. $\n\n```latex\n\\left. \\dfrac ab \\right\\}\n```\n\n$ \\left. \\dfrac ab \\right\\} $\n\n### 9.7 控制括号大小\n\n使用`\\big`、`\\Big`、`\\bigg`、`\\Bigg`控制括号大小。\n\n```latex\n\\left\\{ \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\}*5\n```\n\n$ \\left\\{ \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\}*5 $​\n\n```latex\n\\Bigg\\{ \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\}*5\n```\n\n$ \\Bigg\\{ \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\}*5 $\n\n## 10 空格\n\nLaTeX会忽略公式中的空格，空格控制从宽到窄依次为：\n\n**双quad空格**：2个字符宽\n\n```latex\n\\alpha \\qquad \\beta\n```\n\n$ \\alpha \\qquad \\beta $\n\n**quad空格**：1个字符宽\n\n```latex\n\\alpha \\quad \\beta\n```\n\n$ \\alpha \\quad \\beta $​\n\n**空格**：1/3个字符宽\n\n```latex\n\\alpha \\ \\beta ~ \\gamma\n```\n\n$ \\alpha \\ \\beta ~ \\gamma $\n\n**中空格**：2/7个字符宽\n\n```latex\n\\alpha \\; \\beta\n```\n\n$ \\alpha \\; \\beta $​\n\n**小空格**：1/6个字符宽\n\n```latex\n\\alpha \\, \\beta\n```\n\n$ \\alpha \\, \\beta $​\n\n**无空格**：0个字符宽\n\n```latex\n\\alpha \\beta\n```\n\n$ \\alpha \\beta $​\n\n**紧贴**：-1/6个字符宽\n\n```latex\n\\alpha \\! \\beta\n```\n\n$ \\alpha \\! \\beta $​\n\n## 11 颜色\n\n使用`{\\color{color}{text} }`更改文字颜色，注意控制范围。\n\n```latex\n\\color{red}{text} \\quad \\color{yellow}{text} \\quad \\color{blue}{text} \\quad \\color{green}{text} \\quad \\color{purple}{text}\n```\n\n$ \\color{red}{text} \\quad \\color{yellow}{text} \\quad \\color{blue}{text} \\quad \\color{green}{text} \\quad \\color{purple}{text} $​\n\ncolor名小写时表示简单色调，首字母大写时表示较为复杂的色调。\n\n```latex\n\\color{Red}{text} \\quad \\color{Orange}{text} \\quad \\color{RoyalBlue}{text} \\quad \\color{Violet}{text} \\quad \\color{LimeGreen}{text}\n```\n\n$ \\color{Red}{text} \\quad \\color{Orange}{text} \\quad \\color{RoyalBlue}{text} \\quad \\color{Violet}{text} \\quad \\color{LimeGreen}{text} $\n\n使用`{\\color{ #rgb}{text} }`选择更多颜色，`rgb`的范围是`0-9`、`A-F`。\n\n```latex\n\\color{ #0FF}{text} \\quad \\color{ #00F}{text} \\quad \\color{ #F0F}{text} \\quad \\color{ #0F0}{text} \\quad \\color{ #6CF}{text}\n```\n\n$ \\color{ #0FF}{text} \\quad \\color{ #00F}{text} \\quad \\color{ #F0F}{text} \\quad \\color{ #0F0}{text} \\quad \\color{ #6CF}{text} $\n\n## 12 小技巧\n\n1. 如何打出如下格式？\n\n   $ \\mathop{x} \\limits_a^b $\n\n   由于`\\limits`只能用在运算符（如`\\sum`）后，所以可以用`\\mathop`命令使字母变成运算符。\n\n   ```latex\n   \\mathop{x} \\limits_a^b\n   ```\n\n   也可以选择`\\overset`和`\\underset`实现。\n\n   ```latex\n   \\underset{a}{\\overset{b}{x} }\n   ```\n\n2. `|`和`\\vert`、`\\mid`的区别：\n\n   ```latex\n   | \\quad \\vert \\quad \\mid\n   ```\n\n   $ | \\quad \\vert \\quad \\mid $​\n\n   分以下情况讨论：\n\n   - **绝对值**\n\n     `|`与`\\vert`均可，还可以使用`\\lvert`、`\\rvert`。注意到下例中，-2左侧的`\\vert`被识别为*普通元素*，而非*关系元素*，因此在非匹配情况下，不建议使用`\\vert`。\n\n     ```latex\n     |-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert\n     ```\n\n     $ |-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert $​\n\n     当遇到分数时，使用`\\left`、`\\right`匹配高度。注意`\\lvert`、`\\rvert`并不会匹配高度！\n\n     ```latex\n     \\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert\n     ```\n\n     $ \\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert $​\n\n   - **整除**\n\n     用关系符号`\\mid`表示。如：\n\n     ```latex\n     a \\mid b\n     ```\n\n     $ a \\mid b $\n\n     表示$a$能整除$b$​，即$b$能被$a$整除，如$ 3 \\mid 9 $表示9能被3整除。\n\n     注意`\\mid`不可伸长，伸长需要借助`|`，使用单边匹配`|`的方法，或`\\middle`命令（`\\middle`需要左右为`\\left.`及`\\right.`）。\n\n     ```latex\n     \\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right.\n     ```\n\n     $ \\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right. $​\n\n   - **集合**\n\n     同上，应用`\\mid`，伸长时用`\\middle|`替代。\n\n     ```latex\n     \\begin{matrix}\n     \\left\\{ x \\mid x \\in \\mathbb{R} \\text{ and } x \\ne 1 \\right\\} \\\\\n     \\left\\{ \\dfrac ab \\mid a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right\\} \\\\\n     \\left\\{ \\left. \\dfrac ab \\middle| a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right. \\right\\}\n     \\end{matrix}\n     ```\n\n     $ \\begin{matrix}\n     \\left\\{ x \\mid x \\in \\mathbb{R} \\text{ and } x \\ne 1 \\right\\} \\\\\n     \\left\\{ \\dfrac ab \\mid a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right\\} \\\\\n     \\left\\{ \\left. \\dfrac ab \\middle| a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right. \\right\\}\n     \\end{matrix} $​\n\n   - **函数**\n\n     因为通常高度不固定，因此建议用`|`表示并匹配高度。\n\n     ```latex\n     f'(x_0) = \\left. f'(x) \\right| _{x=x_0} = \\left. \\dfrac{\\mathrm{d}f}{\\mathrm{d}x} \\right| _{x=x_0}\n     ```\n\n     $ f'(x_0) = \\left. f'(x) \\right| _{x=x_0} = \\left. \\dfrac{\\mathrm{d}f}{\\mathrm{d}x} \\right| _{x=x_0} $\n\n   - **双竖线**\n\n     把`|`、`\\vert`、`\\lvert`、`\\rvert`、`\\mid`分别替换为`\\|`、`\\Vert`、`\\lVert`、`\\rVert`、`\\parallel`即可，基本属性与上述对应单竖线类似。\n\n     ```latex\n     \\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m\n     ```\n\n     $ \\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m $\n\n3. 如何输入斜分式？\n\n   $ {}^1/_2 $​\n\n   用上下标即可。\n\n   ```latex\n   {}^1/_2\n   ```\n\n4. 如何输入化学方程式？\n\n   $ \\mathrm{CH_3CH_2OH \\xrightarrow[170^\\circ C]{浓H_2SO_4} CH_2=CH_2 \\uparrow + H_2O } $\n\n   使用`\\xrightarrow`和已有的符号即可。也可使用宏包，在此不表。\n\n   ```latex\n   \\mathrm{CH_3CH_2OH \\xrightarrow[170^\\circ C]{浓H_2SO_4} CH_2=CH_2 \\uparrow + H_2O }\n   ```\n\n   给箭头加文字有如下方式：\n\n   ```latex\n   \\begin{matrix}\n   \\xleftarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\xrightarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\overset{x+y}{\\rightarrow} \\\\ % 长度固定\n   \\underrightarrow{x+y+z} \\\\ % 自动调整长度\n   \\underset{x+y}{\\leftarrow} \\\\ % 长度固定\n   \\overleftarrow{x+y+z} \\\\ % 自动调整长度\n   \\end{matrix}\n   ```\n\n   $ \\begin{matrix}\n   \\xleftarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\xrightarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\overset{x+y}{\\rightarrow} \\\\ % 长度固定\n   \\underrightarrow{x+y+z} \\\\ % 自动调整长度\n   \\underset{x+y}{\\leftarrow} \\\\ % 长度固定\n   \\overleftarrow{x+y+z} \\\\ % 自动调整长度\n   \\end{matrix} $\n\n5. 如何给公式加方框？\n\n   用`\\boxed`命令或用1*1表格的边框。\n\n   ```latex\n   \\boxed {E=mc^2}\n   ```\n\n   $ \\boxed {E=mc^2} $\n\n   ```latex\n   \\begin{array}{|c|}\n   \\hline\n   E=mc^2 \\\\\n   \\hline\n   \\end{array}\n   ```\n\n   $ \\begin{array}{|c|}\n   \\hline\n   E=mc^2 \\\\\n   \\hline\n   \\end{array} $\n\n6. 如何输入分数的约分形式/如何输入删除线？\n\n   $ \\require{cancel} \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} $\n\n   可以使用`\\cancel`、`\\bcancel`、`\\xcancel`和`\\cancelto`命令（需要`\\require`导包）。\n\n   ```latex\n   \\require{cancel}\n   \\begin{array}{rl}\n   \\verb|y+\\cancel{x}| & y+\\cancel{x} \\\\\n   \\verb|\\cancel{y+x}| & \\cancel{y+x} \\\\\n   \\verb|y+\\bcancel{x}| & y+\\bcancel{x} \\\\\n   \\verb|y+\\xcancel{x}| & y+\\xcancel{x} \\\\\n   \\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x} \\\\\n   \\end{array}\n   ```\n\n   $$\n   \\require{cancel}\n   \\begin{array}{rl}\n   \\verb|y+\\cancel{x}| & y+\\cancel{x} \\\\\n   \\verb|\\cancel{y+x}| & \\cancel{y+x} \\\\\n   \\verb|y+\\bcancel{x}| & y+\\bcancel{x} \\\\\n   \\verb|y+\\xcancel{x}| & y+\\xcancel{x} \\\\\n   \\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x} \\\\\n   \\end{array}\n   $$\n   \n   ```latex\n   \\require{cancel}\n   \\begin{array}{c}\n   \\verb+\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5}+ \\\\\n   \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} \\\\\n   \\end{array}\n   ```\n   \n   $$\n   \\require{cancel}\n   \\begin{array}{c}\n   \\verb+\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5}+ \\\\\n   \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} \\\\\n   \\end{array}\n   $$\n   \n   上例还使用了`\\verb`命令来显示原文照排效果。\n\n## 13 示例\n\n以下公式来源于：Tsung-Chyan Lai,Yuri N. Sotskov,Alexandre Dolgui. The stability radius of an optimal line balance with maximum efficiency for a simple assembly line[J]. European Journal of Operational Research,2018,274(2):\n\n1. 导数、括号匹配、上下标、特殊符号、大型运算符\n   \n   ```latex\n   t' \\left( V_k^{b_r} \\right) := \\sum_{i \\in V_k^{b_r} } t_i' = \\sum_{i \\in V_k^{b_r} \\setminus \\left\\{ j \\right\\} } t_i'\n   ```\n   \n   $$\n   t' \\left( V_k^{b_r} \\right) := \\sum_{i \\in V_k^{b_r} } t_i' = \\sum_{i \\in V_k^{b_r} \\setminus \\left\\{ j \\right\\} } t_i'\n   $$\n   \n2. 希腊字母、括号匹配、特殊符号、字母标记\n   \n   ```latex\n   \\delta_{b_1u}^{=b_rk} = \\frac{t \\left( V_k^{b_r} \\right) - t \\left( V_u^{b_1} \\right)}{\\left| \\tilde{V}_k^{b_r} \\oplus \\tilde{V}_u^{b_1} \\right|}\n   ```\n   \n   $$\n   \\delta_{b_1u}^{=b_rk} = \\frac{t \\left( V_k^{b_r} \\right) - t \\left( V_u^{b_1} \\right)}{\\left| \\widetilde{V}_k^{b_r} \\oplus \\widetilde{V}_u^{b_1} \\right|}\n   $$\n   \n3. 希腊字母、特殊符号、条件表达式、函数、正文字体\n   \n   ```latex\n   \\gamma \\left( b_r \\right) :=\n   \\begin{cases}\n   \\frac{1}{\\tilde{n} } \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\{ t \\left( V_k^{b_r} \\right) : {\\widetilde{V}_k^{b_r} } \\notin W \\left( b_r, t \\right) \\right\\} \\right], & \\text{if $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$ with $t \\left( V_k^{b_r} \\right) < c \\left( b_r, t \\right)$;} \\\\\n   \\min \\left\\{ t_i : i \\in \\widetilde{V} \\right\\}, & \\text{if $t \\left( V_k^{b_r} \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$.}\n   \\end{cases}\n   ```\n   \n   $$\n   \\gamma \\left( b_r \\right) :=\n   \\begin{cases}\n   \\frac{1}{\\tilde{n} } \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\{ t \\left( V_k^{b_r} \\right) : {\\widetilde{V}_k^{b_r} } \\notin W \\left( b_r, t \\right) \\right\\} \\right], & \\text{if $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$ with $t \\left( V_k^{b_r} \\right) < c \\left( b_r, t \\right)$;} \\\\\n   \\min \\left\\{ t_i : i \\in \\widetilde{V} \\right\\}, & \\text{if $t \\left( V_k^{b_r} \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$.}\n   \\end{cases}\n   $$\n\n## 14 小工具\n\n- 手画符号搜索LaTeX代码：http://detexify.kirelabs.org/classify.html\n- LaTeX在线编辑器：<http://www.codecogs.com/latex/eqneditor.php>\n\n","source":"_posts/latex-mathematical-formula-handbook.md","raw":"---\ntitle: LaTeX数学公式手册\ndate: 2021-08-11 20:07:35\ncategories: LaTeX\ntags:\n  - LaTeX\n  - Markdown\n  - 技术\n  - 技巧\n  - 数学\ncomments: true\nmathjax: true\n---\n\nLaTeX是一种基于TeX的排版系统。由于其对复杂的数学公式排版效果很好，所以常用于大型论文排版和数学公式输入。本文及本博客的文章均使用LaTeX输入数学公式。\n\n<!--more-->\n\n## 0 简单介绍\n\n**LaTeX**\n\n标准写法为$ L^AT_EX $​，读音为“拉泰赫”。它是一种基于TeX的排版系统，对于生成复杂表格和数学公式表现尤为突出，适用于论文写作、数学科研类PPT制作等。\n\n**MathJax**\n\n它是一个JavaScript引擎，用来显示网络上的数学公式。本博客的公式使用MathJax引擎渲染。本质上，Typora的公式也是用MathJax渲染的。\n\n**本文的公式显示环境**\n\n- Markdown\n- LaTeX\n- MathJax v3.0.0\n- hexo-renderer-kramed渲染器\n\n**注意**\n\n应特别注意Markdown渲染为HTML及其与LaTeX语法的冲突，这会影响文章效果。如应避免大括号重复出现，应加上空格。\n\n```latex\n}} % Bad\n} } % Good\n```\n\n## 1 公式插入\n\n公式分为行内公式和公式块，前者嵌入行内，后者单独成行。\n\n行内公式表示方法为：` $ 公式 $ `，公式块表示方法为：` $$ 公式 $$ `，公式中的空格会被忽略。公式块可通过`\\tag{n}`进行手动编号。\n\n**行内公式**\t\n\n```latex\n$ f(x) = a+b $\n```\n\n$ f(x) = a+b $​​​​​\n\n**公式块**\n\n注意Typora中建议写成以下形式，否则仍会显示为行内公式：\n\n```latex\n$$\nx+2 = 3*4\n$$\n```\n\n$$\nx+2 = 3*4\n$$\n\n除强调区分行内公式与公式块外，下文的公式示例均省略`$`符号。\n\n**手动编号**\n\n```latex\nx+2 = 3*4 \\tag{1.1}\n```\n\n$$\nx+2 = 3*4 \\tag{1.1}\n$$\n\n## 2 简单运算\n\n### 2.1 四则运算与基本括号\n\n拉丁字母、阿拉伯数字与`+-*/=`可以直接通过键盘输入。乘号可以用`\\times`表示，除号可以用`\\div`表示，点乘可以用`\\cdot`表示。\n\n```latex\na + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g\n```\n\n$$\na + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g\n$$\n\n小括号`()`、方括号`[]`表示其本身，花括号`{}`需要`\\`转义表示。\n\n```latex\n(1+2) \\quad [1+2] \\quad \\{1+2\\}\n```\n\n$$\n(1+2) \\quad [1+2] \\quad \\{1+2\\}\n$$\n\n由于LaTeX会忽略空格，因此用`\\quad`表示空格，见上例。\n\n### 2.2 基本上下标\n\n用`_`表示下标，用`^`表示上标，并只处理一个字符，多个字符用`{}`括起来。`'`表示求导，可使用多个。\n\n```latex\nx_1 + x_{1,2}^2 = y_0 + y' + y''\n```\n\n$$\nx_1 + x_{1,2}^2 = y_0 + y' + y''\n$$\n\n### 2.3 基本分式、根式\n\n用`\\frac{a}{b}`表示分式，用`\\sqrt`表示平方根，用`\\sqrt[n]`表示n次方根。\n\n```latex\n\\frac{x}{2} + \\sqrt x = \\sqrt[3] {x^2+y^2}\n```\n\n$$\n\\frac{x}{2} + \\sqrt x = \\sqrt[3] {x^2+y^2}\n$$\n\n## 3 符号、函数、特殊字符\n\n本章为符号、函数、特殊字符的输入方法，若关注语法可以直接跳过本章。\n\n### 3.1 声调/变音/标记符号\n\n```latex\n\\dot{a}, \\ddot{a}, \\dddot{a}, \\acute{a}, \\grave{a}\n```\n\n$ \\dot{a}, \\ddot{a}, \\dddot{a}, \\acute{a}, \\grave{a} $\n\n```latex\n\\check{a}, \\breve{a}, \\tilde{a}, \\widetilde{a}, \\bar{a}, \\mathring{a}\n```\n\n$ \\check{a}, \\breve{a}, \\tilde{a}, \\widetilde{a}, \\bar{a}, \\mathring{a} $\n\n```latex\n\\hat{a}, \\widehat{a}, \\vec{a}\n```\n\n$ \\hat{a}, \\widehat{a}, \\vec{a} $\n\n### 3.2 标准函数\n\n**指数**\n\n```latex\n\\exp_a b, \\exp b, x^2\n```\n\n$ \\exp_a b, \\exp b, x^2 $\n\n**对数**\n\n```latex\n\\log a, \\lg b, \\ln c, \\log_{2} d\n```\n\n$ \\log a, \\lg b, \\ln c, \\log_{2} d $\n\n**三角函数**\n\n```latex\n\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f\n```\n\n$ \\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f $\n\n**反三角函数**\n\n```latex\n\\arcsin a, \\arccos b, \\arctan c\n```\n\n$ \\arcsin a, \\arccos b, \\arctan c $​​\n\n注意`\\arccot, \\arcsec, \\arccsc`不被转义，需要用`\\operatorname`替代。\n\n**双曲函数**\n\n```latex\n\\sinh a, \\cosh b, \\tanh c, \\coth d\n```\n\n$ \\sinh a, \\cosh b, \\tanh c, \\coth d $​\n\n注意`\\sech, \\csch`不被转义，需要用`\\operatorname`替代。\n\n**绝对值**\n\n```latex\n\\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right|\n```\n\n$ \\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right| $\n\n**最大值，最小值**\n\n```latex\n\\max(x,y), \\min(x,y)\n```\n\n$ \\max(x,y), \\min(x,y) $​​\n\n**其他不能转义的标准函数**\n\n用`\\operatorname{function}`表示，如符号函数：\n\n```latex\n\\operatorname{sgn} x\n```\n\n$ \\operatorname{sgn} x $\n\n### 3.3 界限，极限\n\n```latex\n\\min x, \\max y, \\inf a, \\sup b\n```\n\n$ \\min x, \\max y, \\inf a, \\sup b $\n\n```latex\n\\lim x, \\liminf y, \\limsup z\n```\n\n$ \\lim x, \\liminf y, \\limsup z $\n\n```latex\n\\dim p, \\deg q, \\det m, \\ker\\phi\n```\n\n$ \\dim p, \\deg q, \\det m, \\ker\\phi $​\n\n更多极限见4.5节。\n\n### 3.4 投射\n\n```latex\n\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z\n```\n\n$ \\Pr j, \\hom l, \\lVert z \\rVert, \\arg z $\n\n### 3.5 微分，导数\n\n用`\\mathrm{x}`处理非斜体字符，如微分符号`d`。\n\n```latex\ndx, \\mathrm{d}x, \\partial t, \\nabla\\psi\n```\n\n$ dx, \\mathrm{d}x, \\partial t, \\nabla\\psi $​\n\n```latex\n\\mathrm{d}y/\\mathrm{d}x, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x \\partial y}z\n```\n\n$$\n\\mathrm{d}y/\\mathrm{d}x, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x \\partial y}z\n$$\n\n```latex\n', \\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y, \\dddot y\n```\n\n$ ', \\prime, \\backprime, f^\\prime, f', f'', f^{(3)}, \\dot y, \\ddot y, \\dddot y $\n\n### 3.6 字母符号与常数\n\n```latex\n\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar\n```\n\n$ \\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar $\n\n```latex\n\\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS\n```\n\n$ \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS $​​​​\n\n### 3.7 模运算\n\n```latex\n\\pmod{m}, a \\bmod b\n```\n\n$ \\pmod{m}, a \\bmod b $\n\n```latex\n\\gcd(m,n), \\operatorname{lcm}(m,n)\n```\n\n$ \\gcd(m,n), \\operatorname{lcm}(m,n) $​\n\n```latex\n\\mid, \\nmid, \\shortmid, \\nshortmid\n```\n\n$ \\mid, \\nmid, \\shortmid, \\nshortmid $\n\n### 3.8 根号\n\n```latex\n\\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{x^2+y^2}\n```\n\n$ \\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{x^2+y^2} $\n\n### 3.9 运算符\n\n```latex\n+, -, \\pm, \\mp, \\dotplus\n```\n\n$ +, -, \\pm, \\mp, \\dotplus $\n\n```latex\n*, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash\n```\n\n$ *, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash $\n\n```latex\n\\star, \\circ, \\bullet\n```\n\n$ \\star, \\circ, \\bullet $\n\n```latex\n\\boxplus, \\boxminus, \\boxtimes, \\boxdot\n```\n\n$ \\boxplus, \\boxminus, \\boxtimes, \\boxdot $\n\n```latex\n\\oplus, \\ominus, \\otimes, \\oslash, \\odot\n```\n\n$ \\oplus, \\ominus, \\otimes, \\oslash, \\odot $\n\n```latex\n\\circleddash, \\circledcirc, \\circledast\n```\n\n$ \\circleddash, \\circledcirc, \\circledast $​\n\n```latex\n\\bigoplus, \\bigotimes, \\bigodot\n```\n\n$ \\bigoplus, \\bigotimes, \\bigodot $\n\n### 3.10 集合\n\n```latex\n\\{, \\}, \\emptyset, \\varnothing\n```\n\n$ \\{, \\}, \\emptyset, \\varnothing $​\n\n注意本环境下不支持用`\\O, \\empty`表示空集，需要用`\\emptyset`替代。​\n\n```latex\n\\in, \\notin, \\not\\in, \\ni, \\not\\ni\n```\n\n$ \\in, \\notin, \\not\\in, \\ni, \\not\\ni $​​\n\n```latex\n\\cap, \\Cap, \\sqcap, \\bigcap\n```\n\n$ \\cap, \\Cap, \\sqcap, \\bigcap $​\n\n```latex\n\\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus\n```\n\n$ \\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus $\n\n```latex\n\\setminus, \\smallsetminus\n```\n\n$ \\setminus, \\smallsetminus $\n\n```latex\n\\subset, \\Subset, \\sqsubset\n```\n\n$ \\subset, \\Subset, \\sqsubset $\n\n```latex\n\\supset, \\Supset, \\sqsupset\n```\n\n$ \\supset, \\Supset, \\sqsupset $\n\n```latex\n\\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq\n```\n\n$ \\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq $\n\n```latex\n\\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq\n```\n\n$ \\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq $\n\n```latex\n\\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq\n```\n\n$ \\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq $\n\n```latex\n\\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq\n```\n\n$ \\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq $\n\n### 3.11 关系符号\n\n```latex\n=, \\ne, \\neq, \\equiv, \\not\\equiv\n```\n\n$ =, \\ne, \\neq, \\equiv, \\not\\equiv $\n\n```latex\n\\doteq, \\doteqdot, :=, \\overset{\\underset{\\mathrm{def} } {} } {=}\n```\n\n$ \\doteq, \\doteqdot, :=, \\overset{\\underset{\\mathrm{def} } {} } {=} $\n\n```latex\n\\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong\n```\n\n$ \\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong $\n\n```latex\n\\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto\n```\n\n$ \\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto $\n\n```latex\n<, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot\n```\n\n$ <, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot $\n\n```latex\n>, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot\n```\n\n$ >, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot $\n\n```latex\n\\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq\n```\n\n$ \\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq $\n\n```latex\n\\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq\n```\n\n$ \\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq $\n\n```latex\n\\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless\n```\n\n$ \\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless $\n\n```latex\n\\leqslant, \\nleqslant, \\eqslantless\n```\n\n$ \\leqslant, \\nleqslant, \\eqslantless $\n\n```latex\n\\geqslant, \\ngeqslant, \\eqslantgtr\n```\n\n$ \\geqslant, \\ngeqslant, \\eqslantgtr $\n\n```latex\n\\lesssim, \\lnsim, \\lessapprox, \\lnapprox\n```\n\n$ \\lesssim, \\lnsim, \\lessapprox, \\lnapprox $\n\n```latex\n\\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox\n```\n\n$ \\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox $\n\n```latex\n\\prec, \\nprec, \\preceq, \\npreceq, \\precneqq\n```\n\n$ \\prec, \\nprec, \\preceq, \\npreceq, \\precneqq $​\n\n```latex\n\\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq\n```\n\n$ \\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq $\n\n```latex\n\\preccurlyeq, \\curlyeqprec\n```\n\n$ \\preccurlyeq, \\curlyeqprec $\n\n```latex\n\\succcurlyeq, \\curlyeqsucc\n```\n\n$ \\succcurlyeq, \\curlyeqsucc $\n\n```latex\n\\precsim, \\precnsim, \\precapprox, \\precnapprox\n```\n\n$ \\precsim, \\precnsim, \\precapprox, \\precnapprox $\n\n```latex\n\\succsim, \\succnsim, \\succapprox, \\succnapprox\n```\n\n$ \\succsim, \\succnsim, \\succapprox, \\succnapprox $\n\n### 3.12 几何符号\n\n```latex\n\\parallel, \\nparallel, \\shortparallel, \\nshortparallel\n```\n\n$ \\parallel, \\nparallel, \\shortparallel, \\nshortparallel $\n\n```latex\n\\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ\n```\n\n$ \\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ $\n\n```latex\n\\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc\n```\n\n$ \\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc $​\n\n```latex\n\\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle\n```\n\n$ \\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle $​\n\n```latex\n\\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright\n```\n\n$ \\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright $\n\n### 3.13 逻辑符号\n\n```latex\n\\forall, \\not\\forall, \\exists, \\nexists\n```\n\n$ \\forall, \\not\\forall, \\exists, \\nexists $​\n\n```latex\n\\because, \\therefore, \\And\n```\n\n$ \\because, \\therefore, \\And $\n\n```latex\n\\lor, \\vee, \\curlyvee, \\bigvee\n```\n\n$ \\lor, \\vee, \\curlyvee, \\bigvee $​\n\n```latex\n\\land, \\wedge, \\curlywedge, \\bigwedge\n```\n\n$ \\land, \\wedge, \\curlywedge, \\bigwedge $\n\n注意本环境下不支持用`\\or, \\and`表示或、且，需要用`\\lor, \\land`替代。\n\n```latex\n\\bar{x}, \\bar{abc}, \\overline{x}, \\overline{abc}\n```\n\n$ \\bar{x}, \\bar{abc}, \\overline{x}, \\overline{abc} $\n\n```latex\n\\lnot, \\neg, \\not\\operatorname{R}, \\bot, \\top\n```\n\n$ \\lnot, \\neg, \\not\\operatorname{R}, \\bot, \\top $\n\n```latex\n\\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models\n```\n\n$ \\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models $​​\n\n```latex\n\\nvdash, \\nVdash, \\nvDash, \\nVDash\n```\n\n$ \\nvdash, \\nVdash, \\nvDash, \\nVDash $\n\n```latex\n\\ulcorner, \\urcorner, \\llcorner, \\lrcorner\n```\n\n$ \\ulcorner, \\urcorner, \\llcorner, \\lrcorner $\n\n### 3.14 箭头\n\n```latex\n\\to, \\rightarrow, \\nrightarrow, \\longrightarrow\n```\n\n$ \\to, \\rightarrow, \\nrightarrow, \\longrightarrow $\n\n```latex\n\\gets, \\leftarrow, \\nleftarrow, \\longleftarrow\n```\n\n$ \\gets, \\leftarrow, \\nleftarrow, \\longleftarrow $\n\n```latex\n\\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow\n```\n\n$ \\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow $\n\n```latex\n\\uparrow, \\downarrow, \\updownarrow\n```\n\n$ \\uparrow, \\downarrow, \\updownarrow $\n\n```latex\n\\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies\n```\n\n$ \\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies $\n\n```latex\n\\Leftarrow, \\nLeftarrow, \\Longleftarrow\n```\n\n$ \\Leftarrow, \\nLeftarrow, \\Longleftarrow $\n\n```latex\n\\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff\n```\n\n$ \\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff $\n\n```latex\n\\Uparrow, \\Downarrow, \\Updownarrow\n```\n\n$ \\Uparrow, \\Downarrow, \\Updownarrow $\n\n```latex\n\\Rrightarrow, \\Lleftarrow\n```\n\n$ \\Rrightarrow, \\Lleftarrow $\n\n```latex\n\\nearrow, \\swarrow, \\nwarrow, \\searrow\n```\n\n$ \\nearrow, \\swarrow, \\nwarrow, \\searrow $\n\n```latex\n\\mapsto, \\longmapsto\n```\n\n$ \\mapsto, \\longmapsto $\n\n```latex\n\\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons\n```\n\n$ \\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons $\n\n```latex\n\\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright\n```\n\n$ \\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright $\n\n```latex\n\\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft\n```\n\n$ \\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft $\n\n```latex\n\\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow\n```\n\n$ \\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow $\n\n### 3.15 省略号\n\n用`\\cdots`表示居中的三个点，`\\ldots`表示居底线的三个点，`\\vdots`和`\\ddots`分别表示垂直和对角线。\n\n```latex\n\\cdots, \\ldots, \\vdots, \\ddots\n```\n\n$ \\cdots, \\ldots, \\vdots, \\ddots $\n\n### 3.16 其他\n\n```latex\n\\amalg, \\%, \\&, \\dagger, \\ddagger\n```\n\n$ \\amalg, \\%, \\&, \\dagger, \\ddagger $​​​\n\n```latex\n\\smile, \\frown, \\wr, \\triangleleft, \\triangleright\n```\n\n$ \\smile, \\frown, \\wr, \\triangleleft, \\triangleright $\n\n```latex\n\\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp\n```\n\n$ \\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp $\n\n```latex\n\\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes\n```\n\n$ \\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes $\n\n```latex\n\\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq\n```\n\n$ \\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq $\n\n```latex\n\\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork\n```\n\n$ \\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork $\n\n```latex\n\\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright\n```\n\n$ \\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright $\n\n```latex\n\\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq\n```\n\n$ \\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq $\n\n## 4 常用数学语法\n\n### 4.1 上下标\n\n用`_`表示下标，用`^`表示上标，并只处理一个字符，多个字符用`{}`括起来。上下标可嵌套或同时使用。\n\n```latex\na^2, a_2, a^{2+2}, a_{i,j}, x_2^3\n```\n\n$ a^2, a_2, a^{2+2}, a_{i,j}, x_2^3 $\n\n前置上下标可以用空花括号`{}`承载，也可以使用`\\sideset`命令。\n\n```latex\n{}_1^2X_3^4 \\quad \\sideset{_1^2}{_3^4} \\bigotimes\n```\n\n$ {}_1^2X_3^4 \\quad \\sideset{_1^2}{_3^4} \\bigotimes $\n\n### 4.2 导数\n\n撇导数用`'`或上标的`\\prime`表示，注意不要漏掉上标。\n\n```latex\nx', x'', x^\\prime\n```\n\n$ x', x'', x^\\prime $\n\n```latex\nx\\prime % Bad\n```\n\n$ x\\prime % Bad $​\n\n点导数用`\\dot`、`\\ddot`和`\\dddot`表示。\n\n```latex\n\\dot{y}, \\ddot{y}, \\dddot{y}\n```\n\n$ \\dot{y}, \\ddot{y}, \\dddot{y} $\n\n### 4.3 向量\n\n用`\\vec`、`\\boldsymbol`、`\\over--arrow`或`\\widehat`表示。\n\n```latex\n\\vec{a}, \\boldsymbol{b}, \\overleftarrow{ab}, \\overrightarrow{cd}, \\overleftrightarrow{ab}, \\widehat{abc}\n```\n\n$ \\vec{a}, \\boldsymbol{b}, \\overleftarrow{ab}, \\overrightarrow{cd}, \\overleftrightarrow{ab}, \\widehat{abc} $​​\n\n### 4.4 上下线\n\n**上弧、上划线、下划线**\n\n```latex\n\\overset{\\frown} {AB}, \\overline {abc}, \\underline{def}\n```\n\n$ \\overset{\\frown} {AB}, \\overline {abc}, \\underline{def} $\n\n**上括号**\n\n```latex\n\\overbrace{1+2+\\cdots+n} \\quad \\overbrace{1+2+\\cdots+n}^{n}\n```\n\n$ \\overbrace{1+2+\\cdots+n} \\quad \\overbrace{1+2+\\cdots+n}^{n} $\n\n可以写成矩阵形式，使得上面的字符变大：\n\n```latex\n\\begin{matrix} n \\\\ \\overbrace{1+2+\\cdots+n} \\end{matrix}\n```\n\n$ \\begin{matrix} n \\\\ \\overbrace{1+2+\\cdots+n} \\end{matrix} $\n\n**下括号**\n\n```latex\n\\underbrace{a+b+\\cdots+z} \\quad \\underbrace{a+b+\\cdots+z}_{26}\n```\n\n$ \\underbrace{a+b+\\cdots+z} \\quad \\underbrace{a+b+\\cdots+z}_{26} $\n\n```latex\n\\begin{matrix} \\underbrace{a+b+\\cdots+z} \\\\ 26 \\end{matrix}\n```\n\n$ \\begin{matrix} \\underbrace{a+b+\\cdots+z} \\\\ 26 \\end{matrix} $\n\n### 4.5 大型运算符（求和求积、极限、积分等）\n\n**注意**\n\n大型运算符通常含有上下部分，LaTeX用上下标表示。其中行内公式位于右上右下，公式块位于正上正下（积分除外）。\n\n```latex\n$ \\sum_{i=1}^{n} i^2 $\n$$\n\\sum_{i=1}^{n} i^2\n$$\n```\n\n$ \\sum_{i=1}^{n} i^2 $\n$$\n\\sum_{i=1}^{n} i^2\n$$\n若要在行内公式显示为正上正下，可以使用`\\limits`命令跟在运算符后：\n\n```latex\n$ \\sum\\limits_{i=1}^{n} i^2 $\n```\n\n$ \\sum\\limits_{i=1}^{n} i^2 $\n\n若要在公式块显示为右上右下，可以使用一阶无框矩阵形式或使用`\\nolimits`命令：\n\n```latex\n$$\n\\begin{matrix} \\sum_{i=1}^{n} i^2 \\end{matrix}\n$$\n```\n\n$$\n\\begin{matrix} \\sum_{i=1}^{n} i^2 \\end{matrix}\n$$\n\n```latex\n$$\n\\sum\\nolimits_{i=1}^{n} i^2\n$$\n```\n\n$$\n\\sum\\nolimits_{i=1}^{n} i^2\n$$\n\n下文的显示形式均为公式块。\n\n**求和（累加）、求积（累乘）**\n\n```latex\n\\sum_{i=1}^{n} i^2 \\quad \\prod_{i=1}^{n} x_i\n```\n\n$$\n\\sum_{i=1}^{n} i^2 \\quad \\prod_{i=1}^{n} x_i\n$$\n\n**极限**\n\n```latex\n\\lim_{x \\to \\infty} (1+\\frac{1}{x})^x = e\n```\n\n$$\n\\lim_{x \\to \\infty} (1+\\frac{1}{x})^x = e\n$$\n\n**普通积分**\n\n```latex\n\\int_{a}^{b} e^x \\, \\mathrm{d}x\n```\n\n$$\n\\int_{a}^{b} e^x \\, \\mathrm{d}x\n$$\n\n`\\,`可省略，但建议加入使式子更美观；`\\mathrm{d}`可替换为`{\\rm d}`。\n\n**二重积分、三重积分**\n\n```latex\n\\iint_{D} f(x,y) \\, \\mathrm{d}\\sigma \\quad \\iiint_{\\Omega} f(x,y,z) \\, \\mathrm{d}V\n```\n\n$$\n\\iint_{D} f(x,y) \\, \\mathrm{d}\\sigma \\quad \\iiint_{\\Omega} f(x,y,z) \\, \\mathrm{d}V\n$$\n\n**闭合曲线积分**\n\n```latex\n\\oint_{L} f(x,y) \\, \\mathrm{d}s\n```\n\n$$\n\\oint_{L} f(x,y) \\, \\mathrm{d}s\n$$\n\n**其他积分符号**\n\n```latex\n\\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint\n```\n\n$ \\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint $​​\n\n注意本环境下不支持用`\\oiint, \\oiiint`表示二重闭合积分、三重闭合积分。\n\n**交集、并集、余积**\n\n```latex\n\\bigcap_{i=1}^{n} A_i \\quad \\bigcup_{j=1}^{m} B_j\n```\n\n$$\n\\bigcap_{i=1}^{n} A_i \\quad \\bigcup_{j=1}^{m} B_j\n$$\n\n```latex\n\\coprod_{i \\in I} A_i\n```\n\n$$\n\\coprod_{i \\in I} A_i\n$$\n\n## 5 分式\n\n### 5.1 基本输入\n\n分式可以通过`\\over`命令，两侧标记分子分母，且整体需要用花括号括起来。\n\n```latex\nx = { {-b \\pm \\sqrt{b^2-4ac} } \\over {2a} }\n```\n\n$$\nx = { {-b \\pm \\sqrt{b^2-4ac} } \\over {2a} }\n$$\n常用的分式用`\\frac{分子}{分母}`命令，便捷时使用`\\frac ab`快速生成$ \\frac ab $​。\n\n```latex\n\\frac{-b \\pm \\sqrt{b^2-4ac} }{2a} \\quad \\frac ab\n```\n\n$$\n\\frac{-b \\pm \\sqrt{b^2-4ac} }{2a} \\quad \\frac ab\n$$\n### 5.2 分式排版\n\n普通分式在行内公式会自动缩小，在公式块会显示为完整大小。\n\n```latex\n$ \\frac{1}{2}=0.5 $\n$$\n\\frac{1}{2}=0.5\n$$\n```\n\n$ \\frac{1}{2}=0.5 $​\n$$\n\\frac{1}{2}=0.5\n$$\n`\\tfrac`命令用于使分式显示为*行内公式样式*。\n\n```latex\n$$\n\\tfrac{1}{2}=0.5\n$$\n```\n\n$$\n\\tfrac{1}{2}=0.5\n$$\n\n`\\dfrac`命令用于使分式显示为*公式块样式*。\n\n```latex\n$ \\dfrac{1}{2}=0.5 $\n```\n\n$ \\dfrac{1}{2}=0.5 $​\n\n**注意**\n\n在指数函数、极限、积分等场景下，尽量不使用`\\frac`命令，而使用`/`表示为横式分式。\n\n```latex\n$$\ne^{\\frac{i\\pi}{2} } \\quad \\int_{-\\frac{\\pi}{2} }^{\\frac{\\pi}{2} } \\sin x \\, \\mathrm{d}x\n% Bad\n$$\n```\n\n$$\ne^{\\frac{i\\pi}{2} } \\quad \\int_{-\\frac{\\pi}{2} }^{\\frac{\\pi}{2} } \\sin x \\, \\mathrm{d}x\n% Bad\n$$\n```latex\n$$\ne^{i\\pi/2} \\quad \\int_{-\\pi/2}^{\\pi/2} \\sin x \\, \\mathrm{d}x\n% Good\n$$\n```\n\n$$\ne^{i\\pi/2} \\quad \\int_{-\\pi/2}^{\\pi/2} \\sin x \\, \\mathrm{d}x\n% Good\n$$\n\n### 5.3 连分式\n\n用`\\cfrac`命令输入连分式，会自动处理分子分母的高度。\n\n```latex\n$$\n\\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cdots} } }\n$$\n```\n\n$$\n\\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cdots} } }\n$$\n###  5.4 二项式系数\n\n用`\\binom`命令输入，`\\tbinom`使二项式系数显示为行内公式样式，`\\dbinom`使二项式系数显示为公式块样式。\n\n```latex\n$$\n\\mathrm{C}_n^r = \\binom{n}{r}\n$$\n```\n\n$$\n\\mathrm{C}_n^r = \\binom{n}{r}\n$$\n\n```latex\n$$\n\\tbinom{n}{r} = \\tbinom{n}{n-r}\n$$\n```\n\n$$\n\\tbinom{n}{r} = \\tbinom{n}{n-r}\n$$\n\n```latex\n$ \\dbinom{n}{r} = \\dfrac{n!}{k!\\,(n-k)!} $\n```\n\n$ \\dbinom{n}{r} = \\dfrac{n!}{k!\\,(n-k)!} $​\n\n## 6 矩阵、条件表达式、方程组\n\n语法为：\n\n```latex\n\\begin{类型}\n内容\n\\end{类型}\n```\n\n类型可以是：矩阵`matrix`、`pmatrix`、`bmatrix`、`Bmatrix`、`vmatrix`、`Vmatrix`，条件表达式`cases`，多行对齐方程式`aligned`、`alignedat`。\n\n内容中，`&`符号表示每行的对齐内容，`\\\\`表示结尾处换行。\n\n### 6.1 无框矩阵\n\n用`&`分隔矩阵列，用`\\\\`分隔矩阵行。\n\n```latex\n\\begin{matrix}\na & b \\\\\nc & d\n\\end{matrix}\n```\n\n$$\n\\begin{matrix}\na & b \\\\\nc & d\n\\end{matrix}\n$$\n\n### 6.2 有框矩阵\n\n`pmatrix`为圆括号，`bmatrix`为方括号，`Bmatrix`为花括号，`vmatrix`为竖线（行列式），`Vmatrix`为双竖线。\n\n使用`\\cdots`$\\cdots$、`\\ddots`$\\ddots$、`\\vdots`$\\vdots$输入省略号。\n\n```latex\n\\begin{pmatrix}\n0 & \\cdots & 0 \\\\\n\\vdots & \\ddots & \\vdots \\\\\n0 & \\cdots & 0 \\\\\n\\end{pmatrix}\n```\n\n$$\n\\begin{pmatrix}\n0 & \\cdots & 0 \\\\\n\\vdots & \\ddots & \\vdots \\\\\n0 & \\cdots & 0 \\\\\n\\end{pmatrix}\n$$\n\n```latex\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\quad\n\\begin{Bmatrix}\na & b \\\\\nc & d\n\\end{Bmatrix}\n\\quad\n\\begin{vmatrix}\na & b \\\\\nc & d\n\\end{vmatrix}\n\\quad\n\\begin{Vmatrix}\na & b \\\\\nc & d\n\\end{Vmatrix}\n```\n\n$$\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\quad\n\\begin{Bmatrix}\na & b \\\\\nc & d\n\\end{Bmatrix}\n\\quad\n\\begin{vmatrix}\na & b \\\\\nc & d\n\\end{vmatrix}\n\\quad\n\\begin{Vmatrix}\na & b \\\\\nc & d\n\\end{Vmatrix}\n$$\n\n### 6.3 条件表达式\n\n用`&`分隔公式与条件。\n\n```latex\nf(n)=\n\\begin{cases}\nn/2, & \\text{if } n \\text{ is even} \\\\\n3n+1, & \\text{if } n \\text{ is odd}\n\\end{cases}\n```\n\n$$\nf(n)=\n\\begin{cases}\nn/2, & \\text{if } n \\text{ is even} \\\\\n3n+1, & \\text{if } n \\text{ is odd}\n\\end{cases}\n$$\n\n`\\text`表示字符为文本格式，而非数学格式，注意空格处理。\n\n### 6.4 多行等式、同余式\n\n```latex\n\\begin{aligned}\nf(x) & = (m+n)^2 \\\\\n& = m^2+2mn+n^2 \\\\\n\\end{aligned}\n```\n\n$$\n\\begin{aligned}\nf(x) & = (m+n)^2 \\\\\n& = m^2+2mn+n^2 \\\\\n\\end{aligned}\n$$\n\n```latex\n\\begin{aligned}\n3^{6n+3}+4^{6n+3}\n& \\equiv (3^3)^{2n+1}+(4^3)^{2n+1} \\\\\n& \\equiv 27^{2n+1}+64^{2n+1} \\\\\n& \\equiv 27^{2n+1}+(-27)^{2n+1} \\\\\n& \\equiv 27^{2n+1}-27^{2n+1} \\\\\n& \\equiv 0 \\pmod{91} \\\\\n\\end{aligned}\n```\n\n$$\n\\begin{aligned}\n3^{6n+3}+4^{6n+3}\n& \\equiv (3^3)^{2n+1}+(4^3)^{2n+1} \\\\\n& \\equiv 27^{2n+1}+64^{2n+1} \\\\\n& \\equiv 27^{2n+1}+(-27)^{2n+1} \\\\\n& \\equiv 27^{2n+1}-27^{2n+1} \\\\\n& \\equiv 0 \\pmod{91} \\\\\n\\end{aligned}\n$$\n\n`\\alignedat`用于确定行数的对齐。\n\n```latex\n\\begin{alignedat}{3}\nf(x) & = (m+n)^2 \\\\\ng(x) & = (m-n)^2 \\\\\n& = m^2-2mn+n^2 \\\\\n\\end{alignedat}\n```\n\n$$\n\\begin{alignedat}{3}\nf(x) & = (m+n)^2 \\\\\ng(x) & = (m-n)^2 \\\\\n& = m^2-2mn+n^2 \\\\\n\\end{alignedat}\n$$\n\n### 6.5 方程组\n\n**用`cases`表达**\n\n```latex\n\\begin{cases}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{cases}\n```\n\n$$\n\\begin{cases}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{cases}\n$$\n\n**用`aligned`表达**\n\n```latex\n\\left\\{ \\begin{aligned}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{aligned} \\right.\n```\n\n$$\n\\left\\{ \\begin{aligned}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{aligned} \\right.\n$$\n\n## 7 数组与表格\n\n### 7.1 基本数组与表格\n\n数组和表格以`\\begin{array}{定义式}`开头，以`\\end{array}`结尾。定义式中定义每列对齐方式，可用`l`、`c`、`r`分别代表居左、居中、居右。若插入水平分割线，在行内容间插入`\\hline`；若插入垂直分割线，在定义式中插入`|`。表格内容用`&`分隔列，用`\\\\`分隔行。\n\n```latex\n\\begin{array}{c|lcr}\nx & 1\\text{(left)} & 2\\text{(center)} & 3\\text{(right)} \\\\\n\\hline\nf(x) & 0 & 10 & 55.5 \\\\\ng(x) & -1 & 100 & 9 \\\\\nh(x) & 2i & 1000 & 1+10i\n\\end{array}\n```\n\n$$\n\\begin{array}{c|lcr}\nx & 1\\text{(left)} & 2\\text{(center)} & 3\\text{(right)} \\\\\n\\hline\nf(x) & 0 & 10 & 55.5 \\\\\ng(x) & -1 & 100 & 9 \\\\\nh(x) & 2i & 1000 & 1+10i\n\\end{array}\n$$\n\n### 7.2 用数组与表格排版\n\n可以用数组与表格实现类似`aligned`的功能。\n\n```latex\n\\begin{array}{lcr}\nz & = & a \\\\\nf(x,y,z) & = & x+y+z\n\\end{array}\n```\n\n$$\n\\begin{array}{lcr}\nz & = & a \\\\\nf(x,y,z) & = & x+y+z\n\\end{array}\n$$\n\n```latex\n\\begin{array}{cccc}\nx & y & x \\lor y & x \\land y \\\\\n\\hline\n0 & 0 & 0 & 0 \\\\\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1\n\\end{array}\n```\n\n$$\n\\begin{array}{cccc}\nx & y & x \\lor y & x \\land y \\\\\n\\hline\n0 & 0 & 0 & 0 \\\\\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1\n\\end{array}\n$$\n\n### 7.3 嵌套数组与表格\n\n```latex\n% outer\n\\begin{array}{c}\n\t% inner row 1\n\t\\begin{array}{cc}\n\t\t% inner row 1 column 1\n\t\t\\begin{array}{c|cccc}\n\t\t\\min & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 0 & 0 & 0 \\\\\n\t\t1 & 0 & 1 & 1 & 1 \\\\\n\t\t2 & 0 & 1 & 2 & 2 \\\\\n\t\t3 & 0 & 1 & 2 & 3\n\t\t\\end{array}\n\t&\n\t\t% inner row 1 column 2\n\t\t\\begin{array}{c|cccc}\n\t\t\\max & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 1 & 2 & 3 \\\\\n\t\t1 & 1 & 1 & 2 & 3 \\\\\n\t\t2 & 2 & 2 & 2 & 3 \\\\\n\t\t3 & 3 & 3 & 3 & 3\n\t\t\\end{array}\n\t\\end{array}\n\\\\\n\t% inner row 2\n\t\\begin{array}{c|cccc}\n\t\\Delta & 0 & 1 & 2 & 3 \\\\\n\t\\hline\n\t0 & 0 & 1 & 2 & 3 \\\\\n\t1 & 1 & 0 & 1 & 2 \\\\\n\t2 & 2 & 1 & 0 & 1 \\\\\n\t3 & 3 & 2 & 1 & 0\n\t\\end{array}\n\\end{array}\n```\n\n$$\n% outer\n\\begin{array}{c}\n\t% inner row 1\n\t\\begin{array}{cc}\n\t\t% inner row 1 column 1\n\t\t\\begin{array}{c|cccc}\n\t\t\\min & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 0 & 0 & 0 \\\\\n\t\t1 & 0 & 1 & 1 & 1 \\\\\n\t\t2 & 0 & 1 & 2 & 2 \\\\\n\t\t3 & 0 & 1 & 2 & 3\n\t\t\\end{array}\n\t&\n\t\t% inner row 1 column 2\n\t\t\\begin{array}{c|cccc}\n\t\t\\max & 0 & 1 & 2 & 3 \\\\\n\t\t\\hline\n\t\t0 & 0 & 1 & 2 & 3 \\\\\n\t\t1 & 1 & 1 & 2 & 3 \\\\\n\t\t2 & 2 & 2 & 2 & 3 \\\\\n\t\t3 & 3 & 3 & 3 & 3\n\t\t\\end{array}\n\t\\end{array}\n\\\\\n\t% inner row 2\n\t\\begin{array}{c|cccc}\n\t\\Delta & 0 & 1 & 2 & 3 \\\\\n\t\\hline\n\t0 & 0 & 1 & 2 & 3 \\\\\n\t1 & 1 & 0 & 1 & 2 \\\\\n\t2 & 2 & 1 & 0 & 1 \\\\\n\t3 & 3 & 2 & 1 & 0\n\t\\end{array}\n\\end{array}\n$$\n\n### 7.4 分割矩阵\n\n在需要分割处的定义式加入`|`。\n\n```latex\n\\left[\n\\begin{array}{cc|c}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\n\\right]\n```\n\n$$\n\\left[\n\\begin{array}{cc|c}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\n\\right]\n$$\n\n## 8 字体\n\n普通字符可以通过`\\large`、`\\small`控制大小。\n\n```latex\nA, \\large{A}, \\small{A}\n```\n\n$ A, \\large{A}, \\small{A} $\n\n### 8.1 希腊字母\n\n输入`\\`加其字母名称即可，大写字母将名称首字母大写。注意本环境下部分大写希腊字母不支持转义，需要用相似的*拉丁字母*替代。\n\n```latex\n\\begin{array}{c|l|c|l}\nA \\alpha & \\verb|A \\alpha| & N \\nu & \\verb|N \\nu| \\\\\n\\hline\nB \\beta & \\verb|B \\beta| & \\Xi \\xi & \\verb|\\Xi \\xi| \\\\\n\\hline\n\\Gamma \\gamma & \\verb|\\Gamma \\gamma| & O \\omicron & \\verb|O \\omicron| \\\\\n\\hline\n\\Delta \\delta & \\verb|\\Delta \\delta| & \\Pi \\pi & \\verb|\\Pi \\pi| \\\\\n\\hline\nE \\epsilon & \\verb|E \\epsilon| & P \\rho & \\verb|P \\rho| \\\\\n\\hline\nZ \\zeta & \\verb|Z \\zeta| & \\Sigma \\sigma & \\verb|\\Sigma \\sigma| \\\\\n\\hline\nH \\eta & \\verb|H \\eta| & T \\tau & \\verb|T \\tau| \\\\\n\\hline\n\\Theta \\theta & \\verb|\\Theta \\theta| & \\Upsilon \\upsilon & \\verb|\\Upsilon \\upsilon| \\\\\n\\hline\nI \\iota & \\verb|I \\iota| & \\Phi \\phi & \\verb|\\Phi \\phi| \\\\\n\\hline\nK \\kappa & \\verb|K \\kappa| & X \\chi & \\verb|X \\chi| \\\\\n\\hline\n\\Lambda \\lambda & \\verb|\\Lambda \\lambda| & \\Psi \\psi & \\verb|\\Psi \\psi| \\\\\n\\hline\nM \\mu & \\verb|M \\mu| & \\Omega \\omega & \\verb|\\Omega \\omega| \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|l|c|l}\nA \\alpha & \\verb|A \\alpha| & N \\nu & \\verb|N \\nu| \\\\\n\\hline\nB \\beta & \\verb|B \\beta| & \\Xi \\xi & \\verb|\\Xi \\xi| \\\\\n\\hline\n\\Gamma \\gamma & \\verb|\\Gamma \\gamma| & O \\omicron & \\verb|O \\omicron| \\\\\n\\hline\n\\Delta \\delta & \\verb|\\Delta \\delta| & \\Pi \\pi & \\verb|\\Pi \\pi| \\\\\n\\hline\nE \\epsilon & \\verb|E \\epsilon| & P \\rho & \\verb|P \\rho| \\\\\n\\hline\nZ \\zeta & \\verb|Z \\zeta| & \\Sigma \\sigma & \\verb|\\Sigma \\sigma| \\\\\n\\hline\nH \\eta & \\verb|H \\eta| & T \\tau & \\verb|T \\tau| \\\\\n\\hline\n\\Theta \\theta & \\verb|\\Theta \\theta| & \\Upsilon \\upsilon & \\verb|\\Upsilon \\upsilon| \\\\\n\\hline\nI \\iota & \\verb|I \\iota| & \\Phi \\phi & \\verb|\\Phi \\phi| \\\\\n\\hline\nK \\kappa & \\verb|K \\kappa| & X \\chi & \\verb|X \\chi| \\\\\n\\hline\n\\Lambda \\lambda & \\verb|\\Lambda \\lambda| & \\Psi \\psi & \\verb|\\Psi \\psi| \\\\\n\\hline\nM \\mu & \\verb|M \\mu| & \\Omega \\omega & \\verb|\\Omega \\omega| \\\\\n\\end{array}\n$$\n\n伽玛函数可以用`digamma`表示，另外部分变量形式可以用`\\var-`开头。\n\n```latex\n\\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi\n```\n\n$ \\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi $\n\n### 8.2 希伯来符号\n\n```latex\n\\aleph, \\beth, \\gimel, \\daleth\n```\n\n$ \\aleph, \\beth, \\gimel, \\daleth $\n\n### 8.3 特殊字体形式\n\n#### 8.3.1 黑板报粗体\n\n用`\\mathbb{text}`或`\\Bbb{text}`表示。\n\n```latex\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbb} & \\mathbb{SAMPLE} & \\mathbb{sample} & \\mathbb{0123} \\\\\n\\hline\n\\text{Bbb} & \\Bbb{SAMPLE} & \\Bbb{sample} & \\Bbb{0123}\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbb} & \\mathbb{SAMPLE} & \\mathbb{sample} & \\mathbb{0123} \\\\\n\\hline\n\\text{Bbb} & \\Bbb{SAMPLE} & \\Bbb{sample} & \\Bbb{0123}\n\\end{array}\n$$\n\n#### 8.3.2 粗体\n\n用`\\mathbf{text}`或`{\\bf text}`表示，注意控制范围，对特殊符号无效。\n\n```latex\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbf} & \\mathbf{SAMPLE} & \\mathbf{sample} & \\mathbf{0123} \\\\\n\\hline\n\\text{bf} & {\\bf SAMPLE} & {\\bf sample} & {\\bf 0123}\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbf} & \\mathbf{SAMPLE} & \\mathbf{sample} & \\mathbf{0123} \\\\\n\\hline\n\\text{bf} & {\\bf SAMPLE} & {\\bf sample} & {\\bf 0123}\n\\end{array}\n$$\n\n#### 8.3.3 粗体符号\n\n用`\\boldsymbol{text}`表示，对特殊符号有效。\n\n```latex\n\\begin{array}{c|cccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega & \\sin\\in\\to \\\\\n\\hline\n\\text{blodsymbol} & \\boldsymbol{SAMPLE} & \\boldsymbol{sample} & \\boldsymbol{0123} & \\boldsymbol{\\delta\\theta\\sigma\\omega} & \\boldsymbol{\\Delta\\Theta\\Sigma\\Omega} & \\boldsymbol{\\sin\\in\\to} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|cccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega & \\sin\\in\\to \\\\\n\\hline\n\\text{blodsymbol} & \\boldsymbol{SAMPLE} & \\boldsymbol{sample} & \\boldsymbol{0123} & \\boldsymbol{\\delta\\theta\\sigma\\omega} & \\boldsymbol{\\Delta\\Theta\\Sigma\\Omega} & \\boldsymbol{\\sin\\in\\to} \\\\\n\\end{array}\n$$\n\n#### 8.3.4 斜体（意大利体）\n\n用`\\mathit{text}`或`{\\it text}`或`{\\mit text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathit} & \\mathit{SAMPLE} & \\mathit{sample} & \\mathit{0123} & \\mathit{\\delta\\theta\\sigma\\omega} & \\mathit{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{it} & {\\it SAMPLE} & {\\it sample} & {\\it 0123} & {\\it \\delta\\theta\\sigma\\omega} & {\\it \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{mit} & {\\mit SAMPLE} & {\\mit sample} & {\\mit 0123} & {\\mit \\delta\\theta\\sigma\\omega} & {\\mit \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathit} & \\mathit{SAMPLE} & \\mathit{sample} & \\mathit{0123} & \\mathit{\\delta\\theta\\sigma\\omega} & \\mathit{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{it} & {\\it SAMPLE} & {\\it sample} & {\\it 0123} & {\\it \\delta\\theta\\sigma\\omega} & {\\it \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{mit} & {\\mit SAMPLE} & {\\mit sample} & {\\mit 0123} & {\\mit \\delta\\theta\\sigma\\omega} & {\\mit \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到`\\mathit`与`\\it`等效；对于*拉丁字母、小写希腊字母*，默认字体即为`\\mit`。\n\n#### 8.3.5 罗马体\n\n用`\\mathrm{text}`或`{\\rm text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathrm} & \\mathrm{SAMPLE} & \\mathrm{sample} & \\mathrm{0123} & \\mathrm{\\delta\\theta\\sigma\\omega} & \\mathrm{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{rm} & {\\rm SAMPLE} & {\\rm sample} & {\\rm 0123} & {\\rm \\delta\\theta\\sigma\\omega} & {\\rm \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathrm} & \\mathrm{SAMPLE} & \\mathrm{sample} & \\mathrm{0123} & \\mathrm{\\delta\\theta\\sigma\\omega} & \\mathrm{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{rm} & {\\rm SAMPLE} & {\\rm sample} & {\\rm 0123} & {\\rm \\delta\\theta\\sigma\\omega} & {\\rm \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*小写希腊字母*不支持罗马体；对于*阿拉伯数字、大写希腊字母*，默认字体即为`\\rm`。\n\n#### 8.3.6 等线体/无衬线体\n\n用`\\mathsf{text}`或`{\\sf text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathsf} & \\mathsf{SAMPLE} & \\mathsf{sample} & \\mathsf{0123} & \\mathsf{\\delta\\theta\\sigma\\omega} & \\mathsf{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{sf} & {\\sf SAMPLE} & {\\sf sample} & {\\sf 0123} & {\\sf \\delta\\theta\\sigma\\omega} & {\\sf \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathsf} & \\mathsf{SAMPLE} & \\mathsf{sample} & \\mathsf{0123} & \\mathsf{\\delta\\theta\\sigma\\omega} & \\mathsf{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{sf} & {\\sf SAMPLE} & {\\sf sample} & {\\sf 0123} & {\\sf \\delta\\theta\\sigma\\omega} & {\\sf \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*小写希腊字母*不支持无衬线体。\n\n#### 8.3.7 手写体\n\n用`\\mathscr{text}`或`{\\scr text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathscr} & \\mathscr{SAMPLE} & \\mathscr{sample} & \\mathscr{0123} & \\mathscr{\\delta\\theta\\sigma\\omega} & \\mathscr{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{scr} & {\\scr SAMPLE} & {\\scr sample} & {\\scr 0123} & {\\scr \\delta\\theta\\sigma\\omega} & {\\scr \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathscr} & \\mathscr{SAMPLE} & \\mathscr{sample} & \\mathscr{0123} & \\mathscr{\\delta\\theta\\sigma\\omega} & \\mathscr{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{scr} & {\\scr SAMPLE} & {\\scr sample} & {\\scr 0123} & {\\scr \\delta\\theta\\sigma\\omega} & {\\scr \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*阿拉伯数字、大写希腊字母*显示结果与斜体等效；*小写希腊字母*不改变。\n\n#### 8.3.8 花体\n\n用`\\mathcal{text}`或`{\\cal text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathcal} & \\mathcal{SAMPLE} & \\mathcal{sample} & \\mathcal{0123} & \\mathcal{\\delta\\theta\\sigma\\omega} & \\mathcal{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{cal} & {\\cal SAMPLE} & {\\cal sample} & {\\cal 0123} & {\\cal \\delta\\theta\\sigma\\omega} & {\\cal \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathcal} & \\mathcal{SAMPLE} & \\mathcal{sample} & \\mathcal{0123} & \\mathcal{\\delta\\theta\\sigma\\omega} & \\mathcal{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{cal} & {\\cal SAMPLE} & {\\cal sample} & {\\cal 0123} & {\\cal \\delta\\theta\\sigma\\omega} & {\\cal \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*阿拉伯数字、大写希腊字母*显示结果与斜体等效；*小写拉丁字母、小写希腊字母*不改变。\n\n#### 8.3.9 打字机体\n\n用`\\mathtt{text}`或`{\\tt text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathtt} & \\mathtt{SAMPLE} & \\mathtt{sample} & \\mathtt{0123} & \\mathtt{\\delta\\theta\\sigma\\omega} & \\mathtt{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{tt} & {\\tt SAMPLE} & {\\tt sample} & {\\tt 0123} & {\\tt \\delta\\theta\\sigma\\omega} & {\\tt \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathtt} & \\mathtt{SAMPLE} & \\mathtt{sample} & \\mathtt{0123} & \\mathtt{\\delta\\theta\\sigma\\omega} & \\mathtt{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{tt} & {\\tt SAMPLE} & {\\tt sample} & {\\tt 0123} & {\\tt \\delta\\theta\\sigma\\omega} & {\\tt \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}\n$$\n\n可以看到*小写希腊字母*不支持打字机体。\n\n#### 8.3.10 Fraktur体/德国哥特体\n\n用`\\mathfrak{text}`或`{\\frak text}`表示，注意控制范围。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathfrak} & \\mathfrak{SAMPLE} & \\mathfrak{sample} & \\mathfrak{0123} \\\\\n\\hline\n\\text{frak} & {\\frak SAMPLE} & {\\frak sample} & {\\frak 0123} \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathfrak} & \\mathfrak{SAMPLE} & \\mathfrak{sample} & \\mathfrak{0123} \\\\\n\\hline\n\\text{frak} & {\\frak SAMPLE} & {\\frak sample} & {\\frak 0123} \\\\\n\\end{array}\n$$\n\n#### 8.3.11 小型手写体\n\n用`{\\scriptstyle text}`命令，同时可以嵌套其他字体。\n\n```latex\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{scriptstyle} & {\\scriptstyle SAMPLE} & {\\scriptstyle sample} & {\\scriptstyle 0123} \\\\\n\\hline\n\\text{scriptstyle+text} & {\\scriptstyle \\text{SAMPLE} } & {\\scriptstyle \\text{sample} } & {\\scriptstyle \\text{0123} } \\\\\n\\end{array}\n```\n\n$$\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{scriptstyle} & {\\scriptstyle SAMPLE} & {\\scriptstyle sample} & {\\scriptstyle 0123} \\\\\n\\hline\n\\text{scriptstyle+text} & {\\scriptstyle \\text{SAMPLE} } & {\\scriptstyle \\text{sample} } & {\\scriptstyle \\text{0123} } \\\\\n\\end{array}\n$$\n\n### 8.4 混合字体\n\n正常情况下，拉丁字母会被当做变量斜体显示。若需要非斜体显示，可以用`\\text`命令。\n\n```latex\nabc \\quad \\text{abc}\n```\n\n$ abc \\quad \\text{abc} $​\n\n`\\text`中仍可以使用` $ 公式 $ `插入公式。\n\n```latex\nf(n)=\n\\begin{cases}\nn/2, & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n```\n\n$$\nf(n)=\n\\begin{cases}\nn/2, & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}\n$$\n\n混合输入时，注意空格显示。可以使用`~`或`\\`加空格强制显示空格。\n\n```latex\n\\begin{matrix}\n\\text{if} n \\text{is even} \\\\ % Bad\n\\text{if } n \\text{ is even} \\\\ % Good\n\\text{if}~n~\\text{is even} \\\\ % Good\n\\text{if}\\ n\\ \\text{is even} \\\\ % Good\n\\end{matrix}\n```\n\n$$\n\\begin{matrix}\n\\text{if} n \\text{is even} \\\\ % Bad\n\\text{if } n \\text{ is even} \\\\ % Good\n\\text{if}~n~\\text{is even} \\\\ % Good\n\\text{if}\\ n\\ \\text{is even} \\\\ % Good\n\\end{matrix}\n$$\n\n## 9 括号\n\n圆括号`()`、方括号`[]`表示其本身，花括号`{}`需要`\\`转义表示。\n\n`\\left`和`\\right`命令用来生成自动匹配高度括号或括号型字符。\n\n```latex\n(\\dfrac{1}{2})^2 \\quad \\left( \\dfrac{1}{2} \\right) ^2\n```\n\n$ (\\dfrac{1}{2})^2 \\quad \\left( \\dfrac{1}{2} \\right) ^2 $\n\n### 9.1 圆括号、方括号、花括号\n\n```latex\n\\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\{ \\dfrac ab \\right\\}\n```\n\n$ \\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\{ \\dfrac ab \\right\\} $\n\n### 9.2 角括号、单竖线（绝对值）、双竖线（范数）\n\n```latex\n\\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\|\n```\n\n$ \\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\| $\n\n### 9.3 取整函数\n\n```latex\n\\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil\n```\n\n$ \\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil $\n\n### 9.4 斜线与箭头\n\n```latex\n\\left/ \\dfrac ab \\right\\backslash\n```\n\n$ \\left/ \\dfrac ab \\right\\backslash $\n\n```latex\n\\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow\n```\n\n$ \\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow $\n\n### 9.5 混合括号\n\n```latex\n\\left[ \\dfrac{1}{2}, 1 \\right) \\quad \\left\\langle \\psi \\right|\n```\n\n$ \\left[ \\dfrac{1}{2}, 1 \\right) \\quad \\left\\langle \\psi \\right| $\n\n### 9.6 单边括号\n\n用`\\left.`或`\\right.`匹配另一边。\n\n```latex\n\\left\\{\n\\begin{array}{l}\nx+y=3, \\\\\n2x+3y=8\n\\end{array}\n\\right.\n```\n\n$ \\left\\{\n\\begin{array}{l}\nx+y=3, \\\\\n2x+3y=8\n\\end{array}\n\\right. $\n\n```latex\n\\left. \\dfrac ab \\right\\}\n```\n\n$ \\left. \\dfrac ab \\right\\} $\n\n### 9.7 控制括号大小\n\n使用`\\big`、`\\Big`、`\\bigg`、`\\Bigg`控制括号大小。\n\n```latex\n\\left\\{ \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\}*5\n```\n\n$ \\left\\{ \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\}*5 $​\n\n```latex\n\\Bigg\\{ \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\}*5\n```\n\n$ \\Bigg\\{ \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\}*5 $\n\n## 10 空格\n\nLaTeX会忽略公式中的空格，空格控制从宽到窄依次为：\n\n**双quad空格**：2个字符宽\n\n```latex\n\\alpha \\qquad \\beta\n```\n\n$ \\alpha \\qquad \\beta $\n\n**quad空格**：1个字符宽\n\n```latex\n\\alpha \\quad \\beta\n```\n\n$ \\alpha \\quad \\beta $​\n\n**空格**：1/3个字符宽\n\n```latex\n\\alpha \\ \\beta ~ \\gamma\n```\n\n$ \\alpha \\ \\beta ~ \\gamma $\n\n**中空格**：2/7个字符宽\n\n```latex\n\\alpha \\; \\beta\n```\n\n$ \\alpha \\; \\beta $​\n\n**小空格**：1/6个字符宽\n\n```latex\n\\alpha \\, \\beta\n```\n\n$ \\alpha \\, \\beta $​\n\n**无空格**：0个字符宽\n\n```latex\n\\alpha \\beta\n```\n\n$ \\alpha \\beta $​\n\n**紧贴**：-1/6个字符宽\n\n```latex\n\\alpha \\! \\beta\n```\n\n$ \\alpha \\! \\beta $​\n\n## 11 颜色\n\n使用`{\\color{color}{text} }`更改文字颜色，注意控制范围。\n\n```latex\n\\color{red}{text} \\quad \\color{yellow}{text} \\quad \\color{blue}{text} \\quad \\color{green}{text} \\quad \\color{purple}{text}\n```\n\n$ \\color{red}{text} \\quad \\color{yellow}{text} \\quad \\color{blue}{text} \\quad \\color{green}{text} \\quad \\color{purple}{text} $​\n\ncolor名小写时表示简单色调，首字母大写时表示较为复杂的色调。\n\n```latex\n\\color{Red}{text} \\quad \\color{Orange}{text} \\quad \\color{RoyalBlue}{text} \\quad \\color{Violet}{text} \\quad \\color{LimeGreen}{text}\n```\n\n$ \\color{Red}{text} \\quad \\color{Orange}{text} \\quad \\color{RoyalBlue}{text} \\quad \\color{Violet}{text} \\quad \\color{LimeGreen}{text} $\n\n使用`{\\color{ #rgb}{text} }`选择更多颜色，`rgb`的范围是`0-9`、`A-F`。\n\n```latex\n\\color{ #0FF}{text} \\quad \\color{ #00F}{text} \\quad \\color{ #F0F}{text} \\quad \\color{ #0F0}{text} \\quad \\color{ #6CF}{text}\n```\n\n$ \\color{ #0FF}{text} \\quad \\color{ #00F}{text} \\quad \\color{ #F0F}{text} \\quad \\color{ #0F0}{text} \\quad \\color{ #6CF}{text} $\n\n## 12 小技巧\n\n1. 如何打出如下格式？\n\n   $ \\mathop{x} \\limits_a^b $\n\n   由于`\\limits`只能用在运算符（如`\\sum`）后，所以可以用`\\mathop`命令使字母变成运算符。\n\n   ```latex\n   \\mathop{x} \\limits_a^b\n   ```\n\n   也可以选择`\\overset`和`\\underset`实现。\n\n   ```latex\n   \\underset{a}{\\overset{b}{x} }\n   ```\n\n2. `|`和`\\vert`、`\\mid`的区别：\n\n   ```latex\n   | \\quad \\vert \\quad \\mid\n   ```\n\n   $ | \\quad \\vert \\quad \\mid $​\n\n   分以下情况讨论：\n\n   - **绝对值**\n\n     `|`与`\\vert`均可，还可以使用`\\lvert`、`\\rvert`。注意到下例中，-2左侧的`\\vert`被识别为*普通元素*，而非*关系元素*，因此在非匹配情况下，不建议使用`\\vert`。\n\n     ```latex\n     |-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert\n     ```\n\n     $ |-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert $​\n\n     当遇到分数时，使用`\\left`、`\\right`匹配高度。注意`\\lvert`、`\\rvert`并不会匹配高度！\n\n     ```latex\n     \\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert\n     ```\n\n     $ \\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert $​\n\n   - **整除**\n\n     用关系符号`\\mid`表示。如：\n\n     ```latex\n     a \\mid b\n     ```\n\n     $ a \\mid b $\n\n     表示$a$能整除$b$​，即$b$能被$a$整除，如$ 3 \\mid 9 $表示9能被3整除。\n\n     注意`\\mid`不可伸长，伸长需要借助`|`，使用单边匹配`|`的方法，或`\\middle`命令（`\\middle`需要左右为`\\left.`及`\\right.`）。\n\n     ```latex\n     \\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right.\n     ```\n\n     $ \\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right. $​\n\n   - **集合**\n\n     同上，应用`\\mid`，伸长时用`\\middle|`替代。\n\n     ```latex\n     \\begin{matrix}\n     \\left\\{ x \\mid x \\in \\mathbb{R} \\text{ and } x \\ne 1 \\right\\} \\\\\n     \\left\\{ \\dfrac ab \\mid a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right\\} \\\\\n     \\left\\{ \\left. \\dfrac ab \\middle| a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right. \\right\\}\n     \\end{matrix}\n     ```\n\n     $ \\begin{matrix}\n     \\left\\{ x \\mid x \\in \\mathbb{R} \\text{ and } x \\ne 1 \\right\\} \\\\\n     \\left\\{ \\dfrac ab \\mid a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right\\} \\\\\n     \\left\\{ \\left. \\dfrac ab \\middle| a,b \\in \\mathbb{N} \\text{ and } b > 5 \\right. \\right\\}\n     \\end{matrix} $​\n\n   - **函数**\n\n     因为通常高度不固定，因此建议用`|`表示并匹配高度。\n\n     ```latex\n     f'(x_0) = \\left. f'(x) \\right| _{x=x_0} = \\left. \\dfrac{\\mathrm{d}f}{\\mathrm{d}x} \\right| _{x=x_0}\n     ```\n\n     $ f'(x_0) = \\left. f'(x) \\right| _{x=x_0} = \\left. \\dfrac{\\mathrm{d}f}{\\mathrm{d}x} \\right| _{x=x_0} $\n\n   - **双竖线**\n\n     把`|`、`\\vert`、`\\lvert`、`\\rvert`、`\\mid`分别替换为`\\|`、`\\Vert`、`\\lVert`、`\\rVert`、`\\parallel`即可，基本属性与上述对应单竖线类似。\n\n     ```latex\n     \\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m\n     ```\n\n     $ \\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m $\n\n3. 如何输入斜分式？\n\n   $ {}^1/_2 $​\n\n   用上下标即可。\n\n   ```latex\n   {}^1/_2\n   ```\n\n4. 如何输入化学方程式？\n\n   $ \\mathrm{CH_3CH_2OH \\xrightarrow[170^\\circ C]{浓H_2SO_4} CH_2=CH_2 \\uparrow + H_2O } $\n\n   使用`\\xrightarrow`和已有的符号即可。也可使用宏包，在此不表。\n\n   ```latex\n   \\mathrm{CH_3CH_2OH \\xrightarrow[170^\\circ C]{浓H_2SO_4} CH_2=CH_2 \\uparrow + H_2O }\n   ```\n\n   给箭头加文字有如下方式：\n\n   ```latex\n   \\begin{matrix}\n   \\xleftarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\xrightarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\overset{x+y}{\\rightarrow} \\\\ % 长度固定\n   \\underrightarrow{x+y+z} \\\\ % 自动调整长度\n   \\underset{x+y}{\\leftarrow} \\\\ % 长度固定\n   \\overleftarrow{x+y+z} \\\\ % 自动调整长度\n   \\end{matrix}\n   ```\n\n   $ \\begin{matrix}\n   \\xleftarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\xrightarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度\n   \\overset{x+y}{\\rightarrow} \\\\ % 长度固定\n   \\underrightarrow{x+y+z} \\\\ % 自动调整长度\n   \\underset{x+y}{\\leftarrow} \\\\ % 长度固定\n   \\overleftarrow{x+y+z} \\\\ % 自动调整长度\n   \\end{matrix} $\n\n5. 如何给公式加方框？\n\n   用`\\boxed`命令或用1*1表格的边框。\n\n   ```latex\n   \\boxed {E=mc^2}\n   ```\n\n   $ \\boxed {E=mc^2} $\n\n   ```latex\n   \\begin{array}{|c|}\n   \\hline\n   E=mc^2 \\\\\n   \\hline\n   \\end{array}\n   ```\n\n   $ \\begin{array}{|c|}\n   \\hline\n   E=mc^2 \\\\\n   \\hline\n   \\end{array} $\n\n6. 如何输入分数的约分形式/如何输入删除线？\n\n   $ \\require{cancel} \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} $\n\n   可以使用`\\cancel`、`\\bcancel`、`\\xcancel`和`\\cancelto`命令（需要`\\require`导包）。\n\n   ```latex\n   \\require{cancel}\n   \\begin{array}{rl}\n   \\verb|y+\\cancel{x}| & y+\\cancel{x} \\\\\n   \\verb|\\cancel{y+x}| & \\cancel{y+x} \\\\\n   \\verb|y+\\bcancel{x}| & y+\\bcancel{x} \\\\\n   \\verb|y+\\xcancel{x}| & y+\\xcancel{x} \\\\\n   \\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x} \\\\\n   \\end{array}\n   ```\n\n   $$\n   \\require{cancel}\n   \\begin{array}{rl}\n   \\verb|y+\\cancel{x}| & y+\\cancel{x} \\\\\n   \\verb|\\cancel{y+x}| & \\cancel{y+x} \\\\\n   \\verb|y+\\bcancel{x}| & y+\\bcancel{x} \\\\\n   \\verb|y+\\xcancel{x}| & y+\\xcancel{x} \\\\\n   \\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x} \\\\\n   \\end{array}\n   $$\n   \n   ```latex\n   \\require{cancel}\n   \\begin{array}{c}\n   \\verb+\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5}+ \\\\\n   \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} \\\\\n   \\end{array}\n   ```\n   \n   $$\n   \\require{cancel}\n   \\begin{array}{c}\n   \\verb+\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5}+ \\\\\n   \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} \\\\\n   \\end{array}\n   $$\n   \n   上例还使用了`\\verb`命令来显示原文照排效果。\n\n## 13 示例\n\n以下公式来源于：Tsung-Chyan Lai,Yuri N. Sotskov,Alexandre Dolgui. The stability radius of an optimal line balance with maximum efficiency for a simple assembly line[J]. European Journal of Operational Research,2018,274(2):\n\n1. 导数、括号匹配、上下标、特殊符号、大型运算符\n   \n   ```latex\n   t' \\left( V_k^{b_r} \\right) := \\sum_{i \\in V_k^{b_r} } t_i' = \\sum_{i \\in V_k^{b_r} \\setminus \\left\\{ j \\right\\} } t_i'\n   ```\n   \n   $$\n   t' \\left( V_k^{b_r} \\right) := \\sum_{i \\in V_k^{b_r} } t_i' = \\sum_{i \\in V_k^{b_r} \\setminus \\left\\{ j \\right\\} } t_i'\n   $$\n   \n2. 希腊字母、括号匹配、特殊符号、字母标记\n   \n   ```latex\n   \\delta_{b_1u}^{=b_rk} = \\frac{t \\left( V_k^{b_r} \\right) - t \\left( V_u^{b_1} \\right)}{\\left| \\tilde{V}_k^{b_r} \\oplus \\tilde{V}_u^{b_1} \\right|}\n   ```\n   \n   $$\n   \\delta_{b_1u}^{=b_rk} = \\frac{t \\left( V_k^{b_r} \\right) - t \\left( V_u^{b_1} \\right)}{\\left| \\widetilde{V}_k^{b_r} \\oplus \\widetilde{V}_u^{b_1} \\right|}\n   $$\n   \n3. 希腊字母、特殊符号、条件表达式、函数、正文字体\n   \n   ```latex\n   \\gamma \\left( b_r \\right) :=\n   \\begin{cases}\n   \\frac{1}{\\tilde{n} } \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\{ t \\left( V_k^{b_r} \\right) : {\\widetilde{V}_k^{b_r} } \\notin W \\left( b_r, t \\right) \\right\\} \\right], & \\text{if $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$ with $t \\left( V_k^{b_r} \\right) < c \\left( b_r, t \\right)$;} \\\\\n   \\min \\left\\{ t_i : i \\in \\widetilde{V} \\right\\}, & \\text{if $t \\left( V_k^{b_r} \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$.}\n   \\end{cases}\n   ```\n   \n   $$\n   \\gamma \\left( b_r \\right) :=\n   \\begin{cases}\n   \\frac{1}{\\tilde{n} } \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\{ t \\left( V_k^{b_r} \\right) : {\\widetilde{V}_k^{b_r} } \\notin W \\left( b_r, t \\right) \\right\\} \\right], & \\text{if $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$ with $t \\left( V_k^{b_r} \\right) < c \\left( b_r, t \\right)$;} \\\\\n   \\min \\left\\{ t_i : i \\in \\widetilde{V} \\right\\}, & \\text{if $t \\left( V_k^{b_r} \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$.}\n   \\end{cases}\n   $$\n\n## 14 小工具\n\n- 手画符号搜索LaTeX代码：http://detexify.kirelabs.org/classify.html\n- LaTeX在线编辑器：<http://www.codecogs.com/latex/eqneditor.php>\n\n","slug":"latex-mathematical-formula-handbook","published":1,"updated":"2021-08-14T08:20:26.000Z","layout":"post","photos":[],"link":"","_id":"cl06nlvux004mf4vigw9o892r","content":"<p>LaTeX是一种基于TeX的排版系统。由于其对复杂的数学公式排版效果很好，所以常用于大型论文排版和数学公式输入。本文及本博客的文章均使用LaTeX输入数学公式。</p>\n<span id=\"more\"></span>\n<h2 id=\"0-简单介绍\"><a href=\"#0-简单介绍\" class=\"headerlink\" title=\"0 简单介绍\"></a>0 简单介绍</h2><p><strong>LaTeX</strong></p>\n<p>标准写法为$ L^AT_EX $​，读音为“拉泰赫”。它是一种基于TeX的排版系统，对于生成复杂表格和数学公式表现尤为突出，适用于论文写作、数学科研类PPT制作等。</p>\n<p><strong>MathJax</strong></p>\n<p>它是一个JavaScript引擎，用来显示网络上的数学公式。本博客的公式使用MathJax引擎渲染。本质上，Typora的公式也是用MathJax渲染的。</p>\n<p><strong>本文的公式显示环境</strong></p>\n<ul>\n<li>Markdown</li>\n<li>LaTeX</li>\n<li>MathJax v3.0.0</li>\n<li>hexo-renderer-kramed渲染器</li>\n</ul>\n<p><strong>注意</strong></p>\n<p>应特别注意Markdown渲染为HTML及其与LaTeX语法的冲突，这会影响文章效果。如应避免大括号重复出现，应加上空格。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;&#125; % Bad</span><br><span class=\"line\">&#125; &#125; % Good</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-公式插入\"><a href=\"#1-公式插入\" class=\"headerlink\" title=\"1 公式插入\"></a>1 公式插入</h2><p>公式分为行内公式和公式块，前者嵌入行内，后者单独成行。</p>\n<p>行内公式表示方法为：<code>$ 公式 $</code>，公式块表示方法为：<code>$$ 公式 $$</code>，公式中的空格会被忽略。公式块可通过<code>\\tag&#123;n&#125;</code>进行手动编号。</p>\n<p><strong>行内公式</strong>    </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ f(x) = a+b $</span><br></pre></td></tr></table></figure>\n<p>$ f(x) = a+b $​​​​​</p>\n<p><strong>公式块</strong></p>\n<p>注意Typora中建议写成以下形式，否则仍会显示为行内公式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">x+2 = 3*4</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx+2 = 3*4</script><p>除强调区分行内公式与公式块外，下文的公式示例均省略<code>$</code>符号。</p>\n<p><strong>手动编号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x+2 = 3*4 \\tag&#123;1.1&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx+2 = 3*4 \\tag{1.1}</script><h2 id=\"2-简单运算\"><a href=\"#2-简单运算\" class=\"headerlink\" title=\"2 简单运算\"></a>2 简单运算</h2><h3 id=\"2-1-四则运算与基本括号\"><a href=\"#2-1-四则运算与基本括号\" class=\"headerlink\" title=\"2.1 四则运算与基本括号\"></a>2.1 四则运算与基本括号</h3><p>拉丁字母、阿拉伯数字与<code>+-*/=</code>可以直接通过键盘输入。乘号可以用<code>\\times</code>表示，除号可以用<code>\\div</code>表示，点乘可以用<code>\\cdot</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\na + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g</script><p>小括号<code>()</code>、方括号<code>[]</code>表示其本身，花括号<code>&#123;&#125;</code>需要<code>\\</code>转义表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1+2) \\quad [1+2] \\quad \\&#123;1+2\\&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n(1+2) \\quad [1+2] \\quad \\{1+2\\}</script><p>由于LaTeX会忽略空格，因此用<code>\\quad</code>表示空格，见上例。</p>\n<h3 id=\"2-2-基本上下标\"><a href=\"#2-2-基本上下标\" class=\"headerlink\" title=\"2.2 基本上下标\"></a>2.2 基本上下标</h3><p>用<code>_</code>表示下标，用<code>^</code>表示上标，并只处理一个字符，多个字符用<code>&#123;&#125;</code>括起来。<code>&#39;</code>表示求导，可使用多个。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x_1 + x_&#123;1,2&#125;^2 = y_0 + y&#x27; + y&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx_1 + x_{1,2}^2 = y_0 + y' + y''</script><h3 id=\"2-3-基本分式、根式\"><a href=\"#2-3-基本分式、根式\" class=\"headerlink\" title=\"2.3 基本分式、根式\"></a>2.3 基本分式、根式</h3><p>用<code>\\frac&#123;a&#125;&#123;b&#125;</code>表示分式，用<code>\\sqrt</code>表示平方根，用<code>\\sqrt[n]</code>表示n次方根。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\frac&#123;x&#125;&#123;2&#125; + \\sqrt x = \\sqrt[3] &#123;x^2+y^2&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\frac{x}{2} + \\sqrt x = \\sqrt[3] {x^2+y^2}</script><h2 id=\"3-符号、函数、特殊字符\"><a href=\"#3-符号、函数、特殊字符\" class=\"headerlink\" title=\"3 符号、函数、特殊字符\"></a>3 符号、函数、特殊字符</h2><p>本章为符号、函数、特殊字符的输入方法，若关注语法可以直接跳过本章。</p>\n<h3 id=\"3-1-声调-变音-标记符号\"><a href=\"#3-1-声调-变音-标记符号\" class=\"headerlink\" title=\"3.1 声调/变音/标记符号\"></a>3.1 声调/变音/标记符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dot&#123;a&#125;, \\ddot&#123;a&#125;, \\dddot&#123;a&#125;, \\acute&#123;a&#125;, \\grave&#123;a&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\dot{a}, \\ddot{a}, \\dddot{a}, \\acute{a}, \\grave{a} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\check&#123;a&#125;, \\breve&#123;a&#125;, \\tilde&#123;a&#125;, \\widetilde&#123;a&#125;, \\bar&#123;a&#125;, \\mathring&#123;a&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\check{a}, \\breve{a}, \\tilde{a}, \\widetilde{a}, \\bar{a}, \\mathring{a} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\hat&#123;a&#125;, \\widehat&#123;a&#125;, \\vec&#123;a&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\hat{a}, \\widehat{a}, \\vec{a} $</p>\n<h3 id=\"3-2-标准函数\"><a href=\"#3-2-标准函数\" class=\"headerlink\" title=\"3.2 标准函数\"></a>3.2 标准函数</h3><p><strong>指数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\exp_a b, \\exp b, x^2</span><br></pre></td></tr></table></figure>\n<p>$ \\exp_a b, \\exp b, x^2 $</p>\n<p><strong>对数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\log a, \\lg b, \\ln c, \\log_&#123;2&#125; d</span><br></pre></td></tr></table></figure>\n<p>$ \\log a, \\lg b, \\ln c, \\log_{2} d $</p>\n<p><strong>三角函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f</span><br></pre></td></tr></table></figure>\n<p>$ \\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f $</p>\n<p><strong>反三角函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\arcsin a, \\arccos b, \\arctan c</span><br></pre></td></tr></table></figure>\n<p>$ \\arcsin a, \\arccos b, \\arctan c $​​</p>\n<p>注意<code>\\arccot, \\arcsec, \\arccsc</code>不被转义，需要用<code>\\operatorname</code>替代。</p>\n<p><strong>双曲函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sinh a, \\cosh b, \\tanh c, \\coth d</span><br></pre></td></tr></table></figure>\n<p>$ \\sinh a, \\cosh b, \\tanh c, \\coth d $​</p>\n<p>注意<code>\\sech, \\csch</code>不被转义，需要用<code>\\operatorname</code>替代。</p>\n<p><strong>绝对值</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right|</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right| $</p>\n<p><strong>最大值，最小值</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\max(x,y), \\min(x,y)</span><br></pre></td></tr></table></figure>\n<p>$ \\max(x,y), \\min(x,y) $​​</p>\n<p><strong>其他不能转义的标准函数</strong></p>\n<p>用<code>\\operatorname&#123;function&#125;</code>表示，如符号函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\operatorname&#123;sgn&#125; x</span><br></pre></td></tr></table></figure>\n<p>$ \\operatorname{sgn} x $</p>\n<h3 id=\"3-3-界限，极限\"><a href=\"#3-3-界限，极限\" class=\"headerlink\" title=\"3.3 界限，极限\"></a>3.3 界限，极限</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\min x, \\max y, \\inf a, \\sup b</span><br></pre></td></tr></table></figure>\n<p>$ \\min x, \\max y, \\inf a, \\sup b $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lim x, \\liminf y, \\limsup z</span><br></pre></td></tr></table></figure>\n<p>$ \\lim x, \\liminf y, \\limsup z $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dim p, \\deg q, \\det m, \\ker\\phi</span><br></pre></td></tr></table></figure>\n<p>$ \\dim p, \\deg q, \\det m, \\ker\\phi $​</p>\n<p>更多极限见4.5节。</p>\n<h3 id=\"3-4-投射\"><a href=\"#3-4-投射\" class=\"headerlink\" title=\"3.4 投射\"></a>3.4 投射</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z</span><br></pre></td></tr></table></figure>\n<p>$ \\Pr j, \\hom l, \\lVert z \\rVert, \\arg z $</p>\n<h3 id=\"3-5-微分，导数\"><a href=\"#3-5-微分，导数\" class=\"headerlink\" title=\"3.5 微分，导数\"></a>3.5 微分，导数</h3><p>用<code>\\mathrm&#123;x&#125;</code>处理非斜体字符，如微分符号<code>d</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx, \\mathrm&#123;d&#125;x, \\partial t, \\nabla\\psi</span><br></pre></td></tr></table></figure>\n<p>$ dx, \\mathrm{d}x, \\partial t, \\nabla\\psi $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mathrm&#123;d&#125;y/\\mathrm&#123;d&#125;x, \\frac&#123;\\mathrm&#123;d&#125;y&#125;&#123;\\mathrm&#123;d&#125;x&#125;, \\frac&#123;\\partial^2&#125;&#123;\\partial x \\partial y&#125;z</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\mathrm{d}y/\\mathrm{d}x, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x \\partial y}z</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;, \\prime, \\backprime, f^\\prime, f&#x27;, f&#x27;&#x27;, f^&#123;(3)&#125;, \\dot y, \\ddot y, \\dddot y</span><br></pre></td></tr></table></figure>\n<p>$ ‘, \\prime, \\backprime, f^\\prime, f’, f’’, f^{(3)}, \\dot y, \\ddot y, \\dddot y $</p>\n<h3 id=\"3-6-字母符号与常数\"><a href=\"#3-6-字母符号与常数\" class=\"headerlink\" title=\"3.6 字母符号与常数\"></a>3.6 字母符号与常数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar</span><br></pre></td></tr></table></figure>\n<p>$ \\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS</span><br></pre></td></tr></table></figure>\n<p>$ \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS $​​​​</p>\n<h3 id=\"3-7-模运算\"><a href=\"#3-7-模运算\" class=\"headerlink\" title=\"3.7 模运算\"></a>3.7 模运算</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\pmod&#123;m&#125;, a \\bmod b</span><br></pre></td></tr></table></figure>\n<p>$ \\pmod{m}, a \\bmod b $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gcd(m,n), \\operatorname&#123;lcm&#125;(m,n)</span><br></pre></td></tr></table></figure>\n<p>$ \\gcd(m,n), \\operatorname{lcm}(m,n) $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mid, \\nmid, \\shortmid, \\nshortmid</span><br></pre></td></tr></table></figure>\n<p>$ \\mid, \\nmid, \\shortmid, \\nshortmid $</p>\n<h3 id=\"3-8-根号\"><a href=\"#3-8-根号\" class=\"headerlink\" title=\"3.8 根号\"></a>3.8 根号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\surd, \\sqrt&#123;2&#125;, \\sqrt[n]&#123;&#125;, \\sqrt[3]&#123;x^2+y^2&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{x^2+y^2} $</p>\n<h3 id=\"3-9-运算符\"><a href=\"#3-9-运算符\" class=\"headerlink\" title=\"3.9 运算符\"></a>3.9 运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+, -, \\pm, \\mp, \\dotplus</span><br></pre></td></tr></table></figure>\n<p>$ +, -, \\pm, \\mp, \\dotplus $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash</span><br></pre></td></tr></table></figure>\n<p>$ *, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\star, \\circ, \\bullet</span><br></pre></td></tr></table></figure>\n<p>$ \\star, \\circ, \\bullet $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\boxplus, \\boxminus, \\boxtimes, \\boxdot</span><br></pre></td></tr></table></figure>\n<p>$ \\boxplus, \\boxminus, \\boxtimes, \\boxdot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\oplus, \\ominus, \\otimes, \\oslash, \\odot</span><br></pre></td></tr></table></figure>\n<p>$ \\oplus, \\ominus, \\otimes, \\oslash, \\odot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\circleddash, \\circledcirc, \\circledast</span><br></pre></td></tr></table></figure>\n<p>$ \\circleddash, \\circledcirc, \\circledast $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\bigoplus, \\bigotimes, \\bigodot</span><br></pre></td></tr></table></figure>\n<p>$ \\bigoplus, \\bigotimes, \\bigodot $</p>\n<h3 id=\"3-10-集合\"><a href=\"#3-10-集合\" class=\"headerlink\" title=\"3.10 集合\"></a>3.10 集合</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\&#123;, \\&#125;, \\emptyset, \\varnothing</span><br></pre></td></tr></table></figure>\n<p>$ \\{, \\}, \\emptyset, \\varnothing $​</p>\n<p>注意本环境下不支持用<code>\\O, \\empty</code>表示空集，需要用<code>\\emptyset</code>替代。​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\in, \\notin, \\not\\in, \\ni, \\not\\ni</span><br></pre></td></tr></table></figure>\n<p>$ \\in, \\notin, \\not\\in, \\ni, \\not\\ni $​​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\cap, \\Cap, \\sqcap, \\bigcap</span><br></pre></td></tr></table></figure>\n<p>$ \\cap, \\Cap, \\sqcap, \\bigcap $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus</span><br></pre></td></tr></table></figure>\n<p>$ \\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\setminus, \\smallsetminus</span><br></pre></td></tr></table></figure>\n<p>$ \\setminus, \\smallsetminus $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\subset, \\Subset, \\sqsubset</span><br></pre></td></tr></table></figure>\n<p>$ \\subset, \\Subset, \\sqsubset $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\supset, \\Supset, \\sqsupset</span><br></pre></td></tr></table></figure>\n<p>$ \\supset, \\Supset, \\sqsupset $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq</span><br></pre></td></tr></table></figure>\n<p>$ \\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq</span><br></pre></td></tr></table></figure>\n<p>$ \\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq $</p>\n<h3 id=\"3-11-关系符号\"><a href=\"#3-11-关系符号\" class=\"headerlink\" title=\"3.11 关系符号\"></a>3.11 关系符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=, \\ne, \\neq, \\equiv, \\not\\equiv</span><br></pre></td></tr></table></figure>\n<p>$ =, \\ne, \\neq, \\equiv, \\not\\equiv $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\doteq, \\doteqdot, :=, \\overset&#123;\\underset&#123;\\mathrm&#123;def&#125; &#125; &#123;&#125; &#125; &#123;=&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\doteq, \\doteqdot, :=, \\overset{\\underset{\\mathrm{def} } {} } {=} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong</span><br></pre></td></tr></table></figure>\n<p>$ \\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto</span><br></pre></td></tr></table></figure>\n<p>$ \\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot</span><br></pre></td></tr></table></figure>\n<p>$ &lt;, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot</span><br></pre></td></tr></table></figure>\n<p>$ &gt;, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless</span><br></pre></td></tr></table></figure>\n<p>$ \\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\leqslant, \\nleqslant, \\eqslantless</span><br></pre></td></tr></table></figure>\n<p>$ \\leqslant, \\nleqslant, \\eqslantless $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\geqslant, \\ngeqslant, \\eqslantgtr</span><br></pre></td></tr></table></figure>\n<p>$ \\geqslant, \\ngeqslant, \\eqslantgtr $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lesssim, \\lnsim, \\lessapprox, \\lnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\lesssim, \\lnsim, \\lessapprox, \\lnapprox $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\prec, \\nprec, \\preceq, \\npreceq, \\precneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\prec, \\nprec, \\preceq, \\npreceq, \\precneqq $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\preccurlyeq, \\curlyeqprec</span><br></pre></td></tr></table></figure>\n<p>$ \\preccurlyeq, \\curlyeqprec $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\succcurlyeq, \\curlyeqsucc</span><br></pre></td></tr></table></figure>\n<p>$ \\succcurlyeq, \\curlyeqsucc $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\precsim, \\precnsim, \\precapprox, \\precnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\precsim, \\precnsim, \\precapprox, \\precnapprox $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\succsim, \\succnsim, \\succapprox, \\succnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\succsim, \\succnsim, \\succapprox, \\succnapprox $</p>\n<h3 id=\"3-12-几何符号\"><a href=\"#3-12-几何符号\" class=\"headerlink\" title=\"3.12 几何符号\"></a>3.12 几何符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\parallel, \\nparallel, \\shortparallel, \\nshortparallel</span><br></pre></td></tr></table></figure>\n<p>$ \\parallel, \\nparallel, \\shortparallel, \\nshortparallel $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ</span><br></pre></td></tr></table></figure>\n<p>$ \\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc</span><br></pre></td></tr></table></figure>\n<p>$ \\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle</span><br></pre></td></tr></table></figure>\n<p>$ \\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright</span><br></pre></td></tr></table></figure>\n<p>$ \\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright $</p>\n<h3 id=\"3-13-逻辑符号\"><a href=\"#3-13-逻辑符号\" class=\"headerlink\" title=\"3.13 逻辑符号\"></a>3.13 逻辑符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\forall, \\not\\forall, \\exists, \\nexists</span><br></pre></td></tr></table></figure>\n<p>$ \\forall, \\not\\forall, \\exists, \\nexists $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\because, \\therefore, \\And</span><br></pre></td></tr></table></figure>\n<p>$ \\because, \\therefore, \\And $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lor, \\vee, \\curlyvee, \\bigvee</span><br></pre></td></tr></table></figure>\n<p>$ \\lor, \\vee, \\curlyvee, \\bigvee $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\land, \\wedge, \\curlywedge, \\bigwedge</span><br></pre></td></tr></table></figure>\n<p>$ \\land, \\wedge, \\curlywedge, \\bigwedge $</p>\n<p>注意本环境下不支持用<code>\\or, \\and</code>表示或、且，需要用<code>\\lor, \\land</code>替代。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\bar&#123;x&#125;, \\bar&#123;abc&#125;, \\overline&#123;x&#125;, \\overline&#123;abc&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\bar{x}, \\bar{abc}, \\overline{x}, \\overline{abc} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lnot, \\neg, \\not\\operatorname&#123;R&#125;, \\bot, \\top</span><br></pre></td></tr></table></figure>\n<p>$ \\lnot, \\neg, \\not\\operatorname{R}, \\bot, \\top $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models</span><br></pre></td></tr></table></figure>\n<p>$ \\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models $​​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\nvdash, \\nVdash, \\nvDash, \\nVDash</span><br></pre></td></tr></table></figure>\n<p>$ \\nvdash, \\nVdash, \\nvDash, \\nVDash $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\ulcorner, \\urcorner, \\llcorner, \\lrcorner</span><br></pre></td></tr></table></figure>\n<p>$ \\ulcorner, \\urcorner, \\llcorner, \\lrcorner $</p>\n<h3 id=\"3-14-箭头\"><a href=\"#3-14-箭头\" class=\"headerlink\" title=\"3.14 箭头\"></a>3.14 箭头</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\to, \\rightarrow, \\nrightarrow, \\longrightarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\to, \\rightarrow, \\nrightarrow, \\longrightarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gets, \\leftarrow, \\nleftarrow, \\longleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\gets, \\leftarrow, \\nleftarrow, \\longleftarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\uparrow, \\downarrow, \\updownarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\uparrow, \\downarrow, \\updownarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies</span><br></pre></td></tr></table></figure>\n<p>$ \\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Leftarrow, \\nLeftarrow, \\Longleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\Leftarrow, \\nLeftarrow, \\Longleftarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff</span><br></pre></td></tr></table></figure>\n<p>$ \\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Uparrow, \\Downarrow, \\Updownarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\Uparrow, \\Downarrow, \\Updownarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Rrightarrow, \\Lleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\Rrightarrow, \\Lleftarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\nearrow, \\swarrow, \\nwarrow, \\searrow</span><br></pre></td></tr></table></figure>\n<p>$ \\nearrow, \\swarrow, \\nwarrow, \\searrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mapsto, \\longmapsto</span><br></pre></td></tr></table></figure>\n<p>$ \\mapsto, \\longmapsto $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons</span><br></pre></td></tr></table></figure>\n<p>$ \\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright</span><br></pre></td></tr></table></figure>\n<p>$ \\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft</span><br></pre></td></tr></table></figure>\n<p>$ \\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow $</p>\n<h3 id=\"3-15-省略号\"><a href=\"#3-15-省略号\" class=\"headerlink\" title=\"3.15 省略号\"></a>3.15 省略号</h3><p>用<code>\\cdots</code>表示居中的三个点，<code>\\ldots</code>表示居底线的三个点，<code>\\vdots</code>和<code>\\ddots</code>分别表示垂直和对角线。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\cdots, \\ldots, \\vdots, \\ddots</span><br></pre></td></tr></table></figure>\n<p>$ \\cdots, \\ldots, \\vdots, \\ddots $</p>\n<h3 id=\"3-16-其他\"><a href=\"#3-16-其他\" class=\"headerlink\" title=\"3.16 其他\"></a>3.16 其他</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\amalg, \\%, \\&amp;, \\dagger, \\ddagger</span><br></pre></td></tr></table></figure>\n<p>$ \\amalg, \\%, \\&amp;, \\dagger, \\ddagger $​​​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\smile, \\frown, \\wr, \\triangleleft, \\triangleright</span><br></pre></td></tr></table></figure>\n<p>$ \\smile, \\frown, \\wr, \\triangleleft, \\triangleright $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp</span><br></pre></td></tr></table></figure>\n<p>$ \\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes</span><br></pre></td></tr></table></figure>\n<p>$ \\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq</span><br></pre></td></tr></table></figure>\n<p>$ \\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork</span><br></pre></td></tr></table></figure>\n<p>$ \\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright</span><br></pre></td></tr></table></figure>\n<p>$ \\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq</span><br></pre></td></tr></table></figure>\n<p>$ \\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq $</p>\n<h2 id=\"4-常用数学语法\"><a href=\"#4-常用数学语法\" class=\"headerlink\" title=\"4 常用数学语法\"></a>4 常用数学语法</h2><h3 id=\"4-1-上下标\"><a href=\"#4-1-上下标\" class=\"headerlink\" title=\"4.1 上下标\"></a>4.1 上下标</h3><p>用<code>_</code>表示下标，用<code>^</code>表示上标，并只处理一个字符，多个字符用<code>&#123;&#125;</code>括起来。上下标可嵌套或同时使用。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a^2, a_2, a^&#123;2+2&#125;, a_&#123;i,j&#125;, x_2^3</span><br></pre></td></tr></table></figure>\n<p>$ a^2, a_2, a^{2+2}, a_{i,j}, x_2^3 $</p>\n<p>前置上下标可以用空花括号<code>&#123;&#125;</code>承载，也可以使用<code>\\sideset</code>命令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#125;_1^2X_3^4 \\quad \\sideset&#123;_1^2&#125;&#123;_3^4&#125; \\bigotimes</span><br></pre></td></tr></table></figure>\n<p>$ {}_1^2X_3^4 \\quad \\sideset{_1^2}{_3^4} \\bigotimes $</p>\n<h3 id=\"4-2-导数\"><a href=\"#4-2-导数\" class=\"headerlink\" title=\"4.2 导数\"></a>4.2 导数</h3><p>撇导数用<code>&#39;</code>或上标的<code>\\prime</code>表示，注意不要漏掉上标。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&#x27;, x&#x27;&#x27;, x^\\prime</span><br></pre></td></tr></table></figure>\n<p>$ x’, x’’, x^\\prime $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x\\prime % Bad</span><br></pre></td></tr></table></figure>\n<p>$ x\\prime % Bad $​</p>\n<p>点导数用<code>\\dot</code>、<code>\\ddot</code>和<code>\\dddot</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dot&#123;y&#125;, \\ddot&#123;y&#125;, \\dddot&#123;y&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\dot{y}, \\ddot{y}, \\dddot{y} $</p>\n<h3 id=\"4-3-向量\"><a href=\"#4-3-向量\" class=\"headerlink\" title=\"4.3 向量\"></a>4.3 向量</h3><p>用<code>\\vec</code>、<code>\\boldsymbol</code>、<code>\\over--arrow</code>或<code>\\widehat</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\vec&#123;a&#125;, \\boldsymbol&#123;b&#125;, \\overleftarrow&#123;ab&#125;, \\overrightarrow&#123;cd&#125;, \\overleftrightarrow&#123;ab&#125;, \\widehat&#123;abc&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\vec{a}, \\boldsymbol{b}, \\overleftarrow{ab}, \\overrightarrow{cd}, \\overleftrightarrow{ab}, \\widehat{abc} $​​</p>\n<h3 id=\"4-4-上下线\"><a href=\"#4-4-上下线\" class=\"headerlink\" title=\"4.4 上下线\"></a>4.4 上下线</h3><p><strong>上弧、上划线、下划线</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\overset&#123;\\frown&#125; &#123;AB&#125;, \\overline &#123;abc&#125;, \\underline&#123;def&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\overset{\\frown} {AB}, \\overline {abc}, \\underline{def} $</p>\n<p><strong>上括号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\overbrace&#123;1+2+\\cdots+n&#125; \\quad \\overbrace&#123;1+2+\\cdots+n&#125;^&#123;n&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\overbrace{1+2+\\cdots+n} \\quad \\overbrace{1+2+\\cdots+n}^{n} $</p>\n<p>可以写成矩阵形式，使得上面的字符变大：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125; n \\\\ \\overbrace&#123;1+2+\\cdots+n&#125; \\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix} n \\\\ \\overbrace{1+2+\\cdots+n} \\end{matrix} $</p>\n<p><strong>下括号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\underbrace&#123;a+b+\\cdots+z&#125; \\quad \\underbrace&#123;a+b+\\cdots+z&#125;_&#123;26&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\underbrace{a+b+\\cdots+z} \\quad \\underbrace{a+b+\\cdots+z}_{26} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125; \\underbrace&#123;a+b+\\cdots+z&#125; \\\\ 26 \\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix} \\underbrace{a+b+\\cdots+z} \\\\ 26 \\end{matrix} $</p>\n<h3 id=\"4-5-大型运算符（求和求积、极限、积分等）\"><a href=\"#4-5-大型运算符（求和求积、极限、积分等）\" class=\"headerlink\" title=\"4.5 大型运算符（求和求积、极限、积分等）\"></a>4.5 大型运算符（求和求积、极限、积分等）</h3><p><strong>注意</strong></p>\n<p>大型运算符通常含有上下部分，LaTeX用上下标表示。其中行内公式位于右上右下，公式块位于正上正下（积分除外）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sum_&#123;i=1&#125;^&#123;n&#125; i^2 $</span><br><span class=\"line\">$$</span><br><span class=\"line\">\\sum_&#123;i=1&#125;^&#123;n&#125; i^2</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>$ \\sum_{i=1}^{n} i^2 $</p>\n<script type=\"math/tex; mode=display\">\n\\sum_{i=1}^{n} i^2</script><p>若要在行内公式显示为正上正下，可以使用<code>\\limits</code>命令跟在运算符后：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sum\\limits_&#123;i=1&#125;^&#123;n&#125; i^2 $</span><br></pre></td></tr></table></figure>\n<p>$ \\sum\\limits_{i=1}^{n} i^2 $</p>\n<p>若要在公式块显示为右上右下，可以使用一阶无框矩阵形式或使用<code>\\nolimits</code>命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\begin&#123;matrix&#125; \\sum_&#123;i=1&#125;^&#123;n&#125; i^2 \\end&#123;matrix&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{matrix} \\sum_{i=1}^{n} i^2 \\end{matrix}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\sum\\nolimits_&#123;i=1&#125;^&#123;n&#125; i^2</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\sum\\nolimits_{i=1}^{n} i^2</script><p>下文的显示形式均为公式块。</p>\n<p><strong>求和（累加）、求积（累乘）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sum_&#123;i=1&#125;^&#123;n&#125; i^2 \\quad \\prod_&#123;i=1&#125;^&#123;n&#125; x_i</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\sum_{i=1}^{n} i^2 \\quad \\prod_{i=1}^{n} x_i</script><p><strong>极限</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lim_&#123;x \\to \\infty&#125; (1+\\frac&#123;1&#125;&#123;x&#125;)^x = e</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\lim_{x \\to \\infty} (1+\\frac{1}{x})^x = e</script><p><strong>普通积分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\int_&#123;a&#125;^&#123;b&#125; e^x \\, \\mathrm&#123;d&#125;x</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\int_{a}^{b} e^x \\, \\mathrm{d}x</script><p><code>\\,</code>可省略，但建议加入使式子更美观；<code>\\mathrm&#123;d&#125;</code>可替换为<code>&#123;\\rm d&#125;</code>。</p>\n<p><strong>二重积分、三重积分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\iint_&#123;D&#125; f(x,y) \\, \\mathrm&#123;d&#125;\\sigma \\quad \\iiint_&#123;\\Omega&#125; f(x,y,z) \\, \\mathrm&#123;d&#125;V</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\iint_{D} f(x,y) \\, \\mathrm{d}\\sigma \\quad \\iiint_{\\Omega} f(x,y,z) \\, \\mathrm{d}V</script><p><strong>闭合曲线积分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\oint_&#123;L&#125; f(x,y) \\, \\mathrm&#123;d&#125;s</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\oint_{L} f(x,y) \\, \\mathrm{d}s</script><p><strong>其他积分符号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint</span><br></pre></td></tr></table></figure>\n<p>$ \\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint $​​</p>\n<p>注意本环境下不支持用<code>\\oiint, \\oiiint</code>表示二重闭合积分、三重闭合积分。</p>\n<p><strong>交集、并集、余积</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\bigcap_&#123;i=1&#125;^&#123;n&#125; A_i \\quad \\bigcup_&#123;j=1&#125;^&#123;m&#125; B_j</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\bigcap_{i=1}^{n} A_i \\quad \\bigcup_{j=1}^{m} B_j</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\coprod_&#123;i \\in I&#125; A_i</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\coprod_{i \\in I} A_i</script><h2 id=\"5-分式\"><a href=\"#5-分式\" class=\"headerlink\" title=\"5 分式\"></a>5 分式</h2><h3 id=\"5-1-基本输入\"><a href=\"#5-1-基本输入\" class=\"headerlink\" title=\"5.1 基本输入\"></a>5.1 基本输入</h3><p>分式可以通过<code>\\over</code>命令，两侧标记分子分母，且整体需要用花括号括起来。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = &#123; &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; &#125; \\over &#123;2a&#125; &#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx = { {-b \\pm \\sqrt{b^2-4ac} } \\over {2a} }</script><p>常用的分式用<code>\\frac&#123;分子&#125;&#123;分母&#125;</code>命令，便捷时使用<code>\\frac ab</code>快速生成$ \\frac ab $​。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\frac&#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; &#125;&#123;2a&#125; \\quad \\frac ab</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\frac{-b \\pm \\sqrt{b^2-4ac} }{2a} \\quad \\frac ab</script><h3 id=\"5-2-分式排版\"><a href=\"#5-2-分式排版\" class=\"headerlink\" title=\"5.2 分式排版\"></a>5.2 分式排版</h3><p>普通分式在行内公式会自动缩小，在公式块会显示为完整大小。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\frac&#123;1&#125;&#123;2&#125;=0.5 $</span><br><span class=\"line\">$$</span><br><span class=\"line\">\\frac&#123;1&#125;&#123;2&#125;=0.5</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>$ \\frac{1}{2}=0.5 $​</p>\n<script type=\"math/tex; mode=display\">\n\\frac{1}{2}=0.5</script><p><code>\\tfrac</code>命令用于使分式显示为<em>行内公式样式</em>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\tfrac&#123;1&#125;&#123;2&#125;=0.5</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\tfrac{1}{2}=0.5</script><p><code>\\dfrac</code>命令用于使分式显示为<em>公式块样式</em>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\dfrac&#123;1&#125;&#123;2&#125;=0.5 $</span><br></pre></td></tr></table></figure>\n<p>$ \\dfrac{1}{2}=0.5 $​</p>\n<p><strong>注意</strong></p>\n<p>在指数函数、极限、积分等场景下，尽量不使用<code>\\frac</code>命令，而使用<code>/</code>表示为横式分式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">e^&#123;\\frac&#123;i\\pi&#125;&#123;2&#125; &#125; \\quad \\int_&#123;-\\frac&#123;\\pi&#125;&#123;2&#125; &#125;^&#123;\\frac&#123;\\pi&#125;&#123;2&#125; &#125; \\sin x \\, \\mathrm&#123;d&#125;x</span><br><span class=\"line\">% Bad</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\ne^{\\frac{i\\pi}{2} } \\quad \\int_{-\\frac{\\pi}{2} }^{\\frac{\\pi}{2} } \\sin x \\, \\mathrm{d}x\n% Bad</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">e^&#123;i\\pi/2&#125; \\quad \\int_&#123;-\\pi/2&#125;^&#123;\\pi/2&#125; \\sin x \\, \\mathrm&#123;d&#125;x</span><br><span class=\"line\">% Good</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\ne^{i\\pi/2} \\quad \\int_{-\\pi/2}^{\\pi/2} \\sin x \\, \\mathrm{d}x\n% Good</script><h3 id=\"5-3-连分式\"><a href=\"#5-3-连分式\" class=\"headerlink\" title=\"5.3 连分式\"></a>5.3 连分式</h3><p>用<code>\\cfrac</code>命令输入连分式，会自动处理分子分母的高度。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\cfrac&#123;1&#125;&#123;2 + \\cfrac&#123;1&#125;&#123;2 + \\cfrac&#123;1&#125;&#123;2 + \\cdots&#125; &#125; &#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cdots} } }</script><h3 id=\"5-4-二项式系数\"><a href=\"#5-4-二项式系数\" class=\"headerlink\" title=\"5.4 二项式系数\"></a>5.4 二项式系数</h3><p>用<code>\\binom</code>命令输入，<code>\\tbinom</code>使二项式系数显示为行内公式样式，<code>\\dbinom</code>使二项式系数显示为公式块样式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\mathrm&#123;C&#125;_n^r = \\binom&#123;n&#125;&#123;r&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\mathrm{C}_n^r = \\binom{n}{r}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\tbinom&#123;n&#125;&#123;r&#125; = \\tbinom&#123;n&#125;&#123;n-r&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\tbinom{n}{r} = \\tbinom{n}{n-r}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\dbinom&#123;n&#125;&#123;r&#125; = \\dfrac&#123;n!&#125;&#123;k!\\,(n-k)!&#125; $</span><br></pre></td></tr></table></figure>\n<p>$ \\dbinom{n}{r} = \\dfrac{n!}{k!\\,(n-k)!} $​</p>\n<h2 id=\"6-矩阵、条件表达式、方程组\"><a href=\"#6-矩阵、条件表达式、方程组\" class=\"headerlink\" title=\"6 矩阵、条件表达式、方程组\"></a>6 矩阵、条件表达式、方程组</h2><p>语法为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;类型&#125;</span><br><span class=\"line\">内容</span><br><span class=\"line\">\\end&#123;类型&#125;</span><br></pre></td></tr></table></figure>\n<p>类型可以是：矩阵<code>matrix</code>、<code>pmatrix</code>、<code>bmatrix</code>、<code>Bmatrix</code>、<code>vmatrix</code>、<code>Vmatrix</code>，条件表达式<code>cases</code>，多行对齐方程式<code>aligned</code>、<code>alignedat</code>。</p>\n<p>内容中，<code>&amp;</code>符号表示每行的对齐内容，<code>\\\\</code>表示结尾处换行。</p>\n<h3 id=\"6-1-无框矩阵\"><a href=\"#6-1-无框矩阵\" class=\"headerlink\" title=\"6.1 无框矩阵\"></a>6.1 无框矩阵</h3><p>用<code>&amp;</code>分隔矩阵列，用<code>\\\\</code>分隔矩阵行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{matrix}\na & b \\\\\nc & d\n\\end{matrix}</script><h3 id=\"6-2-有框矩阵\"><a href=\"#6-2-有框矩阵\" class=\"headerlink\" title=\"6.2 有框矩阵\"></a>6.2 有框矩阵</h3><p><code>pmatrix</code>为圆括号，<code>bmatrix</code>为方括号，<code>Bmatrix</code>为花括号，<code>vmatrix</code>为竖线（行列式），<code>Vmatrix</code>为双竖线。</p>\n<p>使用<code>\\cdots</code>$\\cdots$、<code>\\ddots</code>$\\ddots$、<code>\\vdots</code>$\\vdots$输入省略号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;pmatrix&#125;</span><br><span class=\"line\">0 &amp; \\cdots &amp; 0 \\\\</span><br><span class=\"line\">\\vdots &amp; \\ddots &amp; \\vdots \\\\</span><br><span class=\"line\">0 &amp; \\cdots &amp; 0 \\\\</span><br><span class=\"line\">\\end&#123;pmatrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{pmatrix}\n0 & \\cdots & 0 \\\\\n\\vdots & \\ddots & \\vdots \\\\\n0 & \\cdots & 0 \\\\\n\\end{pmatrix}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;bmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;bmatrix&#125;</span><br><span class=\"line\">\\quad</span><br><span class=\"line\">\\begin&#123;Bmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;Bmatrix&#125;</span><br><span class=\"line\">\\quad</span><br><span class=\"line\">\\begin&#123;vmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;vmatrix&#125;</span><br><span class=\"line\">\\quad</span><br><span class=\"line\">\\begin&#123;Vmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;Vmatrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\quad\n\\begin{Bmatrix}\na & b \\\\\nc & d\n\\end{Bmatrix}\n\\quad\n\\begin{vmatrix}\na & b \\\\\nc & d\n\\end{vmatrix}\n\\quad\n\\begin{Vmatrix}\na & b \\\\\nc & d\n\\end{Vmatrix}</script><h3 id=\"6-3-条件表达式\"><a href=\"#6-3-条件表达式\" class=\"headerlink\" title=\"6.3 条件表达式\"></a>6.3 条件表达式</h3><p>用<code>&amp;</code>分隔公式与条件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(n)=</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">n/2, &amp; \\text&#123;if &#125; n \\text&#123; is even&#125; \\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if &#125; n \\text&#123; is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nf(n)=\n\\begin{cases}\nn/2, & \\text{if } n \\text{ is even} \\\\\n3n+1, & \\text{if } n \\text{ is odd}\n\\end{cases}</script><p><code>\\text</code>表示字符为文本格式，而非数学格式，注意空格处理。</p>\n<h3 id=\"6-4-多行等式、同余式\"><a href=\"#6-4-多行等式、同余式\" class=\"headerlink\" title=\"6.4 多行等式、同余式\"></a>6.4 多行等式、同余式</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;aligned&#125;</span><br><span class=\"line\">f(x) &amp; = (m+n)^2 \\\\</span><br><span class=\"line\">&amp; = m^2+2mn+n^2 \\\\</span><br><span class=\"line\">\\end&#123;aligned&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nf(x) & = (m+n)^2 \\\\\n& = m^2+2mn+n^2 \\\\\n\\end{aligned}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;aligned&#125;</span><br><span class=\"line\">3^&#123;6n+3&#125;+4^&#123;6n+3&#125;</span><br><span class=\"line\">&amp; \\equiv (3^3)^&#123;2n+1&#125;+(4^3)^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 27^&#123;2n+1&#125;+64^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 27^&#123;2n+1&#125;+(-27)^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 27^&#123;2n+1&#125;-27^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 0 \\pmod&#123;91&#125; \\\\</span><br><span class=\"line\">\\end&#123;aligned&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n3^{6n+3}+4^{6n+3}\n& \\equiv (3^3)^{2n+1}+(4^3)^{2n+1} \\\\\n& \\equiv 27^{2n+1}+64^{2n+1} \\\\\n& \\equiv 27^{2n+1}+(-27)^{2n+1} \\\\\n& \\equiv 27^{2n+1}-27^{2n+1} \\\\\n& \\equiv 0 \\pmod{91} \\\\\n\\end{aligned}</script><p><code>\\alignedat</code>用于确定行数的对齐。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;alignedat&#125;&#123;3&#125;</span><br><span class=\"line\">f(x) &amp; = (m+n)^2 \\\\</span><br><span class=\"line\">g(x) &amp; = (m-n)^2 \\\\</span><br><span class=\"line\">&amp; = m^2-2mn+n^2 \\\\</span><br><span class=\"line\">\\end&#123;alignedat&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{alignedat}{3}\nf(x) & = (m+n)^2 \\\\\ng(x) & = (m-n)^2 \\\\\n& = m^2-2mn+n^2 \\\\\n\\end{alignedat}</script><h3 id=\"6-5-方程组\"><a href=\"#6-5-方程组\" class=\"headerlink\" title=\"6.5 方程组\"></a>6.5 方程组</h3><p><strong>用<code>cases</code>表达</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">3x+5y+z=0 \\\\</span><br><span class=\"line\">7x-2y+4z=0 \\\\</span><br><span class=\"line\">-6x+3y+2z=0 \\\\</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{cases}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{cases}</script><p><strong>用<code>aligned</code>表达</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\&#123; \\begin&#123;aligned&#125;</span><br><span class=\"line\">3x+5y+z=0 \\\\</span><br><span class=\"line\">7x-2y+4z=0 \\\\</span><br><span class=\"line\">-6x+3y+2z=0 \\\\</span><br><span class=\"line\">\\end&#123;aligned&#125; \\right.</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\left\\{ \\begin{aligned}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{aligned} \\right.</script><h2 id=\"7-数组与表格\"><a href=\"#7-数组与表格\" class=\"headerlink\" title=\"7 数组与表格\"></a>7 数组与表格</h2><h3 id=\"7-1-基本数组与表格\"><a href=\"#7-1-基本数组与表格\" class=\"headerlink\" title=\"7.1 基本数组与表格\"></a>7.1 基本数组与表格</h3><p>数组和表格以<code>\\begin&#123;array&#125;&#123;定义式&#125;</code>开头，以<code>\\end&#123;array&#125;</code>结尾。定义式中定义每列对齐方式，可用<code>l</code>、<code>c</code>、<code>r</code>分别代表居左、居中、居右。若插入水平分割线，在行内容间插入<code>\\hline</code>；若插入垂直分割线，在定义式中插入<code>|</code>。表格内容用<code>&amp;</code>分隔列，用<code>\\\\</code>分隔行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class=\"line\">x &amp; 1\\text&#123;(left)&#125; &amp; 2\\text&#123;(center)&#125; &amp; 3\\text&#123;(right)&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">f(x) &amp; 0 &amp; 10 &amp; 55.5 \\\\</span><br><span class=\"line\">g(x) &amp; -1 &amp; 100 &amp; 9 \\\\</span><br><span class=\"line\">h(x) &amp; 2i &amp; 1000 &amp; 1+10i</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|lcr}\nx & 1\\text{(left)} & 2\\text{(center)} & 3\\text{(right)} \\\\\n\\hline\nf(x) & 0 & 10 & 55.5 \\\\\ng(x) & -1 & 100 & 9 \\\\\nh(x) & 2i & 1000 & 1+10i\n\\end{array}</script><h3 id=\"7-2-用数组与表格排版\"><a href=\"#7-2-用数组与表格排版\" class=\"headerlink\" title=\"7.2 用数组与表格排版\"></a>7.2 用数组与表格排版</h3><p>可以用数组与表格实现类似<code>aligned</code>的功能。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;lcr&#125;</span><br><span class=\"line\">z &amp; = &amp; a \\\\</span><br><span class=\"line\">f(x,y,z) &amp; = &amp; x+y+z</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{lcr}\nz & = & a \\\\\nf(x,y,z) & = & x+y+z\n\\end{array}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;cccc&#125;</span><br><span class=\"line\">x &amp; y &amp; x \\lor y &amp; x \\land y \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">0 &amp; 0 &amp; 0 &amp; 0 \\\\</span><br><span class=\"line\">1 &amp; 0 &amp; 1 &amp; 0 \\\\</span><br><span class=\"line\">0 &amp; 1 &amp; 1 &amp; 0 \\\\</span><br><span class=\"line\">1 &amp; 1 &amp; 1 &amp; 1</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{cccc}\nx & y & x \\lor y & x \\land y \\\\\n\\hline\n0 & 0 & 0 & 0 \\\\\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1\n\\end{array}</script><h3 id=\"7-3-嵌套数组与表格\"><a href=\"#7-3-嵌套数组与表格\" class=\"headerlink\" title=\"7.3 嵌套数组与表格\"></a>7.3 嵌套数组与表格</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% outer</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;c&#125;</span><br><span class=\"line\">\t% inner row 1</span><br><span class=\"line\">\t\\begin&#123;array&#125;&#123;cc&#125;</span><br><span class=\"line\">\t\t% inner row 1 column 1</span><br><span class=\"line\">\t\t\\begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class=\"line\">\t\t\\min &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t\\hline</span><br><span class=\"line\">\t\t0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\</span><br><span class=\"line\">\t\t1 &amp; 0 &amp; 1 &amp; 1 &amp; 1 \\\\</span><br><span class=\"line\">\t\t2 &amp; 0 &amp; 1 &amp; 2 &amp; 2 \\\\</span><br><span class=\"line\">\t\t3 &amp; 0 &amp; 1 &amp; 2 &amp; 3</span><br><span class=\"line\">\t\t\\end&#123;array&#125;</span><br><span class=\"line\">\t&amp;</span><br><span class=\"line\">\t\t% inner row 1 column 2</span><br><span class=\"line\">\t\t\\begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class=\"line\">\t\t\\max &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t\\hline</span><br><span class=\"line\">\t\t0 &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t1 &amp; 1 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t2 &amp; 2 &amp; 2 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t3 &amp; 3 &amp; 3 &amp; 3 &amp; 3</span><br><span class=\"line\">\t\t\\end&#123;array&#125;</span><br><span class=\"line\">\t\\end&#123;array&#125;</span><br><span class=\"line\">\\\\</span><br><span class=\"line\">\t% inner row 2</span><br><span class=\"line\">\t\\begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class=\"line\">\t\\Delta &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\\hline</span><br><span class=\"line\">\t0 &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t1 &amp; 1 &amp; 0 &amp; 1 &amp; 2 \\\\</span><br><span class=\"line\">\t2 &amp; 2 &amp; 1 &amp; 0 &amp; 1 \\\\</span><br><span class=\"line\">\t3 &amp; 3 &amp; 2 &amp; 1 &amp; 0</span><br><span class=\"line\">\t\\end&#123;array&#125;</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n% outer\n\\begin{array}{c}\n    % inner row 1\n    \\begin{array}{cc}\n        % inner row 1 column 1\n        \\begin{array}{c|cccc}\n        \\min & 0 & 1 & 2 & 3 \\\\\n        \\hline\n        0 & 0 & 0 & 0 & 0 \\\\\n        1 & 0 & 1 & 1 & 1 \\\\\n        2 & 0 & 1 & 2 & 2 \\\\\n        3 & 0 & 1 & 2 & 3\n        \\end{array}\n    &\n        % inner row 1 column 2\n        \\begin{array}{c|cccc}\n        \\max & 0 & 1 & 2 & 3 \\\\\n        \\hline\n        0 & 0 & 1 & 2 & 3 \\\\\n        1 & 1 & 1 & 2 & 3 \\\\\n        2 & 2 & 2 & 2 & 3 \\\\\n        3 & 3 & 3 & 3 & 3\n        \\end{array}\n    \\end{array}\n\\\\\n    % inner row 2\n    \\begin{array}{c|cccc}\n    \\Delta & 0 & 1 & 2 & 3 \\\\\n    \\hline\n    0 & 0 & 1 & 2 & 3 \\\\\n    1 & 1 & 0 & 1 & 2 \\\\\n    2 & 2 & 1 & 0 & 1 \\\\\n    3 & 3 & 2 & 1 & 0\n    \\end{array}\n\\end{array}</script><h3 id=\"7-4-分割矩阵\"><a href=\"#7-4-分割矩阵\" class=\"headerlink\" title=\"7.4 分割矩阵\"></a>7.4 分割矩阵</h3><p>在需要分割处的定义式加入<code>|</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left[</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;cc|c&#125;</span><br><span class=\"line\">1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">4 &amp; 5 &amp; 6</span><br><span class=\"line\">\\end&#123;array&#125;</span><br><span class=\"line\">\\right]</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\left[\n\\begin{array}{cc|c}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\n\\right]</script><h2 id=\"8-字体\"><a href=\"#8-字体\" class=\"headerlink\" title=\"8 字体\"></a>8 字体</h2><p>普通字符可以通过<code>\\large</code>、<code>\\small</code>控制大小。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A, \\large&#123;A&#125;, \\small&#123;A&#125;</span><br></pre></td></tr></table></figure>\n<p>$ A, \\large{A}, \\small{A} $</p>\n<h3 id=\"8-1-希腊字母\"><a href=\"#8-1-希腊字母\" class=\"headerlink\" title=\"8.1 希腊字母\"></a>8.1 希腊字母</h3><p>输入<code>\\</code>加其字母名称即可，大写字母将名称首字母大写。注意本环境下部分大写希腊字母不支持转义，需要用相似的<em>拉丁字母</em>替代。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|l|c|l&#125;</span><br><span class=\"line\">A \\alpha &amp; \\verb|A \\alpha| &amp; N \\nu &amp; \\verb|N \\nu| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">B \\beta &amp; \\verb|B \\beta| &amp; \\Xi \\xi &amp; \\verb|\\Xi \\xi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Gamma \\gamma &amp; \\verb|\\Gamma \\gamma| &amp; O \\omicron &amp; \\verb|O \\omicron| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Delta \\delta &amp; \\verb|\\Delta \\delta| &amp; \\Pi \\pi &amp; \\verb|\\Pi \\pi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">E \\epsilon &amp; \\verb|E \\epsilon| &amp; P \\rho &amp; \\verb|P \\rho| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">Z \\zeta &amp; \\verb|Z \\zeta| &amp; \\Sigma \\sigma &amp; \\verb|\\Sigma \\sigma| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">H \\eta &amp; \\verb|H \\eta| &amp; T \\tau &amp; \\verb|T \\tau| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Theta \\theta &amp; \\verb|\\Theta \\theta| &amp; \\Upsilon \\upsilon &amp; \\verb|\\Upsilon \\upsilon| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">I \\iota &amp; \\verb|I \\iota| &amp; \\Phi \\phi &amp; \\verb|\\Phi \\phi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">K \\kappa &amp; \\verb|K \\kappa| &amp; X \\chi &amp; \\verb|X \\chi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Lambda \\lambda &amp; \\verb|\\Lambda \\lambda| &amp; \\Psi \\psi &amp; \\verb|\\Psi \\psi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">M \\mu &amp; \\verb|M \\mu| &amp; \\Omega \\omega &amp; \\verb|\\Omega \\omega| \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|l|c|l}\nA \\alpha & \\verb|A \\alpha| & N \\nu & \\verb|N \\nu| \\\\\n\\hline\nB \\beta & \\verb|B \\beta| & \\Xi \\xi & \\verb|\\Xi \\xi| \\\\\n\\hline\n\\Gamma \\gamma & \\verb|\\Gamma \\gamma| & O \\omicron & \\verb|O \\omicron| \\\\\n\\hline\n\\Delta \\delta & \\verb|\\Delta \\delta| & \\Pi \\pi & \\verb|\\Pi \\pi| \\\\\n\\hline\nE \\epsilon & \\verb|E \\epsilon| & P \\rho & \\verb|P \\rho| \\\\\n\\hline\nZ \\zeta & \\verb|Z \\zeta| & \\Sigma \\sigma & \\verb|\\Sigma \\sigma| \\\\\n\\hline\nH \\eta & \\verb|H \\eta| & T \\tau & \\verb|T \\tau| \\\\\n\\hline\n\\Theta \\theta & \\verb|\\Theta \\theta| & \\Upsilon \\upsilon & \\verb|\\Upsilon \\upsilon| \\\\\n\\hline\nI \\iota & \\verb|I \\iota| & \\Phi \\phi & \\verb|\\Phi \\phi| \\\\\n\\hline\nK \\kappa & \\verb|K \\kappa| & X \\chi & \\verb|X \\chi| \\\\\n\\hline\n\\Lambda \\lambda & \\verb|\\Lambda \\lambda| & \\Psi \\psi & \\verb|\\Psi \\psi| \\\\\n\\hline\nM \\mu & \\verb|M \\mu| & \\Omega \\omega & \\verb|\\Omega \\omega| \\\\\n\\end{array}</script><p>伽玛函数可以用<code>digamma</code>表示，另外部分变量形式可以用<code>\\var-</code>开头。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi</span><br></pre></td></tr></table></figure>\n<p>$ \\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi $</p>\n<h3 id=\"8-2-希伯来符号\"><a href=\"#8-2-希伯来符号\" class=\"headerlink\" title=\"8.2 希伯来符号\"></a>8.2 希伯来符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\aleph, \\beth, \\gimel, \\daleth</span><br></pre></td></tr></table></figure>\n<p>$ \\aleph, \\beth, \\gimel, \\daleth $</p>\n<h3 id=\"8-3-特殊字体形式\"><a href=\"#8-3-特殊字体形式\" class=\"headerlink\" title=\"8.3 特殊字体形式\"></a>8.3 特殊字体形式</h3><h4 id=\"8-3-1-黑板报粗体\"><a href=\"#8-3-1-黑板报粗体\" class=\"headerlink\" title=\"8.3.1 黑板报粗体\"></a>8.3.1 黑板报粗体</h4><p>用<code>\\mathbb&#123;text&#125;</code>或<code>\\Bbb&#123;text&#125;</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathbb&#125; &amp; \\mathbb&#123;SAMPLE&#125; &amp; \\mathbb&#123;sample&#125; &amp; \\mathbb&#123;0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;Bbb&#125; &amp; \\Bbb&#123;SAMPLE&#125; &amp; \\Bbb&#123;sample&#125; &amp; \\Bbb&#123;0123&#125;</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbb} & \\mathbb{SAMPLE} & \\mathbb{sample} & \\mathbb{0123} \\\\\n\\hline\n\\text{Bbb} & \\Bbb{SAMPLE} & \\Bbb{sample} & \\Bbb{0123}\n\\end{array}</script><h4 id=\"8-3-2-粗体\"><a href=\"#8-3-2-粗体\" class=\"headerlink\" title=\"8.3.2 粗体\"></a>8.3.2 粗体</h4><p>用<code>\\mathbf&#123;text&#125;</code>或<code>&#123;\\bf text&#125;</code>表示，注意控制范围，对特殊符号无效。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathbf&#125; &amp; \\mathbf&#123;SAMPLE&#125; &amp; \\mathbf&#123;sample&#125; &amp; \\mathbf&#123;0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;bf&#125; &amp; &#123;\\bf SAMPLE&#125; &amp; &#123;\\bf sample&#125; &amp; &#123;\\bf 0123&#125;</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbf} & \\mathbf{SAMPLE} & \\mathbf{sample} & \\mathbf{0123} \\\\\n\\hline\n\\text{bf} & {\\bf SAMPLE} & {\\bf sample} & {\\bf 0123}\n\\end{array}</script><h4 id=\"8-3-3-粗体符号\"><a href=\"#8-3-3-粗体符号\" class=\"headerlink\" title=\"8.3.3 粗体符号\"></a>8.3.3 粗体符号</h4><p>用<code>\\boldsymbol&#123;text&#125;</code>表示，对特殊符号有效。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|cccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega &amp; \\sin\\in\\to \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;blodsymbol&#125; &amp; \\boldsymbol&#123;SAMPLE&#125; &amp; \\boldsymbol&#123;sample&#125; &amp; \\boldsymbol&#123;0123&#125; &amp; \\boldsymbol&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\boldsymbol&#123;\\Delta\\Theta\\Sigma\\Omega&#125; &amp; \\boldsymbol&#123;\\sin\\in\\to&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|cccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega & \\sin\\in\\to \\\\\n\\hline\n\\text{blodsymbol} & \\boldsymbol{SAMPLE} & \\boldsymbol{sample} & \\boldsymbol{0123} & \\boldsymbol{\\delta\\theta\\sigma\\omega} & \\boldsymbol{\\Delta\\Theta\\Sigma\\Omega} & \\boldsymbol{\\sin\\in\\to} \\\\\n\\end{array}</script><h4 id=\"8-3-4-斜体（意大利体）\"><a href=\"#8-3-4-斜体（意大利体）\" class=\"headerlink\" title=\"8.3.4 斜体（意大利体）\"></a>8.3.4 斜体（意大利体）</h4><p>用<code>\\mathit&#123;text&#125;</code>或<code>&#123;\\it text&#125;</code>或<code>&#123;\\mit text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathit&#125; &amp; \\mathit&#123;SAMPLE&#125; &amp; \\mathit&#123;sample&#125; &amp; \\mathit&#123;0123&#125; &amp; \\mathit&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathit&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;it&#125; &amp; &#123;\\it SAMPLE&#125; &amp; &#123;\\it sample&#125; &amp; &#123;\\it 0123&#125; &amp; &#123;\\it \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\it \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mit&#125; &amp; &#123;\\mit SAMPLE&#125; &amp; &#123;\\mit sample&#125; &amp; &#123;\\mit 0123&#125; &amp; &#123;\\mit \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\mit \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathit} & \\mathit{SAMPLE} & \\mathit{sample} & \\mathit{0123} & \\mathit{\\delta\\theta\\sigma\\omega} & \\mathit{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{it} & {\\it SAMPLE} & {\\it sample} & {\\it 0123} & {\\it \\delta\\theta\\sigma\\omega} & {\\it \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{mit} & {\\mit SAMPLE} & {\\mit sample} & {\\mit 0123} & {\\mit \\delta\\theta\\sigma\\omega} & {\\mit \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<code>\\mathit</code>与<code>\\it</code>等效；对于<em>拉丁字母、小写希腊字母</em>，默认字体即为<code>\\mit</code>。</p>\n<h4 id=\"8-3-5-罗马体\"><a href=\"#8-3-5-罗马体\" class=\"headerlink\" title=\"8.3.5 罗马体\"></a>8.3.5 罗马体</h4><p>用<code>\\mathrm&#123;text&#125;</code>或<code>&#123;\\rm text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathrm&#125; &amp; \\mathrm&#123;SAMPLE&#125; &amp; \\mathrm&#123;sample&#125; &amp; \\mathrm&#123;0123&#125; &amp; \\mathrm&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathrm&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;rm&#125; &amp; &#123;\\rm SAMPLE&#125; &amp; &#123;\\rm sample&#125; &amp; &#123;\\rm 0123&#125; &amp; &#123;\\rm \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\rm \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathrm} & \\mathrm{SAMPLE} & \\mathrm{sample} & \\mathrm{0123} & \\mathrm{\\delta\\theta\\sigma\\omega} & \\mathrm{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{rm} & {\\rm SAMPLE} & {\\rm sample} & {\\rm 0123} & {\\rm \\delta\\theta\\sigma\\omega} & {\\rm \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>小写希腊字母</em>不支持罗马体；对于<em>阿拉伯数字、大写希腊字母</em>，默认字体即为<code>\\rm</code>。</p>\n<h4 id=\"8-3-6-等线体-无衬线体\"><a href=\"#8-3-6-等线体-无衬线体\" class=\"headerlink\" title=\"8.3.6 等线体/无衬线体\"></a>8.3.6 等线体/无衬线体</h4><p>用<code>\\mathsf&#123;text&#125;</code>或<code>&#123;\\sf text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathsf&#125; &amp; \\mathsf&#123;SAMPLE&#125; &amp; \\mathsf&#123;sample&#125; &amp; \\mathsf&#123;0123&#125; &amp; \\mathsf&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathsf&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;sf&#125; &amp; &#123;\\sf SAMPLE&#125; &amp; &#123;\\sf sample&#125; &amp; &#123;\\sf 0123&#125; &amp; &#123;\\sf \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\sf \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathsf} & \\mathsf{SAMPLE} & \\mathsf{sample} & \\mathsf{0123} & \\mathsf{\\delta\\theta\\sigma\\omega} & \\mathsf{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{sf} & {\\sf SAMPLE} & {\\sf sample} & {\\sf 0123} & {\\sf \\delta\\theta\\sigma\\omega} & {\\sf \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>小写希腊字母</em>不支持无衬线体。</p>\n<h4 id=\"8-3-7-手写体\"><a href=\"#8-3-7-手写体\" class=\"headerlink\" title=\"8.3.7 手写体\"></a>8.3.7 手写体</h4><p>用<code>\\mathscr&#123;text&#125;</code>或<code>&#123;\\scr text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathscr&#125; &amp; \\mathscr&#123;SAMPLE&#125; &amp; \\mathscr&#123;sample&#125; &amp; \\mathscr&#123;0123&#125; &amp; \\mathscr&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathscr&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;scr&#125; &amp; &#123;\\scr SAMPLE&#125; &amp; &#123;\\scr sample&#125; &amp; &#123;\\scr 0123&#125; &amp; &#123;\\scr \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\scr \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathscr} & \\mathscr{SAMPLE} & \\mathscr{sample} & \\mathscr{0123} & \\mathscr{\\delta\\theta\\sigma\\omega} & \\mathscr{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{scr} & {\\scr SAMPLE} & {\\scr sample} & {\\scr 0123} & {\\scr \\delta\\theta\\sigma\\omega} & {\\scr \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>阿拉伯数字、大写希腊字母</em>显示结果与斜体等效；<em>小写希腊字母</em>不改变。</p>\n<h4 id=\"8-3-8-花体\"><a href=\"#8-3-8-花体\" class=\"headerlink\" title=\"8.3.8 花体\"></a>8.3.8 花体</h4><p>用<code>\\mathcal&#123;text&#125;</code>或<code>&#123;\\cal text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathcal&#125; &amp; \\mathcal&#123;SAMPLE&#125; &amp; \\mathcal&#123;sample&#125; &amp; \\mathcal&#123;0123&#125; &amp; \\mathcal&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathcal&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;cal&#125; &amp; &#123;\\cal SAMPLE&#125; &amp; &#123;\\cal sample&#125; &amp; &#123;\\cal 0123&#125; &amp; &#123;\\cal \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\cal \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathcal} & \\mathcal{SAMPLE} & \\mathcal{sample} & \\mathcal{0123} & \\mathcal{\\delta\\theta\\sigma\\omega} & \\mathcal{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{cal} & {\\cal SAMPLE} & {\\cal sample} & {\\cal 0123} & {\\cal \\delta\\theta\\sigma\\omega} & {\\cal \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>阿拉伯数字、大写希腊字母</em>显示结果与斜体等效；<em>小写拉丁字母、小写希腊字母</em>不改变。</p>\n<h4 id=\"8-3-9-打字机体\"><a href=\"#8-3-9-打字机体\" class=\"headerlink\" title=\"8.3.9 打字机体\"></a>8.3.9 打字机体</h4><p>用<code>\\mathtt&#123;text&#125;</code>或<code>&#123;\\tt text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathtt&#125; &amp; \\mathtt&#123;SAMPLE&#125; &amp; \\mathtt&#123;sample&#125; &amp; \\mathtt&#123;0123&#125; &amp; \\mathtt&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathtt&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;tt&#125; &amp; &#123;\\tt SAMPLE&#125; &amp; &#123;\\tt sample&#125; &amp; &#123;\\tt 0123&#125; &amp; &#123;\\tt \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\tt \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathtt} & \\mathtt{SAMPLE} & \\mathtt{sample} & \\mathtt{0123} & \\mathtt{\\delta\\theta\\sigma\\omega} & \\mathtt{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{tt} & {\\tt SAMPLE} & {\\tt sample} & {\\tt 0123} & {\\tt \\delta\\theta\\sigma\\omega} & {\\tt \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>小写希腊字母</em>不支持打字机体。</p>\n<h4 id=\"8-3-10-Fraktur体-德国哥特体\"><a href=\"#8-3-10-Fraktur体-德国哥特体\" class=\"headerlink\" title=\"8.3.10 Fraktur体/德国哥特体\"></a>8.3.10 Fraktur体/德国哥特体</h4><p>用<code>\\mathfrak&#123;text&#125;</code>或<code>&#123;\\frak text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathfrak&#125; &amp; \\mathfrak&#123;SAMPLE&#125; &amp; \\mathfrak&#123;sample&#125; &amp; \\mathfrak&#123;0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;frak&#125; &amp; &#123;\\frak SAMPLE&#125; &amp; &#123;\\frak sample&#125; &amp; &#123;\\frak 0123&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathfrak} & \\mathfrak{SAMPLE} & \\mathfrak{sample} & \\mathfrak{0123} \\\\\n\\hline\n\\text{frak} & {\\frak SAMPLE} & {\\frak sample} & {\\frak 0123} \\\\\n\\end{array}</script><h4 id=\"8-3-11-小型手写体\"><a href=\"#8-3-11-小型手写体\" class=\"headerlink\" title=\"8.3.11 小型手写体\"></a>8.3.11 小型手写体</h4><p>用<code>&#123;\\scriptstyle text&#125;</code>命令，同时可以嵌套其他字体。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;scriptstyle&#125; &amp; &#123;\\scriptstyle SAMPLE&#125; &amp; &#123;\\scriptstyle sample&#125; &amp; &#123;\\scriptstyle 0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;scriptstyle+text&#125; &amp; &#123;\\scriptstyle \\text&#123;SAMPLE&#125; &#125; &amp; &#123;\\scriptstyle \\text&#123;sample&#125; &#125; &amp; &#123;\\scriptstyle \\text&#123;0123&#125; &#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{scriptstyle} & {\\scriptstyle SAMPLE} & {\\scriptstyle sample} & {\\scriptstyle 0123} \\\\\n\\hline\n\\text{scriptstyle+text} & {\\scriptstyle \\text{SAMPLE} } & {\\scriptstyle \\text{sample} } & {\\scriptstyle \\text{0123} } \\\\\n\\end{array}</script><h3 id=\"8-4-混合字体\"><a href=\"#8-4-混合字体\" class=\"headerlink\" title=\"8.4 混合字体\"></a>8.4 混合字体</h3><p>正常情况下，拉丁字母会被当做变量斜体显示。若需要非斜体显示，可以用<code>\\text</code>命令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abc \\quad \\text&#123;abc&#125;</span><br></pre></td></tr></table></figure>\n<p>$ abc \\quad \\text{abc} $​</p>\n<p><code>\\text</code>中仍可以使用<code>$ 公式 $</code>插入公式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(n)=</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">n/2, &amp; \\text&#123;if $n$ is even&#125; \\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if $n$ is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nf(n)=\n\\begin{cases}\nn/2, & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}</script><p>混合输入时，注意空格显示。可以使用<code>~</code>或<code>\\</code>加空格强制显示空格。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">\\text&#123;if&#125; n \\text&#123;is even&#125; \\\\ % Bad</span><br><span class=\"line\">\\text&#123;if &#125; n \\text&#123; is even&#125; \\\\ % Good</span><br><span class=\"line\">\\text&#123;if&#125;~n~\\text&#123;is even&#125; \\\\ % Good</span><br><span class=\"line\">\\text&#123;if&#125;\\ n\\ \\text&#123;is even&#125; \\\\ % Good</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{matrix}\n\\text{if} n \\text{is even} \\\\ % Bad\n\\text{if } n \\text{ is even} \\\\ % Good\n\\text{if}~n~\\text{is even} \\\\ % Good\n\\text{if}\\ n\\ \\text{is even} \\\\ % Good\n\\end{matrix}</script><h2 id=\"9-括号\"><a href=\"#9-括号\" class=\"headerlink\" title=\"9 括号\"></a>9 括号</h2><p>圆括号<code>()</code>、方括号<code>[]</code>表示其本身，花括号<code>&#123;&#125;</code>需要<code>\\</code>转义表示。</p>\n<p><code>\\left</code>和<code>\\right</code>命令用来生成自动匹配高度括号或括号型字符。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(\\dfrac&#123;1&#125;&#123;2&#125;)^2 \\quad \\left( \\dfrac&#123;1&#125;&#123;2&#125; \\right) ^2</span><br></pre></td></tr></table></figure>\n<p>$ (\\dfrac{1}{2})^2 \\quad \\left( \\dfrac{1}{2} \\right) ^2 $</p>\n<h3 id=\"9-1-圆括号、方括号、花括号\"><a href=\"#9-1-圆括号、方括号、花括号\" class=\"headerlink\" title=\"9.1 圆括号、方括号、花括号\"></a>9.1 圆括号、方括号、花括号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\&#123; \\dfrac ab \\right\\&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\{ \\dfrac ab \\right\\} $</p>\n<h3 id=\"9-2-角括号、单竖线（绝对值）、双竖线（范数）\"><a href=\"#9-2-角括号、单竖线（绝对值）、双竖线（范数）\" class=\"headerlink\" title=\"9.2 角括号、单竖线（绝对值）、双竖线（范数）\"></a>9.2 角括号、单竖线（绝对值）、双竖线（范数）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\|</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\| $</p>\n<h3 id=\"9-3-取整函数\"><a href=\"#9-3-取整函数\" class=\"headerlink\" title=\"9.3 取整函数\"></a>9.3 取整函数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil $</p>\n<h3 id=\"9-4-斜线与箭头\"><a href=\"#9-4-斜线与箭头\" class=\"headerlink\" title=\"9.4 斜线与箭头\"></a>9.4 斜线与箭头</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left/ \\dfrac ab \\right\\backslash</span><br></pre></td></tr></table></figure>\n<p>$ \\left/ \\dfrac ab \\right\\backslash $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow $</p>\n<h3 id=\"9-5-混合括号\"><a href=\"#9-5-混合括号\" class=\"headerlink\" title=\"9.5 混合括号\"></a>9.5 混合括号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left[ \\dfrac&#123;1&#125;&#123;2&#125;, 1 \\right) \\quad \\left\\langle \\psi \\right|</span><br></pre></td></tr></table></figure>\n<p>$ \\left[ \\dfrac{1}{2}, 1 \\right) \\quad \\left\\langle \\psi \\right| $</p>\n<h3 id=\"9-6-单边括号\"><a href=\"#9-6-单边括号\" class=\"headerlink\" title=\"9.6 单边括号\"></a>9.6 单边括号</h3><p>用<code>\\left.</code>或<code>\\right.</code>匹配另一边。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\&#123;</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;l&#125;</span><br><span class=\"line\">x+y=3, \\\\</span><br><span class=\"line\">2x+3y=8</span><br><span class=\"line\">\\end&#123;array&#125;</span><br><span class=\"line\">\\right.</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\{<br>\\begin{array}{l}<br>x+y=3, \\\\<br>2x+3y=8<br>\\end{array}<br>\\right. $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left. \\dfrac ab \\right\\&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\left. \\dfrac ab \\right\\} $</p>\n<h3 id=\"9-7-控制括号大小\"><a href=\"#9-7-控制括号大小\" class=\"headerlink\" title=\"9.7 控制括号大小\"></a>9.7 控制括号大小</h3><p>使用<code>\\big</code>、<code>\\Big</code>、<code>\\bigg</code>、<code>\\Bigg</code>控制括号大小。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\&#123; \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\&#125;*5</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\{ \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\}*5 $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Bigg\\&#123; \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\&#125;*5</span><br></pre></td></tr></table></figure>\n<p>$ \\Bigg\\{ \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\}*5 $</p>\n<h2 id=\"10-空格\"><a href=\"#10-空格\" class=\"headerlink\" title=\"10 空格\"></a>10 空格</h2><p>LaTeX会忽略公式中的空格，空格控制从宽到窄依次为：</p>\n<p><strong>双quad空格</strong>：2个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\qquad \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\qquad \\beta $</p>\n<p><strong>quad空格</strong>：1个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\quad \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\quad \\beta $​</p>\n<p><strong>空格</strong>：1/3个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\ \\beta ~ \\gamma</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\ \\beta ~ \\gamma $</p>\n<p><strong>中空格</strong>：2/7个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\; \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\; \\beta $​</p>\n<p><strong>小空格</strong>：1/6个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\, \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\, \\beta $​</p>\n<p><strong>无空格</strong>：0个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\beta $​</p>\n<p><strong>紧贴</strong>：-1/6个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\! \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\! \\beta $​</p>\n<h2 id=\"11-颜色\"><a href=\"#11-颜色\" class=\"headerlink\" title=\"11 颜色\"></a>11 颜色</h2><p>使用<code>&#123;\\color&#123;color&#125;&#123;text&#125; &#125;</code>更改文字颜色，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\color&#123;red&#125;&#123;text&#125; \\quad \\color&#123;yellow&#125;&#123;text&#125; \\quad \\color&#123;blue&#125;&#123;text&#125; \\quad \\color&#123;green&#125;&#123;text&#125; \\quad \\color&#123;purple&#125;&#123;text&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\color{red}{text} \\quad \\color{yellow}{text} \\quad \\color{blue}{text} \\quad \\color{green}{text} \\quad \\color{purple}{text} $​</p>\n<p>color名小写时表示简单色调，首字母大写时表示较为复杂的色调。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\color&#123;Red&#125;&#123;text&#125; \\quad \\color&#123;Orange&#125;&#123;text&#125; \\quad \\color&#123;RoyalBlue&#125;&#123;text&#125; \\quad \\color&#123;Violet&#125;&#123;text&#125; \\quad \\color&#123;LimeGreen&#125;&#123;text&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\color{Red}{text} \\quad \\color{Orange}{text} \\quad \\color{RoyalBlue}{text} \\quad \\color{Violet}{text} \\quad \\color{LimeGreen}{text} $</p>\n<p>使用<code>&#123;\\color&#123; #rgb&#125;&#123;text&#125; &#125;</code>选择更多颜色，<code>rgb</code>的范围是<code>0-9</code>、<code>A-F</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\color&#123; #0FF&#125;&#123;text&#125; \\quad \\color&#123; #00F&#125;&#123;text&#125; \\quad \\color&#123; #F0F&#125;&#123;text&#125; \\quad \\color&#123; #0F0&#125;&#123;text&#125; \\quad \\color&#123; #6CF&#125;&#123;text&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\color{ #0FF}{text} \\quad \\color{ #00F}{text} \\quad \\color{ #F0F}{text} \\quad \\color{ #0F0}{text} \\quad \\color{ #6CF}{text} $</p>\n<h2 id=\"12-小技巧\"><a href=\"#12-小技巧\" class=\"headerlink\" title=\"12 小技巧\"></a>12 小技巧</h2><ol>\n<li><p>如何打出如下格式？</p>\n<p>$ \\mathop{x} \\limits_a^b $</p>\n<p>由于<code>\\limits</code>只能用在运算符（如<code>\\sum</code>）后，所以可以用<code>\\mathop</code>命令使字母变成运算符。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mathop&#123;x&#125; \\limits_a^b</span><br></pre></td></tr></table></figure>\n<p>也可以选择<code>\\overset</code>和<code>\\underset</code>实现。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\underset&#123;a&#125;&#123;\\overset&#123;b&#125;&#123;x&#125; &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>|</code>和<code>\\vert</code>、<code>\\mid</code>的区别：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| \\quad \\vert \\quad \\mid</span><br></pre></td></tr></table></figure>\n<p>$ | \\quad \\vert \\quad \\mid $​</p>\n<p>分以下情况讨论：</p>\n<ul>\n<li><p><strong>绝对值</strong></p>\n<p><code>|</code>与<code>\\vert</code>均可，还可以使用<code>\\lvert</code>、<code>\\rvert</code>。注意到下例中，-2左侧的<code>\\vert</code>被识别为<em>普通元素</em>，而非<em>关系元素</em>，因此在非匹配情况下，不建议使用<code>\\vert</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert</span><br></pre></td></tr></table></figure>\n<p>$ |-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert $​</p>\n<p>当遇到分数时，使用<code>\\left</code>、<code>\\right</code>匹配高度。注意<code>\\lvert</code>、<code>\\rvert</code>并不会匹配高度！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert</span><br></pre></td></tr></table></figure>\n<p>$ \\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert $​</p>\n</li>\n<li><p><strong>整除</strong></p>\n<p>用关系符号<code>\\mid</code>表示。如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a \\mid b</span><br></pre></td></tr></table></figure>\n<p>$ a \\mid b $</p>\n<p>表示$a$能整除$b$​，即$b$能被$a$整除，如$ 3 \\mid 9 $表示9能被3整除。</p>\n<p>注意<code>\\mid</code>不可伸长，伸长需要借助<code>|</code>，使用单边匹配<code>|</code>的方法，或<code>\\middle</code>命令（<code>\\middle</code>需要左右为<code>\\left.</code>及<code>\\right.</code>）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right.</span><br></pre></td></tr></table></figure>\n<p>$ \\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right. $​</p>\n</li>\n<li><p><strong>集合</strong></p>\n<p>同上，应用<code>\\mid</code>，伸长时用<code>\\middle|</code>替代。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">\\left\\&#123; x \\mid x \\in \\mathbb&#123;R&#125; \\text&#123; and &#125; x \\ne 1 \\right\\&#125; \\\\</span><br><span class=\"line\">\\left\\&#123; \\dfrac ab \\mid a,b \\in \\mathbb&#123;N&#125; \\text&#123; and &#125; b &gt; 5 \\right\\&#125; \\\\</span><br><span class=\"line\">\\left\\&#123; \\left. \\dfrac ab \\middle| a,b \\in \\mathbb&#123;N&#125; \\text&#123; and &#125; b &gt; 5 \\right. \\right\\&#125;</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix}<br>\\left\\{ x \\mid x \\in \\mathbb{R} \\text{ and } x \\ne 1 \\right\\} \\\\<br>\\left\\{ \\dfrac ab \\mid a,b \\in \\mathbb{N} \\text{ and } b &gt; 5 \\right\\} \\\\<br>\\left\\{ \\left. \\dfrac ab \\middle| a,b \\in \\mathbb{N} \\text{ and } b &gt; 5 \\right. \\right\\}<br>\\end{matrix} $​</p>\n</li>\n<li><p><strong>函数</strong></p>\n<p>因为通常高度不固定，因此建议用<code>|</code>表示并匹配高度。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f&#x27;(x_0) = \\left. f&#x27;(x) \\right| _&#123;x=x_0&#125; = \\left. \\dfrac&#123;\\mathrm&#123;d&#125;f&#125;&#123;\\mathrm&#123;d&#125;x&#125; \\right| _&#123;x=x_0&#125;</span><br></pre></td></tr></table></figure>\n<p>$ f’(x_0) = \\left. f’(x) \\right| _{x=x_0} = \\left. \\dfrac{\\mathrm{d}f}{\\mathrm{d}x} \\right| _{x=x_0} $</p>\n</li>\n<li><p><strong>双竖线</strong></p>\n<p>把<code>|</code>、<code>\\vert</code>、<code>\\lvert</code>、<code>\\rvert</code>、<code>\\mid</code>分别替换为<code>\\|</code>、<code>\\Vert</code>、<code>\\lVert</code>、<code>\\rVert</code>、<code>\\parallel</code>即可，基本属性与上述对应单竖线类似。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m</span><br></pre></td></tr></table></figure>\n<p>$ \\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m $</p>\n</li>\n</ul>\n</li>\n<li><p>如何输入斜分式？</p>\n<p>$ {}^1/_2 $​</p>\n<p>用上下标即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#125;^1/_2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何输入化学方程式？</p>\n<p>$ \\mathrm{CH_3CH_2OH \\xrightarrow[170^\\circ C]{浓H_2SO_4} CH_2=CH_2 \\uparrow + H_2O } $</p>\n<p>使用<code>\\xrightarrow</code>和已有的符号即可。也可使用宏包，在此不表。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mathrm&#123;CH_3CH_2OH \\xrightarrow[170^\\circ C]&#123;浓H_2SO_4&#125; CH_2=CH_2 \\uparrow + H_2O &#125;</span><br></pre></td></tr></table></figure>\n<p>给箭头加文字有如下方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">\\xleftarrow[x+y+z]&#123;x+y+z+1&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\xrightarrow[x+y+z]&#123;x+y+z+1&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\overset&#123;x+y&#125;&#123;\\rightarrow&#125; \\\\ % 长度固定</span><br><span class=\"line\">\\underrightarrow&#123;x+y+z&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\underset&#123;x+y&#125;&#123;\\leftarrow&#125; \\\\ % 长度固定</span><br><span class=\"line\">\\overleftarrow&#123;x+y+z&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix}<br>\\xleftarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度<br>\\xrightarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度<br>\\overset{x+y}{\\rightarrow} \\\\ % 长度固定<br>\\underrightarrow{x+y+z} \\\\ % 自动调整长度<br>\\underset{x+y}{\\leftarrow} \\\\ % 长度固定<br>\\overleftarrow{x+y+z} \\\\ % 自动调整长度<br>\\end{matrix} $</p>\n</li>\n<li><p>如何给公式加方框？</p>\n<p>用<code>\\boxed</code>命令或用1*1表格的边框。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\boxed &#123;E=mc^2&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\boxed {E=mc^2} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;|c|&#125;</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">E=mc^2 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{array}{|c|}<br>\\hline<br>E=mc^2 \\\\<br>\\hline<br>\\end{array} $</p>\n</li>\n<li><p>如何输入分数的约分形式/如何输入删除线？</p>\n<p>$ \\require{cancel} \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} $</p>\n<p>可以使用<code>\\cancel</code>、<code>\\bcancel</code>、<code>\\xcancel</code>和<code>\\cancelto</code>命令（需要<code>\\require</code>导包）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\require&#123;cancel&#125;</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;rl&#125;</span><br><span class=\"line\">\\verb|y+\\cancel&#123;x&#125;| &amp; y+\\cancel&#123;x&#125; \\\\</span><br><span class=\"line\">\\verb|\\cancel&#123;y+x&#125;| &amp; \\cancel&#123;y+x&#125; \\\\</span><br><span class=\"line\">\\verb|y+\\bcancel&#123;x&#125;| &amp; y+\\bcancel&#123;x&#125; \\\\</span><br><span class=\"line\">\\verb|y+\\xcancel&#123;x&#125;| &amp; y+\\xcancel&#123;x&#125; \\\\</span><br><span class=\"line\">\\verb|y+\\cancelto&#123;0&#125;&#123;x&#125;| &amp; y+\\cancelto&#123;0&#125;&#123;x&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\require{cancel}\n\\begin{array}{rl}\n\\verb|y+\\cancel{x}| & y+\\cancel{x} \\\\\n\\verb|\\cancel{y+x}| & \\cancel{y+x} \\\\\n\\verb|y+\\bcancel{x}| & y+\\bcancel{x} \\\\\n\\verb|y+\\xcancel{x}| & y+\\xcancel{x} \\\\\n\\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x} \\\\\n\\end{array}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\require&#123;cancel&#125;</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;c&#125;</span><br><span class=\"line\">\\verb+\\dfrac&#123;\\cancel&#123;15&#125;3&#125;&#123;\\cancel&#123;25&#125;5&#125; = \\dfrac&#123;3&#125;&#123;5&#125;+ \\\\</span><br><span class=\"line\">\\dfrac&#123;\\cancel&#123;15&#125;3&#125;&#123;\\cancel&#123;25&#125;5&#125; = \\dfrac&#123;3&#125;&#123;5&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\require{cancel}\n\\begin{array}{c}\n\\verb+\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5}+ \\\\\n\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} \\\\\n\\end{array}</script><p>上例还使用了<code>\\verb</code>命令来显示原文照排效果。</p>\n</li>\n</ol>\n<h2 id=\"13-示例\"><a href=\"#13-示例\" class=\"headerlink\" title=\"13 示例\"></a>13 示例</h2><p>以下公式来源于：Tsung-Chyan Lai,Yuri N. Sotskov,Alexandre Dolgui. The stability radius of an optimal line balance with maximum efficiency for a simple assembly line[J]. European Journal of Operational Research,2018,274(2):</p>\n<ol>\n<li><p>导数、括号匹配、上下标、特殊符号、大型运算符</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t&#x27; \\left( V_k^&#123;b_r&#125; \\right) := \\sum_&#123;i \\in V_k^&#123;b_r&#125; &#125; t_i&#x27; = \\sum_&#123;i \\in V_k^&#123;b_r&#125; \\setminus \\left\\&#123; j \\right\\&#125; &#125; t_i&#x27;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nt' \\left( V_k^{b_r} \\right) := \\sum_{i \\in V_k^{b_r} } t_i' = \\sum_{i \\in V_k^{b_r} \\setminus \\left\\{ j \\right\\} } t_i'</script></li>\n<li><p>希腊字母、括号匹配、特殊符号、字母标记</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\delta_&#123;b_1u&#125;^&#123;=b_rk&#125; = \\frac&#123;t \\left( V_k^&#123;b_r&#125; \\right) - t \\left( V_u^&#123;b_1&#125; \\right)&#125;&#123;\\left| \\tilde&#123;V&#125;_k^&#123;b_r&#125; \\oplus \\tilde&#123;V&#125;_u^&#123;b_1&#125; \\right|&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\delta_{b_1u}^{=b_rk} = \\frac{t \\left( V_k^{b_r} \\right) - t \\left( V_u^{b_1} \\right)}{\\left| \\widetilde{V}_k^{b_r} \\oplus \\widetilde{V}_u^{b_1} \\right|}</script></li>\n<li><p>希腊字母、特殊符号、条件表达式、函数、正文字体</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gamma \\left( b_r \\right) :=</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">\\frac&#123;1&#125;&#123;\\tilde&#123;n&#125; &#125; \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\&#123; t \\left( V_k^&#123;b_r&#125; \\right) : &#123;\\widetilde&#123;V&#125;_k^&#123;b_r&#125; &#125; \\notin W \\left( b_r, t \\right) \\right\\&#125; \\right], &amp; \\text&#123;if $k \\in \\left\\&#123; 1, 2, \\ldots, m \\left( b_r \\right) \\right\\&#125;$ with $t \\left( V_k^&#123;b_r&#125; \\right) &lt; c \\left( b_r, t \\right)$;&#125; \\\\</span><br><span class=\"line\">\\min \\left\\&#123; t_i : i \\in \\widetilde&#123;V&#125; \\right\\&#125;, &amp; \\text&#123;if $t \\left( V_k^&#123;b_r&#125; \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\&#123; 1, 2, \\ldots, m \\left( b_r \\right) \\right\\&#125;$.&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\gamma \\left( b_r \\right) :=\n\\begin{cases}\n\\frac{1}{\\tilde{n} } \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\{ t \\left( V_k^{b_r} \\right) : {\\widetilde{V}_k^{b_r} } \\notin W \\left( b_r, t \\right) \\right\\} \\right], & \\text{if $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$ with $t \\left( V_k^{b_r} \\right) < c \\left( b_r, t \\right)$;} \\\\\n\\min \\left\\{ t_i : i \\in \\widetilde{V} \\right\\}, & \\text{if $t \\left( V_k^{b_r} \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$.}\n\\end{cases}</script></li>\n</ol>\n<h2 id=\"14-小工具\"><a href=\"#14-小工具\" class=\"headerlink\" title=\"14 小工具\"></a>14 小工具</h2><ul>\n<li>手画符号搜索LaTeX代码：<a href=\"http://detexify.kirelabs.org/classify.html\">http://detexify.kirelabs.org/classify.html</a></li>\n<li>LaTeX在线编辑器：<a href=\"http://www.codecogs.com/latex/eqneditor.php\">http://www.codecogs.com/latex/eqneditor.php</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>LaTeX是一种基于TeX的排版系统。由于其对复杂的数学公式排版效果很好，所以常用于大型论文排版和数学公式输入。本文及本博客的文章均使用LaTeX输入数学公式。</p>","more":"<h2 id=\"0-简单介绍\"><a href=\"#0-简单介绍\" class=\"headerlink\" title=\"0 简单介绍\"></a>0 简单介绍</h2><p><strong>LaTeX</strong></p>\n<p>标准写法为$ L^AT_EX $​，读音为“拉泰赫”。它是一种基于TeX的排版系统，对于生成复杂表格和数学公式表现尤为突出，适用于论文写作、数学科研类PPT制作等。</p>\n<p><strong>MathJax</strong></p>\n<p>它是一个JavaScript引擎，用来显示网络上的数学公式。本博客的公式使用MathJax引擎渲染。本质上，Typora的公式也是用MathJax渲染的。</p>\n<p><strong>本文的公式显示环境</strong></p>\n<ul>\n<li>Markdown</li>\n<li>LaTeX</li>\n<li>MathJax v3.0.0</li>\n<li>hexo-renderer-kramed渲染器</li>\n</ul>\n<p><strong>注意</strong></p>\n<p>应特别注意Markdown渲染为HTML及其与LaTeX语法的冲突，这会影响文章效果。如应避免大括号重复出现，应加上空格。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;&#125; % Bad</span><br><span class=\"line\">&#125; &#125; % Good</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-公式插入\"><a href=\"#1-公式插入\" class=\"headerlink\" title=\"1 公式插入\"></a>1 公式插入</h2><p>公式分为行内公式和公式块，前者嵌入行内，后者单独成行。</p>\n<p>行内公式表示方法为：<code>$ 公式 $</code>，公式块表示方法为：<code>$$ 公式 $$</code>，公式中的空格会被忽略。公式块可通过<code>\\tag&#123;n&#125;</code>进行手动编号。</p>\n<p><strong>行内公式</strong>    </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ f(x) = a+b $</span><br></pre></td></tr></table></figure>\n<p>$ f(x) = a+b $​​​​​</p>\n<p><strong>公式块</strong></p>\n<p>注意Typora中建议写成以下形式，否则仍会显示为行内公式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">x+2 = 3*4</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx+2 = 3*4</script><p>除强调区分行内公式与公式块外，下文的公式示例均省略<code>$</code>符号。</p>\n<p><strong>手动编号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x+2 = 3*4 \\tag&#123;1.1&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx+2 = 3*4 \\tag{1.1}</script><h2 id=\"2-简单运算\"><a href=\"#2-简单运算\" class=\"headerlink\" title=\"2 简单运算\"></a>2 简单运算</h2><h3 id=\"2-1-四则运算与基本括号\"><a href=\"#2-1-四则运算与基本括号\" class=\"headerlink\" title=\"2.1 四则运算与基本括号\"></a>2.1 四则运算与基本括号</h3><p>拉丁字母、阿拉伯数字与<code>+-*/=</code>可以直接通过键盘输入。乘号可以用<code>\\times</code>表示，除号可以用<code>\\div</code>表示，点乘可以用<code>\\cdot</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\na + b - c*2 + d/e = 5 \\times 3 + 8 \\div 4 - f \\cdot g</script><p>小括号<code>()</code>、方括号<code>[]</code>表示其本身，花括号<code>&#123;&#125;</code>需要<code>\\</code>转义表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1+2) \\quad [1+2] \\quad \\&#123;1+2\\&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n(1+2) \\quad [1+2] \\quad \\{1+2\\}</script><p>由于LaTeX会忽略空格，因此用<code>\\quad</code>表示空格，见上例。</p>\n<h3 id=\"2-2-基本上下标\"><a href=\"#2-2-基本上下标\" class=\"headerlink\" title=\"2.2 基本上下标\"></a>2.2 基本上下标</h3><p>用<code>_</code>表示下标，用<code>^</code>表示上标，并只处理一个字符，多个字符用<code>&#123;&#125;</code>括起来。<code>&#39;</code>表示求导，可使用多个。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x_1 + x_&#123;1,2&#125;^2 = y_0 + y&#x27; + y&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx_1 + x_{1,2}^2 = y_0 + y' + y''</script><h3 id=\"2-3-基本分式、根式\"><a href=\"#2-3-基本分式、根式\" class=\"headerlink\" title=\"2.3 基本分式、根式\"></a>2.3 基本分式、根式</h3><p>用<code>\\frac&#123;a&#125;&#123;b&#125;</code>表示分式，用<code>\\sqrt</code>表示平方根，用<code>\\sqrt[n]</code>表示n次方根。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\frac&#123;x&#125;&#123;2&#125; + \\sqrt x = \\sqrt[3] &#123;x^2+y^2&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\frac{x}{2} + \\sqrt x = \\sqrt[3] {x^2+y^2}</script><h2 id=\"3-符号、函数、特殊字符\"><a href=\"#3-符号、函数、特殊字符\" class=\"headerlink\" title=\"3 符号、函数、特殊字符\"></a>3 符号、函数、特殊字符</h2><p>本章为符号、函数、特殊字符的输入方法，若关注语法可以直接跳过本章。</p>\n<h3 id=\"3-1-声调-变音-标记符号\"><a href=\"#3-1-声调-变音-标记符号\" class=\"headerlink\" title=\"3.1 声调/变音/标记符号\"></a>3.1 声调/变音/标记符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dot&#123;a&#125;, \\ddot&#123;a&#125;, \\dddot&#123;a&#125;, \\acute&#123;a&#125;, \\grave&#123;a&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\dot{a}, \\ddot{a}, \\dddot{a}, \\acute{a}, \\grave{a} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\check&#123;a&#125;, \\breve&#123;a&#125;, \\tilde&#123;a&#125;, \\widetilde&#123;a&#125;, \\bar&#123;a&#125;, \\mathring&#123;a&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\check{a}, \\breve{a}, \\tilde{a}, \\widetilde{a}, \\bar{a}, \\mathring{a} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\hat&#123;a&#125;, \\widehat&#123;a&#125;, \\vec&#123;a&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\hat{a}, \\widehat{a}, \\vec{a} $</p>\n<h3 id=\"3-2-标准函数\"><a href=\"#3-2-标准函数\" class=\"headerlink\" title=\"3.2 标准函数\"></a>3.2 标准函数</h3><p><strong>指数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\exp_a b, \\exp b, x^2</span><br></pre></td></tr></table></figure>\n<p>$ \\exp_a b, \\exp b, x^2 $</p>\n<p><strong>对数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\log a, \\lg b, \\ln c, \\log_&#123;2&#125; d</span><br></pre></td></tr></table></figure>\n<p>$ \\log a, \\lg b, \\ln c, \\log_{2} d $</p>\n<p><strong>三角函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f</span><br></pre></td></tr></table></figure>\n<p>$ \\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f $</p>\n<p><strong>反三角函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\arcsin a, \\arccos b, \\arctan c</span><br></pre></td></tr></table></figure>\n<p>$ \\arcsin a, \\arccos b, \\arctan c $​​</p>\n<p>注意<code>\\arccot, \\arcsec, \\arccsc</code>不被转义，需要用<code>\\operatorname</code>替代。</p>\n<p><strong>双曲函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sinh a, \\cosh b, \\tanh c, \\coth d</span><br></pre></td></tr></table></figure>\n<p>$ \\sinh a, \\cosh b, \\tanh c, \\coth d $​</p>\n<p>注意<code>\\sech, \\csch</code>不被转义，需要用<code>\\operatorname</code>替代。</p>\n<p><strong>绝对值</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right|</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\vert a \\right\\vert, |b|, | \\dfrac cd |, \\left| \\dfrac cd \\right| $</p>\n<p><strong>最大值，最小值</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\max(x,y), \\min(x,y)</span><br></pre></td></tr></table></figure>\n<p>$ \\max(x,y), \\min(x,y) $​​</p>\n<p><strong>其他不能转义的标准函数</strong></p>\n<p>用<code>\\operatorname&#123;function&#125;</code>表示，如符号函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\operatorname&#123;sgn&#125; x</span><br></pre></td></tr></table></figure>\n<p>$ \\operatorname{sgn} x $</p>\n<h3 id=\"3-3-界限，极限\"><a href=\"#3-3-界限，极限\" class=\"headerlink\" title=\"3.3 界限，极限\"></a>3.3 界限，极限</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\min x, \\max y, \\inf a, \\sup b</span><br></pre></td></tr></table></figure>\n<p>$ \\min x, \\max y, \\inf a, \\sup b $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lim x, \\liminf y, \\limsup z</span><br></pre></td></tr></table></figure>\n<p>$ \\lim x, \\liminf y, \\limsup z $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dim p, \\deg q, \\det m, \\ker\\phi</span><br></pre></td></tr></table></figure>\n<p>$ \\dim p, \\deg q, \\det m, \\ker\\phi $​</p>\n<p>更多极限见4.5节。</p>\n<h3 id=\"3-4-投射\"><a href=\"#3-4-投射\" class=\"headerlink\" title=\"3.4 投射\"></a>3.4 投射</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Pr j, \\hom l, \\lVert z \\rVert, \\arg z</span><br></pre></td></tr></table></figure>\n<p>$ \\Pr j, \\hom l, \\lVert z \\rVert, \\arg z $</p>\n<h3 id=\"3-5-微分，导数\"><a href=\"#3-5-微分，导数\" class=\"headerlink\" title=\"3.5 微分，导数\"></a>3.5 微分，导数</h3><p>用<code>\\mathrm&#123;x&#125;</code>处理非斜体字符，如微分符号<code>d</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dx, \\mathrm&#123;d&#125;x, \\partial t, \\nabla\\psi</span><br></pre></td></tr></table></figure>\n<p>$ dx, \\mathrm{d}x, \\partial t, \\nabla\\psi $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mathrm&#123;d&#125;y/\\mathrm&#123;d&#125;x, \\frac&#123;\\mathrm&#123;d&#125;y&#125;&#123;\\mathrm&#123;d&#125;x&#125;, \\frac&#123;\\partial^2&#125;&#123;\\partial x \\partial y&#125;z</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\mathrm{d}y/\\mathrm{d}x, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x \\partial y}z</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;, \\prime, \\backprime, f^\\prime, f&#x27;, f&#x27;&#x27;, f^&#123;(3)&#125;, \\dot y, \\ddot y, \\dddot y</span><br></pre></td></tr></table></figure>\n<p>$ ‘, \\prime, \\backprime, f^\\prime, f’, f’’, f^{(3)}, \\dot y, \\ddot y, \\dddot y $</p>\n<h3 id=\"3-6-字母符号与常数\"><a href=\"#3-6-字母符号与常数\" class=\"headerlink\" title=\"3.6 字母符号与常数\"></a>3.6 字母符号与常数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar</span><br></pre></td></tr></table></figure>\n<p>$ \\infty, \\aleph, \\complement, \\backepsilon, \\eth, \\Finv, \\hbar $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS</span><br></pre></td></tr></table></figure>\n<p>$ \\imath, \\jmath, \\Bbbk, \\ell, \\mho, \\wp, \\Re, \\circledS $​​​​</p>\n<h3 id=\"3-7-模运算\"><a href=\"#3-7-模运算\" class=\"headerlink\" title=\"3.7 模运算\"></a>3.7 模运算</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\pmod&#123;m&#125;, a \\bmod b</span><br></pre></td></tr></table></figure>\n<p>$ \\pmod{m}, a \\bmod b $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gcd(m,n), \\operatorname&#123;lcm&#125;(m,n)</span><br></pre></td></tr></table></figure>\n<p>$ \\gcd(m,n), \\operatorname{lcm}(m,n) $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mid, \\nmid, \\shortmid, \\nshortmid</span><br></pre></td></tr></table></figure>\n<p>$ \\mid, \\nmid, \\shortmid, \\nshortmid $</p>\n<h3 id=\"3-8-根号\"><a href=\"#3-8-根号\" class=\"headerlink\" title=\"3.8 根号\"></a>3.8 根号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\surd, \\sqrt&#123;2&#125;, \\sqrt[n]&#123;&#125;, \\sqrt[3]&#123;x^2+y^2&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{x^2+y^2} $</p>\n<h3 id=\"3-9-运算符\"><a href=\"#3-9-运算符\" class=\"headerlink\" title=\"3.9 运算符\"></a>3.9 运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+, -, \\pm, \\mp, \\dotplus</span><br></pre></td></tr></table></figure>\n<p>$ +, -, \\pm, \\mp, \\dotplus $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash</span><br></pre></td></tr></table></figure>\n<p>$ *, /, \\times, \\div, \\divideontimes, \\cdot, \\ast, \\backslash $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\star, \\circ, \\bullet</span><br></pre></td></tr></table></figure>\n<p>$ \\star, \\circ, \\bullet $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\boxplus, \\boxminus, \\boxtimes, \\boxdot</span><br></pre></td></tr></table></figure>\n<p>$ \\boxplus, \\boxminus, \\boxtimes, \\boxdot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\oplus, \\ominus, \\otimes, \\oslash, \\odot</span><br></pre></td></tr></table></figure>\n<p>$ \\oplus, \\ominus, \\otimes, \\oslash, \\odot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\circleddash, \\circledcirc, \\circledast</span><br></pre></td></tr></table></figure>\n<p>$ \\circleddash, \\circledcirc, \\circledast $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\bigoplus, \\bigotimes, \\bigodot</span><br></pre></td></tr></table></figure>\n<p>$ \\bigoplus, \\bigotimes, \\bigodot $</p>\n<h3 id=\"3-10-集合\"><a href=\"#3-10-集合\" class=\"headerlink\" title=\"3.10 集合\"></a>3.10 集合</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\&#123;, \\&#125;, \\emptyset, \\varnothing</span><br></pre></td></tr></table></figure>\n<p>$ \\{, \\}, \\emptyset, \\varnothing $​</p>\n<p>注意本环境下不支持用<code>\\O, \\empty</code>表示空集，需要用<code>\\emptyset</code>替代。​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\in, \\notin, \\not\\in, \\ni, \\not\\ni</span><br></pre></td></tr></table></figure>\n<p>$ \\in, \\notin, \\not\\in, \\ni, \\not\\ni $​​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\cap, \\Cap, \\sqcap, \\bigcap</span><br></pre></td></tr></table></figure>\n<p>$ \\cap, \\Cap, \\sqcap, \\bigcap $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus</span><br></pre></td></tr></table></figure>\n<p>$ \\cup, \\Cup, \\sqcup, \\bigcup, \\bigsqcup, \\uplus, \\biguplus $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\setminus, \\smallsetminus</span><br></pre></td></tr></table></figure>\n<p>$ \\setminus, \\smallsetminus $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\subset, \\Subset, \\sqsubset</span><br></pre></td></tr></table></figure>\n<p>$ \\subset, \\Subset, \\sqsubset $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\supset, \\Supset, \\sqsupset</span><br></pre></td></tr></table></figure>\n<p>$ \\supset, \\Supset, \\sqsupset $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq</span><br></pre></td></tr></table></figure>\n<p>$ \\subseteq, \\nsubseteq, \\subsetneq, \\varsubsetneq, \\sqsubseteq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq</span><br></pre></td></tr></table></figure>\n<p>$ \\supseteq, \\nsupseteq, \\supsetneq, \\varsupsetneq, \\sqsupseteq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\subseteqq, \\nsubseteqq, \\subsetneqq, \\varsubsetneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\supseteqq, \\nsupseteqq, \\supsetneqq, \\varsupsetneqq $</p>\n<h3 id=\"3-11-关系符号\"><a href=\"#3-11-关系符号\" class=\"headerlink\" title=\"3.11 关系符号\"></a>3.11 关系符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=, \\ne, \\neq, \\equiv, \\not\\equiv</span><br></pre></td></tr></table></figure>\n<p>$ =, \\ne, \\neq, \\equiv, \\not\\equiv $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\doteq, \\doteqdot, :=, \\overset&#123;\\underset&#123;\\mathrm&#123;def&#125; &#125; &#123;&#125; &#125; &#123;=&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\doteq, \\doteqdot, :=, \\overset{\\underset{\\mathrm{def} } {} } {=} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong</span><br></pre></td></tr></table></figure>\n<p>$ \\sim, \\nsim, \\backsim, \\thicksim, \\simeq, \\backsimeq, \\eqsim, \\cong, \\ncong $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto</span><br></pre></td></tr></table></figure>\n<p>$ \\approx, \\thickapprox, \\approxeq, \\asymp, \\propto, \\varpropto $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot</span><br></pre></td></tr></table></figure>\n<p>$ &lt;, \\nless, \\ll, \\not\\ll, \\lll, \\not\\lll, \\lessdot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot</span><br></pre></td></tr></table></figure>\n<p>$ &gt;, \\ngtr, \\gg, \\not\\gg, \\ggg, \\not\\ggg, \\gtrdot $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\le, \\leq, \\lneq, \\leqq, \\nleq, \\nleqq, \\lneqq, \\lvertneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\ge, \\geq, \\gneq, \\geqq, \\ngeq, \\ngeqq, \\gneqq, \\gvertneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless</span><br></pre></td></tr></table></figure>\n<p>$ \\lessgtr, \\lesseqgtr, \\lesseqqgtr, \\gtrless, \\gtreqless, \\gtreqqless $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\leqslant, \\nleqslant, \\eqslantless</span><br></pre></td></tr></table></figure>\n<p>$ \\leqslant, \\nleqslant, \\eqslantless $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\geqslant, \\ngeqslant, \\eqslantgtr</span><br></pre></td></tr></table></figure>\n<p>$ \\geqslant, \\ngeqslant, \\eqslantgtr $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lesssim, \\lnsim, \\lessapprox, \\lnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\lesssim, \\lnsim, \\lessapprox, \\lnapprox $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\gtrsim, \\gnsim, \\gtrapprox, \\gnapprox $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\prec, \\nprec, \\preceq, \\npreceq, \\precneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\prec, \\nprec, \\preceq, \\npreceq, \\precneqq $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq</span><br></pre></td></tr></table></figure>\n<p>$ \\succ, \\nsucc, \\succeq, \\nsucceq, \\succneqq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\preccurlyeq, \\curlyeqprec</span><br></pre></td></tr></table></figure>\n<p>$ \\preccurlyeq, \\curlyeqprec $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\succcurlyeq, \\curlyeqsucc</span><br></pre></td></tr></table></figure>\n<p>$ \\succcurlyeq, \\curlyeqsucc $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\precsim, \\precnsim, \\precapprox, \\precnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\precsim, \\precnsim, \\precapprox, \\precnapprox $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\succsim, \\succnsim, \\succapprox, \\succnapprox</span><br></pre></td></tr></table></figure>\n<p>$ \\succsim, \\succnsim, \\succapprox, \\succnapprox $</p>\n<h3 id=\"3-12-几何符号\"><a href=\"#3-12-几何符号\" class=\"headerlink\" title=\"3.12 几何符号\"></a>3.12 几何符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\parallel, \\nparallel, \\shortparallel, \\nshortparallel</span><br></pre></td></tr></table></figure>\n<p>$ \\parallel, \\nparallel, \\shortparallel, \\nshortparallel $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ</span><br></pre></td></tr></table></figure>\n<p>$ \\perp, \\angle, \\sphericalangle, \\measuredangle, 45^\\circ $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc</span><br></pre></td></tr></table></figure>\n<p>$ \\Box, \\blacksquare, \\diamond, \\Diamond, \\lozenge, \\blacklozenge, \\bigstar, \\bigcirc $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle</span><br></pre></td></tr></table></figure>\n<p>$ \\triangle, \\triangledown ,\\bigtriangleup, \\bigtriangledown, \\vartriangle $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright</span><br></pre></td></tr></table></figure>\n<p>$ \\blacktriangle, \\blacktriangledown, \\blacktriangleleft, \\blacktriangleright $</p>\n<h3 id=\"3-13-逻辑符号\"><a href=\"#3-13-逻辑符号\" class=\"headerlink\" title=\"3.13 逻辑符号\"></a>3.13 逻辑符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\forall, \\not\\forall, \\exists, \\nexists</span><br></pre></td></tr></table></figure>\n<p>$ \\forall, \\not\\forall, \\exists, \\nexists $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\because, \\therefore, \\And</span><br></pre></td></tr></table></figure>\n<p>$ \\because, \\therefore, \\And $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lor, \\vee, \\curlyvee, \\bigvee</span><br></pre></td></tr></table></figure>\n<p>$ \\lor, \\vee, \\curlyvee, \\bigvee $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\land, \\wedge, \\curlywedge, \\bigwedge</span><br></pre></td></tr></table></figure>\n<p>$ \\land, \\wedge, \\curlywedge, \\bigwedge $</p>\n<p>注意本环境下不支持用<code>\\or, \\and</code>表示或、且，需要用<code>\\lor, \\land</code>替代。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\bar&#123;x&#125;, \\bar&#123;abc&#125;, \\overline&#123;x&#125;, \\overline&#123;abc&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\bar{x}, \\bar{abc}, \\overline{x}, \\overline{abc} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lnot, \\neg, \\not\\operatorname&#123;R&#125;, \\bot, \\top</span><br></pre></td></tr></table></figure>\n<p>$ \\lnot, \\neg, \\not\\operatorname{R}, \\bot, \\top $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models</span><br></pre></td></tr></table></figure>\n<p>$ \\vdash, \\dashv, \\vDash, \\Vdash, \\Vvdash, \\models $​​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\nvdash, \\nVdash, \\nvDash, \\nVDash</span><br></pre></td></tr></table></figure>\n<p>$ \\nvdash, \\nVdash, \\nvDash, \\nVDash $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\ulcorner, \\urcorner, \\llcorner, \\lrcorner</span><br></pre></td></tr></table></figure>\n<p>$ \\ulcorner, \\urcorner, \\llcorner, \\lrcorner $</p>\n<h3 id=\"3-14-箭头\"><a href=\"#3-14-箭头\" class=\"headerlink\" title=\"3.14 箭头\"></a>3.14 箭头</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\to, \\rightarrow, \\nrightarrow, \\longrightarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\to, \\rightarrow, \\nrightarrow, \\longrightarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gets, \\leftarrow, \\nleftarrow, \\longleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\gets, \\leftarrow, \\nleftarrow, \\longleftarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\leftrightarrow, \\nleftrightarrow, \\longleftrightarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\uparrow, \\downarrow, \\updownarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\uparrow, \\downarrow, \\updownarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies</span><br></pre></td></tr></table></figure>\n<p>$ \\Rightarrow, \\nRightarrow, \\Longrightarrow, \\implies $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Leftarrow, \\nLeftarrow, \\Longleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\Leftarrow, \\nLeftarrow, \\Longleftarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff</span><br></pre></td></tr></table></figure>\n<p>$ \\Leftrightarrow, \\nLeftrightarrow, \\Longleftrightarrow, \\iff $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Uparrow, \\Downarrow, \\Updownarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\Uparrow, \\Downarrow, \\Updownarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Rrightarrow, \\Lleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\Rrightarrow, \\Lleftarrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\nearrow, \\swarrow, \\nwarrow, \\searrow</span><br></pre></td></tr></table></figure>\n<p>$ \\nearrow, \\swarrow, \\nwarrow, \\searrow $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mapsto, \\longmapsto</span><br></pre></td></tr></table></figure>\n<p>$ \\mapsto, \\longmapsto $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons</span><br></pre></td></tr></table></figure>\n<p>$ \\rightharpoonup, \\rightharpoondown, \\leftharpoonup, \\leftharpoondown, \\upharpoonleft, \\upharpoonright, \\downharpoonleft, \\downharpoonright, \\rightleftharpoons, \\leftrightharpoons $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright</span><br></pre></td></tr></table></figure>\n<p>$ \\curvearrowleft, \\circlearrowleft, \\Lsh, \\upuparrows, \\rightrightarrows, \\rightleftarrows, \\rightarrowtail, \\looparrowright $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft</span><br></pre></td></tr></table></figure>\n<p>$ \\curvearrowright, \\circlearrowright, \\Rsh, \\downdownarrows, \\leftleftarrows, \\leftrightarrows, \\leftarrowtail, \\looparrowleft $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\hookrightarrow, \\hookleftarrow, \\multimap, \\leftrightsquigarrow, \\rightsquigarrow, \\twoheadrightarrow, \\twoheadleftarrow $</p>\n<h3 id=\"3-15-省略号\"><a href=\"#3-15-省略号\" class=\"headerlink\" title=\"3.15 省略号\"></a>3.15 省略号</h3><p>用<code>\\cdots</code>表示居中的三个点，<code>\\ldots</code>表示居底线的三个点，<code>\\vdots</code>和<code>\\ddots</code>分别表示垂直和对角线。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\cdots, \\ldots, \\vdots, \\ddots</span><br></pre></td></tr></table></figure>\n<p>$ \\cdots, \\ldots, \\vdots, \\ddots $</p>\n<h3 id=\"3-16-其他\"><a href=\"#3-16-其他\" class=\"headerlink\" title=\"3.16 其他\"></a>3.16 其他</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\amalg, \\%, \\&amp;, \\dagger, \\ddagger</span><br></pre></td></tr></table></figure>\n<p>$ \\amalg, \\%, \\&amp;, \\dagger, \\ddagger $​​​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\smile, \\frown, \\wr, \\triangleleft, \\triangleright</span><br></pre></td></tr></table></figure>\n<p>$ \\smile, \\frown, \\wr, \\triangleleft, \\triangleright $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp</span><br></pre></td></tr></table></figure>\n<p>$ \\diamondsuit, \\heartsuit, \\clubsuit, \\spadesuit, \\Game, \\flat, \\natural, \\sharp $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes</span><br></pre></td></tr></table></figure>\n<p>$ \\diagup, \\diagdown, \\centerdot, \\ltimes, \\rtimes, \\leftthreetimes, \\rightthreetimes $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq</span><br></pre></td></tr></table></figure>\n<p>$ \\eqcirc, \\circeq, \\triangleq, \\bumpeq, \\Bumpeq, \\doteqdot, \\risingdotseq, \\fallingdotseq $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork</span><br></pre></td></tr></table></figure>\n<p>$ \\intercal, \\barwedge, \\veebar, \\doublebarwedge, \\between, \\pitchfork $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright</span><br></pre></td></tr></table></figure>\n<p>$ \\vartriangleleft, \\ntriangleleft, \\vartriangleright, \\ntriangleright $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq</span><br></pre></td></tr></table></figure>\n<p>$ \\trianglelefteq, \\ntrianglelefteq, \\trianglerighteq, \\ntrianglerighteq $</p>\n<h2 id=\"4-常用数学语法\"><a href=\"#4-常用数学语法\" class=\"headerlink\" title=\"4 常用数学语法\"></a>4 常用数学语法</h2><h3 id=\"4-1-上下标\"><a href=\"#4-1-上下标\" class=\"headerlink\" title=\"4.1 上下标\"></a>4.1 上下标</h3><p>用<code>_</code>表示下标，用<code>^</code>表示上标，并只处理一个字符，多个字符用<code>&#123;&#125;</code>括起来。上下标可嵌套或同时使用。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a^2, a_2, a^&#123;2+2&#125;, a_&#123;i,j&#125;, x_2^3</span><br></pre></td></tr></table></figure>\n<p>$ a^2, a_2, a^{2+2}, a_{i,j}, x_2^3 $</p>\n<p>前置上下标可以用空花括号<code>&#123;&#125;</code>承载，也可以使用<code>\\sideset</code>命令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#125;_1^2X_3^4 \\quad \\sideset&#123;_1^2&#125;&#123;_3^4&#125; \\bigotimes</span><br></pre></td></tr></table></figure>\n<p>$ {}_1^2X_3^4 \\quad \\sideset{_1^2}{_3^4} \\bigotimes $</p>\n<h3 id=\"4-2-导数\"><a href=\"#4-2-导数\" class=\"headerlink\" title=\"4.2 导数\"></a>4.2 导数</h3><p>撇导数用<code>&#39;</code>或上标的<code>\\prime</code>表示，注意不要漏掉上标。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x&#x27;, x&#x27;&#x27;, x^\\prime</span><br></pre></td></tr></table></figure>\n<p>$ x’, x’’, x^\\prime $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x\\prime % Bad</span><br></pre></td></tr></table></figure>\n<p>$ x\\prime % Bad $​</p>\n<p>点导数用<code>\\dot</code>、<code>\\ddot</code>和<code>\\dddot</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dot&#123;y&#125;, \\ddot&#123;y&#125;, \\dddot&#123;y&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\dot{y}, \\ddot{y}, \\dddot{y} $</p>\n<h3 id=\"4-3-向量\"><a href=\"#4-3-向量\" class=\"headerlink\" title=\"4.3 向量\"></a>4.3 向量</h3><p>用<code>\\vec</code>、<code>\\boldsymbol</code>、<code>\\over--arrow</code>或<code>\\widehat</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\vec&#123;a&#125;, \\boldsymbol&#123;b&#125;, \\overleftarrow&#123;ab&#125;, \\overrightarrow&#123;cd&#125;, \\overleftrightarrow&#123;ab&#125;, \\widehat&#123;abc&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\vec{a}, \\boldsymbol{b}, \\overleftarrow{ab}, \\overrightarrow{cd}, \\overleftrightarrow{ab}, \\widehat{abc} $​​</p>\n<h3 id=\"4-4-上下线\"><a href=\"#4-4-上下线\" class=\"headerlink\" title=\"4.4 上下线\"></a>4.4 上下线</h3><p><strong>上弧、上划线、下划线</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\overset&#123;\\frown&#125; &#123;AB&#125;, \\overline &#123;abc&#125;, \\underline&#123;def&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\overset{\\frown} {AB}, \\overline {abc}, \\underline{def} $</p>\n<p><strong>上括号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\overbrace&#123;1+2+\\cdots+n&#125; \\quad \\overbrace&#123;1+2+\\cdots+n&#125;^&#123;n&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\overbrace{1+2+\\cdots+n} \\quad \\overbrace{1+2+\\cdots+n}^{n} $</p>\n<p>可以写成矩阵形式，使得上面的字符变大：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125; n \\\\ \\overbrace&#123;1+2+\\cdots+n&#125; \\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix} n \\\\ \\overbrace{1+2+\\cdots+n} \\end{matrix} $</p>\n<p><strong>下括号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\underbrace&#123;a+b+\\cdots+z&#125; \\quad \\underbrace&#123;a+b+\\cdots+z&#125;_&#123;26&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\underbrace{a+b+\\cdots+z} \\quad \\underbrace{a+b+\\cdots+z}_{26} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125; \\underbrace&#123;a+b+\\cdots+z&#125; \\\\ 26 \\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix} \\underbrace{a+b+\\cdots+z} \\\\ 26 \\end{matrix} $</p>\n<h3 id=\"4-5-大型运算符（求和求积、极限、积分等）\"><a href=\"#4-5-大型运算符（求和求积、极限、积分等）\" class=\"headerlink\" title=\"4.5 大型运算符（求和求积、极限、积分等）\"></a>4.5 大型运算符（求和求积、极限、积分等）</h3><p><strong>注意</strong></p>\n<p>大型运算符通常含有上下部分，LaTeX用上下标表示。其中行内公式位于右上右下，公式块位于正上正下（积分除外）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sum_&#123;i=1&#125;^&#123;n&#125; i^2 $</span><br><span class=\"line\">$$</span><br><span class=\"line\">\\sum_&#123;i=1&#125;^&#123;n&#125; i^2</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>$ \\sum_{i=1}^{n} i^2 $</p>\n<script type=\"math/tex; mode=display\">\n\\sum_{i=1}^{n} i^2</script><p>若要在行内公式显示为正上正下，可以使用<code>\\limits</code>命令跟在运算符后：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sum\\limits_&#123;i=1&#125;^&#123;n&#125; i^2 $</span><br></pre></td></tr></table></figure>\n<p>$ \\sum\\limits_{i=1}^{n} i^2 $</p>\n<p>若要在公式块显示为右上右下，可以使用一阶无框矩阵形式或使用<code>\\nolimits</code>命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\begin&#123;matrix&#125; \\sum_&#123;i=1&#125;^&#123;n&#125; i^2 \\end&#123;matrix&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{matrix} \\sum_{i=1}^{n} i^2 \\end{matrix}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\sum\\nolimits_&#123;i=1&#125;^&#123;n&#125; i^2</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\sum\\nolimits_{i=1}^{n} i^2</script><p>下文的显示形式均为公式块。</p>\n<p><strong>求和（累加）、求积（累乘）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\sum_&#123;i=1&#125;^&#123;n&#125; i^2 \\quad \\prod_&#123;i=1&#125;^&#123;n&#125; x_i</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\sum_{i=1}^{n} i^2 \\quad \\prod_{i=1}^{n} x_i</script><p><strong>极限</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lim_&#123;x \\to \\infty&#125; (1+\\frac&#123;1&#125;&#123;x&#125;)^x = e</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\lim_{x \\to \\infty} (1+\\frac{1}{x})^x = e</script><p><strong>普通积分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\int_&#123;a&#125;^&#123;b&#125; e^x \\, \\mathrm&#123;d&#125;x</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\int_{a}^{b} e^x \\, \\mathrm{d}x</script><p><code>\\,</code>可省略，但建议加入使式子更美观；<code>\\mathrm&#123;d&#125;</code>可替换为<code>&#123;\\rm d&#125;</code>。</p>\n<p><strong>二重积分、三重积分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\iint_&#123;D&#125; f(x,y) \\, \\mathrm&#123;d&#125;\\sigma \\quad \\iiint_&#123;\\Omega&#125; f(x,y,z) \\, \\mathrm&#123;d&#125;V</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\iint_{D} f(x,y) \\, \\mathrm{d}\\sigma \\quad \\iiint_{\\Omega} f(x,y,z) \\, \\mathrm{d}V</script><p><strong>闭合曲线积分</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\oint_&#123;L&#125; f(x,y) \\, \\mathrm&#123;d&#125;s</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\oint_{L} f(x,y) \\, \\mathrm{d}s</script><p><strong>其他积分符号</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint</span><br></pre></td></tr></table></figure>\n<p>$ \\int, \\iint, \\iiint, \\iiiint, \\idotsint, \\oint $​​</p>\n<p>注意本环境下不支持用<code>\\oiint, \\oiiint</code>表示二重闭合积分、三重闭合积分。</p>\n<p><strong>交集、并集、余积</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\bigcap_&#123;i=1&#125;^&#123;n&#125; A_i \\quad \\bigcup_&#123;j=1&#125;^&#123;m&#125; B_j</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\bigcap_{i=1}^{n} A_i \\quad \\bigcup_{j=1}^{m} B_j</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\coprod_&#123;i \\in I&#125; A_i</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\coprod_{i \\in I} A_i</script><h2 id=\"5-分式\"><a href=\"#5-分式\" class=\"headerlink\" title=\"5 分式\"></a>5 分式</h2><h3 id=\"5-1-基本输入\"><a href=\"#5-1-基本输入\" class=\"headerlink\" title=\"5.1 基本输入\"></a>5.1 基本输入</h3><p>分式可以通过<code>\\over</code>命令，两侧标记分子分母，且整体需要用花括号括起来。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = &#123; &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; &#125; \\over &#123;2a&#125; &#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nx = { {-b \\pm \\sqrt{b^2-4ac} } \\over {2a} }</script><p>常用的分式用<code>\\frac&#123;分子&#125;&#123;分母&#125;</code>命令，便捷时使用<code>\\frac ab</code>快速生成$ \\frac ab $​。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\frac&#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; &#125;&#123;2a&#125; \\quad \\frac ab</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\frac{-b \\pm \\sqrt{b^2-4ac} }{2a} \\quad \\frac ab</script><h3 id=\"5-2-分式排版\"><a href=\"#5-2-分式排版\" class=\"headerlink\" title=\"5.2 分式排版\"></a>5.2 分式排版</h3><p>普通分式在行内公式会自动缩小，在公式块会显示为完整大小。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\frac&#123;1&#125;&#123;2&#125;=0.5 $</span><br><span class=\"line\">$$</span><br><span class=\"line\">\\frac&#123;1&#125;&#123;2&#125;=0.5</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>$ \\frac{1}{2}=0.5 $​</p>\n<script type=\"math/tex; mode=display\">\n\\frac{1}{2}=0.5</script><p><code>\\tfrac</code>命令用于使分式显示为<em>行内公式样式</em>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\tfrac&#123;1&#125;&#123;2&#125;=0.5</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\tfrac{1}{2}=0.5</script><p><code>\\dfrac</code>命令用于使分式显示为<em>公式块样式</em>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\dfrac&#123;1&#125;&#123;2&#125;=0.5 $</span><br></pre></td></tr></table></figure>\n<p>$ \\dfrac{1}{2}=0.5 $​</p>\n<p><strong>注意</strong></p>\n<p>在指数函数、极限、积分等场景下，尽量不使用<code>\\frac</code>命令，而使用<code>/</code>表示为横式分式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">e^&#123;\\frac&#123;i\\pi&#125;&#123;2&#125; &#125; \\quad \\int_&#123;-\\frac&#123;\\pi&#125;&#123;2&#125; &#125;^&#123;\\frac&#123;\\pi&#125;&#123;2&#125; &#125; \\sin x \\, \\mathrm&#123;d&#125;x</span><br><span class=\"line\">% Bad</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\ne^{\\frac{i\\pi}{2} } \\quad \\int_{-\\frac{\\pi}{2} }^{\\frac{\\pi}{2} } \\sin x \\, \\mathrm{d}x\n% Bad</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">e^&#123;i\\pi/2&#125; \\quad \\int_&#123;-\\pi/2&#125;^&#123;\\pi/2&#125; \\sin x \\, \\mathrm&#123;d&#125;x</span><br><span class=\"line\">% Good</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\ne^{i\\pi/2} \\quad \\int_{-\\pi/2}^{\\pi/2} \\sin x \\, \\mathrm{d}x\n% Good</script><h3 id=\"5-3-连分式\"><a href=\"#5-3-连分式\" class=\"headerlink\" title=\"5.3 连分式\"></a>5.3 连分式</h3><p>用<code>\\cfrac</code>命令输入连分式，会自动处理分子分母的高度。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\cfrac&#123;1&#125;&#123;2 + \\cfrac&#123;1&#125;&#123;2 + \\cfrac&#123;1&#125;&#123;2 + \\cdots&#125; &#125; &#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\cfrac{1}{2 + \\cfrac{1}{2 + \\cfrac{1}{2 + \\cdots} } }</script><h3 id=\"5-4-二项式系数\"><a href=\"#5-4-二项式系数\" class=\"headerlink\" title=\"5.4 二项式系数\"></a>5.4 二项式系数</h3><p>用<code>\\binom</code>命令输入，<code>\\tbinom</code>使二项式系数显示为行内公式样式，<code>\\dbinom</code>使二项式系数显示为公式块样式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\mathrm&#123;C&#125;_n^r = \\binom&#123;n&#125;&#123;r&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\mathrm{C}_n^r = \\binom{n}{r}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\tbinom&#123;n&#125;&#123;r&#125; = \\tbinom&#123;n&#125;&#123;n-r&#125;</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\tbinom{n}{r} = \\tbinom{n}{n-r}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\dbinom&#123;n&#125;&#123;r&#125; = \\dfrac&#123;n!&#125;&#123;k!\\,(n-k)!&#125; $</span><br></pre></td></tr></table></figure>\n<p>$ \\dbinom{n}{r} = \\dfrac{n!}{k!\\,(n-k)!} $​</p>\n<h2 id=\"6-矩阵、条件表达式、方程组\"><a href=\"#6-矩阵、条件表达式、方程组\" class=\"headerlink\" title=\"6 矩阵、条件表达式、方程组\"></a>6 矩阵、条件表达式、方程组</h2><p>语法为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;类型&#125;</span><br><span class=\"line\">内容</span><br><span class=\"line\">\\end&#123;类型&#125;</span><br></pre></td></tr></table></figure>\n<p>类型可以是：矩阵<code>matrix</code>、<code>pmatrix</code>、<code>bmatrix</code>、<code>Bmatrix</code>、<code>vmatrix</code>、<code>Vmatrix</code>，条件表达式<code>cases</code>，多行对齐方程式<code>aligned</code>、<code>alignedat</code>。</p>\n<p>内容中，<code>&amp;</code>符号表示每行的对齐内容，<code>\\\\</code>表示结尾处换行。</p>\n<h3 id=\"6-1-无框矩阵\"><a href=\"#6-1-无框矩阵\" class=\"headerlink\" title=\"6.1 无框矩阵\"></a>6.1 无框矩阵</h3><p>用<code>&amp;</code>分隔矩阵列，用<code>\\\\</code>分隔矩阵行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{matrix}\na & b \\\\\nc & d\n\\end{matrix}</script><h3 id=\"6-2-有框矩阵\"><a href=\"#6-2-有框矩阵\" class=\"headerlink\" title=\"6.2 有框矩阵\"></a>6.2 有框矩阵</h3><p><code>pmatrix</code>为圆括号，<code>bmatrix</code>为方括号，<code>Bmatrix</code>为花括号，<code>vmatrix</code>为竖线（行列式），<code>Vmatrix</code>为双竖线。</p>\n<p>使用<code>\\cdots</code>$\\cdots$、<code>\\ddots</code>$\\ddots$、<code>\\vdots</code>$\\vdots$输入省略号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;pmatrix&#125;</span><br><span class=\"line\">0 &amp; \\cdots &amp; 0 \\\\</span><br><span class=\"line\">\\vdots &amp; \\ddots &amp; \\vdots \\\\</span><br><span class=\"line\">0 &amp; \\cdots &amp; 0 \\\\</span><br><span class=\"line\">\\end&#123;pmatrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{pmatrix}\n0 & \\cdots & 0 \\\\\n\\vdots & \\ddots & \\vdots \\\\\n0 & \\cdots & 0 \\\\\n\\end{pmatrix}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;bmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;bmatrix&#125;</span><br><span class=\"line\">\\quad</span><br><span class=\"line\">\\begin&#123;Bmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;Bmatrix&#125;</span><br><span class=\"line\">\\quad</span><br><span class=\"line\">\\begin&#123;vmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;vmatrix&#125;</span><br><span class=\"line\">\\quad</span><br><span class=\"line\">\\begin&#123;Vmatrix&#125;</span><br><span class=\"line\">a &amp; b \\\\</span><br><span class=\"line\">c &amp; d</span><br><span class=\"line\">\\end&#123;Vmatrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}\n\\quad\n\\begin{Bmatrix}\na & b \\\\\nc & d\n\\end{Bmatrix}\n\\quad\n\\begin{vmatrix}\na & b \\\\\nc & d\n\\end{vmatrix}\n\\quad\n\\begin{Vmatrix}\na & b \\\\\nc & d\n\\end{Vmatrix}</script><h3 id=\"6-3-条件表达式\"><a href=\"#6-3-条件表达式\" class=\"headerlink\" title=\"6.3 条件表达式\"></a>6.3 条件表达式</h3><p>用<code>&amp;</code>分隔公式与条件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(n)=</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">n/2, &amp; \\text&#123;if &#125; n \\text&#123; is even&#125; \\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if &#125; n \\text&#123; is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nf(n)=\n\\begin{cases}\nn/2, & \\text{if } n \\text{ is even} \\\\\n3n+1, & \\text{if } n \\text{ is odd}\n\\end{cases}</script><p><code>\\text</code>表示字符为文本格式，而非数学格式，注意空格处理。</p>\n<h3 id=\"6-4-多行等式、同余式\"><a href=\"#6-4-多行等式、同余式\" class=\"headerlink\" title=\"6.4 多行等式、同余式\"></a>6.4 多行等式、同余式</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;aligned&#125;</span><br><span class=\"line\">f(x) &amp; = (m+n)^2 \\\\</span><br><span class=\"line\">&amp; = m^2+2mn+n^2 \\\\</span><br><span class=\"line\">\\end&#123;aligned&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\nf(x) & = (m+n)^2 \\\\\n& = m^2+2mn+n^2 \\\\\n\\end{aligned}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;aligned&#125;</span><br><span class=\"line\">3^&#123;6n+3&#125;+4^&#123;6n+3&#125;</span><br><span class=\"line\">&amp; \\equiv (3^3)^&#123;2n+1&#125;+(4^3)^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 27^&#123;2n+1&#125;+64^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 27^&#123;2n+1&#125;+(-27)^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 27^&#123;2n+1&#125;-27^&#123;2n+1&#125; \\\\</span><br><span class=\"line\">&amp; \\equiv 0 \\pmod&#123;91&#125; \\\\</span><br><span class=\"line\">\\end&#123;aligned&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n3^{6n+3}+4^{6n+3}\n& \\equiv (3^3)^{2n+1}+(4^3)^{2n+1} \\\\\n& \\equiv 27^{2n+1}+64^{2n+1} \\\\\n& \\equiv 27^{2n+1}+(-27)^{2n+1} \\\\\n& \\equiv 27^{2n+1}-27^{2n+1} \\\\\n& \\equiv 0 \\pmod{91} \\\\\n\\end{aligned}</script><p><code>\\alignedat</code>用于确定行数的对齐。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;alignedat&#125;&#123;3&#125;</span><br><span class=\"line\">f(x) &amp; = (m+n)^2 \\\\</span><br><span class=\"line\">g(x) &amp; = (m-n)^2 \\\\</span><br><span class=\"line\">&amp; = m^2-2mn+n^2 \\\\</span><br><span class=\"line\">\\end&#123;alignedat&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{alignedat}{3}\nf(x) & = (m+n)^2 \\\\\ng(x) & = (m-n)^2 \\\\\n& = m^2-2mn+n^2 \\\\\n\\end{alignedat}</script><h3 id=\"6-5-方程组\"><a href=\"#6-5-方程组\" class=\"headerlink\" title=\"6.5 方程组\"></a>6.5 方程组</h3><p><strong>用<code>cases</code>表达</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">3x+5y+z=0 \\\\</span><br><span class=\"line\">7x-2y+4z=0 \\\\</span><br><span class=\"line\">-6x+3y+2z=0 \\\\</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{cases}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{cases}</script><p><strong>用<code>aligned</code>表达</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\&#123; \\begin&#123;aligned&#125;</span><br><span class=\"line\">3x+5y+z=0 \\\\</span><br><span class=\"line\">7x-2y+4z=0 \\\\</span><br><span class=\"line\">-6x+3y+2z=0 \\\\</span><br><span class=\"line\">\\end&#123;aligned&#125; \\right.</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\left\\{ \\begin{aligned}\n3x+5y+z=0 \\\\\n7x-2y+4z=0 \\\\\n-6x+3y+2z=0 \\\\\n\\end{aligned} \\right.</script><h2 id=\"7-数组与表格\"><a href=\"#7-数组与表格\" class=\"headerlink\" title=\"7 数组与表格\"></a>7 数组与表格</h2><h3 id=\"7-1-基本数组与表格\"><a href=\"#7-1-基本数组与表格\" class=\"headerlink\" title=\"7.1 基本数组与表格\"></a>7.1 基本数组与表格</h3><p>数组和表格以<code>\\begin&#123;array&#125;&#123;定义式&#125;</code>开头，以<code>\\end&#123;array&#125;</code>结尾。定义式中定义每列对齐方式，可用<code>l</code>、<code>c</code>、<code>r</code>分别代表居左、居中、居右。若插入水平分割线，在行内容间插入<code>\\hline</code>；若插入垂直分割线，在定义式中插入<code>|</code>。表格内容用<code>&amp;</code>分隔列，用<code>\\\\</code>分隔行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class=\"line\">x &amp; 1\\text&#123;(left)&#125; &amp; 2\\text&#123;(center)&#125; &amp; 3\\text&#123;(right)&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">f(x) &amp; 0 &amp; 10 &amp; 55.5 \\\\</span><br><span class=\"line\">g(x) &amp; -1 &amp; 100 &amp; 9 \\\\</span><br><span class=\"line\">h(x) &amp; 2i &amp; 1000 &amp; 1+10i</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|lcr}\nx & 1\\text{(left)} & 2\\text{(center)} & 3\\text{(right)} \\\\\n\\hline\nf(x) & 0 & 10 & 55.5 \\\\\ng(x) & -1 & 100 & 9 \\\\\nh(x) & 2i & 1000 & 1+10i\n\\end{array}</script><h3 id=\"7-2-用数组与表格排版\"><a href=\"#7-2-用数组与表格排版\" class=\"headerlink\" title=\"7.2 用数组与表格排版\"></a>7.2 用数组与表格排版</h3><p>可以用数组与表格实现类似<code>aligned</code>的功能。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;lcr&#125;</span><br><span class=\"line\">z &amp; = &amp; a \\\\</span><br><span class=\"line\">f(x,y,z) &amp; = &amp; x+y+z</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{lcr}\nz & = & a \\\\\nf(x,y,z) & = & x+y+z\n\\end{array}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;cccc&#125;</span><br><span class=\"line\">x &amp; y &amp; x \\lor y &amp; x \\land y \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">0 &amp; 0 &amp; 0 &amp; 0 \\\\</span><br><span class=\"line\">1 &amp; 0 &amp; 1 &amp; 0 \\\\</span><br><span class=\"line\">0 &amp; 1 &amp; 1 &amp; 0 \\\\</span><br><span class=\"line\">1 &amp; 1 &amp; 1 &amp; 1</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{cccc}\nx & y & x \\lor y & x \\land y \\\\\n\\hline\n0 & 0 & 0 & 0 \\\\\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1\n\\end{array}</script><h3 id=\"7-3-嵌套数组与表格\"><a href=\"#7-3-嵌套数组与表格\" class=\"headerlink\" title=\"7.3 嵌套数组与表格\"></a>7.3 嵌套数组与表格</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% outer</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;c&#125;</span><br><span class=\"line\">\t% inner row 1</span><br><span class=\"line\">\t\\begin&#123;array&#125;&#123;cc&#125;</span><br><span class=\"line\">\t\t% inner row 1 column 1</span><br><span class=\"line\">\t\t\\begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class=\"line\">\t\t\\min &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t\\hline</span><br><span class=\"line\">\t\t0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\</span><br><span class=\"line\">\t\t1 &amp; 0 &amp; 1 &amp; 1 &amp; 1 \\\\</span><br><span class=\"line\">\t\t2 &amp; 0 &amp; 1 &amp; 2 &amp; 2 \\\\</span><br><span class=\"line\">\t\t3 &amp; 0 &amp; 1 &amp; 2 &amp; 3</span><br><span class=\"line\">\t\t\\end&#123;array&#125;</span><br><span class=\"line\">\t&amp;</span><br><span class=\"line\">\t\t% inner row 1 column 2</span><br><span class=\"line\">\t\t\\begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class=\"line\">\t\t\\max &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t\\hline</span><br><span class=\"line\">\t\t0 &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t1 &amp; 1 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t2 &amp; 2 &amp; 2 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\t3 &amp; 3 &amp; 3 &amp; 3 &amp; 3</span><br><span class=\"line\">\t\t\\end&#123;array&#125;</span><br><span class=\"line\">\t\\end&#123;array&#125;</span><br><span class=\"line\">\\\\</span><br><span class=\"line\">\t% inner row 2</span><br><span class=\"line\">\t\\begin&#123;array&#125;&#123;c|cccc&#125;</span><br><span class=\"line\">\t\\Delta &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t\\hline</span><br><span class=\"line\">\t0 &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">\t1 &amp; 1 &amp; 0 &amp; 1 &amp; 2 \\\\</span><br><span class=\"line\">\t2 &amp; 2 &amp; 1 &amp; 0 &amp; 1 \\\\</span><br><span class=\"line\">\t3 &amp; 3 &amp; 2 &amp; 1 &amp; 0</span><br><span class=\"line\">\t\\end&#123;array&#125;</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n% outer\n\\begin{array}{c}\n    % inner row 1\n    \\begin{array}{cc}\n        % inner row 1 column 1\n        \\begin{array}{c|cccc}\n        \\min & 0 & 1 & 2 & 3 \\\\\n        \\hline\n        0 & 0 & 0 & 0 & 0 \\\\\n        1 & 0 & 1 & 1 & 1 \\\\\n        2 & 0 & 1 & 2 & 2 \\\\\n        3 & 0 & 1 & 2 & 3\n        \\end{array}\n    &\n        % inner row 1 column 2\n        \\begin{array}{c|cccc}\n        \\max & 0 & 1 & 2 & 3 \\\\\n        \\hline\n        0 & 0 & 1 & 2 & 3 \\\\\n        1 & 1 & 1 & 2 & 3 \\\\\n        2 & 2 & 2 & 2 & 3 \\\\\n        3 & 3 & 3 & 3 & 3\n        \\end{array}\n    \\end{array}\n\\\\\n    % inner row 2\n    \\begin{array}{c|cccc}\n    \\Delta & 0 & 1 & 2 & 3 \\\\\n    \\hline\n    0 & 0 & 1 & 2 & 3 \\\\\n    1 & 1 & 0 & 1 & 2 \\\\\n    2 & 2 & 1 & 0 & 1 \\\\\n    3 & 3 & 2 & 1 & 0\n    \\end{array}\n\\end{array}</script><h3 id=\"7-4-分割矩阵\"><a href=\"#7-4-分割矩阵\" class=\"headerlink\" title=\"7.4 分割矩阵\"></a>7.4 分割矩阵</h3><p>在需要分割处的定义式加入<code>|</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left[</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;cc|c&#125;</span><br><span class=\"line\">1 &amp; 2 &amp; 3 \\\\</span><br><span class=\"line\">4 &amp; 5 &amp; 6</span><br><span class=\"line\">\\end&#123;array&#125;</span><br><span class=\"line\">\\right]</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\left[\n\\begin{array}{cc|c}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\n\\right]</script><h2 id=\"8-字体\"><a href=\"#8-字体\" class=\"headerlink\" title=\"8 字体\"></a>8 字体</h2><p>普通字符可以通过<code>\\large</code>、<code>\\small</code>控制大小。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A, \\large&#123;A&#125;, \\small&#123;A&#125;</span><br></pre></td></tr></table></figure>\n<p>$ A, \\large{A}, \\small{A} $</p>\n<h3 id=\"8-1-希腊字母\"><a href=\"#8-1-希腊字母\" class=\"headerlink\" title=\"8.1 希腊字母\"></a>8.1 希腊字母</h3><p>输入<code>\\</code>加其字母名称即可，大写字母将名称首字母大写。注意本环境下部分大写希腊字母不支持转义，需要用相似的<em>拉丁字母</em>替代。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|l|c|l&#125;</span><br><span class=\"line\">A \\alpha &amp; \\verb|A \\alpha| &amp; N \\nu &amp; \\verb|N \\nu| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">B \\beta &amp; \\verb|B \\beta| &amp; \\Xi \\xi &amp; \\verb|\\Xi \\xi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Gamma \\gamma &amp; \\verb|\\Gamma \\gamma| &amp; O \\omicron &amp; \\verb|O \\omicron| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Delta \\delta &amp; \\verb|\\Delta \\delta| &amp; \\Pi \\pi &amp; \\verb|\\Pi \\pi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">E \\epsilon &amp; \\verb|E \\epsilon| &amp; P \\rho &amp; \\verb|P \\rho| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">Z \\zeta &amp; \\verb|Z \\zeta| &amp; \\Sigma \\sigma &amp; \\verb|\\Sigma \\sigma| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">H \\eta &amp; \\verb|H \\eta| &amp; T \\tau &amp; \\verb|T \\tau| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Theta \\theta &amp; \\verb|\\Theta \\theta| &amp; \\Upsilon \\upsilon &amp; \\verb|\\Upsilon \\upsilon| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">I \\iota &amp; \\verb|I \\iota| &amp; \\Phi \\phi &amp; \\verb|\\Phi \\phi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">K \\kappa &amp; \\verb|K \\kappa| &amp; X \\chi &amp; \\verb|X \\chi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\Lambda \\lambda &amp; \\verb|\\Lambda \\lambda| &amp; \\Psi \\psi &amp; \\verb|\\Psi \\psi| \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">M \\mu &amp; \\verb|M \\mu| &amp; \\Omega \\omega &amp; \\verb|\\Omega \\omega| \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|l|c|l}\nA \\alpha & \\verb|A \\alpha| & N \\nu & \\verb|N \\nu| \\\\\n\\hline\nB \\beta & \\verb|B \\beta| & \\Xi \\xi & \\verb|\\Xi \\xi| \\\\\n\\hline\n\\Gamma \\gamma & \\verb|\\Gamma \\gamma| & O \\omicron & \\verb|O \\omicron| \\\\\n\\hline\n\\Delta \\delta & \\verb|\\Delta \\delta| & \\Pi \\pi & \\verb|\\Pi \\pi| \\\\\n\\hline\nE \\epsilon & \\verb|E \\epsilon| & P \\rho & \\verb|P \\rho| \\\\\n\\hline\nZ \\zeta & \\verb|Z \\zeta| & \\Sigma \\sigma & \\verb|\\Sigma \\sigma| \\\\\n\\hline\nH \\eta & \\verb|H \\eta| & T \\tau & \\verb|T \\tau| \\\\\n\\hline\n\\Theta \\theta & \\verb|\\Theta \\theta| & \\Upsilon \\upsilon & \\verb|\\Upsilon \\upsilon| \\\\\n\\hline\nI \\iota & \\verb|I \\iota| & \\Phi \\phi & \\verb|\\Phi \\phi| \\\\\n\\hline\nK \\kappa & \\verb|K \\kappa| & X \\chi & \\verb|X \\chi| \\\\\n\\hline\n\\Lambda \\lambda & \\verb|\\Lambda \\lambda| & \\Psi \\psi & \\verb|\\Psi \\psi| \\\\\n\\hline\nM \\mu & \\verb|M \\mu| & \\Omega \\omega & \\verb|\\Omega \\omega| \\\\\n\\end{array}</script><p>伽玛函数可以用<code>digamma</code>表示，另外部分变量形式可以用<code>\\var-</code>开头。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi</span><br></pre></td></tr></table></figure>\n<p>$ \\digamma, \\varepsilon, \\vartheta, \\varkappa, \\varpi, \\varrho, \\varsigma, \\varphi $</p>\n<h3 id=\"8-2-希伯来符号\"><a href=\"#8-2-希伯来符号\" class=\"headerlink\" title=\"8.2 希伯来符号\"></a>8.2 希伯来符号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\aleph, \\beth, \\gimel, \\daleth</span><br></pre></td></tr></table></figure>\n<p>$ \\aleph, \\beth, \\gimel, \\daleth $</p>\n<h3 id=\"8-3-特殊字体形式\"><a href=\"#8-3-特殊字体形式\" class=\"headerlink\" title=\"8.3 特殊字体形式\"></a>8.3 特殊字体形式</h3><h4 id=\"8-3-1-黑板报粗体\"><a href=\"#8-3-1-黑板报粗体\" class=\"headerlink\" title=\"8.3.1 黑板报粗体\"></a>8.3.1 黑板报粗体</h4><p>用<code>\\mathbb&#123;text&#125;</code>或<code>\\Bbb&#123;text&#125;</code>表示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathbb&#125; &amp; \\mathbb&#123;SAMPLE&#125; &amp; \\mathbb&#123;sample&#125; &amp; \\mathbb&#123;0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;Bbb&#125; &amp; \\Bbb&#123;SAMPLE&#125; &amp; \\Bbb&#123;sample&#125; &amp; \\Bbb&#123;0123&#125;</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbb} & \\mathbb{SAMPLE} & \\mathbb{sample} & \\mathbb{0123} \\\\\n\\hline\n\\text{Bbb} & \\Bbb{SAMPLE} & \\Bbb{sample} & \\Bbb{0123}\n\\end{array}</script><h4 id=\"8-3-2-粗体\"><a href=\"#8-3-2-粗体\" class=\"headerlink\" title=\"8.3.2 粗体\"></a>8.3.2 粗体</h4><p>用<code>\\mathbf&#123;text&#125;</code>或<code>&#123;\\bf text&#125;</code>表示，注意控制范围，对特殊符号无效。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathbf&#125; &amp; \\mathbf&#123;SAMPLE&#125; &amp; \\mathbf&#123;sample&#125; &amp; \\mathbf&#123;0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;bf&#125; &amp; &#123;\\bf SAMPLE&#125; &amp; &#123;\\bf sample&#125; &amp; &#123;\\bf 0123&#125;</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathbf} & \\mathbf{SAMPLE} & \\mathbf{sample} & \\mathbf{0123} \\\\\n\\hline\n\\text{bf} & {\\bf SAMPLE} & {\\bf sample} & {\\bf 0123}\n\\end{array}</script><h4 id=\"8-3-3-粗体符号\"><a href=\"#8-3-3-粗体符号\" class=\"headerlink\" title=\"8.3.3 粗体符号\"></a>8.3.3 粗体符号</h4><p>用<code>\\boldsymbol&#123;text&#125;</code>表示，对特殊符号有效。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|cccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega &amp; \\sin\\in\\to \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;blodsymbol&#125; &amp; \\boldsymbol&#123;SAMPLE&#125; &amp; \\boldsymbol&#123;sample&#125; &amp; \\boldsymbol&#123;0123&#125; &amp; \\boldsymbol&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\boldsymbol&#123;\\Delta\\Theta\\Sigma\\Omega&#125; &amp; \\boldsymbol&#123;\\sin\\in\\to&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|cccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega & \\sin\\in\\to \\\\\n\\hline\n\\text{blodsymbol} & \\boldsymbol{SAMPLE} & \\boldsymbol{sample} & \\boldsymbol{0123} & \\boldsymbol{\\delta\\theta\\sigma\\omega} & \\boldsymbol{\\Delta\\Theta\\Sigma\\Omega} & \\boldsymbol{\\sin\\in\\to} \\\\\n\\end{array}</script><h4 id=\"8-3-4-斜体（意大利体）\"><a href=\"#8-3-4-斜体（意大利体）\" class=\"headerlink\" title=\"8.3.4 斜体（意大利体）\"></a>8.3.4 斜体（意大利体）</h4><p>用<code>\\mathit&#123;text&#125;</code>或<code>&#123;\\it text&#125;</code>或<code>&#123;\\mit text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathit&#125; &amp; \\mathit&#123;SAMPLE&#125; &amp; \\mathit&#123;sample&#125; &amp; \\mathit&#123;0123&#125; &amp; \\mathit&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathit&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;it&#125; &amp; &#123;\\it SAMPLE&#125; &amp; &#123;\\it sample&#125; &amp; &#123;\\it 0123&#125; &amp; &#123;\\it \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\it \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mit&#125; &amp; &#123;\\mit SAMPLE&#125; &amp; &#123;\\mit sample&#125; &amp; &#123;\\mit 0123&#125; &amp; &#123;\\mit \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\mit \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathit} & \\mathit{SAMPLE} & \\mathit{sample} & \\mathit{0123} & \\mathit{\\delta\\theta\\sigma\\omega} & \\mathit{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{it} & {\\it SAMPLE} & {\\it sample} & {\\it 0123} & {\\it \\delta\\theta\\sigma\\omega} & {\\it \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{mit} & {\\mit SAMPLE} & {\\mit sample} & {\\mit 0123} & {\\mit \\delta\\theta\\sigma\\omega} & {\\mit \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<code>\\mathit</code>与<code>\\it</code>等效；对于<em>拉丁字母、小写希腊字母</em>，默认字体即为<code>\\mit</code>。</p>\n<h4 id=\"8-3-5-罗马体\"><a href=\"#8-3-5-罗马体\" class=\"headerlink\" title=\"8.3.5 罗马体\"></a>8.3.5 罗马体</h4><p>用<code>\\mathrm&#123;text&#125;</code>或<code>&#123;\\rm text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathrm&#125; &amp; \\mathrm&#123;SAMPLE&#125; &amp; \\mathrm&#123;sample&#125; &amp; \\mathrm&#123;0123&#125; &amp; \\mathrm&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathrm&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;rm&#125; &amp; &#123;\\rm SAMPLE&#125; &amp; &#123;\\rm sample&#125; &amp; &#123;\\rm 0123&#125; &amp; &#123;\\rm \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\rm \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathrm} & \\mathrm{SAMPLE} & \\mathrm{sample} & \\mathrm{0123} & \\mathrm{\\delta\\theta\\sigma\\omega} & \\mathrm{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{rm} & {\\rm SAMPLE} & {\\rm sample} & {\\rm 0123} & {\\rm \\delta\\theta\\sigma\\omega} & {\\rm \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>小写希腊字母</em>不支持罗马体；对于<em>阿拉伯数字、大写希腊字母</em>，默认字体即为<code>\\rm</code>。</p>\n<h4 id=\"8-3-6-等线体-无衬线体\"><a href=\"#8-3-6-等线体-无衬线体\" class=\"headerlink\" title=\"8.3.6 等线体/无衬线体\"></a>8.3.6 等线体/无衬线体</h4><p>用<code>\\mathsf&#123;text&#125;</code>或<code>&#123;\\sf text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathsf&#125; &amp; \\mathsf&#123;SAMPLE&#125; &amp; \\mathsf&#123;sample&#125; &amp; \\mathsf&#123;0123&#125; &amp; \\mathsf&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathsf&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;sf&#125; &amp; &#123;\\sf SAMPLE&#125; &amp; &#123;\\sf sample&#125; &amp; &#123;\\sf 0123&#125; &amp; &#123;\\sf \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\sf \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathsf} & \\mathsf{SAMPLE} & \\mathsf{sample} & \\mathsf{0123} & \\mathsf{\\delta\\theta\\sigma\\omega} & \\mathsf{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{sf} & {\\sf SAMPLE} & {\\sf sample} & {\\sf 0123} & {\\sf \\delta\\theta\\sigma\\omega} & {\\sf \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>小写希腊字母</em>不支持无衬线体。</p>\n<h4 id=\"8-3-7-手写体\"><a href=\"#8-3-7-手写体\" class=\"headerlink\" title=\"8.3.7 手写体\"></a>8.3.7 手写体</h4><p>用<code>\\mathscr&#123;text&#125;</code>或<code>&#123;\\scr text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathscr&#125; &amp; \\mathscr&#123;SAMPLE&#125; &amp; \\mathscr&#123;sample&#125; &amp; \\mathscr&#123;0123&#125; &amp; \\mathscr&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathscr&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;scr&#125; &amp; &#123;\\scr SAMPLE&#125; &amp; &#123;\\scr sample&#125; &amp; &#123;\\scr 0123&#125; &amp; &#123;\\scr \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\scr \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathscr} & \\mathscr{SAMPLE} & \\mathscr{sample} & \\mathscr{0123} & \\mathscr{\\delta\\theta\\sigma\\omega} & \\mathscr{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{scr} & {\\scr SAMPLE} & {\\scr sample} & {\\scr 0123} & {\\scr \\delta\\theta\\sigma\\omega} & {\\scr \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>阿拉伯数字、大写希腊字母</em>显示结果与斜体等效；<em>小写希腊字母</em>不改变。</p>\n<h4 id=\"8-3-8-花体\"><a href=\"#8-3-8-花体\" class=\"headerlink\" title=\"8.3.8 花体\"></a>8.3.8 花体</h4><p>用<code>\\mathcal&#123;text&#125;</code>或<code>&#123;\\cal text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathcal&#125; &amp; \\mathcal&#123;SAMPLE&#125; &amp; \\mathcal&#123;sample&#125; &amp; \\mathcal&#123;0123&#125; &amp; \\mathcal&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathcal&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;cal&#125; &amp; &#123;\\cal SAMPLE&#125; &amp; &#123;\\cal sample&#125; &amp; &#123;\\cal 0123&#125; &amp; &#123;\\cal \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\cal \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathcal} & \\mathcal{SAMPLE} & \\mathcal{sample} & \\mathcal{0123} & \\mathcal{\\delta\\theta\\sigma\\omega} & \\mathcal{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{cal} & {\\cal SAMPLE} & {\\cal sample} & {\\cal 0123} & {\\cal \\delta\\theta\\sigma\\omega} & {\\cal \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>阿拉伯数字、大写希腊字母</em>显示结果与斜体等效；<em>小写拉丁字母、小写希腊字母</em>不改变。</p>\n<h4 id=\"8-3-9-打字机体\"><a href=\"#8-3-9-打字机体\" class=\"headerlink\" title=\"8.3.9 打字机体\"></a>8.3.9 打字机体</h4><p>用<code>\\mathtt&#123;text&#125;</code>或<code>&#123;\\tt text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 &amp; \\delta\\theta\\sigma\\omega &amp; \\Delta\\Theta\\Sigma\\Omega \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathtt&#125; &amp; \\mathtt&#123;SAMPLE&#125; &amp; \\mathtt&#123;sample&#125; &amp; \\mathtt&#123;0123&#125; &amp; \\mathtt&#123;\\delta\\theta\\sigma\\omega&#125; &amp; \\mathtt&#123;\\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;tt&#125; &amp; &#123;\\tt SAMPLE&#125; &amp; &#123;\\tt sample&#125; &amp; &#123;\\tt 0123&#125; &amp; &#123;\\tt \\delta\\theta\\sigma\\omega&#125; &amp; &#123;\\tt \\Delta\\Theta\\Sigma\\Omega&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 & \\delta\\theta\\sigma\\omega & \\Delta\\Theta\\Sigma\\Omega \\\\\n\\hline\n\\text{mathtt} & \\mathtt{SAMPLE} & \\mathtt{sample} & \\mathtt{0123} & \\mathtt{\\delta\\theta\\sigma\\omega} & \\mathtt{\\Delta\\Theta\\Sigma\\Omega} \\\\\n\\hline\n\\text{tt} & {\\tt SAMPLE} & {\\tt sample} & {\\tt 0123} & {\\tt \\delta\\theta\\sigma\\omega} & {\\tt \\Delta\\Theta\\Sigma\\Omega} \\\\\n\\end{array}</script><p>可以看到<em>小写希腊字母</em>不支持打字机体。</p>\n<h4 id=\"8-3-10-Fraktur体-德国哥特体\"><a href=\"#8-3-10-Fraktur体-德国哥特体\" class=\"headerlink\" title=\"8.3.10 Fraktur体/德国哥特体\"></a>8.3.10 Fraktur体/德国哥特体</h4><p>用<code>\\mathfrak&#123;text&#125;</code>或<code>&#123;\\frak text&#125;</code>表示，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;mathfrak&#125; &amp; \\mathfrak&#123;SAMPLE&#125; &amp; \\mathfrak&#123;sample&#125; &amp; \\mathfrak&#123;0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;frak&#125; &amp; &#123;\\frak SAMPLE&#125; &amp; &#123;\\frak sample&#125; &amp; &#123;\\frak 0123&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{mathfrak} & \\mathfrak{SAMPLE} & \\mathfrak{sample} & \\mathfrak{0123} \\\\\n\\hline\n\\text{frak} & {\\frak SAMPLE} & {\\frak sample} & {\\frak 0123} \\\\\n\\end{array}</script><h4 id=\"8-3-11-小型手写体\"><a href=\"#8-3-11-小型手写体\" class=\"headerlink\" title=\"8.3.11 小型手写体\"></a>8.3.11 小型手写体</h4><p>用<code>&#123;\\scriptstyle text&#125;</code>命令，同时可以嵌套其他字体。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;c|ccccc&#125;</span><br><span class=\"line\">\\text&#123;defalut&#125; &amp; SAMPLE &amp; sample &amp; 0123 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;scriptstyle&#125; &amp; &#123;\\scriptstyle SAMPLE&#125; &amp; &#123;\\scriptstyle sample&#125; &amp; &#123;\\scriptstyle 0123&#125; \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\text&#123;scriptstyle+text&#125; &amp; &#123;\\scriptstyle \\text&#123;SAMPLE&#125; &#125; &amp; &#123;\\scriptstyle \\text&#123;sample&#125; &#125; &amp; &#123;\\scriptstyle \\text&#123;0123&#125; &#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{array}{c|ccccc}\n\\text{defalut} & SAMPLE & sample & 0123 \\\\\n\\hline\n\\text{scriptstyle} & {\\scriptstyle SAMPLE} & {\\scriptstyle sample} & {\\scriptstyle 0123} \\\\\n\\hline\n\\text{scriptstyle+text} & {\\scriptstyle \\text{SAMPLE} } & {\\scriptstyle \\text{sample} } & {\\scriptstyle \\text{0123} } \\\\\n\\end{array}</script><h3 id=\"8-4-混合字体\"><a href=\"#8-4-混合字体\" class=\"headerlink\" title=\"8.4 混合字体\"></a>8.4 混合字体</h3><p>正常情况下，拉丁字母会被当做变量斜体显示。若需要非斜体显示，可以用<code>\\text</code>命令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abc \\quad \\text&#123;abc&#125;</span><br></pre></td></tr></table></figure>\n<p>$ abc \\quad \\text{abc} $​</p>\n<p><code>\\text</code>中仍可以使用<code>$ 公式 $</code>插入公式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(n)=</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">n/2, &amp; \\text&#123;if $n$ is even&#125; \\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if $n$ is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nf(n)=\n\\begin{cases}\nn/2, & \\text{if $n$ is even} \\\\\n3n+1, & \\text{if $n$ is odd}\n\\end{cases}</script><p>混合输入时，注意空格显示。可以使用<code>~</code>或<code>\\</code>加空格强制显示空格。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">\\text&#123;if&#125; n \\text&#123;is even&#125; \\\\ % Bad</span><br><span class=\"line\">\\text&#123;if &#125; n \\text&#123; is even&#125; \\\\ % Good</span><br><span class=\"line\">\\text&#123;if&#125;~n~\\text&#123;is even&#125; \\\\ % Good</span><br><span class=\"line\">\\text&#123;if&#125;\\ n\\ \\text&#123;is even&#125; \\\\ % Good</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\begin{matrix}\n\\text{if} n \\text{is even} \\\\ % Bad\n\\text{if } n \\text{ is even} \\\\ % Good\n\\text{if}~n~\\text{is even} \\\\ % Good\n\\text{if}\\ n\\ \\text{is even} \\\\ % Good\n\\end{matrix}</script><h2 id=\"9-括号\"><a href=\"#9-括号\" class=\"headerlink\" title=\"9 括号\"></a>9 括号</h2><p>圆括号<code>()</code>、方括号<code>[]</code>表示其本身，花括号<code>&#123;&#125;</code>需要<code>\\</code>转义表示。</p>\n<p><code>\\left</code>和<code>\\right</code>命令用来生成自动匹配高度括号或括号型字符。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(\\dfrac&#123;1&#125;&#123;2&#125;)^2 \\quad \\left( \\dfrac&#123;1&#125;&#123;2&#125; \\right) ^2</span><br></pre></td></tr></table></figure>\n<p>$ (\\dfrac{1}{2})^2 \\quad \\left( \\dfrac{1}{2} \\right) ^2 $</p>\n<h3 id=\"9-1-圆括号、方括号、花括号\"><a href=\"#9-1-圆括号、方括号、花括号\" class=\"headerlink\" title=\"9.1 圆括号、方括号、花括号\"></a>9.1 圆括号、方括号、花括号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\&#123; \\dfrac ab \\right\\&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\left( \\dfrac ab \\right) \\quad \\left[ \\dfrac ab \\right] \\quad \\left\\{ \\dfrac ab \\right\\} $</p>\n<h3 id=\"9-2-角括号、单竖线（绝对值）、双竖线（范数）\"><a href=\"#9-2-角括号、单竖线（绝对值）、双竖线（范数）\" class=\"headerlink\" title=\"9.2 角括号、单竖线（绝对值）、双竖线（范数）\"></a>9.2 角括号、单竖线（绝对值）、双竖线（范数）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\|</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\langle \\dfrac ab \\right\\rangle \\quad \\left| \\dfrac ab \\right| \\quad \\left\\| \\dfrac ab \\right\\| $</p>\n<h3 id=\"9-3-取整函数\"><a href=\"#9-3-取整函数\" class=\"headerlink\" title=\"9.3 取整函数\"></a>9.3 取整函数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\lfloor \\dfrac ab \\right\\rfloor \\quad \\left\\lceil \\dfrac ab \\right\\rceil $</p>\n<h3 id=\"9-4-斜线与箭头\"><a href=\"#9-4-斜线与箭头\" class=\"headerlink\" title=\"9.4 斜线与箭头\"></a>9.4 斜线与箭头</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left/ \\dfrac ab \\right\\backslash</span><br></pre></td></tr></table></figure>\n<p>$ \\left/ \\dfrac ab \\right\\backslash $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\uparrow \\dfrac ab \\right\\downarrow \\quad \\left\\Uparrow \\dfrac ab \\right\\Downarrow \\quad \\left\\updownarrow \\dfrac ab \\right\\Updownarrow $</p>\n<h3 id=\"9-5-混合括号\"><a href=\"#9-5-混合括号\" class=\"headerlink\" title=\"9.5 混合括号\"></a>9.5 混合括号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left[ \\dfrac&#123;1&#125;&#123;2&#125;, 1 \\right) \\quad \\left\\langle \\psi \\right|</span><br></pre></td></tr></table></figure>\n<p>$ \\left[ \\dfrac{1}{2}, 1 \\right) \\quad \\left\\langle \\psi \\right| $</p>\n<h3 id=\"9-6-单边括号\"><a href=\"#9-6-单边括号\" class=\"headerlink\" title=\"9.6 单边括号\"></a>9.6 单边括号</h3><p>用<code>\\left.</code>或<code>\\right.</code>匹配另一边。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\&#123;</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;l&#125;</span><br><span class=\"line\">x+y=3, \\\\</span><br><span class=\"line\">2x+3y=8</span><br><span class=\"line\">\\end&#123;array&#125;</span><br><span class=\"line\">\\right.</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\{<br>\\begin{array}{l}<br>x+y=3, \\\\<br>2x+3y=8<br>\\end{array}<br>\\right. $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left. \\dfrac ab \\right\\&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\left. \\dfrac ab \\right\\} $</p>\n<h3 id=\"9-7-控制括号大小\"><a href=\"#9-7-控制括号大小\" class=\"headerlink\" title=\"9.7 控制括号大小\"></a>9.7 控制括号大小</h3><p>使用<code>\\big</code>、<code>\\Big</code>、<code>\\bigg</code>、<code>\\Bigg</code>控制括号大小。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\left\\&#123; \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\&#125;*5</span><br></pre></td></tr></table></figure>\n<p>$ \\left\\{ \\left[ \\left( \\left| \\left\\| a \\right\\| +1 \\right| -2 \\right) +3 \\right] -4 \\right\\}*5 $​</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Bigg\\&#123; \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\&#125;*5</span><br></pre></td></tr></table></figure>\n<p>$ \\Bigg\\{ \\bigg[ \\Big( \\big| \\left\\| a \\right\\| +1 \\big| -2 \\Big) +3 \\bigg] -4 \\Bigg\\}*5 $</p>\n<h2 id=\"10-空格\"><a href=\"#10-空格\" class=\"headerlink\" title=\"10 空格\"></a>10 空格</h2><p>LaTeX会忽略公式中的空格，空格控制从宽到窄依次为：</p>\n<p><strong>双quad空格</strong>：2个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\qquad \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\qquad \\beta $</p>\n<p><strong>quad空格</strong>：1个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\quad \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\quad \\beta $​</p>\n<p><strong>空格</strong>：1/3个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\ \\beta ~ \\gamma</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\ \\beta ~ \\gamma $</p>\n<p><strong>中空格</strong>：2/7个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\; \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\; \\beta $​</p>\n<p><strong>小空格</strong>：1/6个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\, \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\, \\beta $​</p>\n<p><strong>无空格</strong>：0个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\beta $​</p>\n<p><strong>紧贴</strong>：-1/6个字符宽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\alpha \\! \\beta</span><br></pre></td></tr></table></figure>\n<p>$ \\alpha \\! \\beta $​</p>\n<h2 id=\"11-颜色\"><a href=\"#11-颜色\" class=\"headerlink\" title=\"11 颜色\"></a>11 颜色</h2><p>使用<code>&#123;\\color&#123;color&#125;&#123;text&#125; &#125;</code>更改文字颜色，注意控制范围。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\color&#123;red&#125;&#123;text&#125; \\quad \\color&#123;yellow&#125;&#123;text&#125; \\quad \\color&#123;blue&#125;&#123;text&#125; \\quad \\color&#123;green&#125;&#123;text&#125; \\quad \\color&#123;purple&#125;&#123;text&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\color{red}{text} \\quad \\color{yellow}{text} \\quad \\color{blue}{text} \\quad \\color{green}{text} \\quad \\color{purple}{text} $​</p>\n<p>color名小写时表示简单色调，首字母大写时表示较为复杂的色调。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\color&#123;Red&#125;&#123;text&#125; \\quad \\color&#123;Orange&#125;&#123;text&#125; \\quad \\color&#123;RoyalBlue&#125;&#123;text&#125; \\quad \\color&#123;Violet&#125;&#123;text&#125; \\quad \\color&#123;LimeGreen&#125;&#123;text&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\color{Red}{text} \\quad \\color{Orange}{text} \\quad \\color{RoyalBlue}{text} \\quad \\color{Violet}{text} \\quad \\color{LimeGreen}{text} $</p>\n<p>使用<code>&#123;\\color&#123; #rgb&#125;&#123;text&#125; &#125;</code>选择更多颜色，<code>rgb</code>的范围是<code>0-9</code>、<code>A-F</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\color&#123; #0FF&#125;&#123;text&#125; \\quad \\color&#123; #00F&#125;&#123;text&#125; \\quad \\color&#123; #F0F&#125;&#123;text&#125; \\quad \\color&#123; #0F0&#125;&#123;text&#125; \\quad \\color&#123; #6CF&#125;&#123;text&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\color{ #0FF}{text} \\quad \\color{ #00F}{text} \\quad \\color{ #F0F}{text} \\quad \\color{ #0F0}{text} \\quad \\color{ #6CF}{text} $</p>\n<h2 id=\"12-小技巧\"><a href=\"#12-小技巧\" class=\"headerlink\" title=\"12 小技巧\"></a>12 小技巧</h2><ol>\n<li><p>如何打出如下格式？</p>\n<p>$ \\mathop{x} \\limits_a^b $</p>\n<p>由于<code>\\limits</code>只能用在运算符（如<code>\\sum</code>）后，所以可以用<code>\\mathop</code>命令使字母变成运算符。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mathop&#123;x&#125; \\limits_a^b</span><br></pre></td></tr></table></figure>\n<p>也可以选择<code>\\overset</code>和<code>\\underset</code>实现。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\underset&#123;a&#125;&#123;\\overset&#123;b&#125;&#123;x&#125; &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>|</code>和<code>\\vert</code>、<code>\\mid</code>的区别：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| \\quad \\vert \\quad \\mid</span><br></pre></td></tr></table></figure>\n<p>$ | \\quad \\vert \\quad \\mid $​</p>\n<p>分以下情况讨论：</p>\n<ul>\n<li><p><strong>绝对值</strong></p>\n<p><code>|</code>与<code>\\vert</code>均可，还可以使用<code>\\lvert</code>、<code>\\rvert</code>。注意到下例中，-2左侧的<code>\\vert</code>被识别为<em>普通元素</em>，而非<em>关系元素</em>，因此在非匹配情况下，不建议使用<code>\\vert</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert</span><br></pre></td></tr></table></figure>\n<p>$ |-1| \\quad \\vert -2 \\vert \\quad \\lvert -3 \\rvert $​</p>\n<p>当遇到分数时，使用<code>\\left</code>、<code>\\right</code>匹配高度。注意<code>\\lvert</code>、<code>\\rvert</code>并不会匹配高度！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert</span><br></pre></td></tr></table></figure>\n<p>$ \\lvert \\dfrac ab \\rvert \\quad \\left| \\dfrac cd \\right| \\quad \\left\\vert \\dfrac ef \\right\\vert $​</p>\n</li>\n<li><p><strong>整除</strong></p>\n<p>用关系符号<code>\\mid</code>表示。如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a \\mid b</span><br></pre></td></tr></table></figure>\n<p>$ a \\mid b $</p>\n<p>表示$a$能整除$b$​，即$b$能被$a$整除，如$ 3 \\mid 9 $表示9能被3整除。</p>\n<p>注意<code>\\mid</code>不可伸长，伸长需要借助<code>|</code>，使用单边匹配<code>|</code>的方法，或<code>\\middle</code>命令（<code>\\middle</code>需要左右为<code>\\left.</code>及<code>\\right.</code>）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right.</span><br></pre></td></tr></table></figure>\n<p>$ \\dfrac ab \\mid c \\quad \\left. \\dfrac ab \\right| c \\quad \\left. \\dfrac ab \\middle| c \\right. $​</p>\n</li>\n<li><p><strong>集合</strong></p>\n<p>同上，应用<code>\\mid</code>，伸长时用<code>\\middle|</code>替代。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">\\left\\&#123; x \\mid x \\in \\mathbb&#123;R&#125; \\text&#123; and &#125; x \\ne 1 \\right\\&#125; \\\\</span><br><span class=\"line\">\\left\\&#123; \\dfrac ab \\mid a,b \\in \\mathbb&#123;N&#125; \\text&#123; and &#125; b &gt; 5 \\right\\&#125; \\\\</span><br><span class=\"line\">\\left\\&#123; \\left. \\dfrac ab \\middle| a,b \\in \\mathbb&#123;N&#125; \\text&#123; and &#125; b &gt; 5 \\right. \\right\\&#125;</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix}<br>\\left\\{ x \\mid x \\in \\mathbb{R} \\text{ and } x \\ne 1 \\right\\} \\\\<br>\\left\\{ \\dfrac ab \\mid a,b \\in \\mathbb{N} \\text{ and } b &gt; 5 \\right\\} \\\\<br>\\left\\{ \\left. \\dfrac ab \\middle| a,b \\in \\mathbb{N} \\text{ and } b &gt; 5 \\right. \\right\\}<br>\\end{matrix} $​</p>\n</li>\n<li><p><strong>函数</strong></p>\n<p>因为通常高度不固定，因此建议用<code>|</code>表示并匹配高度。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f&#x27;(x_0) = \\left. f&#x27;(x) \\right| _&#123;x=x_0&#125; = \\left. \\dfrac&#123;\\mathrm&#123;d&#125;f&#125;&#123;\\mathrm&#123;d&#125;x&#125; \\right| _&#123;x=x_0&#125;</span><br></pre></td></tr></table></figure>\n<p>$ f’(x_0) = \\left. f’(x) \\right| _{x=x_0} = \\left. \\dfrac{\\mathrm{d}f}{\\mathrm{d}x} \\right| _{x=x_0} $</p>\n</li>\n<li><p><strong>双竖线</strong></p>\n<p>把<code>|</code>、<code>\\vert</code>、<code>\\lvert</code>、<code>\\rvert</code>、<code>\\mid</code>分别替换为<code>\\|</code>、<code>\\Vert</code>、<code>\\lVert</code>、<code>\\rVert</code>、<code>\\parallel</code>即可，基本属性与上述对应单竖线类似。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m</span><br></pre></td></tr></table></figure>\n<p>$ \\| x \\| \\quad \\left\\Vert \\dfrac ab \\right\\Vert \\quad \\lVert c \\rVert \\quad l \\parallel m $</p>\n</li>\n</ul>\n</li>\n<li><p>如何输入斜分式？</p>\n<p>$ {}^1/_2 $​</p>\n<p>用上下标即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#125;^1/_2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何输入化学方程式？</p>\n<p>$ \\mathrm{CH_3CH_2OH \\xrightarrow[170^\\circ C]{浓H_2SO_4} CH_2=CH_2 \\uparrow + H_2O } $</p>\n<p>使用<code>\\xrightarrow</code>和已有的符号即可。也可使用宏包，在此不表。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\mathrm&#123;CH_3CH_2OH \\xrightarrow[170^\\circ C]&#123;浓H_2SO_4&#125; CH_2=CH_2 \\uparrow + H_2O &#125;</span><br></pre></td></tr></table></figure>\n<p>给箭头加文字有如下方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">\\xleftarrow[x+y+z]&#123;x+y+z+1&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\xrightarrow[x+y+z]&#123;x+y+z+1&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\overset&#123;x+y&#125;&#123;\\rightarrow&#125; \\\\ % 长度固定</span><br><span class=\"line\">\\underrightarrow&#123;x+y+z&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\underset&#123;x+y&#125;&#123;\\leftarrow&#125; \\\\ % 长度固定</span><br><span class=\"line\">\\overleftarrow&#123;x+y+z&#125; \\\\ % 自动调整长度</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{matrix}<br>\\xleftarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度<br>\\xrightarrow[x+y+z]{x+y+z+1} \\\\ % 自动调整长度<br>\\overset{x+y}{\\rightarrow} \\\\ % 长度固定<br>\\underrightarrow{x+y+z} \\\\ % 自动调整长度<br>\\underset{x+y}{\\leftarrow} \\\\ % 长度固定<br>\\overleftarrow{x+y+z} \\\\ % 自动调整长度<br>\\end{matrix} $</p>\n</li>\n<li><p>如何给公式加方框？</p>\n<p>用<code>\\boxed</code>命令或用1*1表格的边框。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\boxed &#123;E=mc^2&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\boxed {E=mc^2} $</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;array&#125;&#123;|c|&#125;</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">E=mc^2 \\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<p>$ \\begin{array}{|c|}<br>\\hline<br>E=mc^2 \\\\<br>\\hline<br>\\end{array} $</p>\n</li>\n<li><p>如何输入分数的约分形式/如何输入删除线？</p>\n<p>$ \\require{cancel} \\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} $</p>\n<p>可以使用<code>\\cancel</code>、<code>\\bcancel</code>、<code>\\xcancel</code>和<code>\\cancelto</code>命令（需要<code>\\require</code>导包）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\require&#123;cancel&#125;</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;rl&#125;</span><br><span class=\"line\">\\verb|y+\\cancel&#123;x&#125;| &amp; y+\\cancel&#123;x&#125; \\\\</span><br><span class=\"line\">\\verb|\\cancel&#123;y+x&#125;| &amp; \\cancel&#123;y+x&#125; \\\\</span><br><span class=\"line\">\\verb|y+\\bcancel&#123;x&#125;| &amp; y+\\bcancel&#123;x&#125; \\\\</span><br><span class=\"line\">\\verb|y+\\xcancel&#123;x&#125;| &amp; y+\\xcancel&#123;x&#125; \\\\</span><br><span class=\"line\">\\verb|y+\\cancelto&#123;0&#125;&#123;x&#125;| &amp; y+\\cancelto&#123;0&#125;&#123;x&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\require{cancel}\n\\begin{array}{rl}\n\\verb|y+\\cancel{x}| & y+\\cancel{x} \\\\\n\\verb|\\cancel{y+x}| & \\cancel{y+x} \\\\\n\\verb|y+\\bcancel{x}| & y+\\bcancel{x} \\\\\n\\verb|y+\\xcancel{x}| & y+\\xcancel{x} \\\\\n\\verb|y+\\cancelto{0}{x}| & y+\\cancelto{0}{x} \\\\\n\\end{array}</script><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\require&#123;cancel&#125;</span><br><span class=\"line\">\\begin&#123;array&#125;&#123;c&#125;</span><br><span class=\"line\">\\verb+\\dfrac&#123;\\cancel&#123;15&#125;3&#125;&#123;\\cancel&#123;25&#125;5&#125; = \\dfrac&#123;3&#125;&#123;5&#125;+ \\\\</span><br><span class=\"line\">\\dfrac&#123;\\cancel&#123;15&#125;3&#125;&#123;\\cancel&#123;25&#125;5&#125; = \\dfrac&#123;3&#125;&#123;5&#125; \\\\</span><br><span class=\"line\">\\end&#123;array&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\require{cancel}\n\\begin{array}{c}\n\\verb+\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5}+ \\\\\n\\dfrac{\\cancel{15}3}{\\cancel{25}5} = \\dfrac{3}{5} \\\\\n\\end{array}</script><p>上例还使用了<code>\\verb</code>命令来显示原文照排效果。</p>\n</li>\n</ol>\n<h2 id=\"13-示例\"><a href=\"#13-示例\" class=\"headerlink\" title=\"13 示例\"></a>13 示例</h2><p>以下公式来源于：Tsung-Chyan Lai,Yuri N. Sotskov,Alexandre Dolgui. The stability radius of an optimal line balance with maximum efficiency for a simple assembly line[J]. European Journal of Operational Research,2018,274(2):</p>\n<ol>\n<li><p>导数、括号匹配、上下标、特殊符号、大型运算符</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t&#x27; \\left( V_k^&#123;b_r&#125; \\right) := \\sum_&#123;i \\in V_k^&#123;b_r&#125; &#125; t_i&#x27; = \\sum_&#123;i \\in V_k^&#123;b_r&#125; \\setminus \\left\\&#123; j \\right\\&#125; &#125; t_i&#x27;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\nt' \\left( V_k^{b_r} \\right) := \\sum_{i \\in V_k^{b_r} } t_i' = \\sum_{i \\in V_k^{b_r} \\setminus \\left\\{ j \\right\\} } t_i'</script></li>\n<li><p>希腊字母、括号匹配、特殊符号、字母标记</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\delta_&#123;b_1u&#125;^&#123;=b_rk&#125; = \\frac&#123;t \\left( V_k^&#123;b_r&#125; \\right) - t \\left( V_u^&#123;b_1&#125; \\right)&#125;&#123;\\left| \\tilde&#123;V&#125;_k^&#123;b_r&#125; \\oplus \\tilde&#123;V&#125;_u^&#123;b_1&#125; \\right|&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\delta_{b_1u}^{=b_rk} = \\frac{t \\left( V_k^{b_r} \\right) - t \\left( V_u^{b_1} \\right)}{\\left| \\widetilde{V}_k^{b_r} \\oplus \\widetilde{V}_u^{b_1} \\right|}</script></li>\n<li><p>希腊字母、特殊符号、条件表达式、函数、正文字体</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\gamma \\left( b_r \\right) :=</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">\\frac&#123;1&#125;&#123;\\tilde&#123;n&#125; &#125; \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\&#123; t \\left( V_k^&#123;b_r&#125; \\right) : &#123;\\widetilde&#123;V&#125;_k^&#123;b_r&#125; &#125; \\notin W \\left( b_r, t \\right) \\right\\&#125; \\right], &amp; \\text&#123;if $k \\in \\left\\&#123; 1, 2, \\ldots, m \\left( b_r \\right) \\right\\&#125;$ with $t \\left( V_k^&#123;b_r&#125; \\right) &lt; c \\left( b_r, t \\right)$;&#125; \\\\</span><br><span class=\"line\">\\min \\left\\&#123; t_i : i \\in \\widetilde&#123;V&#125; \\right\\&#125;, &amp; \\text&#123;if $t \\left( V_k^&#123;b_r&#125; \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\&#123; 1, 2, \\ldots, m \\left( b_r \\right) \\right\\&#125;$.&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\gamma \\left( b_r \\right) :=\n\\begin{cases}\n\\frac{1}{\\tilde{n} } \\cdot \\left[ c \\left( b_r, t \\right) -  \\max \\left\\{ t \\left( V_k^{b_r} \\right) : {\\widetilde{V}_k^{b_r} } \\notin W \\left( b_r, t \\right) \\right\\} \\right], & \\text{if $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$ with $t \\left( V_k^{b_r} \\right) < c \\left( b_r, t \\right)$;} \\\\\n\\min \\left\\{ t_i : i \\in \\widetilde{V} \\right\\}, & \\text{if $t \\left( V_k^{b_r} \\right) = c \\left( b_r, t \\right)$ for each $k \\in \\left\\{ 1, 2, \\ldots, m \\left( b_r \\right) \\right\\}$.}\n\\end{cases}</script></li>\n</ol>\n<h2 id=\"14-小工具\"><a href=\"#14-小工具\" class=\"headerlink\" title=\"14 小工具\"></a>14 小工具</h2><ul>\n<li>手画符号搜索LaTeX代码：<a href=\"http://detexify.kirelabs.org/classify.html\">http://detexify.kirelabs.org/classify.html</a></li>\n<li>LaTeX在线编辑器：<a href=\"http://www.codecogs.com/latex/eqneditor.php\">http://www.codecogs.com/latex/eqneditor.php</a></li>\n</ul>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Aug 14 2021 16:20:26 GMT+0800 (中国标准时间)","title":"LaTeX数学公式手册","path":"2021/08/11/latex-mathematical-formula-handbook/","eyeCatchImage":null,"excerpt":"<p>LaTeX是一种基于TeX的排版系统。由于其对复杂的数学公式排版效果很好，所以常用于大型论文排版和数学公式输入。本文及本博客的文章均使用LaTeX输入数学公式。</p>","date":{"_isAMomentObject":true,"_i":"2021-08-11T12:07:35.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-08-11T12:07:35.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"LaTeX","tags":["技术","技巧","Markdown","LaTeX","数学"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":44300},{"title":"用JavaScript实现八大排序","date":"2022-03-02T05:24:31.000Z","comments":1,"_content":"\n八大排序分别是 冒泡排序、选择排序、插入排序、希尔排序、快速排序、归并排序、堆排序、基数排序。本文介绍这八大排序算法的基本思想和过程，并尝试使用JavaScript实现它们。\n\n<!-- more -->\n\n各个排序的复杂度如下表所示：\n\n|   排序   |  平均情况   |  最好情况   |   最坏情况   |  辅助空间   | 稳定性 |\n| :------: | :---------: | :---------: | :----------: | :---------: | :----: |\n| 冒泡排序 |  `O(n^2)`   |   `O(n)`    |   `O(n^2)`   |   `O(1)`    |  稳定  |\n| 选择排序 |  `O(n^2)`   |  `O(n^2)`   |   `O(n^2)`   |   `O(1)`    | 不稳定 |\n| 插入排序 |  `O(n^2)`   |   `O(n)`    |   `O(n^2)`   |   `O(1)`    |  稳定  |\n| 希尔排序 | `O(n^1.3)`  | `O(n logn)` |   `O(n^2)`   |   `O(1)`    | 不稳定 |\n| 快速排序 | `O(n logn)` | `O(n logn)` |   `O(n^2)`   | `O(n logn)` | 不稳定 |\n| 归并排序 | `O(n logn)` | `O(n logn)` | `O(n logn)`  |   `O(n)`    |  稳定  |\n|  堆排序  | `O(n logn)` | `O(n logn)` | `O(n logn)`  |   `O(1)`    | 不稳定 |\n| 基数排序 | `O(d(n+r))` | `O(d(n+r))` | `O(d(n+rd))` |  `O(n+rd)`  |  稳定  |\n\n## 0 JavaScript自带排序\n\n即`Array.prototype.sort()`，原理为插入排序与快速排序混合。`sort`会改变原数组，并返回排序后的数组（不过一般没人使用其返回值）。\n\n注意，`sort`不含参数时，默认是按**字母顺序**对数组进行升序排序。\n\n```javascript\nlet fruits = [\"banana\", \"apple\", \"orange\", \"mongo\"];\nfruits.sort();\nconsole.log(fruits);\t// [ 'apple', 'banana', 'mongo', 'orange' ]\n\nlet nums = [40, 100, 1, 5, 25, 10];\nnums.sort();\nconsole.log(nums);\t// [ 1, 10, 100, 25, 40, 5 ]\n```\n\n为使结果按数字顺序进行排序，`sort`接受一个**回调函数**作为参数，如下所示：\n\n```javascript\nfunction(a, b) {return a - b;}\n```\n\n可以直接简写为箭头函数：\n\n```javascript\n(a, b) => a - b\n```\n\n回调函数的两个参数代表数组中准备比较的两个值，并根据返回值决定排序：\n\n1. 返回值为负值，将`a`向前排\n2. 返回值为正值，将`b`向前排\n3. 返回值为零，`a`、`b`顺序不变\n\n因此，可以为回调函数填写不同的返回值，以进行不同的排序方式。\n\n```javascript\nlet nums = [40, 100, 1, 5, 25, 10];\nnums.sort((a, b) => a - b);\t// 数字升序排序\nconsole.log(nums);\t// [ 1, 5, 10, 25, 40, 100 ]\nnums.sort((a, b) => b - a);\t// 数字降序排序\nconsole.log(nums);\t// [ 100, 40, 25, 10, 5, 1 ]\n\nlet students = [{id: 1, scores: 85}, {id: 2, scores: 90}, {id: 3, scores: 82}];\nstudents.sort((a, b) => a.scores - b.scores);\t// 按每个元素的scores属性升序排序\nconsole.log(students);\t// [ { id: 3, scores: 82 }, { id: 1, scores: 85 }, { id: 2, scores: 90 } ]\n```\n\n注意回调函数的返回值是数值，而非布尔值，不要写成`(a, b) => a < b`。\n\n## 1 冒泡排序（Bubble Sort）\n\n典型的排序算法。两个数两两比较大小，大数后移（下沉），小数前移（冒泡）。\n\n这里用一个大小为2的窗口，每次从后往前滑动比较，直到最小的数被顶到最前。紧接着对后面`n - 1`个数进行同样的操作，直至比较完毕。\n\n一共进行`n - 1`趟比较，第`i`趟（`i`从0开始）对`n - i`个数进行`n - i - 1`次比较，每趟结束后有一个数被排好位置，因此复杂度为`O(n^2)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-01.png\" alt=\"冒泡排序\" style=\"zoom:50%;\" />\n\n```javascript\nfunction bubbleSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = n - 1; j > i; j--) {\n      if (final[j - 1] > final[j]) {\n        [final[j - 1], final[j]] = [final[j], final[j - 1]];\n      }\n    }\n  }\n  return final;\n}\n```\n\n**优化：**`n - 1`趟比较需要全部完成，如果某趟比较已经完成排序，则进行了多余的遍历。\n\n可以设置标志位`flag`，表示本趟比较**是否进行了冒泡交换**，如果一趟下来都没有进行冒泡交换，表示元素已经有序。\n\n```javascript\nfunction bubbleSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    let flag = false;\n    for (let j = n - 1; j > i; j--) {\n      if (final[j - 1] > final[j]) {\n        [final[j - 1], final[j]] = [final[j], final[j - 1]];\n        flag = true;\n      }\n    }\n    if (!flag) {\n      break;\n    }\n  }\n  return final;\n}\n```\n\n## 2 选择排序（Selection Sort）\n\n找数组中元素的最小值，并顶到最前，然后在后面剩下的元素中重复操作。\n\n第`i`次（`i`从0开始）遍历，在后面`n - i`个数中找出最小值，与第`i`个元素交换并固定下来，一共进行`n - 1`次遍历，每次遍历有一个数被排好位置，因此复杂度为`O(n^2)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-02.png\" alt=\"选择排序\" style=\"zoom:50%;\" />\n\n```javascript\nfunction selectionSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    let minIndex = i;\n    for (let j = i + 1; j < n; j++) {\n      if (final[j] < final[minIndex]) {\n        minIndex = j;\n      }\n    }\n    if (minIndex !== i) {\n      [final[i], final[minIndex]] = [final[minIndex], final[i]];\n    }\n  }\n  return final;\n}\n```\n\n## 3 插入排序（Insertion Sort）\n\n类似于**插扑克牌排序**，在一个已经排好序的序列中，插入一个新的数，使得新序列依然有序。\n\n每次插入一个数，一共插入`n`次。第`i`次（`i`从0开始）插入下标为`i`的数时，为比较数组前`i + 1`个数的大小，需要对这`i + 1`个数进行一遍冒泡排序。因此复杂度为`O(n^2)`。\n\n代码实现时，下标为0的数默认已插入，且不需要比较，`i`可以从1开始循环；此外，冒泡排序时，由于元素是有序的，从后往前找插入位置时，找到后即可进入下一轮遍历。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-03.png\" alt=\"插入排序\" style=\"zoom:50%;\" />\n\n![插扑克牌排序](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-04.png)\n\n```javascript\nfunction insertionSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 1; i < n; i++) {\n    for (let j = i; j > 0; j--) {\n      if (final[j - 1] > final[j]) {\n        [final[j - 1], final[j]] = [final[j], final[j - 1]];\n      } else {\n        break;\n      }\n    }\n  }\n  return final;\n}\n```\n\n## 4 希尔排序（Shell Sort）\n\n当数列**基本排好序**时，使用插入排序会更高效。因此可以分步长成子序列，对每个子序列做插入排序。\n\n基本思路是，设置初始步长为数组长度的一半，将数组分为若干个子数组，子数组个数即为步长数。对每个子数组做插入排序，过程同上。依次缩小步长，直至步长为1，此时数组经过插入排序后已经完全排序。\n\n时间复杂度为`O(n^1.3-2)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-05.png\" alt=\"插入排序\" style=\"zoom:50%;\" />\n\n```javascript\nfunction shellSort(arr) {\n  const final = [...arr], n = arr.length;\n  let increment = n;\n  while (true) {\n    increment = Math.floor(increment / 2);\n    // 一共有increment个子数组，起始下标从0到increment-1\n    for (let k = 0; k < increment; k++) {\n      // 以下是插入排序\n      for (let i = k + increment; i < n; i += increment) {\n        for (let j = i; j > k; j -= increment) {\n          if (final[j - increment] > final[j]) {\n            [final[j - increment], final[j]] = [final[j], final[j - increment]];\n          } else {\n            break;\n          }\n        }\n      }\n    }\n    if (increment === 1) {\n      break;\n    }\n  }\n  return final;\n}\n```\n\n## 5 快速排序（Quick Sort）\n\n快排yyds！基本思想是**分治**（分而治之），从数列中选出一个`key`值，并让其他数分边站（小于往左，大于等于往右），在左右两边重复这一步骤，直至区间长度为1。\n\n如何让数分边站？需要用到**挖坑填数**的方法。\n\n- 设这样的一个数组：`[72, 6, 57, 88, 60, 42, 83, 73, 48, 85]`，初始时，设`i = 0`，`j = 9`，`key`选取第一个数`a[0] = 72`。\n- `a[0]`被选走后，相当于`a[0]`出现了一个空洞，我们从后往前（`j--`）找出一个比`key`小的数，发现`j = 8`，`a[8] = 48`满足这个条件，将`a[8]`填到`a[0]`中。\n- 这时`a[8]`又形成了空洞，我们从前往后（`i++`）找出一个比`key`大的数，发现`i = 3`，`a[3] = 88`满足这个条件，将`a[3]`填到`a[8]`中。\n- 这一轮结束后，`i = 3`，`j = 7`，`key = 72`。再重复上述操作，先从后往前找，再从前往后找。如下一轮，找到`j = 5`，`a[5] = 42`，将`a[5]`填到`a[3]`中；找到`i = 5`，此时`i === j`，退出。\n- 再将`key = 72`填到最后的空洞`a[5]`中，此时数组为：`[48, 6, 57, 42, 60, 72, 83, 73, 88, 85]`，可以看出`a[5] = 72`前面的数都大于它，后面的数都小于它。再对`a[0...4]`和`a[6...9]`重复上述步骤即可。\n\n这个过程重复`n`次，每次对数组对半分，复杂度为`O(n logn)`。\n\n`key`有多种选择方法，如中间数或随机数，会影响算法复杂度。\n\n```javascript\nfunction quickSort(arr) {\n  const final = [...arr], n = arr.length;\n  sorting(0, n - 1);\n  return final;\n\n  function sorting(left, right) {\n    if (left >= right) {\n      return;\n    }\n    let i = left, j = right;\n    const key = final[left];\n    while (i < j) {\n      while (i < j && final[j] >= key) {\t// 从右往左找第一个小于key的值\n        j--;\n      }\n      if (i < j) {\n        final[i] = final[j];\n        i++;\n      }\n      while (i < j && final[i] < key) {\t// 从左往右找第一个大于key的值\n        i++;\n      }\n      if (i < j) {\n        final[j] = final[i];\n        j--;\n      }\n    }\n    // 此时i === j\n    final[i] = key;\n    sorting(left, i - 1);\t// 对左子区间递归调用\n    sorting(i + 1, right);\t// 对右子区间递归调用\n  }\n}\n```\n\n## 6 归并排序（Merge Sort）\n\n基本思想同样是**分治**。通过归并若干个已经排好序的子序列，达到整个序列完成排序的目的。\n\n首先考虑，如何**合并两个有序数列**？可以比较两个数列的第一个数，然后取出较小的一个，并在原数列删除该数，再重复操作，如果一个数列已空，依次取出另一个数列的元素即可。代码实现时，不用实际删除，可以用指针移动。\n\n```javascript\nfunction test(a, b) {\n  const m = a.length, n = b.length;\n  const c = new Array(m + n);\n  let i = 0, j = 0, k = 0;\n  while (i < m && j < n) {\n    if (a[i] < b[j]) {\n      c[k++] = a[i++];\n    } else {\n      c[k++] = b[j++];\n    }\n  }\n  while (i < m) {\n    c[k++] = a[i++];\n  }\n  while (j < n) {\n    c[k++] = b[j++];\n  }\n  return c;\n}\n```\n\n根据上面的思想，如果数组分成两组A、B且这两组有序，就可以方便地合并。\n\n如何使A、B有序？将A、B各自再分成两组，以此类推，直到小组内只有1个数据时，视为小组有序，再合并相邻的两个小组即可。也就是**先递归分解数列，再合并数列**。\n\n将数列分开小数列需要`logn`步，每一步合并有序数列需要`O(n)`，总的时间复杂度为`O(n logn)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-06.png\" alt=\"归并排序\" style=\"zoom: 67%;\" />\n\n```javascript\nfunction mergeSort(arr) {\n  const final = [...arr], n = arr.length;\n  sorting(0, n - 1);\n  return final;\n\n  function sorting(left, right) {\n    if (left < right) {\n      let middle = Math.floor((left + right) / 2);\n      sorting(left, middle);\t// 对左子区间递归调用\n      sorting(middle + 1, right);\t// 对右子区间递归调用\n      mergeArray(left, middle, right);\t// 归并左右子区间\n    }\n  }\n\n  function mergeArray(left, middle, right) {\n    let i = left, m = middle, j = middle + 1, n = right;\n    let k = 0;\n    const temp = new Array(right - left + 1);\n    while (i <= m && j <= n) {\n      if (final[i] < final[j]) {\n        temp[k++] = final[i++];\n      } else {\n        temp[k++] = final[j++];\n      }\n    }\n    while (i <= m) {\n      temp[k++] = final[i++];\n    }\n    while (j <= n) {\n      temp[k++] = final[j++];\n    }\n    for (let ii = 0; ii < k; ii++) {\n      final[left + ii] = temp[ii];\n    }\n  }\n}\n```\n\n## 7 堆排序（Heap Sort）\n\n首先，了解什么是**堆**和**最小堆**，以及**`shiftDown`操作**。堆是用完全二叉树结构（只有二叉结构，且都在左边）存储数据的结构，也称二叉堆。最小堆是指堆中某个节点值不小于其父节点的值，因此最顶端总为最小值。\n\n下图是一个最小堆，堆顶是最小值，每个节点都不小于其父节点。并且可以按照图中所示顺序（从左到右，从上到下），确定每个节点的下标。\n\n![最小堆和其在数组中的下标](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-07.png)\n\n发现规律：对当前节点下标`i`，有：\n\n- 父元素在数组中的下标为：`Math.floor((i - 1) / 2)`\n- 左子元素在数组中的下标为：`2 * i + 1`\n- 右子元素在数组中的下标为：`2 * i + 2`\n\n`shiftDown`操作是指对于一个堆的根节点，判断其与子节点的大小关系。如果该节点更大，则不满足最小堆定义，此时该节点与子节点互换（下移）。重复这个操作，直到该节点找到它的位置（不再大于其两个子节点）。\n\n接下来介绍堆排序。堆排序的思想是，构造一个**最小堆**，然后**依次取出堆顶最小值**，直到堆为空。\n\n首先构造最小堆。对于已有的数组，可以按下标顺序转换为这样一个二叉树。然后，我们找到最后一个含有子节点的节点，这个节点应是最后一个节点`n - 1`的父节点，根据上面的规律，其下标是`Math.floor((n - 2) / 2)`。\n\n![初始二叉树](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-08.png)\n\n从后往前遍历，对每个有子节点的节点，都把其当做根节点，对**其下面的完全二叉树**做`shiftDown`操作（这个过程称为建立堆的调整），直到整个二叉堆满足最小堆，最小堆构造完成。\n\n![上述二叉树调整完后，构造出的最小堆](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-09.png)\n\n构造完成后，数组并非排好序，因为堆只满足父子节点的大小关系。为此，我们需要依次取出最小值，每次重复取出，直至堆为空。\n\n堆中只能取出最大优先级的元素，即根节点，最小堆的根节点就是最小值。取出最小值后，会在堆顶形成空洞，这时需要把数组最后一个元素放到堆顶（根节点），然后对新的根节点进行`shiftDown`操作（这个过程称为最小堆的恢复）。\n\n![取出最小值后shiftDown](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-10.png)\n\n代码实现时，我们可以将设置`shiftDown`的操作范围，对于已经放到末尾的最小值，`shiftDown`时不再处理它。\n\n最终得到的数组是降序排序的数组，为了得到升序排序，我们对其`reverse`即可。\n\n![完成堆排序时的场景](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-11.png)\n\n每次恢复堆的时间复杂度为`O(logn)`，共`n - 1`次恢复堆操作，建立堆时也需要调整`n / 2`次，每次`O(logn)`，总的时间复杂度为`O(n logn)`。\n\n参考：[基础堆排序 | 菜鸟教程](https://www.runoob.com/data-structures/heap-sort.html)\n\n```javascript\nfunction heapSort(arr) {\n  const final = [...arr], n = arr.length;\n  makeMinHeap();\t// 构造最小堆\n  for (let i = n - 1; i > 0; i--) {\n    [final[0], final[i]] = [final[i], final[0]];\t// 将最小值放到队尾，队尾填补堆顶\n    minHeapShiftDown(0, i);\t// 堆顶元素做shiftDown，为了不影响队尾最小值，设置i为最后子节点位置（不包括i）\n  }\n  return final.reverse();\t// 将降序数组反转为升序数组\n\n  function makeMinHeap() {\n    // 构造最小堆，从后往前对有子节点的节点做shiftDown\n    for (let i = Math.floor((n - 2) / 2); i >= 0; i--) {\n      minHeapShiftDown(i, n);\n    }\n  }\n\n  function minHeapShiftDown (i, n) {\n    // i是需要shiftDown的根节点位置，n是最后一个子节点的位置（不包括n）\n    let j = 2 * i + 1;  // 找左子节点位置\n    while (j < n) {\n      if (j + 1 < n && final[j] > final[j + 1]) {\n        j++;\t// 在左右节点中找较小值\n      }\n      if (final[i] <= final[j]) {\n        break;\t// 如果父节点小于等于子节点，则该节点有效，无需下移\n      }\n      [final[i], final[j]] = [final[j], final[i]];\t// 节点下移\n      i = j;\n      j = 2 * i + 1;\n    }\n  }\n}\n```\n\n## 8 基数排序（Radix Sort）\n\n首先，了解什么是**桶排序**（Bin Sort，又称箱排序、计数排序）。\n\n最基础的桶排序创建一个大小为`max + 1`的数组`count`（`max`为原数组的最大数字）用来存储每个数字的个数，初始值记为0，然后做两轮遍历：\n\n1. 遍历原数组`nums`，将数字对应下标的计数值加1，即`count[num]++`，这一轮复杂度为`O(n)`\n2. 遍历计数数组`count`，将不为0的下标值输出，这一轮复杂度为`O(max)`\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-12.png\" alt=\"桶排序\" style=\"zoom: 67%;\" />\n\n```javascript\nfunction binSort(arr) {\n  const final = [...arr], n = arr.length;\n  const count = new Array(Math.max(...final) + 1).fill(0);\n  for (const num of final) {\n    count[num]++;\n  }\n  let k = 0;\n  for (let i = 0; i < count.length; i++) {\n    for (let j = 0; j < count[i]; j++) {\n      final[k++] = i;\n    }\n  }\n  return final;\n}\n```\n\n这样的桶排序有一定的问题：如果数组中有负数，就没有对应下标；或者最小值远大于0，此时前面的空间都被浪费了。\n\n**优化的桶排序：**找出最小值`min`和最大值`max`，计数数组长度为`max - min + 1`，下标也进行偏移，下标为`i`的元素对原数组中的`i + min`进行计数。\n\n```javascript\nfunction binSort(arr) {\n  const final = [...arr], n = arr.length;\n  const min = Math.min(...final), max = Math.max(...final);\n  const count = new Array(Math.max(max - min + 1)).fill(0);\n  for (const num of final) {\n    count[num - min]++;\n  }\n  let k = 0;\n  for (let i = 0; i < count.length; i++) {\n    for (let j = 0; j < count[i]; j++) {\n      final[k++] = i + min;\n    }\n  }\n  return final;\n}\n```\n\n由于上述桶排序利用`count`存储原数组的数值信息，丢失了原数组的其他信息（如两个相同数值输出的结果是不稳定的），实际操作中，还会将数组`count`中的计数改为前缀和，用来快速获得每个元素值的下标（排名）。\n\n这里推荐在获取下标时，从后往前遍历，这样对于相同值的元素，其顺序与原数组保持一致。\n\n```javascript\nfunction binSort(arr) {\n  const final = [...arr], n = arr.length;\n  const min = Math.min(...final), max = Math.max(...final);\n  const count = new Array(Math.max(max - min + 1)).fill(0);\n  for (const num of final) {\n    count[num - min]++;\n  }\n  for (let i = 1; i < count.length; i++) {\n    count[i] += count[i - 1];\t// 前缀和，其含义是小于等于当前数的个数\n  }\n  const temp = new Array(n);\n  for (let i = n - 1; i >= 0; i--) {\t// 从后往前遍历保证排序稳定性\n    count[final[i] - min]--;\t// 获取下标\n    temp[count[final[i] - min]] = final[i];\t// 赋值\n  }\n  for (let i = 0; i < n; i++) {\n    final[i] = temp[i];\n  }\n  return final;\n}\n```\n\n桶排序的时间复杂度为`O(n + max - min)`，空间复杂度为`O(max - min)`。本质上，这是一种拿空间换时间的做法，有时可以达到线性复杂度，优于快排。\n\n可以看出，如果`max - min`较大，就会浪费过多的时间和空间。\n\n基数排序是在桶排序的基础上，通过**基数的限制**来减小开销。\n\n如下图所示，确定基数为10，数组长度就为10，每个数会在这10个数中寻找位置。对于某个数如34，不会像桶排序一样把其放在下标34中，而是将其分成3和4，第一轮排序将其放在下标4处，第二轮排序将其放在下标3处。\n\n如何确定排序轮数？排序轮数也就是数组最大值的位数，即`log(r) max + 1`向下取整。代码实现时，如果某一轮排序所有数字均计数在第0位，表明已经完成排序。\n\n复杂度为`O(d(n+r))`，`d`为排序轮数，`n`为数组长度，`r`为基数大小，`d = log(r) max + 1`向下取整。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-13.png\" alt=\"先排个位数，再排十位数\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-14.png\" alt=\"基数排序\" style=\"zoom: 67%;\" />\n\n```javascript\nfunction radixSort(arr, r) {\n  const final = [...arr], n = arr.length;\n  r = r === undefined ? 10 : r;\n  const count = new Array(r).fill(0);\n  for (let i = 0, round = 1; ; i++, round *= r) {\n    count.fill(0);\n    // 计数\n    for (const num of final) {\n      count[Math.floor(num / round) % r]++;\n    }\n    // 确定位数，如果所有数字均计数在第0位，表明当前round已经超过最大值\n    if (count[0] === n) {\n      break;\n    }\n    // 处理为前缀和\n    for (let j = 1; j < r; j++) {\n      count[j] = count[j - 1] + count[j];\n    }\n    const temp = new Array(n);\n    // 倒序取出元素，前缀和的值就表示排序后元素的下标位置\n    for (let j = n - 1; j >= 0; j--) {\n      count[Math.floor(final[j] / round) % r]--;\n      temp[count[Math.floor(final[j] / round) % r]] = final[j];\n    }\n    for (let j = 0; j < n; j++) {\n      final[j] = temp[j];\n    }\n  }\n  return final;\n}\n```\n\n## Reference\n\n1. [JavaScript 数组排序](https://www.w3school.com.cn/js/js_array_sort.asp)\n2. [排序算法总结 | 菜鸟教程](https://www.runoob.com/w3cnote/sort-algorithm-summary.html)\n3. [用typescript实现八大排序-递增 - Kingfish404](https://blog.kingfish404.cn/posts/2021/03/frontend04-algorithm)\n4. [堆的基本存储 | 菜鸟教程](https://www.runoob.com/data-structures/heap-storage.html)\n","source":"_posts/realize-eight-sorting-methods-using-javascript.md","raw":"---\ntitle: 用JavaScript实现八大排序\ndate: 2022-03-02 13:24:31\ncategories: Algorithm\ntags:\n  - JavaScript\n  - 算法\n  - 基础\n  - 编程\n  - 排序\n  - 数据结构\ncomments: true\n---\n\n八大排序分别是 冒泡排序、选择排序、插入排序、希尔排序、快速排序、归并排序、堆排序、基数排序。本文介绍这八大排序算法的基本思想和过程，并尝试使用JavaScript实现它们。\n\n<!-- more -->\n\n各个排序的复杂度如下表所示：\n\n|   排序   |  平均情况   |  最好情况   |   最坏情况   |  辅助空间   | 稳定性 |\n| :------: | :---------: | :---------: | :----------: | :---------: | :----: |\n| 冒泡排序 |  `O(n^2)`   |   `O(n)`    |   `O(n^2)`   |   `O(1)`    |  稳定  |\n| 选择排序 |  `O(n^2)`   |  `O(n^2)`   |   `O(n^2)`   |   `O(1)`    | 不稳定 |\n| 插入排序 |  `O(n^2)`   |   `O(n)`    |   `O(n^2)`   |   `O(1)`    |  稳定  |\n| 希尔排序 | `O(n^1.3)`  | `O(n logn)` |   `O(n^2)`   |   `O(1)`    | 不稳定 |\n| 快速排序 | `O(n logn)` | `O(n logn)` |   `O(n^2)`   | `O(n logn)` | 不稳定 |\n| 归并排序 | `O(n logn)` | `O(n logn)` | `O(n logn)`  |   `O(n)`    |  稳定  |\n|  堆排序  | `O(n logn)` | `O(n logn)` | `O(n logn)`  |   `O(1)`    | 不稳定 |\n| 基数排序 | `O(d(n+r))` | `O(d(n+r))` | `O(d(n+rd))` |  `O(n+rd)`  |  稳定  |\n\n## 0 JavaScript自带排序\n\n即`Array.prototype.sort()`，原理为插入排序与快速排序混合。`sort`会改变原数组，并返回排序后的数组（不过一般没人使用其返回值）。\n\n注意，`sort`不含参数时，默认是按**字母顺序**对数组进行升序排序。\n\n```javascript\nlet fruits = [\"banana\", \"apple\", \"orange\", \"mongo\"];\nfruits.sort();\nconsole.log(fruits);\t// [ 'apple', 'banana', 'mongo', 'orange' ]\n\nlet nums = [40, 100, 1, 5, 25, 10];\nnums.sort();\nconsole.log(nums);\t// [ 1, 10, 100, 25, 40, 5 ]\n```\n\n为使结果按数字顺序进行排序，`sort`接受一个**回调函数**作为参数，如下所示：\n\n```javascript\nfunction(a, b) {return a - b;}\n```\n\n可以直接简写为箭头函数：\n\n```javascript\n(a, b) => a - b\n```\n\n回调函数的两个参数代表数组中准备比较的两个值，并根据返回值决定排序：\n\n1. 返回值为负值，将`a`向前排\n2. 返回值为正值，将`b`向前排\n3. 返回值为零，`a`、`b`顺序不变\n\n因此，可以为回调函数填写不同的返回值，以进行不同的排序方式。\n\n```javascript\nlet nums = [40, 100, 1, 5, 25, 10];\nnums.sort((a, b) => a - b);\t// 数字升序排序\nconsole.log(nums);\t// [ 1, 5, 10, 25, 40, 100 ]\nnums.sort((a, b) => b - a);\t// 数字降序排序\nconsole.log(nums);\t// [ 100, 40, 25, 10, 5, 1 ]\n\nlet students = [{id: 1, scores: 85}, {id: 2, scores: 90}, {id: 3, scores: 82}];\nstudents.sort((a, b) => a.scores - b.scores);\t// 按每个元素的scores属性升序排序\nconsole.log(students);\t// [ { id: 3, scores: 82 }, { id: 1, scores: 85 }, { id: 2, scores: 90 } ]\n```\n\n注意回调函数的返回值是数值，而非布尔值，不要写成`(a, b) => a < b`。\n\n## 1 冒泡排序（Bubble Sort）\n\n典型的排序算法。两个数两两比较大小，大数后移（下沉），小数前移（冒泡）。\n\n这里用一个大小为2的窗口，每次从后往前滑动比较，直到最小的数被顶到最前。紧接着对后面`n - 1`个数进行同样的操作，直至比较完毕。\n\n一共进行`n - 1`趟比较，第`i`趟（`i`从0开始）对`n - i`个数进行`n - i - 1`次比较，每趟结束后有一个数被排好位置，因此复杂度为`O(n^2)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-01.png\" alt=\"冒泡排序\" style=\"zoom:50%;\" />\n\n```javascript\nfunction bubbleSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = n - 1; j > i; j--) {\n      if (final[j - 1] > final[j]) {\n        [final[j - 1], final[j]] = [final[j], final[j - 1]];\n      }\n    }\n  }\n  return final;\n}\n```\n\n**优化：**`n - 1`趟比较需要全部完成，如果某趟比较已经完成排序，则进行了多余的遍历。\n\n可以设置标志位`flag`，表示本趟比较**是否进行了冒泡交换**，如果一趟下来都没有进行冒泡交换，表示元素已经有序。\n\n```javascript\nfunction bubbleSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    let flag = false;\n    for (let j = n - 1; j > i; j--) {\n      if (final[j - 1] > final[j]) {\n        [final[j - 1], final[j]] = [final[j], final[j - 1]];\n        flag = true;\n      }\n    }\n    if (!flag) {\n      break;\n    }\n  }\n  return final;\n}\n```\n\n## 2 选择排序（Selection Sort）\n\n找数组中元素的最小值，并顶到最前，然后在后面剩下的元素中重复操作。\n\n第`i`次（`i`从0开始）遍历，在后面`n - i`个数中找出最小值，与第`i`个元素交换并固定下来，一共进行`n - 1`次遍历，每次遍历有一个数被排好位置，因此复杂度为`O(n^2)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-02.png\" alt=\"选择排序\" style=\"zoom:50%;\" />\n\n```javascript\nfunction selectionSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    let minIndex = i;\n    for (let j = i + 1; j < n; j++) {\n      if (final[j] < final[minIndex]) {\n        minIndex = j;\n      }\n    }\n    if (minIndex !== i) {\n      [final[i], final[minIndex]] = [final[minIndex], final[i]];\n    }\n  }\n  return final;\n}\n```\n\n## 3 插入排序（Insertion Sort）\n\n类似于**插扑克牌排序**，在一个已经排好序的序列中，插入一个新的数，使得新序列依然有序。\n\n每次插入一个数，一共插入`n`次。第`i`次（`i`从0开始）插入下标为`i`的数时，为比较数组前`i + 1`个数的大小，需要对这`i + 1`个数进行一遍冒泡排序。因此复杂度为`O(n^2)`。\n\n代码实现时，下标为0的数默认已插入，且不需要比较，`i`可以从1开始循环；此外，冒泡排序时，由于元素是有序的，从后往前找插入位置时，找到后即可进入下一轮遍历。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-03.png\" alt=\"插入排序\" style=\"zoom:50%;\" />\n\n![插扑克牌排序](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-04.png)\n\n```javascript\nfunction insertionSort(arr) {\n  const final = [...arr], n = arr.length;\n  for (let i = 1; i < n; i++) {\n    for (let j = i; j > 0; j--) {\n      if (final[j - 1] > final[j]) {\n        [final[j - 1], final[j]] = [final[j], final[j - 1]];\n      } else {\n        break;\n      }\n    }\n  }\n  return final;\n}\n```\n\n## 4 希尔排序（Shell Sort）\n\n当数列**基本排好序**时，使用插入排序会更高效。因此可以分步长成子序列，对每个子序列做插入排序。\n\n基本思路是，设置初始步长为数组长度的一半，将数组分为若干个子数组，子数组个数即为步长数。对每个子数组做插入排序，过程同上。依次缩小步长，直至步长为1，此时数组经过插入排序后已经完全排序。\n\n时间复杂度为`O(n^1.3-2)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-05.png\" alt=\"插入排序\" style=\"zoom:50%;\" />\n\n```javascript\nfunction shellSort(arr) {\n  const final = [...arr], n = arr.length;\n  let increment = n;\n  while (true) {\n    increment = Math.floor(increment / 2);\n    // 一共有increment个子数组，起始下标从0到increment-1\n    for (let k = 0; k < increment; k++) {\n      // 以下是插入排序\n      for (let i = k + increment; i < n; i += increment) {\n        for (let j = i; j > k; j -= increment) {\n          if (final[j - increment] > final[j]) {\n            [final[j - increment], final[j]] = [final[j], final[j - increment]];\n          } else {\n            break;\n          }\n        }\n      }\n    }\n    if (increment === 1) {\n      break;\n    }\n  }\n  return final;\n}\n```\n\n## 5 快速排序（Quick Sort）\n\n快排yyds！基本思想是**分治**（分而治之），从数列中选出一个`key`值，并让其他数分边站（小于往左，大于等于往右），在左右两边重复这一步骤，直至区间长度为1。\n\n如何让数分边站？需要用到**挖坑填数**的方法。\n\n- 设这样的一个数组：`[72, 6, 57, 88, 60, 42, 83, 73, 48, 85]`，初始时，设`i = 0`，`j = 9`，`key`选取第一个数`a[0] = 72`。\n- `a[0]`被选走后，相当于`a[0]`出现了一个空洞，我们从后往前（`j--`）找出一个比`key`小的数，发现`j = 8`，`a[8] = 48`满足这个条件，将`a[8]`填到`a[0]`中。\n- 这时`a[8]`又形成了空洞，我们从前往后（`i++`）找出一个比`key`大的数，发现`i = 3`，`a[3] = 88`满足这个条件，将`a[3]`填到`a[8]`中。\n- 这一轮结束后，`i = 3`，`j = 7`，`key = 72`。再重复上述操作，先从后往前找，再从前往后找。如下一轮，找到`j = 5`，`a[5] = 42`，将`a[5]`填到`a[3]`中；找到`i = 5`，此时`i === j`，退出。\n- 再将`key = 72`填到最后的空洞`a[5]`中，此时数组为：`[48, 6, 57, 42, 60, 72, 83, 73, 88, 85]`，可以看出`a[5] = 72`前面的数都大于它，后面的数都小于它。再对`a[0...4]`和`a[6...9]`重复上述步骤即可。\n\n这个过程重复`n`次，每次对数组对半分，复杂度为`O(n logn)`。\n\n`key`有多种选择方法，如中间数或随机数，会影响算法复杂度。\n\n```javascript\nfunction quickSort(arr) {\n  const final = [...arr], n = arr.length;\n  sorting(0, n - 1);\n  return final;\n\n  function sorting(left, right) {\n    if (left >= right) {\n      return;\n    }\n    let i = left, j = right;\n    const key = final[left];\n    while (i < j) {\n      while (i < j && final[j] >= key) {\t// 从右往左找第一个小于key的值\n        j--;\n      }\n      if (i < j) {\n        final[i] = final[j];\n        i++;\n      }\n      while (i < j && final[i] < key) {\t// 从左往右找第一个大于key的值\n        i++;\n      }\n      if (i < j) {\n        final[j] = final[i];\n        j--;\n      }\n    }\n    // 此时i === j\n    final[i] = key;\n    sorting(left, i - 1);\t// 对左子区间递归调用\n    sorting(i + 1, right);\t// 对右子区间递归调用\n  }\n}\n```\n\n## 6 归并排序（Merge Sort）\n\n基本思想同样是**分治**。通过归并若干个已经排好序的子序列，达到整个序列完成排序的目的。\n\n首先考虑，如何**合并两个有序数列**？可以比较两个数列的第一个数，然后取出较小的一个，并在原数列删除该数，再重复操作，如果一个数列已空，依次取出另一个数列的元素即可。代码实现时，不用实际删除，可以用指针移动。\n\n```javascript\nfunction test(a, b) {\n  const m = a.length, n = b.length;\n  const c = new Array(m + n);\n  let i = 0, j = 0, k = 0;\n  while (i < m && j < n) {\n    if (a[i] < b[j]) {\n      c[k++] = a[i++];\n    } else {\n      c[k++] = b[j++];\n    }\n  }\n  while (i < m) {\n    c[k++] = a[i++];\n  }\n  while (j < n) {\n    c[k++] = b[j++];\n  }\n  return c;\n}\n```\n\n根据上面的思想，如果数组分成两组A、B且这两组有序，就可以方便地合并。\n\n如何使A、B有序？将A、B各自再分成两组，以此类推，直到小组内只有1个数据时，视为小组有序，再合并相邻的两个小组即可。也就是**先递归分解数列，再合并数列**。\n\n将数列分开小数列需要`logn`步，每一步合并有序数列需要`O(n)`，总的时间复杂度为`O(n logn)`。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-06.png\" alt=\"归并排序\" style=\"zoom: 67%;\" />\n\n```javascript\nfunction mergeSort(arr) {\n  const final = [...arr], n = arr.length;\n  sorting(0, n - 1);\n  return final;\n\n  function sorting(left, right) {\n    if (left < right) {\n      let middle = Math.floor((left + right) / 2);\n      sorting(left, middle);\t// 对左子区间递归调用\n      sorting(middle + 1, right);\t// 对右子区间递归调用\n      mergeArray(left, middle, right);\t// 归并左右子区间\n    }\n  }\n\n  function mergeArray(left, middle, right) {\n    let i = left, m = middle, j = middle + 1, n = right;\n    let k = 0;\n    const temp = new Array(right - left + 1);\n    while (i <= m && j <= n) {\n      if (final[i] < final[j]) {\n        temp[k++] = final[i++];\n      } else {\n        temp[k++] = final[j++];\n      }\n    }\n    while (i <= m) {\n      temp[k++] = final[i++];\n    }\n    while (j <= n) {\n      temp[k++] = final[j++];\n    }\n    for (let ii = 0; ii < k; ii++) {\n      final[left + ii] = temp[ii];\n    }\n  }\n}\n```\n\n## 7 堆排序（Heap Sort）\n\n首先，了解什么是**堆**和**最小堆**，以及**`shiftDown`操作**。堆是用完全二叉树结构（只有二叉结构，且都在左边）存储数据的结构，也称二叉堆。最小堆是指堆中某个节点值不小于其父节点的值，因此最顶端总为最小值。\n\n下图是一个最小堆，堆顶是最小值，每个节点都不小于其父节点。并且可以按照图中所示顺序（从左到右，从上到下），确定每个节点的下标。\n\n![最小堆和其在数组中的下标](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-07.png)\n\n发现规律：对当前节点下标`i`，有：\n\n- 父元素在数组中的下标为：`Math.floor((i - 1) / 2)`\n- 左子元素在数组中的下标为：`2 * i + 1`\n- 右子元素在数组中的下标为：`2 * i + 2`\n\n`shiftDown`操作是指对于一个堆的根节点，判断其与子节点的大小关系。如果该节点更大，则不满足最小堆定义，此时该节点与子节点互换（下移）。重复这个操作，直到该节点找到它的位置（不再大于其两个子节点）。\n\n接下来介绍堆排序。堆排序的思想是，构造一个**最小堆**，然后**依次取出堆顶最小值**，直到堆为空。\n\n首先构造最小堆。对于已有的数组，可以按下标顺序转换为这样一个二叉树。然后，我们找到最后一个含有子节点的节点，这个节点应是最后一个节点`n - 1`的父节点，根据上面的规律，其下标是`Math.floor((n - 2) / 2)`。\n\n![初始二叉树](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-08.png)\n\n从后往前遍历，对每个有子节点的节点，都把其当做根节点，对**其下面的完全二叉树**做`shiftDown`操作（这个过程称为建立堆的调整），直到整个二叉堆满足最小堆，最小堆构造完成。\n\n![上述二叉树调整完后，构造出的最小堆](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-09.png)\n\n构造完成后，数组并非排好序，因为堆只满足父子节点的大小关系。为此，我们需要依次取出最小值，每次重复取出，直至堆为空。\n\n堆中只能取出最大优先级的元素，即根节点，最小堆的根节点就是最小值。取出最小值后，会在堆顶形成空洞，这时需要把数组最后一个元素放到堆顶（根节点），然后对新的根节点进行`shiftDown`操作（这个过程称为最小堆的恢复）。\n\n![取出最小值后shiftDown](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-10.png)\n\n代码实现时，我们可以将设置`shiftDown`的操作范围，对于已经放到末尾的最小值，`shiftDown`时不再处理它。\n\n最终得到的数组是降序排序的数组，为了得到升序排序，我们对其`reverse`即可。\n\n![完成堆排序时的场景](https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-11.png)\n\n每次恢复堆的时间复杂度为`O(logn)`，共`n - 1`次恢复堆操作，建立堆时也需要调整`n / 2`次，每次`O(logn)`，总的时间复杂度为`O(n logn)`。\n\n参考：[基础堆排序 | 菜鸟教程](https://www.runoob.com/data-structures/heap-sort.html)\n\n```javascript\nfunction heapSort(arr) {\n  const final = [...arr], n = arr.length;\n  makeMinHeap();\t// 构造最小堆\n  for (let i = n - 1; i > 0; i--) {\n    [final[0], final[i]] = [final[i], final[0]];\t// 将最小值放到队尾，队尾填补堆顶\n    minHeapShiftDown(0, i);\t// 堆顶元素做shiftDown，为了不影响队尾最小值，设置i为最后子节点位置（不包括i）\n  }\n  return final.reverse();\t// 将降序数组反转为升序数组\n\n  function makeMinHeap() {\n    // 构造最小堆，从后往前对有子节点的节点做shiftDown\n    for (let i = Math.floor((n - 2) / 2); i >= 0; i--) {\n      minHeapShiftDown(i, n);\n    }\n  }\n\n  function minHeapShiftDown (i, n) {\n    // i是需要shiftDown的根节点位置，n是最后一个子节点的位置（不包括n）\n    let j = 2 * i + 1;  // 找左子节点位置\n    while (j < n) {\n      if (j + 1 < n && final[j] > final[j + 1]) {\n        j++;\t// 在左右节点中找较小值\n      }\n      if (final[i] <= final[j]) {\n        break;\t// 如果父节点小于等于子节点，则该节点有效，无需下移\n      }\n      [final[i], final[j]] = [final[j], final[i]];\t// 节点下移\n      i = j;\n      j = 2 * i + 1;\n    }\n  }\n}\n```\n\n## 8 基数排序（Radix Sort）\n\n首先，了解什么是**桶排序**（Bin Sort，又称箱排序、计数排序）。\n\n最基础的桶排序创建一个大小为`max + 1`的数组`count`（`max`为原数组的最大数字）用来存储每个数字的个数，初始值记为0，然后做两轮遍历：\n\n1. 遍历原数组`nums`，将数字对应下标的计数值加1，即`count[num]++`，这一轮复杂度为`O(n)`\n2. 遍历计数数组`count`，将不为0的下标值输出，这一轮复杂度为`O(max)`\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-12.png\" alt=\"桶排序\" style=\"zoom: 67%;\" />\n\n```javascript\nfunction binSort(arr) {\n  const final = [...arr], n = arr.length;\n  const count = new Array(Math.max(...final) + 1).fill(0);\n  for (const num of final) {\n    count[num]++;\n  }\n  let k = 0;\n  for (let i = 0; i < count.length; i++) {\n    for (let j = 0; j < count[i]; j++) {\n      final[k++] = i;\n    }\n  }\n  return final;\n}\n```\n\n这样的桶排序有一定的问题：如果数组中有负数，就没有对应下标；或者最小值远大于0，此时前面的空间都被浪费了。\n\n**优化的桶排序：**找出最小值`min`和最大值`max`，计数数组长度为`max - min + 1`，下标也进行偏移，下标为`i`的元素对原数组中的`i + min`进行计数。\n\n```javascript\nfunction binSort(arr) {\n  const final = [...arr], n = arr.length;\n  const min = Math.min(...final), max = Math.max(...final);\n  const count = new Array(Math.max(max - min + 1)).fill(0);\n  for (const num of final) {\n    count[num - min]++;\n  }\n  let k = 0;\n  for (let i = 0; i < count.length; i++) {\n    for (let j = 0; j < count[i]; j++) {\n      final[k++] = i + min;\n    }\n  }\n  return final;\n}\n```\n\n由于上述桶排序利用`count`存储原数组的数值信息，丢失了原数组的其他信息（如两个相同数值输出的结果是不稳定的），实际操作中，还会将数组`count`中的计数改为前缀和，用来快速获得每个元素值的下标（排名）。\n\n这里推荐在获取下标时，从后往前遍历，这样对于相同值的元素，其顺序与原数组保持一致。\n\n```javascript\nfunction binSort(arr) {\n  const final = [...arr], n = arr.length;\n  const min = Math.min(...final), max = Math.max(...final);\n  const count = new Array(Math.max(max - min + 1)).fill(0);\n  for (const num of final) {\n    count[num - min]++;\n  }\n  for (let i = 1; i < count.length; i++) {\n    count[i] += count[i - 1];\t// 前缀和，其含义是小于等于当前数的个数\n  }\n  const temp = new Array(n);\n  for (let i = n - 1; i >= 0; i--) {\t// 从后往前遍历保证排序稳定性\n    count[final[i] - min]--;\t// 获取下标\n    temp[count[final[i] - min]] = final[i];\t// 赋值\n  }\n  for (let i = 0; i < n; i++) {\n    final[i] = temp[i];\n  }\n  return final;\n}\n```\n\n桶排序的时间复杂度为`O(n + max - min)`，空间复杂度为`O(max - min)`。本质上，这是一种拿空间换时间的做法，有时可以达到线性复杂度，优于快排。\n\n可以看出，如果`max - min`较大，就会浪费过多的时间和空间。\n\n基数排序是在桶排序的基础上，通过**基数的限制**来减小开销。\n\n如下图所示，确定基数为10，数组长度就为10，每个数会在这10个数中寻找位置。对于某个数如34，不会像桶排序一样把其放在下标34中，而是将其分成3和4，第一轮排序将其放在下标4处，第二轮排序将其放在下标3处。\n\n如何确定排序轮数？排序轮数也就是数组最大值的位数，即`log(r) max + 1`向下取整。代码实现时，如果某一轮排序所有数字均计数在第0位，表明已经完成排序。\n\n复杂度为`O(d(n+r))`，`d`为排序轮数，`n`为数组长度，`r`为基数大小，`d = log(r) max + 1`向下取整。\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-13.png\" alt=\"先排个位数，再排十位数\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-14.png\" alt=\"基数排序\" style=\"zoom: 67%;\" />\n\n```javascript\nfunction radixSort(arr, r) {\n  const final = [...arr], n = arr.length;\n  r = r === undefined ? 10 : r;\n  const count = new Array(r).fill(0);\n  for (let i = 0, round = 1; ; i++, round *= r) {\n    count.fill(0);\n    // 计数\n    for (const num of final) {\n      count[Math.floor(num / round) % r]++;\n    }\n    // 确定位数，如果所有数字均计数在第0位，表明当前round已经超过最大值\n    if (count[0] === n) {\n      break;\n    }\n    // 处理为前缀和\n    for (let j = 1; j < r; j++) {\n      count[j] = count[j - 1] + count[j];\n    }\n    const temp = new Array(n);\n    // 倒序取出元素，前缀和的值就表示排序后元素的下标位置\n    for (let j = n - 1; j >= 0; j--) {\n      count[Math.floor(final[j] / round) % r]--;\n      temp[count[Math.floor(final[j] / round) % r]] = final[j];\n    }\n    for (let j = 0; j < n; j++) {\n      final[j] = temp[j];\n    }\n  }\n  return final;\n}\n```\n\n## Reference\n\n1. [JavaScript 数组排序](https://www.w3school.com.cn/js/js_array_sort.asp)\n2. [排序算法总结 | 菜鸟教程](https://www.runoob.com/w3cnote/sort-algorithm-summary.html)\n3. [用typescript实现八大排序-递增 - Kingfish404](https://blog.kingfish404.cn/posts/2021/03/frontend04-algorithm)\n4. [堆的基本存储 | 菜鸟教程](https://www.runoob.com/data-structures/heap-storage.html)\n","slug":"realize-eight-sorting-methods-using-javascript","published":1,"updated":"2022-03-04T06:26:18.494Z","_id":"cl094bou70000hwvi1yi38dlz","layout":"post","photos":[],"link":"","content":"<p>八大排序分别是 冒泡排序、选择排序、插入排序、希尔排序、快速排序、归并排序、堆排序、基数排序。本文介绍这八大排序算法的基本思想和过程，并尝试使用JavaScript实现它们。</p>\n<span id=\"more\"></span>\n<p>各个排序的复杂度如下表所示：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">排序</th>\n<th style=\"text-align:center\">平均情况</th>\n<th style=\"text-align:center\">最好情况</th>\n<th style=\"text-align:center\">最坏情况</th>\n<th style=\"text-align:center\">辅助空间</th>\n<th style=\"text-align:center\">稳定性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">冒泡排序</td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">选择排序</td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">插入排序</td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">希尔排序</td>\n<td style=\"text-align:center\"><code>O(n^1.3)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">快速排序</td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">归并排序</td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">堆排序</td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">基数排序</td>\n<td style=\"text-align:center\"><code>O(d(n+r))</code></td>\n<td style=\"text-align:center\"><code>O(d(n+r))</code></td>\n<td style=\"text-align:center\"><code>O(d(n+rd))</code></td>\n<td style=\"text-align:center\"><code>O(n+rd)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"0-JavaScript自带排序\"><a href=\"#0-JavaScript自带排序\" class=\"headerlink\" title=\"0 JavaScript自带排序\"></a>0 JavaScript自带排序</h2><p>即<code>Array.prototype.sort()</code>，原理为插入排序与快速排序混合。<code>sort</code>会改变原数组，并返回排序后的数组（不过一般没人使用其返回值）。</p>\n<p>注意，<code>sort</code>不含参数时，默认是按<strong>字母顺序</strong>对数组进行升序排序。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fruits = [<span class=\"string\">&quot;banana&quot;</span>, <span class=\"string\">&quot;apple&quot;</span>, <span class=\"string\">&quot;orange&quot;</span>, <span class=\"string\">&quot;mongo&quot;</span>];</span><br><span class=\"line\">fruits.sort();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fruits);\t<span class=\"comment\">// [ &#x27;apple&#x27;, &#x27;banana&#x27;, &#x27;mongo&#x27;, &#x27;orange&#x27; ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">40</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">25</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\">nums.sort();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);\t<span class=\"comment\">// [ 1, 10, 100, 25, 40, 5 ]</span></span><br></pre></td></tr></table></figure>\n<p>为使结果按数字顺序进行排序，<code>sort</code>接受一个<strong>回调函数</strong>作为参数，如下所示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;<span class=\"keyword\">return</span> a - b;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以直接简写为箭头函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(a, b) =&gt; a - b</span><br></pre></td></tr></table></figure>\n<p>回调函数的两个参数代表数组中准备比较的两个值，并根据返回值决定排序：</p>\n<ol>\n<li>返回值为负值，将<code>a</code>向前排</li>\n<li>返回值为正值，将<code>b</code>向前排</li>\n<li>返回值为零，<code>a</code>、<code>b</code>顺序不变</li>\n</ol>\n<p>因此，可以为回调函数填写不同的返回值，以进行不同的排序方式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">40</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">25</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\">nums.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);\t<span class=\"comment\">// 数字升序排序</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);\t<span class=\"comment\">// [ 1, 5, 10, 25, 40, 100 ]</span></span><br><span class=\"line\">nums.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> b - a);\t<span class=\"comment\">// 数字降序排序</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);\t<span class=\"comment\">// [ 100, 40, 25, 10, 5, 1 ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> students = [&#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">scores</span>: <span class=\"number\">85</span>&#125;, &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">scores</span>: <span class=\"number\">90</span>&#125;, &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">scores</span>: <span class=\"number\">82</span>&#125;];</span><br><span class=\"line\">students.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a.scores - b.scores);\t<span class=\"comment\">// 按每个元素的scores属性升序排序</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(students);\t<span class=\"comment\">// [ &#123; id: 3, scores: 82 &#125;, &#123; id: 1, scores: 85 &#125;, &#123; id: 2, scores: 90 &#125; ]</span></span><br></pre></td></tr></table></figure>\n<p>注意回调函数的返回值是数值，而非布尔值，不要写成<code>(a, b) =&gt; a &lt; b</code>。</p>\n<h2 id=\"1-冒泡排序（Bubble-Sort）\"><a href=\"#1-冒泡排序（Bubble-Sort）\" class=\"headerlink\" title=\"1 冒泡排序（Bubble Sort）\"></a>1 冒泡排序（Bubble Sort）</h2><p>典型的排序算法。两个数两两比较大小，大数后移（下沉），小数前移（冒泡）。</p>\n<p>这里用一个大小为2的窗口，每次从后往前滑动比较，直到最小的数被顶到最前。紧接着对后面<code>n - 1</code>个数进行同样的操作，直至比较完毕。</p>\n<p>一共进行<code>n - 1</code>趟比较，第<code>i</code>趟（<code>i</code>从0开始）对<code>n - i</code>个数进行<code>n - i - 1</code>次比较，每趟结束后有一个数被排好位置，因此复杂度为<code>O(n^2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-01.png\" alt=\"冒泡排序\" style=\"zoom:50%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubbleSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j - <span class=\"number\">1</span>] &gt; final[j]) &#123;</span><br><span class=\"line\">        [final[j - <span class=\"number\">1</span>], final[j]] = [final[j], final[j - <span class=\"number\">1</span>]];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>优化：</strong><code>n - 1</code>趟比较需要全部完成，如果某趟比较已经完成排序，则进行了多余的遍历。</p>\n<p>可以设置标志位<code>flag</code>，表示本趟比较<strong>是否进行了冒泡交换</strong>，如果一趟下来都没有进行冒泡交换，表示元素已经有序。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubbleSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j - <span class=\"number\">1</span>] &gt; final[j]) &#123;</span><br><span class=\"line\">        [final[j - <span class=\"number\">1</span>], final[j]] = [final[j], final[j - <span class=\"number\">1</span>]];</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-选择排序（Selection-Sort）\"><a href=\"#2-选择排序（Selection-Sort）\" class=\"headerlink\" title=\"2 选择排序（Selection Sort）\"></a>2 选择排序（Selection Sort）</h2><p>找数组中元素的最小值，并顶到最前，然后在后面剩下的元素中重复操作。</p>\n<p>第<code>i</code>次（<code>i</code>从0开始）遍历，在后面<code>n - i</code>个数中找出最小值，与第<code>i</code>个元素交换并固定下来，一共进行<code>n - 1</code>次遍历，每次遍历有一个数被排好位置，因此复杂度为<code>O(n^2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-02.png\" alt=\"选择排序\" style=\"zoom:50%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectionSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minIndex = i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j] &lt; final[minIndex]) &#123;</span><br><span class=\"line\">        minIndex = j;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (minIndex !== i) &#123;</span><br><span class=\"line\">      [final[i], final[minIndex]] = [final[minIndex], final[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-插入排序（Insertion-Sort）\"><a href=\"#3-插入排序（Insertion-Sort）\" class=\"headerlink\" title=\"3 插入排序（Insertion Sort）\"></a>3 插入排序（Insertion Sort）</h2><p>类似于<strong>插扑克牌排序</strong>，在一个已经排好序的序列中，插入一个新的数，使得新序列依然有序。</p>\n<p>每次插入一个数，一共插入<code>n</code>次。第<code>i</code>次（<code>i</code>从0开始）插入下标为<code>i</code>的数时，为比较数组前<code>i + 1</code>个数的大小，需要对这<code>i + 1</code>个数进行一遍冒泡排序。因此复杂度为<code>O(n^2)</code>。</p>\n<p>代码实现时，下标为0的数默认已插入，且不需要比较，<code>i</code>可以从1开始循环；此外，冒泡排序时，由于元素是有序的，从后往前找插入位置时，找到后即可进入下一轮遍历。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-03.png\" alt=\"插入排序\" style=\"zoom:50%;\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-04.png\" alt=\"插扑克牌排序\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertionSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &gt; <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j - <span class=\"number\">1</span>] &gt; final[j]) &#123;</span><br><span class=\"line\">        [final[j - <span class=\"number\">1</span>], final[j]] = [final[j], final[j - <span class=\"number\">1</span>]];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-希尔排序（Shell-Sort）\"><a href=\"#4-希尔排序（Shell-Sort）\" class=\"headerlink\" title=\"4 希尔排序（Shell Sort）\"></a>4 希尔排序（Shell Sort）</h2><p>当数列<strong>基本排好序</strong>时，使用插入排序会更高效。因此可以分步长成子序列，对每个子序列做插入排序。</p>\n<p>基本思路是，设置初始步长为数组长度的一半，将数组分为若干个子数组，子数组个数即为步长数。对每个子数组做插入排序，过程同上。依次缩小步长，直至步长为1，此时数组经过插入排序后已经完全排序。</p>\n<p>时间复杂度为<code>O(n^1.3-2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-05.png\" alt=\"插入排序\" style=\"zoom:50%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shellSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> increment = n;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    increment = <span class=\"built_in\">Math</span>.floor(increment / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 一共有increment个子数组，起始下标从0到increment-1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; increment; k++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 以下是插入排序</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = k + increment; i &lt; n; i += increment) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &gt; k; j -= increment) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (final[j - increment] &gt; final[j]) &#123;</span><br><span class=\"line\">            [final[j - increment], final[j]] = [final[j], final[j - increment]];</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (increment === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-快速排序（Quick-Sort）\"><a href=\"#5-快速排序（Quick-Sort）\" class=\"headerlink\" title=\"5 快速排序（Quick Sort）\"></a>5 快速排序（Quick Sort）</h2><p>快排yyds！基本思想是<strong>分治</strong>（分而治之），从数列中选出一个<code>key</code>值，并让其他数分边站（小于往左，大于等于往右），在左右两边重复这一步骤，直至区间长度为1。</p>\n<p>如何让数分边站？需要用到<strong>挖坑填数</strong>的方法。</p>\n<ul>\n<li>设这样的一个数组：<code>[72, 6, 57, 88, 60, 42, 83, 73, 48, 85]</code>，初始时，设<code>i = 0</code>，<code>j = 9</code>，<code>key</code>选取第一个数<code>a[0] = 72</code>。</li>\n<li><code>a[0]</code>被选走后，相当于<code>a[0]</code>出现了一个空洞，我们从后往前（<code>j--</code>）找出一个比<code>key</code>小的数，发现<code>j = 8</code>，<code>a[8] = 48</code>满足这个条件，将<code>a[8]</code>填到<code>a[0]</code>中。</li>\n<li>这时<code>a[8]</code>又形成了空洞，我们从前往后（<code>i++</code>）找出一个比<code>key</code>大的数，发现<code>i = 3</code>，<code>a[3] = 88</code>满足这个条件，将<code>a[3]</code>填到<code>a[8]</code>中。</li>\n<li>这一轮结束后，<code>i = 3</code>，<code>j = 7</code>，<code>key = 72</code>。再重复上述操作，先从后往前找，再从前往后找。如下一轮，找到<code>j = 5</code>，<code>a[5] = 42</code>，将<code>a[5]</code>填到<code>a[3]</code>中；找到<code>i = 5</code>，此时<code>i === j</code>，退出。</li>\n<li>再将<code>key = 72</code>填到最后的空洞<code>a[5]</code>中，此时数组为：<code>[48, 6, 57, 42, 60, 72, 83, 73, 88, 85]</code>，可以看出<code>a[5] = 72</code>前面的数都大于它，后面的数都小于它。再对<code>a[0...4]</code>和<code>a[6...9]</code>重复上述步骤即可。</li>\n</ul>\n<p>这个过程重复<code>n</code>次，每次对数组对半分，复杂度为<code>O(n logn)</code>。</p>\n<p><code>key</code>有多种选择方法，如中间数或随机数，会影响算法复杂度。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quickSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  sorting(<span class=\"number\">0</span>, n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sorting</span>(<span class=\"params\">left, right</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &gt;= right) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = left, j = right;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> key = final[left];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; final[j] &gt;= key) &#123;\t<span class=\"comment\">// 从右往左找第一个小于key的值</span></span><br><span class=\"line\">        j--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; j) &#123;</span><br><span class=\"line\">        final[i] = final[j];</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; final[i] &lt; key) &#123;\t<span class=\"comment\">// 从左往右找第一个大于key的值</span></span><br><span class=\"line\">        i++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; j) &#123;</span><br><span class=\"line\">        final[j] = final[i];</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 此时i === j</span></span><br><span class=\"line\">    final[i] = key;</span><br><span class=\"line\">    sorting(left, i - <span class=\"number\">1</span>);\t<span class=\"comment\">// 对左子区间递归调用</span></span><br><span class=\"line\">    sorting(i + <span class=\"number\">1</span>, right);\t<span class=\"comment\">// 对右子区间递归调用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-归并排序（Merge-Sort）\"><a href=\"#6-归并排序（Merge-Sort）\" class=\"headerlink\" title=\"6 归并排序（Merge Sort）\"></a>6 归并排序（Merge Sort）</h2><p>基本思想同样是<strong>分治</strong>。通过归并若干个已经排好序的子序列，达到整个序列完成排序的目的。</p>\n<p>首先考虑，如何<strong>合并两个有序数列</strong>？可以比较两个数列的第一个数，然后取出较小的一个，并在原数列删除该数，再重复操作，如果一个数列已空，依次取出另一个数列的元素即可。代码实现时，不用实际删除，可以用指针移动。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> m = a.length, n = b.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(m + n);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>, k = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt; m &amp;&amp; j &lt; n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a[i] &lt; b[j]) &#123;</span><br><span class=\"line\">      c[k++] = a[i++];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      c[k++] = b[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt; m) &#123;</span><br><span class=\"line\">    c[k++] = a[i++];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j &lt; n) &#123;</span><br><span class=\"line\">    c[k++] = b[j++];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>根据上面的思想，如果数组分成两组A、B且这两组有序，就可以方便地合并。</p>\n<p>如何使A、B有序？将A、B各自再分成两组，以此类推，直到小组内只有1个数据时，视为小组有序，再合并相邻的两个小组即可。也就是<strong>先递归分解数列，再合并数列</strong>。</p>\n<p>将数列分开小数列需要<code>logn</code>步，每一步合并有序数列需要<code>O(n)</code>，总的时间复杂度为<code>O(n logn)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-06.png\" alt=\"归并排序\" style=\"zoom: 67%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  sorting(<span class=\"number\">0</span>, n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sorting</span>(<span class=\"params\">left, right</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &lt; right) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> middle = <span class=\"built_in\">Math</span>.floor((left + right) / <span class=\"number\">2</span>);</span><br><span class=\"line\">      sorting(left, middle);\t<span class=\"comment\">// 对左子区间递归调用</span></span><br><span class=\"line\">      sorting(middle + <span class=\"number\">1</span>, right);\t<span class=\"comment\">// 对右子区间递归调用</span></span><br><span class=\"line\">      mergeArray(left, middle, right);\t<span class=\"comment\">// 归并左右子区间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeArray</span>(<span class=\"params\">left, middle, right</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = left, m = middle, j = middle + <span class=\"number\">1</span>, n = right;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> temp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(right - left + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= m &amp;&amp; j &lt;= n) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[i] &lt; final[j]) &#123;</span><br><span class=\"line\">        temp[k++] = final[i++];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        temp[k++] = final[j++];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= m) &#123;</span><br><span class=\"line\">      temp[k++] = final[i++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (j &lt;= n) &#123;</span><br><span class=\"line\">      temp[k++] = final[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> ii = <span class=\"number\">0</span>; ii &lt; k; ii++) &#123;</span><br><span class=\"line\">      final[left + ii] = temp[ii];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-堆排序（Heap-Sort）\"><a href=\"#7-堆排序（Heap-Sort）\" class=\"headerlink\" title=\"7 堆排序（Heap Sort）\"></a>7 堆排序（Heap Sort）</h2><p>首先，了解什么是<strong>堆</strong>和<strong>最小堆</strong>，以及<strong><code>shiftDown</code>操作</strong>。堆是用完全二叉树结构（只有二叉结构，且都在左边）存储数据的结构，也称二叉堆。最小堆是指堆中某个节点值不小于其父节点的值，因此最顶端总为最小值。</p>\n<p>下图是一个最小堆，堆顶是最小值，每个节点都不小于其父节点。并且可以按照图中所示顺序（从左到右，从上到下），确定每个节点的下标。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-07.png\" alt=\"最小堆和其在数组中的下标\"></p>\n<p>发现规律：对当前节点下标<code>i</code>，有：</p>\n<ul>\n<li>父元素在数组中的下标为：<code>Math.floor((i - 1) / 2)</code></li>\n<li>左子元素在数组中的下标为：<code>2 * i + 1</code></li>\n<li>右子元素在数组中的下标为：<code>2 * i + 2</code></li>\n</ul>\n<p><code>shiftDown</code>操作是指对于一个堆的根节点，判断其与子节点的大小关系。如果该节点更大，则不满足最小堆定义，此时该节点与子节点互换（下移）。重复这个操作，直到该节点找到它的位置（不再大于其两个子节点）。</p>\n<p>接下来介绍堆排序。堆排序的思想是，构造一个<strong>最小堆</strong>，然后<strong>依次取出堆顶最小值</strong>，直到堆为空。</p>\n<p>首先构造最小堆。对于已有的数组，可以按下标顺序转换为这样一个二叉树。然后，我们找到最后一个含有子节点的节点，这个节点应是最后一个节点<code>n - 1</code>的父节点，根据上面的规律，其下标是<code>Math.floor((n - 2) / 2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-08.png\" alt=\"初始二叉树\"></p>\n<p>从后往前遍历，对每个有子节点的节点，都把其当做根节点，对<strong>其下面的完全二叉树</strong>做<code>shiftDown</code>操作（这个过程称为建立堆的调整），直到整个二叉堆满足最小堆，最小堆构造完成。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-09.png\" alt=\"上述二叉树调整完后，构造出的最小堆\"></p>\n<p>构造完成后，数组并非排好序，因为堆只满足父子节点的大小关系。为此，我们需要依次取出最小值，每次重复取出，直至堆为空。</p>\n<p>堆中只能取出最大优先级的元素，即根节点，最小堆的根节点就是最小值。取出最小值后，会在堆顶形成空洞，这时需要把数组最后一个元素放到堆顶（根节点），然后对新的根节点进行<code>shiftDown</code>操作（这个过程称为最小堆的恢复）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-10.png\" alt=\"取出最小值后shiftDown\"></p>\n<p>代码实现时，我们可以将设置<code>shiftDown</code>的操作范围，对于已经放到末尾的最小值，<code>shiftDown</code>时不再处理它。</p>\n<p>最终得到的数组是降序排序的数组，为了得到升序排序，我们对其<code>reverse</code>即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-11.png\" alt=\"完成堆排序时的场景\"></p>\n<p>每次恢复堆的时间复杂度为<code>O(logn)</code>，共<code>n - 1</code>次恢复堆操作，建立堆时也需要调整<code>n / 2</code>次，每次<code>O(logn)</code>，总的时间复杂度为<code>O(n logn)</code>。</p>\n<p>参考：<a href=\"https://www.runoob.com/data-structures/heap-sort.html\">基础堆排序 | 菜鸟教程</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heapSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  makeMinHeap();\t<span class=\"comment\">// 构造最小堆</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = n - <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    [final[<span class=\"number\">0</span>], final[i]] = [final[i], final[<span class=\"number\">0</span>]];\t<span class=\"comment\">// 将最小值放到队尾，队尾填补堆顶</span></span><br><span class=\"line\">    minHeapShiftDown(<span class=\"number\">0</span>, i);\t<span class=\"comment\">// 堆顶元素做shiftDown，为了不影响队尾最小值，设置i为最后子节点位置（不包括i）</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final.reverse();\t<span class=\"comment\">// 将降序数组反转为升序数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeMinHeap</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 构造最小堆，从后往前对有子节点的节点做shiftDown</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"built_in\">Math</span>.floor((n - <span class=\"number\">2</span>) / <span class=\"number\">2</span>); i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">      minHeapShiftDown(i, n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">minHeapShiftDown</span> (<span class=\"params\">i, n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// i是需要shiftDown的根节点位置，n是最后一个子节点的位置（不包括n）</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = <span class=\"number\">2</span> * i + <span class=\"number\">1</span>;  <span class=\"comment\">// 找左子节点位置</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (j &lt; n) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j + <span class=\"number\">1</span> &lt; n &amp;&amp; final[j] &gt; final[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        j++;\t<span class=\"comment\">// 在左右节点中找较小值</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[i] &lt;= final[j]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;\t<span class=\"comment\">// 如果父节点小于等于子节点，则该节点有效，无需下移</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      [final[i], final[j]] = [final[j], final[i]];\t<span class=\"comment\">// 节点下移</span></span><br><span class=\"line\">      i = j;</span><br><span class=\"line\">      j = <span class=\"number\">2</span> * i + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-基数排序（Radix-Sort）\"><a href=\"#8-基数排序（Radix-Sort）\" class=\"headerlink\" title=\"8 基数排序（Radix Sort）\"></a>8 基数排序（Radix Sort）</h2><p>首先，了解什么是<strong>桶排序</strong>（Bin Sort，又称箱排序、计数排序）。</p>\n<p>最基础的桶排序创建一个大小为<code>max + 1</code>的数组<code>count</code>（<code>max</code>为原数组的最大数字）用来存储每个数字的个数，初始值记为0，然后做两轮遍历：</p>\n<ol>\n<li>遍历原数组<code>nums</code>，将数字对应下标的计数值加1，即<code>count[num]++</code>，这一轮复杂度为<code>O(n)</code></li>\n<li>遍历计数数组<code>count</code>，将不为0的下标值输出，这一轮复杂度为<code>O(max)</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-12.png\" alt=\"桶排序\" style=\"zoom: 67%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"built_in\">Math</span>.max(...final) + <span class=\"number\">1</span>).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">    count[num]++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; count[i]; j++) &#123;</span><br><span class=\"line\">      final[k++] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样的桶排序有一定的问题：如果数组中有负数，就没有对应下标；或者最小值远大于0，此时前面的空间都被浪费了。</p>\n<p><strong>优化的桶排序：</strong>找出最小值<code>min</code>和最大值<code>max</code>，计数数组长度为<code>max - min + 1</code>，下标也进行偏移，下标为<code>i</code>的元素对原数组中的<code>i + min</code>进行计数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> min = <span class=\"built_in\">Math</span>.min(...final), max = <span class=\"built_in\">Math</span>.max(...final);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"built_in\">Math</span>.max(max - min + <span class=\"number\">1</span>)).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">    count[num - min]++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; count[i]; j++) &#123;</span><br><span class=\"line\">      final[k++] = i + min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于上述桶排序利用<code>count</code>存储原数组的数值信息，丢失了原数组的其他信息（如两个相同数值输出的结果是不稳定的），实际操作中，还会将数组<code>count</code>中的计数改为前缀和，用来快速获得每个元素值的下标（排名）。</p>\n<p>这里推荐在获取下标时，从后往前遍历，这样对于相同值的元素，其顺序与原数组保持一致。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> min = <span class=\"built_in\">Math</span>.min(...final), max = <span class=\"built_in\">Math</span>.max(...final);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"built_in\">Math</span>.max(max - min + <span class=\"number\">1</span>)).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">    count[num - min]++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">    count[i] += count[i - <span class=\"number\">1</span>];\t<span class=\"comment\">// 前缀和，其含义是小于等于当前数的个数</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> temp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(n);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;\t<span class=\"comment\">// 从后往前遍历保证排序稳定性</span></span><br><span class=\"line\">    count[final[i] - min]--;\t<span class=\"comment\">// 获取下标</span></span><br><span class=\"line\">    temp[count[final[i] - min]] = final[i];\t<span class=\"comment\">// 赋值</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    final[i] = temp[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>桶排序的时间复杂度为<code>O(n + max - min)</code>，空间复杂度为<code>O(max - min)</code>。本质上，这是一种拿空间换时间的做法，有时可以达到线性复杂度，优于快排。</p>\n<p>可以看出，如果<code>max - min</code>较大，就会浪费过多的时间和空间。</p>\n<p>基数排序是在桶排序的基础上，通过<strong>基数的限制</strong>来减小开销。</p>\n<p>如下图所示，确定基数为10，数组长度就为10，每个数会在这10个数中寻找位置。对于某个数如34，不会像桶排序一样把其放在下标34中，而是将其分成3和4，第一轮排序将其放在下标4处，第二轮排序将其放在下标3处。</p>\n<p>如何确定排序轮数？排序轮数也就是数组最大值的位数，即<code>log(r) max + 1</code>向下取整。代码实现时，如果某一轮排序所有数字均计数在第0位，表明已经完成排序。</p>\n<p>复杂度为<code>O(d(n+r))</code>，<code>d</code>为排序轮数，<code>n</code>为数组长度，<code>r</code>为基数大小，<code>d = log(r) max + 1</code>向下取整。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-13.png\" alt=\"先排个位数，再排十位数\" style=\"zoom:67%;\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-14.png\" alt=\"基数排序\" style=\"zoom: 67%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">radixSort</span>(<span class=\"params\">arr, r</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  r = r === <span class=\"literal\">undefined</span> ? <span class=\"number\">10</span> : r;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(r).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, round = <span class=\"number\">1</span>; ; i++, round *= r) &#123;</span><br><span class=\"line\">    count.fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 计数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">      count[<span class=\"built_in\">Math</span>.floor(num / round) % r]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 确定位数，如果所有数字均计数在第0位，表明当前round已经超过最大值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count[<span class=\"number\">0</span>] === n) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 处理为前缀和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; r; j++) &#123;</span><br><span class=\"line\">      count[j] = count[j - <span class=\"number\">1</span>] + count[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> temp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(n);</span><br><span class=\"line\">    <span class=\"comment\">// 倒序取出元素，前缀和的值就表示排序后元素的下标位置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">      count[<span class=\"built_in\">Math</span>.floor(final[j] / round) % r]--;</span><br><span class=\"line\">      temp[count[<span class=\"built_in\">Math</span>.floor(final[j] / round) % r]] = final[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      final[j] = temp[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ol>\n<li><a href=\"https://www.w3school.com.cn/js/js_array_sort.asp\">JavaScript 数组排序</a></li>\n<li><a href=\"https://www.runoob.com/w3cnote/sort-algorithm-summary.html\">排序算法总结 | 菜鸟教程</a></li>\n<li><a href=\"https://blog.kingfish404.cn/posts/2021/03/frontend04-algorithm\">用typescript实现八大排序-递增 - Kingfish404</a></li>\n<li><a href=\"https://www.runoob.com/data-structures/heap-storage.html\">堆的基本存储 | 菜鸟教程</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>八大排序分别是 冒泡排序、选择排序、插入排序、希尔排序、快速排序、归并排序、堆排序、基数排序。本文介绍这八大排序算法的基本思想和过程，并尝试使用JavaScript实现它们。</p>","more":"<p>各个排序的复杂度如下表所示：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">排序</th>\n<th style=\"text-align:center\">平均情况</th>\n<th style=\"text-align:center\">最好情况</th>\n<th style=\"text-align:center\">最坏情况</th>\n<th style=\"text-align:center\">辅助空间</th>\n<th style=\"text-align:center\">稳定性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">冒泡排序</td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">选择排序</td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">插入排序</td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">希尔排序</td>\n<td style=\"text-align:center\"><code>O(n^1.3)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">快速排序</td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n^2)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">归并排序</td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">堆排序</td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(n logn)</code></td>\n<td style=\"text-align:center\"><code>O(1)</code></td>\n<td style=\"text-align:center\">不稳定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">基数排序</td>\n<td style=\"text-align:center\"><code>O(d(n+r))</code></td>\n<td style=\"text-align:center\"><code>O(d(n+r))</code></td>\n<td style=\"text-align:center\"><code>O(d(n+rd))</code></td>\n<td style=\"text-align:center\"><code>O(n+rd)</code></td>\n<td style=\"text-align:center\">稳定</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"0-JavaScript自带排序\"><a href=\"#0-JavaScript自带排序\" class=\"headerlink\" title=\"0 JavaScript自带排序\"></a>0 JavaScript自带排序</h2><p>即<code>Array.prototype.sort()</code>，原理为插入排序与快速排序混合。<code>sort</code>会改变原数组，并返回排序后的数组（不过一般没人使用其返回值）。</p>\n<p>注意，<code>sort</code>不含参数时，默认是按<strong>字母顺序</strong>对数组进行升序排序。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fruits = [<span class=\"string\">&quot;banana&quot;</span>, <span class=\"string\">&quot;apple&quot;</span>, <span class=\"string\">&quot;orange&quot;</span>, <span class=\"string\">&quot;mongo&quot;</span>];</span><br><span class=\"line\">fruits.sort();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fruits);\t<span class=\"comment\">// [ &#x27;apple&#x27;, &#x27;banana&#x27;, &#x27;mongo&#x27;, &#x27;orange&#x27; ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">40</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">25</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\">nums.sort();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);\t<span class=\"comment\">// [ 1, 10, 100, 25, 40, 5 ]</span></span><br></pre></td></tr></table></figure>\n<p>为使结果按数字顺序进行排序，<code>sort</code>接受一个<strong>回调函数</strong>作为参数，如下所示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;<span class=\"keyword\">return</span> a - b;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以直接简写为箭头函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(a, b) =&gt; a - b</span><br></pre></td></tr></table></figure>\n<p>回调函数的两个参数代表数组中准备比较的两个值，并根据返回值决定排序：</p>\n<ol>\n<li>返回值为负值，将<code>a</code>向前排</li>\n<li>返回值为正值，将<code>b</code>向前排</li>\n<li>返回值为零，<code>a</code>、<code>b</code>顺序不变</li>\n</ol>\n<p>因此，可以为回调函数填写不同的返回值，以进行不同的排序方式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">40</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">25</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\">nums.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);\t<span class=\"comment\">// 数字升序排序</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);\t<span class=\"comment\">// [ 1, 5, 10, 25, 40, 100 ]</span></span><br><span class=\"line\">nums.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> b - a);\t<span class=\"comment\">// 数字降序排序</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);\t<span class=\"comment\">// [ 100, 40, 25, 10, 5, 1 ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> students = [&#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">scores</span>: <span class=\"number\">85</span>&#125;, &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">scores</span>: <span class=\"number\">90</span>&#125;, &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">scores</span>: <span class=\"number\">82</span>&#125;];</span><br><span class=\"line\">students.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a.scores - b.scores);\t<span class=\"comment\">// 按每个元素的scores属性升序排序</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(students);\t<span class=\"comment\">// [ &#123; id: 3, scores: 82 &#125;, &#123; id: 1, scores: 85 &#125;, &#123; id: 2, scores: 90 &#125; ]</span></span><br></pre></td></tr></table></figure>\n<p>注意回调函数的返回值是数值，而非布尔值，不要写成<code>(a, b) =&gt; a &lt; b</code>。</p>\n<h2 id=\"1-冒泡排序（Bubble-Sort）\"><a href=\"#1-冒泡排序（Bubble-Sort）\" class=\"headerlink\" title=\"1 冒泡排序（Bubble Sort）\"></a>1 冒泡排序（Bubble Sort）</h2><p>典型的排序算法。两个数两两比较大小，大数后移（下沉），小数前移（冒泡）。</p>\n<p>这里用一个大小为2的窗口，每次从后往前滑动比较，直到最小的数被顶到最前。紧接着对后面<code>n - 1</code>个数进行同样的操作，直至比较完毕。</p>\n<p>一共进行<code>n - 1</code>趟比较，第<code>i</code>趟（<code>i</code>从0开始）对<code>n - i</code>个数进行<code>n - i - 1</code>次比较，每趟结束后有一个数被排好位置，因此复杂度为<code>O(n^2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-01.png\" alt=\"冒泡排序\" style=\"zoom:50%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubbleSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j - <span class=\"number\">1</span>] &gt; final[j]) &#123;</span><br><span class=\"line\">        [final[j - <span class=\"number\">1</span>], final[j]] = [final[j], final[j - <span class=\"number\">1</span>]];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>优化：</strong><code>n - 1</code>趟比较需要全部完成，如果某趟比较已经完成排序，则进行了多余的遍历。</p>\n<p>可以设置标志位<code>flag</code>，表示本趟比较<strong>是否进行了冒泡交换</strong>，如果一趟下来都没有进行冒泡交换，表示元素已经有序。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubbleSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j - <span class=\"number\">1</span>] &gt; final[j]) &#123;</span><br><span class=\"line\">        [final[j - <span class=\"number\">1</span>], final[j]] = [final[j], final[j - <span class=\"number\">1</span>]];</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-选择排序（Selection-Sort）\"><a href=\"#2-选择排序（Selection-Sort）\" class=\"headerlink\" title=\"2 选择排序（Selection Sort）\"></a>2 选择排序（Selection Sort）</h2><p>找数组中元素的最小值，并顶到最前，然后在后面剩下的元素中重复操作。</p>\n<p>第<code>i</code>次（<code>i</code>从0开始）遍历，在后面<code>n - i</code>个数中找出最小值，与第<code>i</code>个元素交换并固定下来，一共进行<code>n - 1</code>次遍历，每次遍历有一个数被排好位置，因此复杂度为<code>O(n^2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-02.png\" alt=\"选择排序\" style=\"zoom:50%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectionSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minIndex = i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j] &lt; final[minIndex]) &#123;</span><br><span class=\"line\">        minIndex = j;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (minIndex !== i) &#123;</span><br><span class=\"line\">      [final[i], final[minIndex]] = [final[minIndex], final[i]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-插入排序（Insertion-Sort）\"><a href=\"#3-插入排序（Insertion-Sort）\" class=\"headerlink\" title=\"3 插入排序（Insertion Sort）\"></a>3 插入排序（Insertion Sort）</h2><p>类似于<strong>插扑克牌排序</strong>，在一个已经排好序的序列中，插入一个新的数，使得新序列依然有序。</p>\n<p>每次插入一个数，一共插入<code>n</code>次。第<code>i</code>次（<code>i</code>从0开始）插入下标为<code>i</code>的数时，为比较数组前<code>i + 1</code>个数的大小，需要对这<code>i + 1</code>个数进行一遍冒泡排序。因此复杂度为<code>O(n^2)</code>。</p>\n<p>代码实现时，下标为0的数默认已插入，且不需要比较，<code>i</code>可以从1开始循环；此外，冒泡排序时，由于元素是有序的，从后往前找插入位置时，找到后即可进入下一轮遍历。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-03.png\" alt=\"插入排序\" style=\"zoom:50%;\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-04.png\" alt=\"插扑克牌排序\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertionSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &gt; <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[j - <span class=\"number\">1</span>] &gt; final[j]) &#123;</span><br><span class=\"line\">        [final[j - <span class=\"number\">1</span>], final[j]] = [final[j], final[j - <span class=\"number\">1</span>]];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-希尔排序（Shell-Sort）\"><a href=\"#4-希尔排序（Shell-Sort）\" class=\"headerlink\" title=\"4 希尔排序（Shell Sort）\"></a>4 希尔排序（Shell Sort）</h2><p>当数列<strong>基本排好序</strong>时，使用插入排序会更高效。因此可以分步长成子序列，对每个子序列做插入排序。</p>\n<p>基本思路是，设置初始步长为数组长度的一半，将数组分为若干个子数组，子数组个数即为步长数。对每个子数组做插入排序，过程同上。依次缩小步长，直至步长为1，此时数组经过插入排序后已经完全排序。</p>\n<p>时间复杂度为<code>O(n^1.3-2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-05.png\" alt=\"插入排序\" style=\"zoom:50%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shellSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> increment = n;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    increment = <span class=\"built_in\">Math</span>.floor(increment / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 一共有increment个子数组，起始下标从0到increment-1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; increment; k++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 以下是插入排序</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = k + increment; i &lt; n; i += increment) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &gt; k; j -= increment) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (final[j - increment] &gt; final[j]) &#123;</span><br><span class=\"line\">            [final[j - increment], final[j]] = [final[j], final[j - increment]];</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (increment === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-快速排序（Quick-Sort）\"><a href=\"#5-快速排序（Quick-Sort）\" class=\"headerlink\" title=\"5 快速排序（Quick Sort）\"></a>5 快速排序（Quick Sort）</h2><p>快排yyds！基本思想是<strong>分治</strong>（分而治之），从数列中选出一个<code>key</code>值，并让其他数分边站（小于往左，大于等于往右），在左右两边重复这一步骤，直至区间长度为1。</p>\n<p>如何让数分边站？需要用到<strong>挖坑填数</strong>的方法。</p>\n<ul>\n<li>设这样的一个数组：<code>[72, 6, 57, 88, 60, 42, 83, 73, 48, 85]</code>，初始时，设<code>i = 0</code>，<code>j = 9</code>，<code>key</code>选取第一个数<code>a[0] = 72</code>。</li>\n<li><code>a[0]</code>被选走后，相当于<code>a[0]</code>出现了一个空洞，我们从后往前（<code>j--</code>）找出一个比<code>key</code>小的数，发现<code>j = 8</code>，<code>a[8] = 48</code>满足这个条件，将<code>a[8]</code>填到<code>a[0]</code>中。</li>\n<li>这时<code>a[8]</code>又形成了空洞，我们从前往后（<code>i++</code>）找出一个比<code>key</code>大的数，发现<code>i = 3</code>，<code>a[3] = 88</code>满足这个条件，将<code>a[3]</code>填到<code>a[8]</code>中。</li>\n<li>这一轮结束后，<code>i = 3</code>，<code>j = 7</code>，<code>key = 72</code>。再重复上述操作，先从后往前找，再从前往后找。如下一轮，找到<code>j = 5</code>，<code>a[5] = 42</code>，将<code>a[5]</code>填到<code>a[3]</code>中；找到<code>i = 5</code>，此时<code>i === j</code>，退出。</li>\n<li>再将<code>key = 72</code>填到最后的空洞<code>a[5]</code>中，此时数组为：<code>[48, 6, 57, 42, 60, 72, 83, 73, 88, 85]</code>，可以看出<code>a[5] = 72</code>前面的数都大于它，后面的数都小于它。再对<code>a[0...4]</code>和<code>a[6...9]</code>重复上述步骤即可。</li>\n</ul>\n<p>这个过程重复<code>n</code>次，每次对数组对半分，复杂度为<code>O(n logn)</code>。</p>\n<p><code>key</code>有多种选择方法，如中间数或随机数，会影响算法复杂度。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quickSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  sorting(<span class=\"number\">0</span>, n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sorting</span>(<span class=\"params\">left, right</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &gt;= right) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = left, j = right;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> key = final[left];</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; j) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; final[j] &gt;= key) &#123;\t<span class=\"comment\">// 从右往左找第一个小于key的值</span></span><br><span class=\"line\">        j--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; j) &#123;</span><br><span class=\"line\">        final[i] = final[j];</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (i &lt; j &amp;&amp; final[i] &lt; key) &#123;\t<span class=\"comment\">// 从左往右找第一个大于key的值</span></span><br><span class=\"line\">        i++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; j) &#123;</span><br><span class=\"line\">        final[j] = final[i];</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 此时i === j</span></span><br><span class=\"line\">    final[i] = key;</span><br><span class=\"line\">    sorting(left, i - <span class=\"number\">1</span>);\t<span class=\"comment\">// 对左子区间递归调用</span></span><br><span class=\"line\">    sorting(i + <span class=\"number\">1</span>, right);\t<span class=\"comment\">// 对右子区间递归调用</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-归并排序（Merge-Sort）\"><a href=\"#6-归并排序（Merge-Sort）\" class=\"headerlink\" title=\"6 归并排序（Merge Sort）\"></a>6 归并排序（Merge Sort）</h2><p>基本思想同样是<strong>分治</strong>。通过归并若干个已经排好序的子序列，达到整个序列完成排序的目的。</p>\n<p>首先考虑，如何<strong>合并两个有序数列</strong>？可以比较两个数列的第一个数，然后取出较小的一个，并在原数列删除该数，再重复操作，如果一个数列已空，依次取出另一个数列的元素即可。代码实现时，不用实际删除，可以用指针移动。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> m = a.length, n = b.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(m + n);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>, k = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt; m &amp;&amp; j &lt; n) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a[i] &lt; b[j]) &#123;</span><br><span class=\"line\">      c[k++] = a[i++];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      c[k++] = b[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i &lt; m) &#123;</span><br><span class=\"line\">    c[k++] = a[i++];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j &lt; n) &#123;</span><br><span class=\"line\">    c[k++] = b[j++];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>根据上面的思想，如果数组分成两组A、B且这两组有序，就可以方便地合并。</p>\n<p>如何使A、B有序？将A、B各自再分成两组，以此类推，直到小组内只有1个数据时，视为小组有序，再合并相邻的两个小组即可。也就是<strong>先递归分解数列，再合并数列</strong>。</p>\n<p>将数列分开小数列需要<code>logn</code>步，每一步合并有序数列需要<code>O(n)</code>，总的时间复杂度为<code>O(n logn)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-06.png\" alt=\"归并排序\" style=\"zoom: 67%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  sorting(<span class=\"number\">0</span>, n - <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sorting</span>(<span class=\"params\">left, right</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &lt; right) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> middle = <span class=\"built_in\">Math</span>.floor((left + right) / <span class=\"number\">2</span>);</span><br><span class=\"line\">      sorting(left, middle);\t<span class=\"comment\">// 对左子区间递归调用</span></span><br><span class=\"line\">      sorting(middle + <span class=\"number\">1</span>, right);\t<span class=\"comment\">// 对右子区间递归调用</span></span><br><span class=\"line\">      mergeArray(left, middle, right);\t<span class=\"comment\">// 归并左右子区间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeArray</span>(<span class=\"params\">left, middle, right</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = left, m = middle, j = middle + <span class=\"number\">1</span>, n = right;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> temp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(right - left + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= m &amp;&amp; j &lt;= n) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[i] &lt; final[j]) &#123;</span><br><span class=\"line\">        temp[k++] = final[i++];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        temp[k++] = final[j++];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= m) &#123;</span><br><span class=\"line\">      temp[k++] = final[i++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (j &lt;= n) &#123;</span><br><span class=\"line\">      temp[k++] = final[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> ii = <span class=\"number\">0</span>; ii &lt; k; ii++) &#123;</span><br><span class=\"line\">      final[left + ii] = temp[ii];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-堆排序（Heap-Sort）\"><a href=\"#7-堆排序（Heap-Sort）\" class=\"headerlink\" title=\"7 堆排序（Heap Sort）\"></a>7 堆排序（Heap Sort）</h2><p>首先，了解什么是<strong>堆</strong>和<strong>最小堆</strong>，以及<strong><code>shiftDown</code>操作</strong>。堆是用完全二叉树结构（只有二叉结构，且都在左边）存储数据的结构，也称二叉堆。最小堆是指堆中某个节点值不小于其父节点的值，因此最顶端总为最小值。</p>\n<p>下图是一个最小堆，堆顶是最小值，每个节点都不小于其父节点。并且可以按照图中所示顺序（从左到右，从上到下），确定每个节点的下标。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-07.png\" alt=\"最小堆和其在数组中的下标\"></p>\n<p>发现规律：对当前节点下标<code>i</code>，有：</p>\n<ul>\n<li>父元素在数组中的下标为：<code>Math.floor((i - 1) / 2)</code></li>\n<li>左子元素在数组中的下标为：<code>2 * i + 1</code></li>\n<li>右子元素在数组中的下标为：<code>2 * i + 2</code></li>\n</ul>\n<p><code>shiftDown</code>操作是指对于一个堆的根节点，判断其与子节点的大小关系。如果该节点更大，则不满足最小堆定义，此时该节点与子节点互换（下移）。重复这个操作，直到该节点找到它的位置（不再大于其两个子节点）。</p>\n<p>接下来介绍堆排序。堆排序的思想是，构造一个<strong>最小堆</strong>，然后<strong>依次取出堆顶最小值</strong>，直到堆为空。</p>\n<p>首先构造最小堆。对于已有的数组，可以按下标顺序转换为这样一个二叉树。然后，我们找到最后一个含有子节点的节点，这个节点应是最后一个节点<code>n - 1</code>的父节点，根据上面的规律，其下标是<code>Math.floor((n - 2) / 2)</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-08.png\" alt=\"初始二叉树\"></p>\n<p>从后往前遍历，对每个有子节点的节点，都把其当做根节点，对<strong>其下面的完全二叉树</strong>做<code>shiftDown</code>操作（这个过程称为建立堆的调整），直到整个二叉堆满足最小堆，最小堆构造完成。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-09.png\" alt=\"上述二叉树调整完后，构造出的最小堆\"></p>\n<p>构造完成后，数组并非排好序，因为堆只满足父子节点的大小关系。为此，我们需要依次取出最小值，每次重复取出，直至堆为空。</p>\n<p>堆中只能取出最大优先级的元素，即根节点，最小堆的根节点就是最小值。取出最小值后，会在堆顶形成空洞，这时需要把数组最后一个元素放到堆顶（根节点），然后对新的根节点进行<code>shiftDown</code>操作（这个过程称为最小堆的恢复）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-10.png\" alt=\"取出最小值后shiftDown\"></p>\n<p>代码实现时，我们可以将设置<code>shiftDown</code>的操作范围，对于已经放到末尾的最小值，<code>shiftDown</code>时不再处理它。</p>\n<p>最终得到的数组是降序排序的数组，为了得到升序排序，我们对其<code>reverse</code>即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-11.png\" alt=\"完成堆排序时的场景\"></p>\n<p>每次恢复堆的时间复杂度为<code>O(logn)</code>，共<code>n - 1</code>次恢复堆操作，建立堆时也需要调整<code>n / 2</code>次，每次<code>O(logn)</code>，总的时间复杂度为<code>O(n logn)</code>。</p>\n<p>参考：<a href=\"https://www.runoob.com/data-structures/heap-sort.html\">基础堆排序 | 菜鸟教程</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heapSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  makeMinHeap();\t<span class=\"comment\">// 构造最小堆</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = n - <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    [final[<span class=\"number\">0</span>], final[i]] = [final[i], final[<span class=\"number\">0</span>]];\t<span class=\"comment\">// 将最小值放到队尾，队尾填补堆顶</span></span><br><span class=\"line\">    minHeapShiftDown(<span class=\"number\">0</span>, i);\t<span class=\"comment\">// 堆顶元素做shiftDown，为了不影响队尾最小值，设置i为最后子节点位置（不包括i）</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final.reverse();\t<span class=\"comment\">// 将降序数组反转为升序数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeMinHeap</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 构造最小堆，从后往前对有子节点的节点做shiftDown</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"built_in\">Math</span>.floor((n - <span class=\"number\">2</span>) / <span class=\"number\">2</span>); i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">      minHeapShiftDown(i, n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">minHeapShiftDown</span> (<span class=\"params\">i, n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// i是需要shiftDown的根节点位置，n是最后一个子节点的位置（不包括n）</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> j = <span class=\"number\">2</span> * i + <span class=\"number\">1</span>;  <span class=\"comment\">// 找左子节点位置</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (j &lt; n) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j + <span class=\"number\">1</span> &lt; n &amp;&amp; final[j] &gt; final[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        j++;\t<span class=\"comment\">// 在左右节点中找较小值</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (final[i] &lt;= final[j]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;\t<span class=\"comment\">// 如果父节点小于等于子节点，则该节点有效，无需下移</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      [final[i], final[j]] = [final[j], final[i]];\t<span class=\"comment\">// 节点下移</span></span><br><span class=\"line\">      i = j;</span><br><span class=\"line\">      j = <span class=\"number\">2</span> * i + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-基数排序（Radix-Sort）\"><a href=\"#8-基数排序（Radix-Sort）\" class=\"headerlink\" title=\"8 基数排序（Radix Sort）\"></a>8 基数排序（Radix Sort）</h2><p>首先，了解什么是<strong>桶排序</strong>（Bin Sort，又称箱排序、计数排序）。</p>\n<p>最基础的桶排序创建一个大小为<code>max + 1</code>的数组<code>count</code>（<code>max</code>为原数组的最大数字）用来存储每个数字的个数，初始值记为0，然后做两轮遍历：</p>\n<ol>\n<li>遍历原数组<code>nums</code>，将数字对应下标的计数值加1，即<code>count[num]++</code>，这一轮复杂度为<code>O(n)</code></li>\n<li>遍历计数数组<code>count</code>，将不为0的下标值输出，这一轮复杂度为<code>O(max)</code></li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-12.png\" alt=\"桶排序\" style=\"zoom: 67%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"built_in\">Math</span>.max(...final) + <span class=\"number\">1</span>).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">    count[num]++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; count[i]; j++) &#123;</span><br><span class=\"line\">      final[k++] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样的桶排序有一定的问题：如果数组中有负数，就没有对应下标；或者最小值远大于0，此时前面的空间都被浪费了。</p>\n<p><strong>优化的桶排序：</strong>找出最小值<code>min</code>和最大值<code>max</code>，计数数组长度为<code>max - min + 1</code>，下标也进行偏移，下标为<code>i</code>的元素对原数组中的<code>i + min</code>进行计数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> min = <span class=\"built_in\">Math</span>.min(...final), max = <span class=\"built_in\">Math</span>.max(...final);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"built_in\">Math</span>.max(max - min + <span class=\"number\">1</span>)).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">    count[num - min]++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; count[i]; j++) &#123;</span><br><span class=\"line\">      final[k++] = i + min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于上述桶排序利用<code>count</code>存储原数组的数值信息，丢失了原数组的其他信息（如两个相同数值输出的结果是不稳定的），实际操作中，还会将数组<code>count</code>中的计数改为前缀和，用来快速获得每个元素值的下标（排名）。</p>\n<p>这里推荐在获取下标时，从后往前遍历，这样对于相同值的元素，其顺序与原数组保持一致。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> min = <span class=\"built_in\">Math</span>.min(...final), max = <span class=\"built_in\">Math</span>.max(...final);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"built_in\">Math</span>.max(max - min + <span class=\"number\">1</span>)).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">    count[num - min]++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">    count[i] += count[i - <span class=\"number\">1</span>];\t<span class=\"comment\">// 前缀和，其含义是小于等于当前数的个数</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> temp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(n);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;\t<span class=\"comment\">// 从后往前遍历保证排序稳定性</span></span><br><span class=\"line\">    count[final[i] - min]--;\t<span class=\"comment\">// 获取下标</span></span><br><span class=\"line\">    temp[count[final[i] - min]] = final[i];\t<span class=\"comment\">// 赋值</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    final[i] = temp[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>桶排序的时间复杂度为<code>O(n + max - min)</code>，空间复杂度为<code>O(max - min)</code>。本质上，这是一种拿空间换时间的做法，有时可以达到线性复杂度，优于快排。</p>\n<p>可以看出，如果<code>max - min</code>较大，就会浪费过多的时间和空间。</p>\n<p>基数排序是在桶排序的基础上，通过<strong>基数的限制</strong>来减小开销。</p>\n<p>如下图所示，确定基数为10，数组长度就为10，每个数会在这10个数中寻找位置。对于某个数如34，不会像桶排序一样把其放在下标34中，而是将其分成3和4，第一轮排序将其放在下标4处，第二轮排序将其放在下标3处。</p>\n<p>如何确定排序轮数？排序轮数也就是数组最大值的位数，即<code>log(r) max + 1</code>向下取整。代码实现时，如果某一轮排序所有数字均计数在第0位，表明已经完成排序。</p>\n<p>复杂度为<code>O(d(n+r))</code>，<code>d</code>为排序轮数，<code>n</code>为数组长度，<code>r</code>为基数大小，<code>d = log(r) max + 1</code>向下取整。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-13.png\" alt=\"先排个位数，再排十位数\" style=\"zoom:67%;\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-14.png\" alt=\"基数排序\" style=\"zoom: 67%;\" /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">radixSort</span>(<span class=\"params\">arr, r</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> final = [...arr], n = arr.length;</span><br><span class=\"line\">  r = r === <span class=\"literal\">undefined</span> ? <span class=\"number\">10</span> : r;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> count = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(r).fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, round = <span class=\"number\">1</span>; ; i++, round *= r) &#123;</span><br><span class=\"line\">    count.fill(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 计数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> num <span class=\"keyword\">of</span> final) &#123;</span><br><span class=\"line\">      count[<span class=\"built_in\">Math</span>.floor(num / round) % r]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 确定位数，如果所有数字均计数在第0位，表明当前round已经超过最大值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count[<span class=\"number\">0</span>] === n) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 处理为前缀和</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; r; j++) &#123;</span><br><span class=\"line\">      count[j] = count[j - <span class=\"number\">1</span>] + count[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> temp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(n);</span><br><span class=\"line\">    <span class=\"comment\">// 倒序取出元素，前缀和的值就表示排序后元素的下标位置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = n - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">      count[<span class=\"built_in\">Math</span>.floor(final[j] / round) % r]--;</span><br><span class=\"line\">      temp[count[<span class=\"built_in\">Math</span>.floor(final[j] / round) % r]] = final[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      final[j] = temp[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ol>\n<li><a href=\"https://www.w3school.com.cn/js/js_array_sort.asp\">JavaScript 数组排序</a></li>\n<li><a href=\"https://www.runoob.com/w3cnote/sort-algorithm-summary.html\">排序算法总结 | 菜鸟教程</a></li>\n<li><a href=\"https://blog.kingfish404.cn/posts/2021/03/frontend04-algorithm\">用typescript实现八大排序-递增 - Kingfish404</a></li>\n<li><a href=\"https://www.runoob.com/data-structures/heap-storage.html\">堆的基本存储 | 菜鸟教程</a></li>\n</ol>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-01.png","popularPost_tmp_gaData":{"updated":"Fri Mar 04 2022 14:26:18 GMT+0800 (中国标准时间)","title":"用JavaScript实现八大排序","path":"2022/03/02/realize-eight-sorting-methods-using-javascript/","eyeCatchImage":"https://cdn.jsdelivr.net/gh/kaluojushi/Corecabin-Picbed/img/20220302/20220302-01.png","excerpt":"<p>八大排序分别是 冒泡排序、选择排序、插入排序、希尔排序、快速排序、归并排序、堆排序、基数排序。本文介绍这八大排序算法的基本思想和过程，并尝试使用JavaScript实现它们。</p>","date":{"_isAMomentObject":true,"_i":"2022-03-02T05:24:31.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-03-02T05:24:31.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Algorithm","tags":["编程","JavaScript","基础","算法","排序","数据结构"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":11098},{"title":"JavaScript中this的指向问题","date":"2022-04-17T10:57:49.000Z","comments":1,"_content":"\n面试常考题，很多初学者会被JavaScript中众多不同情况的`this`指向搞迷糊。本质上，`this`始终指向一个对象。\n\n<!--more-->\n\n## 0 太长不看版\n\n只要弄明白，`this`在函数中被使用，在定义时不确定指向，**调用时**才能确定指向（箭头函数除外），并始终**指向一个对象**，可以简单分为以下6种情况：\n\n1. **普通函数调用**，指向全局对象\n2. **对象方法调用**，谁调用指向谁，只看调用不看引用\n3. **构造函数调用**，指向新构造的实例，尽管可能不被构造函数返回\n4. **遇`apply`、`call`、`bind`**，改变指向\n5. **匿名函数调用**，一般指向全局对象\n6. **箭头函数调用**，指向定义箭头函数作用域的`this`\n\n## 1 普通函数调用\n\n普通函数调用时，`this`指向全局对象，在浏览器中，全局对象为`window`。看示例：\n\n### 1.1 `var`定义变量\n\n```javascript\nvar name = \"var\";\nfunction fn() {\n  var name = \"fn-var\";\n  console.log(this);\t// window对象\n  console.log(this.name);\t// var\n}\nfn();\n```\n\n`fn`作为普通函数被调用，`this`指向全局对象`window`。\n\n`var`定义的**全局变量**视为全局对象的属性，因此`this.name`输出全局对象`window`的`name`属性，即`\"var\"`。\n\n### 1.2 `let`定义变量\n\n```javascript\nlet name = \"let\";\nfunction fn() {\n  let name = \"fn-let\";\n  console.log(this);\t// window对象\n  console.log(this.name);\t// undefined\n}\nfn();\n```\n\n`let`定义的变量不会成为全局对象的属性，因此`this.name`即全局对象`window`的`name`属性不存在，输出`undefined`。\n\n### 1.3 全局对象属性\n\n```javascript\nwindow.name = \"win\";\nfunction fn() {\n  console.log(this);\t// window对象\n  console.log(this.name);\t// win\n}\nfn();\n```\n\n毫无疑问，`this.name`输出全局对象`window`的`name`属性，即`\"win\"`。\n\n## 2 对象方法调用\n\n函数作为对象方法被调用时，哪个对象调用，`this`就指向谁。\n\n如果函数变量被赋值给其他变量，依然是谁调用指向谁，而不考虑函数来源**（只看调用，不看引用）**。\n\n### 2.1 对象直接调用自有方法\n\n```javascript\nvar obj = {\n  age: 15,\n  fn() {\n    console.log(this.name);\t// undefined\n    console.log(this.age);\t// 15\n  }\n}\nobj.fn();\n```\n\n`obj`对象直接调用自有方法`fn`，`fn`中的`this`就指向调用它的`obj`对象。\n\n### 2.2 对象多层调用自有方法\n\n```javascript\nvar obj = {\n  age: 15,\n  inner: {\n    age: 20,\n    fn() {\n      console.log(this.age);\n    }\n  }\n}\nobj.inner.fn();\t// 20\n```\n\n尽管方法`fn`是被最外层对象`obj`间接调用，但`fn`中的`this`指向最近的上一层对象`inner`（即直接调用它的对象）。\n\n### 2.3 函数变量被赋值给其他对象的属性\n\n```javascript\nvar obj = {\n  age: 15,\n  fn() {\n    console.log(this.name);\n    console.log(this.age);\n  }\n}\nvar obj2 = {\n  name: \"obj2\",\n  age: 20\n}\nobj2.fn2 = obj.fn;\nobj2.fn2();\t// obj2 20\n```\n\n尽管方法`fn2`来源于对象`obj`的方法`fn`，但依然是**“谁调用指向谁”**，方法被`obj2`调用，`this`就指向`obj2`。\n\n### 2.4 原型方法\n\n```javascript\nvar obj = {\n  age: 15\n}\nvar obj2 = {\n  name: \"obj2\",\n  age: 20\n}\nObject.prototype.getAge = function () {\n  console.log(this.age);\n}\nobj.getAge();\t// 15\nobj2.getAge();\t// 20\n```\n\n这个就很好理解了~虽然`getAge`是原型对象`Object.prototype`的方法，但实例`obj`和`obj2`进行了调用，方法中的`this`就指向它们。\n\n实际上，这就是原型方法的特点之一：**全体实例的可复用方法**。\n\n### 2.5 函数变量被赋值给普通变量\n\n```javascript\nvar name = \"var\";\nvar age = 123;\nvar obj = {\n  age: 15,\n  getName() {\n    console.log(this.name);\n  }\n}\nvar obj2 = {\n  name: \"obj2\",\n  age: 20\n}\nObject.prototype.getAge = function () {\n  console.log(this.age);\n}\nvar fn1 = obj.getName;\nlet fn2 = obj2.getAge;\nfn1();\t// var\nfn2();\t// 123\n```\n\n这时，`fn1`和`fn2`实际上是作为普通函数调用，根据**“谁调用指向谁”**的原则，它们当中的`this`指向全局对象`window`，输出全局对象的属性值`\"var\"`和`123`。\n\n总结：无论嵌套几层，无论如何赋值，无论函数来源，谁调用了函数/方法，`this`就指向谁。\n\n## 3 构造函数调用\n\n一般情况下，`this`指向构造函数`new`出来的对象。\n\n### 3.1 一般情况\n\n```javascript\nfunction A() {\n  this.name = \"me\";\n  var age = 15;\n  console.log(this.name);\t// me\n  console.log(this.age);\t// undefined\n}\n\nvar a = new A();\nconsole.log(a);\t// A { name: 'me' }\nconsole.log(a.name);\t// me\nconsole.log(a.age);\t// undefined\n```\n\n这也是最常见的过程，类似于定义对象的自有属性。\n\n> 面试常考题：通过`new`创建构造函数的一个实例时，发生了什么？\n>\n> 以`var a = new A()`为例：\n>\n> 1. 创建一个空对象：`var obj = {}`\n> 2. 让构造器函数`A`的`this`指向对象`obj`，并执行`A`中的函数体：`var result = A.call(obj)`\n> 3. 设置原型链，让对象`obj`的`__proto__`属性指向构造器函数`A`的原型对象：`obj.__proto__ = A.prototype`\n> 4. 判断构造器函数`A`的返回类型，如果是值类型，结果返回`obj`，如果是引用类型（`null`除外），返回引用类型的对象：`a = result && (typeof result === \"object\") ? result : obj`\n>\n> 如果要手写一个`new`函数，可能是这样的：\n>\n> ```javascript\n> Function.prototype.new = function () {\n>   var obj = {};\n>   var result = this.call(obj);\n>   obj.__proto__ = this.prototype;\n>   return result && (typeof result === \"object\") ? result : obj;\n> }\n> ```\n\n### 3.2 构造函数当作普通函数使用\n\n毫无疑问，`this`指向全局对象`window`。*这种做法在程序中显然是不推荐的，但做题时要知道`this`指向谁。*\n\n```javascript\nvar name = \"var\";\nvar age = 123;\n\nfunction A() {\n  this.name = \"me\";\t// 这里把全局对象的name属性修改了\n  var age = 15;\n  console.log(this.name);\t// me\n  console.log(this.age);\t// 123\n}\n\nA();\n```\n\n### 3.3 构造函数返回值的情况\n\n一般情况下，构造函数是不需要显式返回值的，通过`new`执行构造函数的返回值是新生成的实例。\n\n但是，如果构造函数返回一个对象（包括空对象），`new`执行构造函数的返回值不再是新生成的实例，而是该对象。\n\n构造函数执行过程中，`this`依然试图指向构造函数的实例，虽然这个实例无法返回。\n\n```javascript\nfunction A() {\n  this.name = \"me\";\n  console.log(this.name);\t// me\n  console.log(this.age);\t// undefined\n  return {\n    age: 20\n  };\n}\n\nvar a = new A();\nconsole.log(a);\t// { age: 20 }\nconsole.log(a.name);\t// undefined\nconsole.log(a.age);\t// 20\n```\n\n如果构造函数返回的是基本类型、`undefined`、`null`时，`new`执行构造函数的返回值依然是新生成的实例。\n\n```javascript\nfunction A() {\n  this.name = \"me\";\n  console.log(this.name);\t// me\n  console.log(this.age);\t// undefined\n  return null;\n}\n\nvar a = new A();\nconsole.log(a);\t// A { name: 'me' }\nconsole.log(a.name);\t// me\nconsole.log(a.age);\t// undefined\n```\n\n## 4 `apply`、`call`、`bind`调用\n\n三者均可改变`this`的指向给第一个参数。区别在于：\n\n- `apply`的第二个参数为可迭代对象\n- `call`的参数不固定\n- `bind`除返回一个函数外，与`call`并无不同，它需要调用才可以执行，其他二者直接执行函数\n\n```javascript\nvar obj = {\n  age: 15,\n  fn(x, y) {\n    console.log(this.age + \" \" + x + \" \" + y);\n  }\n}\nvar obj2 = {\n  age: 20\n}\nobj.fn(1, 2);\t// 15 1 2\nobj.fn.apply(obj2, [3, 4]);\t// 20 3 4\nobj.fn.call(obj2, 5, 6);\t// 20 5 6\nobj.fn.call(obj2, [5, 6]);\t// 20 5,6 undefined\nobj.fn.bind(obj2, 7, 8)();\t// 20 7 8\n```\n\n注意以上示例12、13行的区别，第13行`[5, 6]`被当做一个参数传给形参`x`，形参`y`得到`undefined`。\n\n## 5 匿名函数调用\n\n匿名函数不属于任何对象，它的`this`一般指向全局对象。\n\n### 5.1 一般情况\n\n```javascript\nvar obj = {\n  fn() {\n    return function () {\n      console.log(this);\n    }\n  },\n  inner: {\n    fn() {\n      return function () {\n        console.log(this);\n      }\n    }\n  }\n}\nobj.fn()();\t// window对象\nobj.inner.fn()();\t// window对象\n```\n\n无论谁调用、无论如何调用，这里的匿名函数中的`this`指向全局对象`window`。\n\n### 5.2 定时器回调\n\n定时器回调函数中，`this`指向全局对象。因此如果需要改变定时器回调函数中`this`的指向，需要使用变量提前存储`this`的指向。\n\n```javascript\nvar age = 123;\nvar obj = {\n  age: 15,\n  fn() {\n    setTimeout(function () {\n      console.log(this.age);\n    }, 1000);\n  }\n}\nobj.fn();\t// 123\n```\n\n上述代码中，`this`指向全局对象`window`，因此输出全局变量`age`的值`123`。\n\n```javascript\nvar age = 123;\nvar obj = {\n  age: 15,\n  fn() {\n    var that = this;\n    setTimeout(function () {\n      console.log(that.age);\n    }, 1000);\n  }\n}\nobj.fn();\t// 15\n```\n\n上述代码中，使用`that`提前存储了`fn`中`this`的指向，而根据第2节的内容，调用`obj.fn()`时`fn`中的`this`指向`obj`，因此定时器回调函数中能输出`obj`的`age`属性值`15`。\n\n### 5.3 事件绑定\n\n注意，事件绑定时，`this`指向事件源。\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.onclick = function () {\n  console.log(this);\t// btn对象\n}\n```\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.addEventListener(\"click\", function () {\n  console.log(this);\t// btn对象\n});\n```\n\n如果要清除绑定事件，第一种方法可以通过`btn.onclick = null`实现，第二种方法可以调用`removeEventListener`方法。\n\n**但是！**如果下面这么做，移除是失败的。\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.addEventListener(\"click\", function () {\n  console.log(\"点击事件\");\n});\nbtn.removeEventListener(\"click\", function () {\n  console.log(\"点击事件\");\n});\n```\n\n创建的两个匿名函数是独立的，彼此没有关系，自然无法被移除。因此，使用`addEventListener`绑定事件时，建议传入具名的函数变量，而避免使用匿名函数。\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.addEventListener(\"click\", fn);\nbtn.removeEventListener(\"click\", fn);\n\nfunction fn() {\n  console.log(\"点击事件\");\n}\n```\n\n## 6 箭头函数\n\n箭头函数非常特殊，它没有自己的`this`，而是会寻找**定义**箭头函数的作用域中`this`的指向。\n\n箭头函数中的`this`在其定义时就已确定，与谁调用无关！\n\n```javascript\nsetTimeout(() => console.log(this), 1000);\t// window对象\n```\n\n这个没什么问题。\n\n```javascript\nvar obj = {\n  fn() {\n    return function () {\n      setTimeout(() => console.log(this), 1000);\n    }\n  }\n}\nobj.fn()();\t// window\n```\n\n`this`会寻找定义箭头函数的作用域（即`return`的匿名函数）中`this`的指向，因此指向`window`。\n\n```javascript\nvar obj = {\n  fn() {\n    return () => setTimeout(() => console.log(this), 1000);\n  }\n}\nobj.fn()();\t// obj\n```\n\n`this`会寻找定义箭头函数的作用域（即`return`的箭头函数）中`this`的指向，由于外层仍是箭头函数，继续向上寻找，直到找到`fn`作用域中的`this`且指向为`obj`。\n\n```javascript\nlet obj = {\n  name: \"me\"\n}\nfunction fn() {\n  console.log(this);\n  return () => console.log(this);\n}\nfn()();\t// window对象 window对象\nlet fn2 = fn.call(obj);\t// { name: 'me' }\nfn2();\t// { name: 'me' }\n```\n\n- 第8行，`fn`中的两个`this`都指向全局对象`window`，输出两次`window`对象。\n- 第9行，`fn`中的`this`被`call`改变指向，此时`this`指向`obj`，调用一次`fn`函数，输出`obj`即`{ name: 'me' }`\n- 第10行，`fn2`是一个箭头函数，在第9行中，它的`this`被改变指向为`obj`，因此此处输出`obj`即`{ name: 'me' }`\n\n*为什么第10行不是输出`window`对象？执行第10行时，定义箭头函数的`fn`作用域中的`this`应该指向`window`对象啊。*\n\n箭头函数只看它定义时，当前作用域的`this`指向什么。第6行，箭头函数是在`fn`函数体内被定义的，因此第9行执行后，在定义箭头函数时，先是把内部的`this`更改为`obj`，再返回给`fn2`。这样`fn2`调用时（无论如何调用），都输出`obj`对象。\n\n## 7 面试题解析\n\n### 7.1 字节跳动面试题\n\n解释以下代码的输出：\n\n```javascript\nvar name = \"bytedance\";\nfunction A() {\n  console.log(age);\n  this.name = 123;\n  var age = 2;\n  console.log(this.name)\n  console.log(this.age);\n}\nA.prototype.getA = function(){\n  console.log(this.name);\n  console.log(this);\n}\nlet a = new A();\nlet funA = a.getA;\nfunA();\n```\n\n输出为：\n\n```\nundefined\n123\nundefined\nbytedance\nObject [window]\n```\n\n- 第13行，`new`一个`A`的实例，程序开始执行`A()`\n- 第3行，由于第5行的变量声明`var age`被提升至**函数顶端**，因此此处**输出`undefined`**\n- 第6行，判断`this`指向的是`a`实例，此处**输出定义的`this.name`即123**\n- 第7行，由于`this`指向的`a`实例没有`name`属性，因此此处**输出`undefined`**\n- 第14行，将`a.getA`作为一个函数对象赋值给变量`funA`并在第15行直接调用，程序开始执行`getA()`\n- 第10行，判断`this`指向的是全局对象`window`，因此此处**输出全局对象的`name`属性**，而`var`定义的全局变量为全局对象的属性，即输出`\"bytedance\"`\n- 第11行，同上，此处**输出全局对象`window`**\n\n**扩展：**函数对象自带`name`属性，且值为本身的名称，如`A.name`返回`\"A\"`。\n\n## Reference\n\n1. [javascript中this的指向问题 - saucxs - 博客园](https://www.cnblogs.com/chengxs/p/8679313.html)\n2. [彻底理解js中this的指向，不必硬背。 - 追梦子 - 博客园](https://www.cnblogs.com/pssp/p/5216085.html)\n","source":"_posts/the-pointing-of-this-in-javascript.md","raw":"---\ntitle: JavaScript中this的指向问题\ndate: 2022-04-17 18:57:49\ncategories: JavaScirpt\ntags:\n  - 编程\n  - JavaScript\n  - 基础\n  - 面试\ncomments: true\n---\n\n面试常考题，很多初学者会被JavaScript中众多不同情况的`this`指向搞迷糊。本质上，`this`始终指向一个对象。\n\n<!--more-->\n\n## 0 太长不看版\n\n只要弄明白，`this`在函数中被使用，在定义时不确定指向，**调用时**才能确定指向（箭头函数除外），并始终**指向一个对象**，可以简单分为以下6种情况：\n\n1. **普通函数调用**，指向全局对象\n2. **对象方法调用**，谁调用指向谁，只看调用不看引用\n3. **构造函数调用**，指向新构造的实例，尽管可能不被构造函数返回\n4. **遇`apply`、`call`、`bind`**，改变指向\n5. **匿名函数调用**，一般指向全局对象\n6. **箭头函数调用**，指向定义箭头函数作用域的`this`\n\n## 1 普通函数调用\n\n普通函数调用时，`this`指向全局对象，在浏览器中，全局对象为`window`。看示例：\n\n### 1.1 `var`定义变量\n\n```javascript\nvar name = \"var\";\nfunction fn() {\n  var name = \"fn-var\";\n  console.log(this);\t// window对象\n  console.log(this.name);\t// var\n}\nfn();\n```\n\n`fn`作为普通函数被调用，`this`指向全局对象`window`。\n\n`var`定义的**全局变量**视为全局对象的属性，因此`this.name`输出全局对象`window`的`name`属性，即`\"var\"`。\n\n### 1.2 `let`定义变量\n\n```javascript\nlet name = \"let\";\nfunction fn() {\n  let name = \"fn-let\";\n  console.log(this);\t// window对象\n  console.log(this.name);\t// undefined\n}\nfn();\n```\n\n`let`定义的变量不会成为全局对象的属性，因此`this.name`即全局对象`window`的`name`属性不存在，输出`undefined`。\n\n### 1.3 全局对象属性\n\n```javascript\nwindow.name = \"win\";\nfunction fn() {\n  console.log(this);\t// window对象\n  console.log(this.name);\t// win\n}\nfn();\n```\n\n毫无疑问，`this.name`输出全局对象`window`的`name`属性，即`\"win\"`。\n\n## 2 对象方法调用\n\n函数作为对象方法被调用时，哪个对象调用，`this`就指向谁。\n\n如果函数变量被赋值给其他变量，依然是谁调用指向谁，而不考虑函数来源**（只看调用，不看引用）**。\n\n### 2.1 对象直接调用自有方法\n\n```javascript\nvar obj = {\n  age: 15,\n  fn() {\n    console.log(this.name);\t// undefined\n    console.log(this.age);\t// 15\n  }\n}\nobj.fn();\n```\n\n`obj`对象直接调用自有方法`fn`，`fn`中的`this`就指向调用它的`obj`对象。\n\n### 2.2 对象多层调用自有方法\n\n```javascript\nvar obj = {\n  age: 15,\n  inner: {\n    age: 20,\n    fn() {\n      console.log(this.age);\n    }\n  }\n}\nobj.inner.fn();\t// 20\n```\n\n尽管方法`fn`是被最外层对象`obj`间接调用，但`fn`中的`this`指向最近的上一层对象`inner`（即直接调用它的对象）。\n\n### 2.3 函数变量被赋值给其他对象的属性\n\n```javascript\nvar obj = {\n  age: 15,\n  fn() {\n    console.log(this.name);\n    console.log(this.age);\n  }\n}\nvar obj2 = {\n  name: \"obj2\",\n  age: 20\n}\nobj2.fn2 = obj.fn;\nobj2.fn2();\t// obj2 20\n```\n\n尽管方法`fn2`来源于对象`obj`的方法`fn`，但依然是**“谁调用指向谁”**，方法被`obj2`调用，`this`就指向`obj2`。\n\n### 2.4 原型方法\n\n```javascript\nvar obj = {\n  age: 15\n}\nvar obj2 = {\n  name: \"obj2\",\n  age: 20\n}\nObject.prototype.getAge = function () {\n  console.log(this.age);\n}\nobj.getAge();\t// 15\nobj2.getAge();\t// 20\n```\n\n这个就很好理解了~虽然`getAge`是原型对象`Object.prototype`的方法，但实例`obj`和`obj2`进行了调用，方法中的`this`就指向它们。\n\n实际上，这就是原型方法的特点之一：**全体实例的可复用方法**。\n\n### 2.5 函数变量被赋值给普通变量\n\n```javascript\nvar name = \"var\";\nvar age = 123;\nvar obj = {\n  age: 15,\n  getName() {\n    console.log(this.name);\n  }\n}\nvar obj2 = {\n  name: \"obj2\",\n  age: 20\n}\nObject.prototype.getAge = function () {\n  console.log(this.age);\n}\nvar fn1 = obj.getName;\nlet fn2 = obj2.getAge;\nfn1();\t// var\nfn2();\t// 123\n```\n\n这时，`fn1`和`fn2`实际上是作为普通函数调用，根据**“谁调用指向谁”**的原则，它们当中的`this`指向全局对象`window`，输出全局对象的属性值`\"var\"`和`123`。\n\n总结：无论嵌套几层，无论如何赋值，无论函数来源，谁调用了函数/方法，`this`就指向谁。\n\n## 3 构造函数调用\n\n一般情况下，`this`指向构造函数`new`出来的对象。\n\n### 3.1 一般情况\n\n```javascript\nfunction A() {\n  this.name = \"me\";\n  var age = 15;\n  console.log(this.name);\t// me\n  console.log(this.age);\t// undefined\n}\n\nvar a = new A();\nconsole.log(a);\t// A { name: 'me' }\nconsole.log(a.name);\t// me\nconsole.log(a.age);\t// undefined\n```\n\n这也是最常见的过程，类似于定义对象的自有属性。\n\n> 面试常考题：通过`new`创建构造函数的一个实例时，发生了什么？\n>\n> 以`var a = new A()`为例：\n>\n> 1. 创建一个空对象：`var obj = {}`\n> 2. 让构造器函数`A`的`this`指向对象`obj`，并执行`A`中的函数体：`var result = A.call(obj)`\n> 3. 设置原型链，让对象`obj`的`__proto__`属性指向构造器函数`A`的原型对象：`obj.__proto__ = A.prototype`\n> 4. 判断构造器函数`A`的返回类型，如果是值类型，结果返回`obj`，如果是引用类型（`null`除外），返回引用类型的对象：`a = result && (typeof result === \"object\") ? result : obj`\n>\n> 如果要手写一个`new`函数，可能是这样的：\n>\n> ```javascript\n> Function.prototype.new = function () {\n>   var obj = {};\n>   var result = this.call(obj);\n>   obj.__proto__ = this.prototype;\n>   return result && (typeof result === \"object\") ? result : obj;\n> }\n> ```\n\n### 3.2 构造函数当作普通函数使用\n\n毫无疑问，`this`指向全局对象`window`。*这种做法在程序中显然是不推荐的，但做题时要知道`this`指向谁。*\n\n```javascript\nvar name = \"var\";\nvar age = 123;\n\nfunction A() {\n  this.name = \"me\";\t// 这里把全局对象的name属性修改了\n  var age = 15;\n  console.log(this.name);\t// me\n  console.log(this.age);\t// 123\n}\n\nA();\n```\n\n### 3.3 构造函数返回值的情况\n\n一般情况下，构造函数是不需要显式返回值的，通过`new`执行构造函数的返回值是新生成的实例。\n\n但是，如果构造函数返回一个对象（包括空对象），`new`执行构造函数的返回值不再是新生成的实例，而是该对象。\n\n构造函数执行过程中，`this`依然试图指向构造函数的实例，虽然这个实例无法返回。\n\n```javascript\nfunction A() {\n  this.name = \"me\";\n  console.log(this.name);\t// me\n  console.log(this.age);\t// undefined\n  return {\n    age: 20\n  };\n}\n\nvar a = new A();\nconsole.log(a);\t// { age: 20 }\nconsole.log(a.name);\t// undefined\nconsole.log(a.age);\t// 20\n```\n\n如果构造函数返回的是基本类型、`undefined`、`null`时，`new`执行构造函数的返回值依然是新生成的实例。\n\n```javascript\nfunction A() {\n  this.name = \"me\";\n  console.log(this.name);\t// me\n  console.log(this.age);\t// undefined\n  return null;\n}\n\nvar a = new A();\nconsole.log(a);\t// A { name: 'me' }\nconsole.log(a.name);\t// me\nconsole.log(a.age);\t// undefined\n```\n\n## 4 `apply`、`call`、`bind`调用\n\n三者均可改变`this`的指向给第一个参数。区别在于：\n\n- `apply`的第二个参数为可迭代对象\n- `call`的参数不固定\n- `bind`除返回一个函数外，与`call`并无不同，它需要调用才可以执行，其他二者直接执行函数\n\n```javascript\nvar obj = {\n  age: 15,\n  fn(x, y) {\n    console.log(this.age + \" \" + x + \" \" + y);\n  }\n}\nvar obj2 = {\n  age: 20\n}\nobj.fn(1, 2);\t// 15 1 2\nobj.fn.apply(obj2, [3, 4]);\t// 20 3 4\nobj.fn.call(obj2, 5, 6);\t// 20 5 6\nobj.fn.call(obj2, [5, 6]);\t// 20 5,6 undefined\nobj.fn.bind(obj2, 7, 8)();\t// 20 7 8\n```\n\n注意以上示例12、13行的区别，第13行`[5, 6]`被当做一个参数传给形参`x`，形参`y`得到`undefined`。\n\n## 5 匿名函数调用\n\n匿名函数不属于任何对象，它的`this`一般指向全局对象。\n\n### 5.1 一般情况\n\n```javascript\nvar obj = {\n  fn() {\n    return function () {\n      console.log(this);\n    }\n  },\n  inner: {\n    fn() {\n      return function () {\n        console.log(this);\n      }\n    }\n  }\n}\nobj.fn()();\t// window对象\nobj.inner.fn()();\t// window对象\n```\n\n无论谁调用、无论如何调用，这里的匿名函数中的`this`指向全局对象`window`。\n\n### 5.2 定时器回调\n\n定时器回调函数中，`this`指向全局对象。因此如果需要改变定时器回调函数中`this`的指向，需要使用变量提前存储`this`的指向。\n\n```javascript\nvar age = 123;\nvar obj = {\n  age: 15,\n  fn() {\n    setTimeout(function () {\n      console.log(this.age);\n    }, 1000);\n  }\n}\nobj.fn();\t// 123\n```\n\n上述代码中，`this`指向全局对象`window`，因此输出全局变量`age`的值`123`。\n\n```javascript\nvar age = 123;\nvar obj = {\n  age: 15,\n  fn() {\n    var that = this;\n    setTimeout(function () {\n      console.log(that.age);\n    }, 1000);\n  }\n}\nobj.fn();\t// 15\n```\n\n上述代码中，使用`that`提前存储了`fn`中`this`的指向，而根据第2节的内容，调用`obj.fn()`时`fn`中的`this`指向`obj`，因此定时器回调函数中能输出`obj`的`age`属性值`15`。\n\n### 5.3 事件绑定\n\n注意，事件绑定时，`this`指向事件源。\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.onclick = function () {\n  console.log(this);\t// btn对象\n}\n```\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.addEventListener(\"click\", function () {\n  console.log(this);\t// btn对象\n});\n```\n\n如果要清除绑定事件，第一种方法可以通过`btn.onclick = null`实现，第二种方法可以调用`removeEventListener`方法。\n\n**但是！**如果下面这么做，移除是失败的。\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.addEventListener(\"click\", function () {\n  console.log(\"点击事件\");\n});\nbtn.removeEventListener(\"click\", function () {\n  console.log(\"点击事件\");\n});\n```\n\n创建的两个匿名函数是独立的，彼此没有关系，自然无法被移除。因此，使用`addEventListener`绑定事件时，建议传入具名的函数变量，而避免使用匿名函数。\n\n```javascript\nconst btn = document.getElementById(\"btn\");\nbtn.addEventListener(\"click\", fn);\nbtn.removeEventListener(\"click\", fn);\n\nfunction fn() {\n  console.log(\"点击事件\");\n}\n```\n\n## 6 箭头函数\n\n箭头函数非常特殊，它没有自己的`this`，而是会寻找**定义**箭头函数的作用域中`this`的指向。\n\n箭头函数中的`this`在其定义时就已确定，与谁调用无关！\n\n```javascript\nsetTimeout(() => console.log(this), 1000);\t// window对象\n```\n\n这个没什么问题。\n\n```javascript\nvar obj = {\n  fn() {\n    return function () {\n      setTimeout(() => console.log(this), 1000);\n    }\n  }\n}\nobj.fn()();\t// window\n```\n\n`this`会寻找定义箭头函数的作用域（即`return`的匿名函数）中`this`的指向，因此指向`window`。\n\n```javascript\nvar obj = {\n  fn() {\n    return () => setTimeout(() => console.log(this), 1000);\n  }\n}\nobj.fn()();\t// obj\n```\n\n`this`会寻找定义箭头函数的作用域（即`return`的箭头函数）中`this`的指向，由于外层仍是箭头函数，继续向上寻找，直到找到`fn`作用域中的`this`且指向为`obj`。\n\n```javascript\nlet obj = {\n  name: \"me\"\n}\nfunction fn() {\n  console.log(this);\n  return () => console.log(this);\n}\nfn()();\t// window对象 window对象\nlet fn2 = fn.call(obj);\t// { name: 'me' }\nfn2();\t// { name: 'me' }\n```\n\n- 第8行，`fn`中的两个`this`都指向全局对象`window`，输出两次`window`对象。\n- 第9行，`fn`中的`this`被`call`改变指向，此时`this`指向`obj`，调用一次`fn`函数，输出`obj`即`{ name: 'me' }`\n- 第10行，`fn2`是一个箭头函数，在第9行中，它的`this`被改变指向为`obj`，因此此处输出`obj`即`{ name: 'me' }`\n\n*为什么第10行不是输出`window`对象？执行第10行时，定义箭头函数的`fn`作用域中的`this`应该指向`window`对象啊。*\n\n箭头函数只看它定义时，当前作用域的`this`指向什么。第6行，箭头函数是在`fn`函数体内被定义的，因此第9行执行后，在定义箭头函数时，先是把内部的`this`更改为`obj`，再返回给`fn2`。这样`fn2`调用时（无论如何调用），都输出`obj`对象。\n\n## 7 面试题解析\n\n### 7.1 字节跳动面试题\n\n解释以下代码的输出：\n\n```javascript\nvar name = \"bytedance\";\nfunction A() {\n  console.log(age);\n  this.name = 123;\n  var age = 2;\n  console.log(this.name)\n  console.log(this.age);\n}\nA.prototype.getA = function(){\n  console.log(this.name);\n  console.log(this);\n}\nlet a = new A();\nlet funA = a.getA;\nfunA();\n```\n\n输出为：\n\n```\nundefined\n123\nundefined\nbytedance\nObject [window]\n```\n\n- 第13行，`new`一个`A`的实例，程序开始执行`A()`\n- 第3行，由于第5行的变量声明`var age`被提升至**函数顶端**，因此此处**输出`undefined`**\n- 第6行，判断`this`指向的是`a`实例，此处**输出定义的`this.name`即123**\n- 第7行，由于`this`指向的`a`实例没有`name`属性，因此此处**输出`undefined`**\n- 第14行，将`a.getA`作为一个函数对象赋值给变量`funA`并在第15行直接调用，程序开始执行`getA()`\n- 第10行，判断`this`指向的是全局对象`window`，因此此处**输出全局对象的`name`属性**，而`var`定义的全局变量为全局对象的属性，即输出`\"bytedance\"`\n- 第11行，同上，此处**输出全局对象`window`**\n\n**扩展：**函数对象自带`name`属性，且值为本身的名称，如`A.name`返回`\"A\"`。\n\n## Reference\n\n1. [javascript中this的指向问题 - saucxs - 博客园](https://www.cnblogs.com/chengxs/p/8679313.html)\n2. [彻底理解js中this的指向，不必硬背。 - 追梦子 - 博客园](https://www.cnblogs.com/pssp/p/5216085.html)\n","slug":"the-pointing-of-this-in-javascript","published":1,"updated":"2022-04-17T11:15:08.094Z","_id":"cl236un0q0000ygvieaakhgcf","layout":"post","photos":[],"link":"","content":"<p>面试常考题，很多初学者会被JavaScript中众多不同情况的<code>this</code>指向搞迷糊。本质上，<code>this</code>始终指向一个对象。</p>\n<span id=\"more\"></span>\n<h2 id=\"0-太长不看版\"><a href=\"#0-太长不看版\" class=\"headerlink\" title=\"0 太长不看版\"></a>0 太长不看版</h2><p>只要弄明白，<code>this</code>在函数中被使用，在定义时不确定指向，<strong>调用时</strong>才能确定指向（箭头函数除外），并始终<strong>指向一个对象</strong>，可以简单分为以下6种情况：</p>\n<ol>\n<li><strong>普通函数调用</strong>，指向全局对象</li>\n<li><strong>对象方法调用</strong>，谁调用指向谁，只看调用不看引用</li>\n<li><strong>构造函数调用</strong>，指向新构造的实例，尽管可能不被构造函数返回</li>\n<li><strong>遇<code>apply</code>、<code>call</code>、<code>bind</code></strong>，改变指向</li>\n<li><strong>匿名函数调用</strong>，一般指向全局对象</li>\n<li><strong>箭头函数调用</strong>，指向定义箭头函数作用域的<code>this</code></li>\n</ol>\n<h2 id=\"1-普通函数调用\"><a href=\"#1-普通函数调用\" class=\"headerlink\" title=\"1 普通函数调用\"></a>1 普通函数调用</h2><p>普通函数调用时，<code>this</code>指向全局对象，在浏览器中，全局对象为<code>window</code>。看示例：</p>\n<h3 id=\"1-1-var定义变量\"><a href=\"#1-1-var定义变量\" class=\"headerlink\" title=\"1.1 var定义变量\"></a>1.1 <code>var</code>定义变量</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">&quot;fn-var&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// var</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();</span><br></pre></td></tr></table></figure>\n<p><code>fn</code>作为普通函数被调用，<code>this</code>指向全局对象<code>window</code>。</p>\n<p><code>var</code>定义的<strong>全局变量</strong>视为全局对象的属性，因此<code>this.name</code>输出全局对象<code>window</code>的<code>name</code>属性，即<code>&quot;var&quot;</code>。</p>\n<h3 id=\"1-2-let定义变量\"><a href=\"#1-2-let定义变量\" class=\"headerlink\" title=\"1.2 let定义变量\"></a>1.2 <code>let</code>定义变量</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">&quot;let&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">&quot;fn-let&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();</span><br></pre></td></tr></table></figure>\n<p><code>let</code>定义的变量不会成为全局对象的属性，因此<code>this.name</code>即全局对象<code>window</code>的<code>name</code>属性不存在，输出<code>undefined</code>。</p>\n<h3 id=\"1-3-全局对象属性\"><a href=\"#1-3-全局对象属性\" class=\"headerlink\" title=\"1.3 全局对象属性\"></a>1.3 全局对象属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.name = <span class=\"string\">&quot;win&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// win</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();</span><br></pre></td></tr></table></figure>\n<p>毫无疑问，<code>this.name</code>输出全局对象<code>window</code>的<code>name</code>属性，即<code>&quot;win&quot;</code>。</p>\n<h2 id=\"2-对象方法调用\"><a href=\"#2-对象方法调用\" class=\"headerlink\" title=\"2 对象方法调用\"></a>2 对象方法调用</h2><p>函数作为对象方法被调用时，哪个对象调用，<code>this</code>就指向谁。</p>\n<p>如果函数变量被赋值给其他变量，依然是谁调用指向谁，而不考虑函数来源<strong>（只看调用，不看引用）</strong>。</p>\n<h3 id=\"2-1-对象直接调用自有方法\"><a href=\"#2-1-对象直接调用自有方法\" class=\"headerlink\" title=\"2.1 对象直接调用自有方法\"></a>2.1 对象直接调用自有方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// 15</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn();</span><br></pre></td></tr></table></figure>\n<p><code>obj</code>对象直接调用自有方法<code>fn</code>，<code>fn</code>中的<code>this</code>就指向调用它的<code>obj</code>对象。</p>\n<h3 id=\"2-2-对象多层调用自有方法\"><a href=\"#2-2-对象多层调用自有方法\" class=\"headerlink\" title=\"2.2 对象多层调用自有方法\"></a>2.2 对象多层调用自有方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"attr\">inner</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.inner.fn();\t<span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<p>尽管方法<code>fn</code>是被最外层对象<code>obj</code>间接调用，但<code>fn</code>中的<code>this</code>指向最近的上一层对象<code>inner</code>（即直接调用它的对象）。</p>\n<h3 id=\"2-3-函数变量被赋值给其他对象的属性\"><a href=\"#2-3-函数变量被赋值给其他对象的属性\" class=\"headerlink\" title=\"2.3 函数变量被赋值给其他对象的属性\"></a>2.3 函数变量被赋值给其他对象的属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;obj2&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj2.fn2 = obj.fn;</span><br><span class=\"line\">obj2.fn2();\t<span class=\"comment\">// obj2 20</span></span><br></pre></td></tr></table></figure>\n<p>尽管方法<code>fn2</code>来源于对象<code>obj</code>的方法<code>fn</code>，但依然是<strong>“谁调用指向谁”</strong>，方法被<code>obj2</code>调用，<code>this</code>就指向<code>obj2</code>。</p>\n<h3 id=\"2-4-原型方法\"><a href=\"#2-4-原型方法\" class=\"headerlink\" title=\"2.4 原型方法\"></a>2.4 原型方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;obj2&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.getAge = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.getAge();\t<span class=\"comment\">// 15</span></span><br><span class=\"line\">obj2.getAge();\t<span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<p>这个就很好理解了~虽然<code>getAge</code>是原型对象<code>Object.prototype</code>的方法，但实例<code>obj</code>和<code>obj2</code>进行了调用，方法中的<code>this</code>就指向它们。</p>\n<p>实际上，这就是原型方法的特点之一：<strong>全体实例的可复用方法</strong>。</p>\n<h3 id=\"2-5-函数变量被赋值给普通变量\"><a href=\"#2-5-函数变量被赋值给普通变量\" class=\"headerlink\" title=\"2.5 函数变量被赋值给普通变量\"></a>2.5 函数变量被赋值给普通变量</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getName</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;obj2&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.getAge = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fn1 = obj.getName;</span><br><span class=\"line\"><span class=\"keyword\">let</span> fn2 = obj2.getAge;</span><br><span class=\"line\">fn1();\t<span class=\"comment\">// var</span></span><br><span class=\"line\">fn2();\t<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure>\n<p>这时，<code>fn1</code>和<code>fn2</code>实际上是作为普通函数调用，根据<strong>“谁调用指向谁”</strong>的原则，它们当中的<code>this</code>指向全局对象<code>window</code>，输出全局对象的属性值<code>&quot;var&quot;</code>和<code>123</code>。</p>\n<p>总结：无论嵌套几层，无论如何赋值，无论函数来源，谁调用了函数/方法，<code>this</code>就指向谁。</p>\n<h2 id=\"3-构造函数调用\"><a href=\"#3-构造函数调用\" class=\"headerlink\" title=\"3 构造函数调用\"></a>3 构造函数调用</h2><p>一般情况下，<code>this</code>指向构造函数<code>new</code>出来的对象。</p>\n<h3 id=\"3-1-一般情况\"><a href=\"#3-1-一般情况\" class=\"headerlink\" title=\"3.1 一般情况\"></a>3.1 一般情况</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">15</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// A &#123; name: &#x27;me&#x27; &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.age);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<p>这也是最常见的过程，类似于定义对象的自有属性。</p>\n<blockquote>\n<p>面试常考题：通过<code>new</code>创建构造函数的一个实例时，发生了什么？</p>\n<p>以<code>var a = new A()</code>为例：</p>\n<ol>\n<li>创建一个空对象：<code>var obj = &#123;&#125;</code></li>\n<li>让构造器函数<code>A</code>的<code>this</code>指向对象<code>obj</code>，并执行<code>A</code>中的函数体：<code>var result = A.call(obj)</code></li>\n<li>设置原型链，让对象<code>obj</code>的<code>__proto__</code>属性指向构造器函数<code>A</code>的原型对象：<code>obj.__proto__ = A.prototype</code></li>\n<li>判断构造器函数<code>A</code>的返回类型，如果是值类型，结果返回<code>obj</code>，如果是引用类型（<code>null</code>除外），返回引用类型的对象：<code>a = result &amp;&amp; (typeof result === &quot;object&quot;) ? result : obj</code></li>\n</ol>\n<p>如果要手写一个<code>new</code>函数，可能是这样的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.new = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"built_in\">this</span>.call(obj);</span><br><span class=\"line\">  obj.__proto__ = <span class=\"built_in\">this</span>.prototype;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result &amp;&amp; (<span class=\"keyword\">typeof</span> result === <span class=\"string\">&quot;object&quot;</span>) ? result : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"3-2-构造函数当作普通函数使用\"><a href=\"#3-2-构造函数当作普通函数使用\" class=\"headerlink\" title=\"3.2 构造函数当作普通函数使用\"></a>3.2 构造函数当作普通函数使用</h3><p>毫无疑问，<code>this</code>指向全局对象<code>window</code>。<em>这种做法在程序中显然是不推荐的，但做题时要知道<code>this</code>指向谁。</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;\t<span class=\"comment\">// 这里把全局对象的name属性修改了</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">15</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// 123</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">A();</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-构造函数返回值的情况\"><a href=\"#3-3-构造函数返回值的情况\" class=\"headerlink\" title=\"3.3 构造函数返回值的情况\"></a>3.3 构造函数返回值的情况</h3><p>一般情况下，构造函数是不需要显式返回值的，通过<code>new</code>执行构造函数的返回值是新生成的实例。</p>\n<p>但是，如果构造函数返回一个对象（包括空对象），<code>new</code>执行构造函数的返回值不再是新生成的实例，而是该对象。</p>\n<p>构造函数执行过程中，<code>this</code>依然试图指向构造函数的实例，虽然这个实例无法返回。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// &#123; age: 20 &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.name);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.age);\t<span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<p>如果构造函数返回的是基本类型、<code>undefined</code>、<code>null</code>时，<code>new</code>执行构造函数的返回值依然是新生成的实例。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// A &#123; name: &#x27;me&#x27; &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.age);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-apply、call、bind调用\"><a href=\"#4-apply、call、bind调用\" class=\"headerlink\" title=\"4 apply、call、bind调用\"></a>4 <code>apply</code>、<code>call</code>、<code>bind</code>调用</h2><p>三者均可改变<code>this</code>的指向给第一个参数。区别在于：</p>\n<ul>\n<li><code>apply</code>的第二个参数为可迭代对象</li>\n<li><code>call</code>的参数不固定</li>\n<li><code>bind</code>除返回一个函数外，与<code>call</code>并无不同，它需要调用才可以执行，其他二者直接执行函数</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\">x, y</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age + <span class=\"string\">&quot; &quot;</span> + x + <span class=\"string\">&quot; &quot;</span> + y);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn(<span class=\"number\">1</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// 15 1 2</span></span><br><span class=\"line\">obj.fn.apply(obj2, [<span class=\"number\">3</span>, <span class=\"number\">4</span>]);\t<span class=\"comment\">// 20 3 4</span></span><br><span class=\"line\">obj.fn.call(obj2, <span class=\"number\">5</span>, <span class=\"number\">6</span>);\t<span class=\"comment\">// 20 5 6</span></span><br><span class=\"line\">obj.fn.call(obj2, [<span class=\"number\">5</span>, <span class=\"number\">6</span>]);\t<span class=\"comment\">// 20 5,6 undefined</span></span><br><span class=\"line\">obj.fn.bind(obj2, <span class=\"number\">7</span>, <span class=\"number\">8</span>)();\t<span class=\"comment\">// 20 7 8</span></span><br></pre></td></tr></table></figure>\n<p>注意以上示例12、13行的区别，第13行<code>[5, 6]</code>被当做一个参数传给形参<code>x</code>，形参<code>y</code>得到<code>undefined</code>。</p>\n<h2 id=\"5-匿名函数调用\"><a href=\"#5-匿名函数调用\" class=\"headerlink\" title=\"5 匿名函数调用\"></a>5 匿名函数调用</h2><p>匿名函数不属于任何对象，它的<code>this</code>一般指向全局对象。</p>\n<h3 id=\"5-1-一般情况\"><a href=\"#5-1-一般情况\" class=\"headerlink\" title=\"5.1 一般情况\"></a>5.1 一般情况</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">inner</span>: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn()();\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">obj.inner.fn()();\t<span class=\"comment\">// window对象</span></span><br></pre></td></tr></table></figure>\n<p>无论谁调用、无论如何调用，这里的匿名函数中的<code>this</code>指向全局对象<code>window</code>。</p>\n<h3 id=\"5-2-定时器回调\"><a href=\"#5-2-定时器回调\" class=\"headerlink\" title=\"5.2 定时器回调\"></a>5.2 定时器回调</h3><p>定时器回调函数中，<code>this</code>指向全局对象。因此如果需要改变定时器回调函数中<code>this</code>的指向，需要使用变量提前存储<code>this</code>的指向。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn();\t<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure>\n<p>上述代码中，<code>this</code>指向全局对象<code>window</code>，因此输出全局变量<code>age</code>的值<code>123</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(that.age);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn();\t<span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<p>上述代码中，使用<code>that</code>提前存储了<code>fn</code>中<code>this</code>的指向，而根据第2节的内容，调用<code>obj.fn()</code>时<code>fn</code>中的<code>this</code>指向<code>obj</code>，因此定时器回调函数中能输出<code>obj</code>的<code>age</code>属性值<code>15</code>。</p>\n<h3 id=\"5-3-事件绑定\"><a href=\"#5-3-事件绑定\" class=\"headerlink\" title=\"5.3 事件绑定\"></a>5.3 事件绑定</h3><p>注意，事件绑定时，<code>this</code>指向事件源。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// btn对象</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// btn对象</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果要清除绑定事件，第一种方法可以通过<code>btn.onclick = null</code>实现，第二种方法可以调用<code>removeEventListener</code>方法。</p>\n<p><strong>但是！</strong>如果下面这么做，移除是失败的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;点击事件&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">btn.removeEventListener(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;点击事件&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>创建的两个匿名函数是独立的，彼此没有关系，自然无法被移除。因此，使用<code>addEventListener</code>绑定事件时，建议传入具名的函数变量，而避免使用匿名函数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">&quot;click&quot;</span>, fn);</span><br><span class=\"line\">btn.removeEventListener(<span class=\"string\">&quot;click&quot;</span>, fn);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;点击事件&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-箭头函数\"><a href=\"#6-箭头函数\" class=\"headerlink\" title=\"6 箭头函数\"></a>6 箭头函数</h2><p>箭头函数非常特殊，它没有自己的<code>this</code>，而是会寻找<strong>定义</strong>箭头函数的作用域中<code>this</code>的指向。</p>\n<p>箭头函数中的<code>this</code>在其定义时就已确定，与谁调用无关！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>), <span class=\"number\">1000</span>);\t<span class=\"comment\">// window对象</span></span><br></pre></td></tr></table></figure>\n<p>这个没什么问题。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>), <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn()();\t<span class=\"comment\">// window</span></span><br></pre></td></tr></table></figure>\n<p><code>this</code>会寻找定义箭头函数的作用域（即<code>return</code>的匿名函数）中<code>this</code>的指向，因此指向<code>window</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>), <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn()();\t<span class=\"comment\">// obj</span></span><br></pre></td></tr></table></figure>\n<p><code>this</code>会寻找定义箭头函数的作用域（即<code>return</code>的箭头函数）中<code>this</code>的指向，由于外层仍是箭头函数，继续向上寻找，直到找到<code>fn</code>作用域中的<code>this</code>且指向为<code>obj</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;me&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn()();\t<span class=\"comment\">// window对象 window对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fn2 = fn.call(obj);\t<span class=\"comment\">// &#123; name: &#x27;me&#x27; &#125;</span></span><br><span class=\"line\">fn2();\t<span class=\"comment\">// &#123; name: &#x27;me&#x27; &#125;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>第8行，<code>fn</code>中的两个<code>this</code>都指向全局对象<code>window</code>，输出两次<code>window</code>对象。</li>\n<li>第9行，<code>fn</code>中的<code>this</code>被<code>call</code>改变指向，此时<code>this</code>指向<code>obj</code>，调用一次<code>fn</code>函数，输出<code>obj</code>即<code>&#123; name: &#39;me&#39; &#125;</code></li>\n<li>第10行，<code>fn2</code>是一个箭头函数，在第9行中，它的<code>this</code>被改变指向为<code>obj</code>，因此此处输出<code>obj</code>即<code>&#123; name: &#39;me&#39; &#125;</code></li>\n</ul>\n<p><em>为什么第10行不是输出<code>window</code>对象？执行第10行时，定义箭头函数的<code>fn</code>作用域中的<code>this</code>应该指向<code>window</code>对象啊。</em></p>\n<p>箭头函数只看它定义时，当前作用域的<code>this</code>指向什么。第6行，箭头函数是在<code>fn</code>函数体内被定义的，因此第9行执行后，在定义箭头函数时，先是把内部的<code>this</code>更改为<code>obj</code>，再返回给<code>fn2</code>。这样<code>fn2</code>调用时（无论如何调用），都输出<code>obj</code>对象。</p>\n<h2 id=\"7-面试题解析\"><a href=\"#7-面试题解析\" class=\"headerlink\" title=\"7 面试题解析\"></a>7 面试题解析</h2><h3 id=\"7-1-字节跳动面试题\"><a href=\"#7-1-字节跳动面试题\" class=\"headerlink\" title=\"7.1 字节跳动面试题\"></a>7.1 字节跳动面试题</h3><p>解释以下代码的输出：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;bytedance&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(age);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name)</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">A.prototype.getA = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"keyword\">let</span> funA = a.getA;</span><br><span class=\"line\">funA();</span><br></pre></td></tr></table></figure>\n<p>输出为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">undefined</span><br><span class=\"line\">123</span><br><span class=\"line\">undefined</span><br><span class=\"line\">bytedance</span><br><span class=\"line\">Object [window]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第13行，<code>new</code>一个<code>A</code>的实例，程序开始执行<code>A()</code></li>\n<li>第3行，由于第5行的变量声明<code>var age</code>被提升至<strong>函数顶端</strong>，因此此处<strong>输出<code>undefined</code></strong></li>\n<li>第6行，判断<code>this</code>指向的是<code>a</code>实例，此处<strong>输出定义的<code>this.name</code>即123</strong></li>\n<li>第7行，由于<code>this</code>指向的<code>a</code>实例没有<code>name</code>属性，因此此处<strong>输出<code>undefined</code></strong></li>\n<li>第14行，将<code>a.getA</code>作为一个函数对象赋值给变量<code>funA</code>并在第15行直接调用，程序开始执行<code>getA()</code></li>\n<li>第10行，判断<code>this</code>指向的是全局对象<code>window</code>，因此此处<strong>输出全局对象的<code>name</code>属性</strong>，而<code>var</code>定义的全局变量为全局对象的属性，即输出<code>&quot;bytedance&quot;</code></li>\n<li>第11行，同上，此处<strong>输出全局对象<code>window</code></strong></li>\n</ul>\n<p><strong>扩展：</strong>函数对象自带<code>name</code>属性，且值为本身的名称，如<code>A.name</code>返回<code>&quot;A&quot;</code>。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ol>\n<li><a href=\"https://www.cnblogs.com/chengxs/p/8679313.html\">javascript中this的指向问题 - saucxs - 博客园</a></li>\n<li><a href=\"https://www.cnblogs.com/pssp/p/5216085.html\">彻底理解js中this的指向，不必硬背。 - 追梦子 - 博客园</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>面试常考题，很多初学者会被JavaScript中众多不同情况的<code>this</code>指向搞迷糊。本质上，<code>this</code>始终指向一个对象。</p>","more":"<h2 id=\"0-太长不看版\"><a href=\"#0-太长不看版\" class=\"headerlink\" title=\"0 太长不看版\"></a>0 太长不看版</h2><p>只要弄明白，<code>this</code>在函数中被使用，在定义时不确定指向，<strong>调用时</strong>才能确定指向（箭头函数除外），并始终<strong>指向一个对象</strong>，可以简单分为以下6种情况：</p>\n<ol>\n<li><strong>普通函数调用</strong>，指向全局对象</li>\n<li><strong>对象方法调用</strong>，谁调用指向谁，只看调用不看引用</li>\n<li><strong>构造函数调用</strong>，指向新构造的实例，尽管可能不被构造函数返回</li>\n<li><strong>遇<code>apply</code>、<code>call</code>、<code>bind</code></strong>，改变指向</li>\n<li><strong>匿名函数调用</strong>，一般指向全局对象</li>\n<li><strong>箭头函数调用</strong>，指向定义箭头函数作用域的<code>this</code></li>\n</ol>\n<h2 id=\"1-普通函数调用\"><a href=\"#1-普通函数调用\" class=\"headerlink\" title=\"1 普通函数调用\"></a>1 普通函数调用</h2><p>普通函数调用时，<code>this</code>指向全局对象，在浏览器中，全局对象为<code>window</code>。看示例：</p>\n<h3 id=\"1-1-var定义变量\"><a href=\"#1-1-var定义变量\" class=\"headerlink\" title=\"1.1 var定义变量\"></a>1.1 <code>var</code>定义变量</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">&quot;fn-var&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// var</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();</span><br></pre></td></tr></table></figure>\n<p><code>fn</code>作为普通函数被调用，<code>this</code>指向全局对象<code>window</code>。</p>\n<p><code>var</code>定义的<strong>全局变量</strong>视为全局对象的属性，因此<code>this.name</code>输出全局对象<code>window</code>的<code>name</code>属性，即<code>&quot;var&quot;</code>。</p>\n<h3 id=\"1-2-let定义变量\"><a href=\"#1-2-let定义变量\" class=\"headerlink\" title=\"1.2 let定义变量\"></a>1.2 <code>let</code>定义变量</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">&quot;let&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">&quot;fn-let&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();</span><br></pre></td></tr></table></figure>\n<p><code>let</code>定义的变量不会成为全局对象的属性，因此<code>this.name</code>即全局对象<code>window</code>的<code>name</code>属性不存在，输出<code>undefined</code>。</p>\n<h3 id=\"1-3-全局对象属性\"><a href=\"#1-3-全局对象属性\" class=\"headerlink\" title=\"1.3 全局对象属性\"></a>1.3 全局对象属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.name = <span class=\"string\">&quot;win&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// win</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();</span><br></pre></td></tr></table></figure>\n<p>毫无疑问，<code>this.name</code>输出全局对象<code>window</code>的<code>name</code>属性，即<code>&quot;win&quot;</code>。</p>\n<h2 id=\"2-对象方法调用\"><a href=\"#2-对象方法调用\" class=\"headerlink\" title=\"2 对象方法调用\"></a>2 对象方法调用</h2><p>函数作为对象方法被调用时，哪个对象调用，<code>this</code>就指向谁。</p>\n<p>如果函数变量被赋值给其他变量，依然是谁调用指向谁，而不考虑函数来源<strong>（只看调用，不看引用）</strong>。</p>\n<h3 id=\"2-1-对象直接调用自有方法\"><a href=\"#2-1-对象直接调用自有方法\" class=\"headerlink\" title=\"2.1 对象直接调用自有方法\"></a>2.1 对象直接调用自有方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// 15</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn();</span><br></pre></td></tr></table></figure>\n<p><code>obj</code>对象直接调用自有方法<code>fn</code>，<code>fn</code>中的<code>this</code>就指向调用它的<code>obj</code>对象。</p>\n<h3 id=\"2-2-对象多层调用自有方法\"><a href=\"#2-2-对象多层调用自有方法\" class=\"headerlink\" title=\"2.2 对象多层调用自有方法\"></a>2.2 对象多层调用自有方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"attr\">inner</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.inner.fn();\t<span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<p>尽管方法<code>fn</code>是被最外层对象<code>obj</code>间接调用，但<code>fn</code>中的<code>this</code>指向最近的上一层对象<code>inner</code>（即直接调用它的对象）。</p>\n<h3 id=\"2-3-函数变量被赋值给其他对象的属性\"><a href=\"#2-3-函数变量被赋值给其他对象的属性\" class=\"headerlink\" title=\"2.3 函数变量被赋值给其他对象的属性\"></a>2.3 函数变量被赋值给其他对象的属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;obj2&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj2.fn2 = obj.fn;</span><br><span class=\"line\">obj2.fn2();\t<span class=\"comment\">// obj2 20</span></span><br></pre></td></tr></table></figure>\n<p>尽管方法<code>fn2</code>来源于对象<code>obj</code>的方法<code>fn</code>，但依然是<strong>“谁调用指向谁”</strong>，方法被<code>obj2</code>调用，<code>this</code>就指向<code>obj2</code>。</p>\n<h3 id=\"2-4-原型方法\"><a href=\"#2-4-原型方法\" class=\"headerlink\" title=\"2.4 原型方法\"></a>2.4 原型方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;obj2&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.getAge = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.getAge();\t<span class=\"comment\">// 15</span></span><br><span class=\"line\">obj2.getAge();\t<span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<p>这个就很好理解了~虽然<code>getAge</code>是原型对象<code>Object.prototype</code>的方法，但实例<code>obj</code>和<code>obj2</code>进行了调用，方法中的<code>this</code>就指向它们。</p>\n<p>实际上，这就是原型方法的特点之一：<strong>全体实例的可复用方法</strong>。</p>\n<h3 id=\"2-5-函数变量被赋值给普通变量\"><a href=\"#2-5-函数变量被赋值给普通变量\" class=\"headerlink\" title=\"2.5 函数变量被赋值给普通变量\"></a>2.5 函数变量被赋值给普通变量</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getName</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;obj2&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.getAge = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> fn1 = obj.getName;</span><br><span class=\"line\"><span class=\"keyword\">let</span> fn2 = obj2.getAge;</span><br><span class=\"line\">fn1();\t<span class=\"comment\">// var</span></span><br><span class=\"line\">fn2();\t<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure>\n<p>这时，<code>fn1</code>和<code>fn2</code>实际上是作为普通函数调用，根据<strong>“谁调用指向谁”</strong>的原则，它们当中的<code>this</code>指向全局对象<code>window</code>，输出全局对象的属性值<code>&quot;var&quot;</code>和<code>123</code>。</p>\n<p>总结：无论嵌套几层，无论如何赋值，无论函数来源，谁调用了函数/方法，<code>this</code>就指向谁。</p>\n<h2 id=\"3-构造函数调用\"><a href=\"#3-构造函数调用\" class=\"headerlink\" title=\"3 构造函数调用\"></a>3 构造函数调用</h2><p>一般情况下，<code>this</code>指向构造函数<code>new</code>出来的对象。</p>\n<h3 id=\"3-1-一般情况\"><a href=\"#3-1-一般情况\" class=\"headerlink\" title=\"3.1 一般情况\"></a>3.1 一般情况</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">15</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// A &#123; name: &#x27;me&#x27; &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.age);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<p>这也是最常见的过程，类似于定义对象的自有属性。</p>\n<blockquote>\n<p>面试常考题：通过<code>new</code>创建构造函数的一个实例时，发生了什么？</p>\n<p>以<code>var a = new A()</code>为例：</p>\n<ol>\n<li>创建一个空对象：<code>var obj = &#123;&#125;</code></li>\n<li>让构造器函数<code>A</code>的<code>this</code>指向对象<code>obj</code>，并执行<code>A</code>中的函数体：<code>var result = A.call(obj)</code></li>\n<li>设置原型链，让对象<code>obj</code>的<code>__proto__</code>属性指向构造器函数<code>A</code>的原型对象：<code>obj.__proto__ = A.prototype</code></li>\n<li>判断构造器函数<code>A</code>的返回类型，如果是值类型，结果返回<code>obj</code>，如果是引用类型（<code>null</code>除外），返回引用类型的对象：<code>a = result &amp;&amp; (typeof result === &quot;object&quot;) ? result : obj</code></li>\n</ol>\n<p>如果要手写一个<code>new</code>函数，可能是这样的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.new = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> result = <span class=\"built_in\">this</span>.call(obj);</span><br><span class=\"line\">  obj.__proto__ = <span class=\"built_in\">this</span>.prototype;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result &amp;&amp; (<span class=\"keyword\">typeof</span> result === <span class=\"string\">&quot;object&quot;</span>) ? result : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"3-2-构造函数当作普通函数使用\"><a href=\"#3-2-构造函数当作普通函数使用\" class=\"headerlink\" title=\"3.2 构造函数当作普通函数使用\"></a>3.2 构造函数当作普通函数使用</h3><p>毫无疑问，<code>this</code>指向全局对象<code>window</code>。<em>这种做法在程序中显然是不推荐的，但做题时要知道<code>this</code>指向谁。</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;\t<span class=\"comment\">// 这里把全局对象的name属性修改了</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">15</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// 123</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">A();</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-构造函数返回值的情况\"><a href=\"#3-3-构造函数返回值的情况\" class=\"headerlink\" title=\"3.3 构造函数返回值的情况\"></a>3.3 构造函数返回值的情况</h3><p>一般情况下，构造函数是不需要显式返回值的，通过<code>new</code>执行构造函数的返回值是新生成的实例。</p>\n<p>但是，如果构造函数返回一个对象（包括空对象），<code>new</code>执行构造函数的返回值不再是新生成的实例，而是该对象。</p>\n<p>构造函数执行过程中，<code>this</code>依然试图指向构造函数的实例，虽然这个实例无法返回。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// &#123; age: 20 &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.name);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.age);\t<span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<p>如果构造函数返回的是基本类型、<code>undefined</code>、<code>null</code>时，<code>new</code>执行构造函数的返回值依然是新生成的实例。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;me&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);\t<span class=\"comment\">// undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);\t<span class=\"comment\">// A &#123; name: &#x27;me&#x27; &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.name);\t<span class=\"comment\">// me</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.age);\t<span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-apply、call、bind调用\"><a href=\"#4-apply、call、bind调用\" class=\"headerlink\" title=\"4 apply、call、bind调用\"></a>4 <code>apply</code>、<code>call</code>、<code>bind</code>调用</h2><p>三者均可改变<code>this</code>的指向给第一个参数。区别在于：</p>\n<ul>\n<li><code>apply</code>的第二个参数为可迭代对象</li>\n<li><code>call</code>的参数不固定</li>\n<li><code>bind</code>除返回一个函数外，与<code>call</code>并无不同，它需要调用才可以执行，其他二者直接执行函数</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\">x, y</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age + <span class=\"string\">&quot; &quot;</span> + x + <span class=\"string\">&quot; &quot;</span> + y);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn(<span class=\"number\">1</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// 15 1 2</span></span><br><span class=\"line\">obj.fn.apply(obj2, [<span class=\"number\">3</span>, <span class=\"number\">4</span>]);\t<span class=\"comment\">// 20 3 4</span></span><br><span class=\"line\">obj.fn.call(obj2, <span class=\"number\">5</span>, <span class=\"number\">6</span>);\t<span class=\"comment\">// 20 5 6</span></span><br><span class=\"line\">obj.fn.call(obj2, [<span class=\"number\">5</span>, <span class=\"number\">6</span>]);\t<span class=\"comment\">// 20 5,6 undefined</span></span><br><span class=\"line\">obj.fn.bind(obj2, <span class=\"number\">7</span>, <span class=\"number\">8</span>)();\t<span class=\"comment\">// 20 7 8</span></span><br></pre></td></tr></table></figure>\n<p>注意以上示例12、13行的区别，第13行<code>[5, 6]</code>被当做一个参数传给形参<code>x</code>，形参<code>y</code>得到<code>undefined</code>。</p>\n<h2 id=\"5-匿名函数调用\"><a href=\"#5-匿名函数调用\" class=\"headerlink\" title=\"5 匿名函数调用\"></a>5 匿名函数调用</h2><p>匿名函数不属于任何对象，它的<code>this</code>一般指向全局对象。</p>\n<h3 id=\"5-1-一般情况\"><a href=\"#5-1-一般情况\" class=\"headerlink\" title=\"5.1 一般情况\"></a>5.1 一般情况</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">inner</span>: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn()();\t<span class=\"comment\">// window对象</span></span><br><span class=\"line\">obj.inner.fn()();\t<span class=\"comment\">// window对象</span></span><br></pre></td></tr></table></figure>\n<p>无论谁调用、无论如何调用，这里的匿名函数中的<code>this</code>指向全局对象<code>window</code>。</p>\n<h3 id=\"5-2-定时器回调\"><a href=\"#5-2-定时器回调\" class=\"headerlink\" title=\"5.2 定时器回调\"></a>5.2 定时器回调</h3><p>定时器回调函数中，<code>this</code>指向全局对象。因此如果需要改变定时器回调函数中<code>this</code>的指向，需要使用变量提前存储<code>this</code>的指向。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn();\t<span class=\"comment\">// 123</span></span><br></pre></td></tr></table></figure>\n<p>上述代码中，<code>this</code>指向全局对象<code>window</code>，因此输出全局变量<code>age</code>的值<code>123</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">15</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(that.age);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn();\t<span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<p>上述代码中，使用<code>that</code>提前存储了<code>fn</code>中<code>this</code>的指向，而根据第2节的内容，调用<code>obj.fn()</code>时<code>fn</code>中的<code>this</code>指向<code>obj</code>，因此定时器回调函数中能输出<code>obj</code>的<code>age</code>属性值<code>15</code>。</p>\n<h3 id=\"5-3-事件绑定\"><a href=\"#5-3-事件绑定\" class=\"headerlink\" title=\"5.3 事件绑定\"></a>5.3 事件绑定</h3><p>注意，事件绑定时，<code>this</code>指向事件源。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// btn对象</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);\t<span class=\"comment\">// btn对象</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果要清除绑定事件，第一种方法可以通过<code>btn.onclick = null</code>实现，第二种方法可以调用<code>removeEventListener</code>方法。</p>\n<p><strong>但是！</strong>如果下面这么做，移除是失败的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;点击事件&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">btn.removeEventListener(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;点击事件&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>创建的两个匿名函数是独立的，彼此没有关系，自然无法被移除。因此，使用<code>addEventListener</code>绑定事件时，建议传入具名的函数变量，而避免使用匿名函数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>);</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">&quot;click&quot;</span>, fn);</span><br><span class=\"line\">btn.removeEventListener(<span class=\"string\">&quot;click&quot;</span>, fn);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;点击事件&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-箭头函数\"><a href=\"#6-箭头函数\" class=\"headerlink\" title=\"6 箭头函数\"></a>6 箭头函数</h2><p>箭头函数非常特殊，它没有自己的<code>this</code>，而是会寻找<strong>定义</strong>箭头函数的作用域中<code>this</code>的指向。</p>\n<p>箭头函数中的<code>this</code>在其定义时就已确定，与谁调用无关！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>), <span class=\"number\">1000</span>);\t<span class=\"comment\">// window对象</span></span><br></pre></td></tr></table></figure>\n<p>这个没什么问题。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>), <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn()();\t<span class=\"comment\">// window</span></span><br></pre></td></tr></table></figure>\n<p><code>this</code>会寻找定义箭头函数的作用域（即<code>return</code>的匿名函数）中<code>this</code>的指向，因此指向<code>window</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">fn</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>), <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.fn()();\t<span class=\"comment\">// obj</span></span><br></pre></td></tr></table></figure>\n<p><code>this</code>会寻找定义箭头函数的作用域（即<code>return</code>的箭头函数）中<code>this</code>的指向，由于外层仍是箭头函数，继续向上寻找，直到找到<code>fn</code>作用域中的<code>this</code>且指向为<code>obj</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;me&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn()();\t<span class=\"comment\">// window对象 window对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fn2 = fn.call(obj);\t<span class=\"comment\">// &#123; name: &#x27;me&#x27; &#125;</span></span><br><span class=\"line\">fn2();\t<span class=\"comment\">// &#123; name: &#x27;me&#x27; &#125;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>第8行，<code>fn</code>中的两个<code>this</code>都指向全局对象<code>window</code>，输出两次<code>window</code>对象。</li>\n<li>第9行，<code>fn</code>中的<code>this</code>被<code>call</code>改变指向，此时<code>this</code>指向<code>obj</code>，调用一次<code>fn</code>函数，输出<code>obj</code>即<code>&#123; name: &#39;me&#39; &#125;</code></li>\n<li>第10行，<code>fn2</code>是一个箭头函数，在第9行中，它的<code>this</code>被改变指向为<code>obj</code>，因此此处输出<code>obj</code>即<code>&#123; name: &#39;me&#39; &#125;</code></li>\n</ul>\n<p><em>为什么第10行不是输出<code>window</code>对象？执行第10行时，定义箭头函数的<code>fn</code>作用域中的<code>this</code>应该指向<code>window</code>对象啊。</em></p>\n<p>箭头函数只看它定义时，当前作用域的<code>this</code>指向什么。第6行，箭头函数是在<code>fn</code>函数体内被定义的，因此第9行执行后，在定义箭头函数时，先是把内部的<code>this</code>更改为<code>obj</code>，再返回给<code>fn2</code>。这样<code>fn2</code>调用时（无论如何调用），都输出<code>obj</code>对象。</p>\n<h2 id=\"7-面试题解析\"><a href=\"#7-面试题解析\" class=\"headerlink\" title=\"7 面试题解析\"></a>7 面试题解析</h2><h3 id=\"7-1-字节跳动面试题\"><a href=\"#7-1-字节跳动面试题\" class=\"headerlink\" title=\"7.1 字节跳动面试题\"></a>7.1 字节跳动面试题</h3><p>解释以下代码的输出：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;bytedance&quot;</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(age);</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = <span class=\"number\">123</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> age = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name)</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">A.prototype.getA = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\"><span class=\"keyword\">let</span> funA = a.getA;</span><br><span class=\"line\">funA();</span><br></pre></td></tr></table></figure>\n<p>输出为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">undefined</span><br><span class=\"line\">123</span><br><span class=\"line\">undefined</span><br><span class=\"line\">bytedance</span><br><span class=\"line\">Object [window]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第13行，<code>new</code>一个<code>A</code>的实例，程序开始执行<code>A()</code></li>\n<li>第3行，由于第5行的变量声明<code>var age</code>被提升至<strong>函数顶端</strong>，因此此处<strong>输出<code>undefined</code></strong></li>\n<li>第6行，判断<code>this</code>指向的是<code>a</code>实例，此处<strong>输出定义的<code>this.name</code>即123</strong></li>\n<li>第7行，由于<code>this</code>指向的<code>a</code>实例没有<code>name</code>属性，因此此处<strong>输出<code>undefined</code></strong></li>\n<li>第14行，将<code>a.getA</code>作为一个函数对象赋值给变量<code>funA</code>并在第15行直接调用，程序开始执行<code>getA()</code></li>\n<li>第10行，判断<code>this</code>指向的是全局对象<code>window</code>，因此此处<strong>输出全局对象的<code>name</code>属性</strong>，而<code>var</code>定义的全局变量为全局对象的属性，即输出<code>&quot;bytedance&quot;</code></li>\n<li>第11行，同上，此处<strong>输出全局对象<code>window</code></strong></li>\n</ul>\n<p><strong>扩展：</strong>函数对象自带<code>name</code>属性，且值为本身的名称，如<code>A.name</code>返回<code>&quot;A&quot;</code>。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ol>\n<li><a href=\"https://www.cnblogs.com/chengxs/p/8679313.html\">javascript中this的指向问题 - saucxs - 博客园</a></li>\n<li><a href=\"https://www.cnblogs.com/pssp/p/5216085.html\">彻底理解js中this的指向，不必硬背。 - 追梦子 - 博客园</a></li>\n</ol>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Apr 17 2022 19:15:08 GMT+0800 (中国标准时间)","title":"JavaScript中this的指向问题","path":"2022/04/17/the-pointing-of-this-in-javascript/","eyeCatchImage":null,"excerpt":"<p>面试常考题，很多初学者会被JavaScript中众多不同情况的<code>this</code>指向搞迷糊。本质上，<code>this</code>始终指向一个对象。</p>","date":{"_isAMomentObject":true,"_i":"2022-04-17T10:57:49.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-17T10:57:49.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"JavaScirpt","tags":["编程","JavaScript","基础","面试"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":8243}],"PostAsset":[],"PostCategory":[{"post_id":"cl06nlvt60001f4vi42cuayyr","category_id":"cl06nlvtd0004f4vi8s7c7nrz","_id":"cl06nlvtr000gf4vibyr9fvh0"},{"post_id":"cl06nlvta0003f4viaq6xcko3","category_id":"cl06nlvto000cf4vi6kj1dnuz","_id":"cl06nlvtv000mf4vih07bax3w"},{"post_id":"cl06nlvtg0007f4vihnc65vox","category_id":"cl06nlvto000cf4vi6kj1dnuz","_id":"cl06nlvtw000of4vigwcd3cem"},{"post_id":"cl06nlvtm0009f4vi08v8ffb4","category_id":"cl06nlvtv000lf4vi2uxbhd6a","_id":"cl06nlvtx000sf4vi8gzd2pbh"},{"post_id":"cl06nlvto000bf4vi1eq1e4s9","category_id":"cl06nlvtw000pf4vi2cwwg22g","_id":"cl06nlvtx000yf4vid893cav5"},{"post_id":"cl06nlvtp000ef4viazr80ojr","category_id":"cl06nlvtx000uf4vi7cqw8vxm","_id":"cl06nlvty0012f4vibcnxh0ej"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","category_id":"cl06nlvtv000lf4vi2uxbhd6a","_id":"cl06nlvtz0015f4vi5ai405oi"},{"post_id":"cl06nlvtt000jf4vi8c0n1ym0","category_id":"cl06nlvtw000pf4vi2cwwg22g","_id":"cl06nlvu00018f4vi8xi4cynd"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","category_id":"cl06nlvtv000lf4vi2uxbhd6a","_id":"cl06nlvu1001cf4vibrnw9bma"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","category_id":"cl06nlvui0032f4vi7eyubgri","_id":"cl06nlvuk0037f4vihrwm28p2"},{"post_id":"cl06nlvuh0031f4vif02i8ilg","category_id":"cl06nlvuj0035f4vi3ckp6p6r","_id":"cl06nlvuk003af4vic6ehbogs"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","category_id":"cl06nlvuj0035f4vi3ckp6p6r","_id":"cl06nlvul003cf4vi9gpk5hrr"},{"post_id":"cl06nlvur004af4vi0401g2tl","category_id":"cl06nlvui0032f4vi7eyubgri","_id":"cl06nlvus004cf4vidc3v8xir"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","category_id":"cl06nlvui0032f4vi7eyubgri","_id":"cl06nlvuz004pf4vi7vg853ip"},{"post_id":"cl06nlvux004mf4vigw9o892r","category_id":"cl06nlvuy004of4vi8184ft17","_id":"cl06nlvv0004vf4vi07ph3bvy"},{"post_id":"cl094bou70000hwvi1yi38dlz","category_id":"cl094bouc0001hwviaokeb0lw","_id":"cl094bouj0004hwvi2ta3bp2t"},{"post_id":"cl236un0q0000ygvieaakhgcf","category_id":"cl06nlvtw000pf4vi2cwwg22g","_id":"cl236un1z0002ygviez51epc4"}],"PostTag":[{"post_id":"cl06nlvt60001f4vi42cuayyr","tag_id":"cl06nlvtf0005f4vi8jnv85ro","_id":"cl06nlvtw000rf4vi108j228b"},{"post_id":"cl06nlvt60001f4vi42cuayyr","tag_id":"cl06nlvto000df4vidtplexti","_id":"cl06nlvtx000tf4vi2lno3zl9"},{"post_id":"cl06nlvt60001f4vi42cuayyr","tag_id":"cl06nlvts000if4vi1j9tgqma","_id":"cl06nlvtx000wf4vi4aln7d57"},{"post_id":"cl06nlvt60001f4vi42cuayyr","tag_id":"cl06nlvtv000nf4vig81hfdlw","_id":"cl06nlvtx000xf4vi5ydkh4jg"},{"post_id":"cl06nlvta0003f4viaq6xcko3","tag_id":"cl06nlvtw000qf4vi7wma4x0i","_id":"cl06nlvu00017f4vi1ltq1p49"},{"post_id":"cl06nlvta0003f4viaq6xcko3","tag_id":"cl06nlvtx000vf4vi933cg4kx","_id":"cl06nlvu00019f4vi5faa5820"},{"post_id":"cl06nlvta0003f4viaq6xcko3","tag_id":"cl06nlvty0010f4vicjqab4z6","_id":"cl06nlvu1001bf4vi8ppe34np"},{"post_id":"cl06nlvta0003f4viaq6xcko3","tag_id":"cl06nlvtz0013f4vi4gdq1ss8","_id":"cl06nlvu1001df4vigudmag7m"},{"post_id":"cl06nlvtg0007f4vihnc65vox","tag_id":"cl06nlvtz0013f4vi4gdq1ss8","_id":"cl06nlvu2001if4vigwtu6fgj"},{"post_id":"cl06nlvtg0007f4vihnc65vox","tag_id":"cl06nlvu0001af4vi3ya20blc","_id":"cl06nlvu3001jf4vi9v904pfn"},{"post_id":"cl06nlvtg0007f4vihnc65vox","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvu3001lf4vial7d978m"},{"post_id":"cl06nlvtg0007f4vihnc65vox","tag_id":"cl06nlvtf0005f4vi8jnv85ro","_id":"cl06nlvu4001mf4vicv6shebc"},{"post_id":"cl06nlvtg0007f4vihnc65vox","tag_id":"cl06nlvu2001gf4vi9eva3j97","_id":"cl06nlvu4001of4vidqz3hz06"},{"post_id":"cl06nlvtm0009f4vi08v8ffb4","tag_id":"cl06nlvtw000qf4vi7wma4x0i","_id":"cl06nlvu5001rf4vif2yx73lz"},{"post_id":"cl06nlvtm0009f4vi08v8ffb4","tag_id":"cl06nlvtx000vf4vi933cg4kx","_id":"cl06nlvu5001sf4viemfh0qb1"},{"post_id":"cl06nlvtm0009f4vi08v8ffb4","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvu7001uf4vig0yt7sad"},{"post_id":"cl06nlvtm0009f4vi08v8ffb4","tag_id":"cl06nlvu4001pf4vi7lm92gcs","_id":"cl06nlvu7001vf4vi02js5378"},{"post_id":"cl06nlvto000bf4vi1eq1e4s9","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvu7001yf4vi24p9a5sc"},{"post_id":"cl06nlvto000bf4vi1eq1e4s9","tag_id":"cl06nlvu5001tf4vi1tn427dy","_id":"cl06nlvu7001zf4vi6x0v2ybz"},{"post_id":"cl06nlvto000bf4vi1eq1e4s9","tag_id":"cl06nlvu7001wf4vi2nhr74uw","_id":"cl06nlvu80021f4vie5fv3f53"},{"post_id":"cl06nlvtp000ef4viazr80ojr","tag_id":"cl06nlvu7001xf4vi9esd9oin","_id":"cl06nlvu90024f4vi42myb6ol"},{"post_id":"cl06nlvtp000ef4viazr80ojr","tag_id":"cl06nlvu70020f4vi4v9qa1a6","_id":"cl06nlvu90025f4viadtrbiyx"},{"post_id":"cl06nlvtp000ef4viazr80ojr","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvua0027f4vi1v6ggjq2"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","tag_id":"cl06nlvtw000qf4vi7wma4x0i","_id":"cl06nlvub002df4vi41c35uib"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","tag_id":"cl06nlvtx000vf4vi933cg4kx","_id":"cl06nlvub002ef4vi3pmb3f8o"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvub002gf4vi849i72fl"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","tag_id":"cl06nlvu4001pf4vi7lm92gcs","_id":"cl06nlvuc002hf4vi1xdyf9kw"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","tag_id":"cl06nlvua002af4vihjta8azc","_id":"cl06nlvuc002jf4vi4epfd516"},{"post_id":"cl06nlvtq000ff4vi5c383e2x","tag_id":"cl06nlvub002bf4vid998era8","_id":"cl06nlvuc002kf4vi3j0ehs73"},{"post_id":"cl06nlvtt000jf4vi8c0n1ym0","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvuc002mf4vi6zpbe9vp"},{"post_id":"cl06nlvtt000jf4vi8c0n1ym0","tag_id":"cl06nlvu5001tf4vi1tn427dy","_id":"cl06nlvuc002nf4vi06cs9sgc"},{"post_id":"cl06nlvtt000jf4vi8c0n1ym0","tag_id":"cl06nlvu7001wf4vi2nhr74uw","_id":"cl06nlvud002pf4vienmw0g4i"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","tag_id":"cl06nlvtw000qf4vi7wma4x0i","_id":"cl06nlvue002uf4vih7288wkr"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","tag_id":"cl06nlvtx000vf4vi933cg4kx","_id":"cl06nlvue002vf4vifbx678aq"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvue002wf4vi00chh50f"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","tag_id":"cl06nlvu4001pf4vi7lm92gcs","_id":"cl06nlvue002xf4vi863k7f6z"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","tag_id":"cl06nlvua002af4vihjta8azc","_id":"cl06nlvue002yf4vibk1y6lkr"},{"post_id":"cl06nlvtu000kf4vi67uu9tnr","tag_id":"cl06nlvub002bf4vid998era8","_id":"cl06nlvue002zf4vi6x2dhjej"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvui0033f4vi03ti2f7w","_id":"cl06nlvul003ef4via9ca06an"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvuk0036f4vi8qphgl40","_id":"cl06nlvul003ff4viezow99im"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvu4001pf4vi7lm92gcs","_id":"cl06nlvum003hf4vi51flemj2"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvu2001gf4vi9eva3j97","_id":"cl06nlvum003if4vif5670klr"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvum003kf4vicq84bl6e"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvuk0039f4viej8valne","_id":"cl06nlvum003lf4vi37xe9dw1"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvu70020f4vi4v9qa1a6","_id":"cl06nlvum003of4viguiy7139"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvu5001tf4vi1tn427dy","_id":"cl06nlvum003pf4vidmo64bhb"},{"post_id":"cl06nlvuh0031f4vif02i8ilg","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvun003rf4vibi6jfkbx"},{"post_id":"cl06nlvuh0031f4vif02i8ilg","tag_id":"cl06nlvul003df4vid25b4bop","_id":"cl06nlvun003sf4vi20le840h"},{"post_id":"cl06nlvuh0031f4vif02i8ilg","tag_id":"cl06nlvul003gf4vi8s1l3d25","_id":"cl06nlvun003uf4vieo936zs2"},{"post_id":"cl06nlvuh0031f4vif02i8ilg","tag_id":"cl06nlvum003jf4vi9df585l4","_id":"cl06nlvun003vf4vi0vi45l0s"},{"post_id":"cl06nlvuh0031f4vif02i8ilg","tag_id":"cl06nlvum003mf4vic7fy113v","_id":"cl06nlvun003xf4vid3sxd34l"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvup0042f4vihgv1h4ra"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvul003df4vid25b4bop","_id":"cl06nlvup0043f4viapy8c5cb"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvun003tf4vih5gb9tq7","_id":"cl06nlvup0044f4vi34pq2l0p"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvun003wf4vi9q96a7hd","_id":"cl06nlvup0045f4vi231pdein"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvun003yf4vicdntgac1","_id":"cl06nlvup0046f4vi5vvl0fv4"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvuo003zf4vi9fs2g30j","_id":"cl06nlvup0047f4viel8zd9ei"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvuo0040f4vih9onbd17","_id":"cl06nlvup0048f4vi60txftgq"},{"post_id":"cl06nlvui0034f4vi8ylxdn3v","tag_id":"cl06nlvuo0041f4vi1hxa29wo","_id":"cl06nlvup0049f4vi6jdx1itp"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvui0033f4vi03ti2f7w","_id":"cl06nlvus004df4vi9nw77zm5"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvuk0036f4vi8qphgl40","_id":"cl06nlvus004ef4vi5gbp2oug"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvus004ff4vi1yna7944"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvu2001gf4vi9eva3j97","_id":"cl06nlvus004gf4vi2c6hg2jq"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvus004hf4vieycs5y0e"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvuk0039f4viej8valne","_id":"cl06nlvus004if4vigsza9426"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvus004bf4vi9ipq0636","_id":"cl06nlvus004jf4viff7o8bdp"},{"post_id":"cl06nlvur004af4vi0401g2tl","tag_id":"cl06nlvts000if4vi1j9tgqma","_id":"cl06nlvus004kf4viddpjcxpm"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvui0033f4vi03ti2f7w","_id":"cl06nlvv0004rf4vi4e06foub"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvuk0036f4vi8qphgl40","_id":"cl06nlvv0004sf4vi0e8v4v5n"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvux004nf4vi6qcl2uob","_id":"cl06nlvv0004uf4vicdqj5z7i"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvv0004wf4vi3ulebtk4"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvu2001gf4vi9eva3j97","_id":"cl06nlvv0004xf4vi14jsbkds"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl06nlvv0004yf4vifz2g5mcr"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvuk0039f4viej8valne","_id":"cl06nlvv0004zf4vifto649l6"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvus004bf4vi9ipq0636","_id":"cl06nlvv00050f4vi27k080vw"},{"post_id":"cl06nlvuw004lf4vi693kcqzq","tag_id":"cl06nlvts000if4vi1j9tgqma","_id":"cl06nlvv00051f4vic18c69ck"},{"post_id":"cl06nlvux004mf4vigw9o892r","tag_id":"cl06nlvuz004qf4vi79p81h64","_id":"cl06nlvv00052f4vi92yq3a8e"},{"post_id":"cl06nlvux004mf4vigw9o892r","tag_id":"cl06nlvu7001xf4vi9esd9oin","_id":"cl06nlvv00053f4vigob57f2q"},{"post_id":"cl06nlvux004mf4vigw9o892r","tag_id":"cl06nlvu4001nf4vi9lkh0rav","_id":"cl06nlvv10054f4vi17en9ajj"},{"post_id":"cl06nlvux004mf4vigw9o892r","tag_id":"cl06nlvu4001pf4vi7lm92gcs","_id":"cl06nlvv10055f4vifgztbv3g"},{"post_id":"cl06nlvux004mf4vigw9o892r","tag_id":"cl06nlvv0004tf4vi6d5p1dgl","_id":"cl06nlvv10056f4vib19wadm8"},{"post_id":"cl06nlvuh0030f4vidvkp0u0q","tag_id":"cl06nlvub002bf4vid998era8","_id":"cl06nrl2t0000gwvi7otldkr0"},{"post_id":"cl094bou70000hwvi1yi38dlz","tag_id":"cl06nlvu5001tf4vi1tn427dy","_id":"cl094bouk0006hwvi61raegov"},{"post_id":"cl094bou70000hwvi1yi38dlz","tag_id":"cl094boui0002hwvi5pc6dex6","_id":"cl094bouk0007hwvifbtkbahy"},{"post_id":"cl094bou70000hwvi1yi38dlz","tag_id":"cl06nlvu7001wf4vi2nhr74uw","_id":"cl094bouk0008hwvifnwu1sph"},{"post_id":"cl094bou70000hwvi1yi38dlz","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl094bouk0009hwvif0weeyks"},{"post_id":"cl094bou70000hwvi1yi38dlz","tag_id":"cl094boui0003hwvi8m3c9z4o","_id":"cl094bouk000ahwvi0wgc0100"},{"post_id":"cl094bou70000hwvi1yi38dlz","tag_id":"cl094bouj0005hwvifrcw0z6d","_id":"cl094bouk000bhwvifbzof7yw"},{"post_id":"cl236un0q0000ygvieaakhgcf","tag_id":"cl06nlvu1001ef4vi6z67bqvg","_id":"cl236un1z0003ygvig0o4acxr"},{"post_id":"cl236un0q0000ygvieaakhgcf","tag_id":"cl06nlvu5001tf4vi1tn427dy","_id":"cl236un1z0004ygvi6p524fsh"},{"post_id":"cl236un0q0000ygvieaakhgcf","tag_id":"cl06nlvu7001wf4vi2nhr74uw","_id":"cl236un200005ygvi3be15n6g"},{"post_id":"cl236un0q0000ygvieaakhgcf","tag_id":"cl236un1t0001ygvigxm152bc","_id":"cl236un200006ygvi42w09eps"},{"post_id":"cl06nlvto000bf4vi1eq1e4s9","tag_id":"cl236un1t0001ygvigxm152bc","_id":"cl238q3h000008wvi91z745vk"},{"post_id":"cl06nlvtt000jf4vi8c0n1ym0","tag_id":"cl236un1t0001ygvigxm152bc","_id":"cl238q3h300018wviccpt9usd"}],"Tag":[{"name":"研究","_id":"cl06nlvtf0005f4vi8jnv85ro"},{"name":"工业互联网","_id":"cl06nlvto000df4vidtplexti"},{"name":"工业互联网平台","_id":"cl06nlvts000if4vi1j9tgqma"},{"name":"架构","_id":"cl06nlvtv000nf4vig81hfdlw"},{"name":"博客","_id":"cl06nlvtw000qf4vi7wma4x0i"},{"name":"Hexo","_id":"cl06nlvtx000vf4vi933cg4kx"},{"name":"核心舱","_id":"cl06nlvty0010f4vicjqab4z6"},{"name":"2021","_id":"cl06nlvtz0013f4vi4gdq1ss8"},{"name":"2022","_id":"cl06nlvu0001af4vi3ya20blc"},{"name":"编程","_id":"cl06nlvu1001ef4vi6z67bqvg"},{"name":"前端","_id":"cl06nlvu2001gf4vi9eva3j97"},{"name":"技术","_id":"cl06nlvu4001nf4vi9lkh0rav"},{"name":"技巧","_id":"cl06nlvu4001pf4vi7lm92gcs"},{"name":"JavaScript","_id":"cl06nlvu5001tf4vi1tn427dy"},{"name":"基础","_id":"cl06nlvu7001wf4vi2nhr74uw"},{"name":"Markdown","_id":"cl06nlvu7001xf4vi9esd9oin"},{"name":"HTML","_id":"cl06nlvu70020f4vi4v9qa1a6"},{"name":"bug","_id":"cl06nlvua002af4vihjta8azc"},{"name":"GitHub","_id":"cl06nlvub002bf4vid998era8"},{"name":"Vue","_id":"cl06nlvui0033f4vi03ti2f7w"},{"name":"ElementUI","_id":"cl06nlvuk0036f4vi8qphgl40"},{"name":"开发","_id":"cl06nlvuk0039f4viej8valne"},{"name":"Github","_id":"cl06nlvul003bf4vi67lk4xz5"},{"name":"Java","_id":"cl06nlvul003df4vid25b4bop"},{"name":"游戏","_id":"cl06nlvul003gf4vi8s1l3d25"},{"name":"Swing","_id":"cl06nlvum003jf4vi9df585l4"},{"name":"GUI","_id":"cl06nlvum003mf4vic7fy113v"},{"name":"网络通信","_id":"cl06nlvun003tf4vih5gb9tq7"},{"name":"网络编程","_id":"cl06nlvun003wf4vi9q96a7hd"},{"name":"TCP","_id":"cl06nlvun003yf4vicdntgac1"},{"name":"IP","_id":"cl06nlvuo003zf4vi9fs2g30j"},{"name":"UDP","_id":"cl06nlvuo0040f4vih9onbd17"},{"name":"URL","_id":"cl06nlvuo0041f4vi1hxa29wo"},{"name":"远程运维","_id":"cl06nlvus004bf4vi9ipq0636"},{"name":"Echarts","_id":"cl06nlvux004nf4vi6qcl2uob"},{"name":"LaTeX","_id":"cl06nlvuz004qf4vi79p81h64"},{"name":"数学","_id":"cl06nlvv0004tf4vi6d5p1dgl"},{"name":"算法","_id":"cl094boui0002hwvi5pc6dex6"},{"name":"排序","_id":"cl094boui0003hwvi8m3c9z4o"},{"name":"数据结构","_id":"cl094bouj0005hwvifrcw0z6d"},{"name":"面试","_id":"cl236un1t0001ygvigxm152bc"}]}}